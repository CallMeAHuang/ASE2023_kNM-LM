["<s>", "public", "boolean", "isNetworkRequired", "(", ")", "{", "return", "requiredNetworkType", ">", "=", "NetworkUtil", ".", "METERED", ";", "}", "</s>"]
["<s>", "public", "boolean", "isUnmeteredNetworkRequired", "(", ")", "{", "return", "requiredNetworkType", ">", "=", "NetworkUtil", ".", "UNMETERED", ";", "}", "</s>"]
["<s>", "public", "String", "createSelectOneField", "(", "String", "selectArg", ",", "String", "where", ",", "Integer", "limit", ",", "Order", ".", ".", ".", "orders", ")", "{", "reusedStringBuilder", ".", "setLength", "(", "0", ")", ";", "reusedStringBuilder", ".", "append", "(", "\"", "<STR_LIT>", "\"", ")", ".", "append", "(", "selectArg", ")", ".", "append", "(", "\"", "<STR_LIT>", "\"", ")", ".", "append", "(", "tableName", ")", ";", "if", "(", "where", "!", "=", "null", ")", "{", "reusedStringBuilder", ".", "append", "(", "\"", "<STR_LIT>", "\"", ")", ".", "append", "(", "where", ")", ";", "}", "boolean", "first", "=", "true", ";", "for", "(", "Order", "order", ":", "orders", ")", "{", "if", "(", "first", ")", "{", "reusedStringBuilder", ".", "append", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "else", "{", "reusedStringBuilder", ".", "append", "(", "\"", "<STR_LIT:U+002C>", "\"", ")", ";", "}", "first", "=", "false", ";", "reusedStringBuilder", ".", "append", "(", "order", ".", "property", ".", "columnName", ")", ".", "append", "(", "\"", "\"", ")", ".", "append", "(", "order", ".", "type", ")", ";", "}", "if", "(", "limit", "!", "=", "null", ")", "{", "reusedStringBuilder", ".", "append", "(", "\"", "<STR_LIT>", "\"", ")", ".", "append", "(", "limit", ")", ";", "}", "return", "reusedStringBuilder", ".", "toString", "(", ")", ";", "}", "</s>"]
["<s>", "@", "Nullable", "public", "Long", "getOverrideDeadlineInMs", "(", ")", "{", "return", "overrideDeadlineInMs", ";", "}", "</s>"]
["<s>", "public", "void", "setOverrideDeadlineInMs", "(", "Long", "overrideDeadlineInMs", ")", "{", "this", ".", "overrideDeadlineInMs", "=", "overrideDeadlineInMs", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testAddTwoOfTheSameWithTimeDiff", "(", ")", "{", "SchedulerConstraint", "constraint", "=", "createConstraint", "(", "NetworkUtil", ".", "METERED", ",", "0", ")", ";", "bs", ".", "request", "(", "constraint", ")", ";", "timer", ".", "incrementMs", "(", "DEFAULT_BATCHING_PERIOD_IN_MS", "-", "<NUM_LIT:10>", ")", ";", "SchedulerConstraint", "constraint2", "=", "createConstraint", "(", "NetworkUtil", ".", "METERED", ",", "0", ")", ";", "bs", ".", "request", "(", "constraint2", ")", ";", "verify", "(", "scheduler", ",", "times", "(", "1", ")", ")", ".", "request", "(", "constraint", ")", ";", "verify", "(", "scheduler", ",", "times", "(", "0", ")", ")", ".", "request", "(", "constraint2", ")", ";", "MatcherAssert", ".", "assertThat", "(", "constraint", ".", "getDelayInMs", "(", ")", ",", "CoreMatchers", ".", "is", "(", "DEFAULT_BATCHING_PERIOD_IN_MS", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testAddTwoOfTheSameWithDelayWithTimeDiff", "(", ")", "{", "SchedulerConstraint", "constraint", "=", "createConstraint", "(", "NetworkUtil", ".", "METERED", ",", "0", ")", ";", "bs", ".", "request", "(", "constraint", ")", ";", "timer", ".", "incrementMs", "(", "DEFAULT_BATCHING_PERIOD_IN_MS", "-", "<NUM_LIT>", ")", ";", "SchedulerConstraint", "constraint2", "=", "createConstraint", "(", "NetworkUtil", ".", "METERED", ",", "<NUM_LIT:100>", ")", ";", "bs", ".", "request", "(", "constraint2", ")", ";", "verify", "(", "scheduler", ",", "times", "(", "1", ")", ")", ".", "request", "(", "constraint", ")", ";", "verify", "(", "scheduler", ",", "times", "(", "0", ")", ")", ".", "request", "(", "constraint2", ")", ";", "MatcherAssert", ".", "assertThat", "(", "constraint", ".", "getDelayInMs", "(", ")", ",", "CoreMatchers", ".", "is", "(", "DEFAULT_BATCHING_PERIOD_IN_MS", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testAddTwoOfTheSameWithEnoughTimeDifference", "(", ")", "{", "SchedulerConstraint", "constraint", "=", "createConstraint", "(", "NetworkUtil", ".", "METERED", ",", "0", ")", ";", "bs", ".", "request", "(", "constraint", ")", ";", "timer", ".", "incrementMs", "(", "DEFAULT_BATCHING_PERIOD_IN_MS", ")", ";", "SchedulerConstraint", "constraint2", "=", "createConstraint", "(", "NetworkUtil", ".", "METERED", ",", "0", ")", ";", "bs", ".", "request", "(", "constraint2", ")", ";", "verify", "(", "scheduler", ",", "times", "(", "1", ")", ")", ".", "request", "(", "constraint", ")", ";", "verify", "(", "scheduler", ",", "times", "(", "1", ")", ")", ".", "request", "(", "constraint2", ")", ";", "MatcherAssert", ".", "assertThat", "(", "constraint", ".", "getDelayInMs", "(", ")", ",", "CoreMatchers", ".", "is", "(", "DEFAULT_BATCHING_PERIOD_IN_MS", ")", ")", ";", "MatcherAssert", ".", "assertThat", "(", "constraint2", ".", "getDelayInMs", "(", ")", ",", "CoreMatchers", ".", "is", "(", "DEFAULT_BATCHING_PERIOD_IN_MS", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testSecondWithDeadline", "(", ")", "{", "SchedulerConstraint", "constraint", "=", "createConstraint", "(", "NetworkUtil", ".", "METERED", ",", "0", ")", ";", "bs", ".", "request", "(", "constraint", ")", ";", "SchedulerConstraint", "constraint2", "=", "createConstraint", "(", "NetworkUtil", ".", "METERED", ",", "0", ",", "<NUM_LIT>", ")", ";", "bs", ".", "request", "(", "constraint2", ")", ";", "verify", "(", "scheduler", ",", "times", "(", "1", ")", ")", ".", "request", "(", "constraint", ")", ";", "verify", "(", "scheduler", ",", "times", "(", "1", ")", ")", ".", "request", "(", "constraint2", ")", ";", "MatcherAssert", ".", "assertThat", "(", "constraint", ".", "getDelayInMs", "(", ")", ",", "CoreMatchers", ".", "is", "(", "DEFAULT_BATCHING_PERIOD_IN_MS", ")", ")", ";", "MatcherAssert", ".", "assertThat", "(", "constraint2", ".", "getDelayInMs", "(", ")", ",", "CoreMatchers", ".", "is", "(", "DEFAULT_BATCHING_PERIOD_IN_MS", ")", ")", ";", "MatcherAssert", ".", "assertThat", "(", "constraint2", ".", "getOverrideDeadlineInMs", "(", ")", ",", "CoreMatchers", ".", "is", "(", "DEFAULT_BATCHING_PERIOD_IN_MS", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testFirstWithDeadline", "(", ")", "{", "SchedulerConstraint", "constraint", "=", "createConstraint", "(", "NetworkUtil", ".", "METERED", ",", "0", ",", "<NUM_LIT>", ")", ";", "bs", ".", "request", "(", "constraint", ")", ";", "SchedulerConstraint", "constraint2", "=", "createConstraint", "(", "NetworkUtil", ".", "METERED", ",", "0", ")", ";", "bs", ".", "request", "(", "constraint2", ")", ";", "verify", "(", "scheduler", ",", "times", "(", "1", ")", ")", ".", "request", "(", "constraint", ")", ";", "verify", "(", "scheduler", ",", "times", "(", "1", ")", ")", ".", "request", "(", "constraint2", ")", ";", "MatcherAssert", ".", "assertThat", "(", "constraint", ".", "getDelayInMs", "(", ")", ",", "CoreMatchers", ".", "is", "(", "DEFAULT_BATCHING_PERIOD_IN_MS", ")", ")", ";", "MatcherAssert", ".", "assertThat", "(", "constraint", ".", "getOverrideDeadlineInMs", "(", ")", ",", "CoreMatchers", ".", "is", "(", "DEFAULT_BATCHING_PERIOD_IN_MS", ")", ")", ";", "MatcherAssert", ".", "assertThat", "(", "constraint2", ".", "getDelayInMs", "(", ")", ",", "CoreMatchers", ".", "is", "(", "DEFAULT_BATCHING_PERIOD_IN_MS", ")", ")", ";", "MatcherAssert", ".", "assertThat", "(", "constraint2", ".", "getOverrideDeadlineInMs", "(", ")", ",", "CoreMatchers", ".", "nullValue", "(", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testTwoWithDeadlinesAndBatch", "(", ")", "{", "SchedulerConstraint", "constraint", "=", "createConstraint", "(", "NetworkUtil", ".", "METERED", ",", "0", ",", "<NUM_LIT>", ")", ";", "bs", ".", "request", "(", "constraint", ")", ";", "SchedulerConstraint", "constraint2", "=", "createConstraint", "(", "NetworkUtil", ".", "METERED", ",", "0", ",", "<NUM_LIT>", ")", ";", "bs", ".", "request", "(", "constraint2", ")", ";", "verify", "(", "scheduler", ",", "times", "(", "1", ")", ")", ".", "request", "(", "constraint", ")", ";", "verify", "(", "scheduler", ",", "times", "(", "0", ")", ")", ".", "request", "(", "constraint2", ")", ";", "MatcherAssert", ".", "assertThat", "(", "constraint", ".", "getDelayInMs", "(", ")", ",", "CoreMatchers", ".", "is", "(", "DEFAULT_BATCHING_PERIOD_IN_MS", ")", ")", ";", "MatcherAssert", ".", "assertThat", "(", "constraint", ".", "getOverrideDeadlineInMs", "(", ")", ",", "CoreMatchers", ".", "is", "(", "DEFAULT_BATCHING_PERIOD_IN_MS", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testAddTwoOfTheSameWithEnoughDeadline", "(", ")", "{", "SchedulerConstraint", "constraint", "=", "createConstraint", "(", "NetworkUtil", ".", "METERED", ",", "0", ",", "0", "L", ")", ";", "bs", ".", "request", "(", "constraint", ")", ";", "SchedulerConstraint", "constraint2", "=", "createConstraint", "(", "NetworkUtil", ".", "METERED", ",", "0", ",", "BatchingScheduler", ".", "DEFAULT_BATCHING_PERIOD_IN_MS", ")", ";", "bs", ".", "request", "(", "constraint2", ")", ";", "verify", "(", "scheduler", ",", "times", "(", "1", ")", ")", ".", "request", "(", "constraint", ")", ";", "verify", "(", "scheduler", ",", "times", "(", "1", ")", ")", ".", "request", "(", "constraint2", ")", ";", "MatcherAssert", ".", "assertThat", "(", "constraint", ".", "getDelayInMs", "(", ")", ",", "CoreMatchers", ".", "is", "(", "DEFAULT_BATCHING_PERIOD_IN_MS", ")", ")", ";", "MatcherAssert", ".", "assertThat", "(", "constraint2", ".", "getDelayInMs", "(", ")", ",", "CoreMatchers", ".", "is", "(", "DEFAULT_BATCHING_PERIOD_IN_MS", ")", ")", ";", "MatcherAssert", ".", "assertThat", "(", "constraint", ".", "getOverrideDeadlineInMs", "(", ")", ",", "CoreMatchers", ".", "is", "(", "DEFAULT_BATCHING_PERIOD_IN_MS", ")", ")", ";", "MatcherAssert", ".", "assertThat", "(", "constraint2", ".", "getOverrideDeadlineInMs", "(", ")", ",", "CoreMatchers", ".", "is", "(", "DEFAULT_BATCHING_PERIOD_IN_MS", "*", "<NUM_LIT:2>", ")", ")", ";", "}", "</s>"]
["<s>", "private", "static", "SchedulerConstraint", "createConstraint", "(", "int", "networkStatus", ",", "long", "delay", ",", "Long", "deadline", ")", "{", "SchedulerConstraint", "constraint", "=", "new", "SchedulerConstraint", "(", "\"", "<STR_LIT>", "\"", ")", ";", "constraint", ".", "setDelayInMs", "(", "delay", ")", ";", "constraint", ".", "setNetworkStatus", "(", "networkStatus", ")", ";", "constraint", ".", "setOverrideDeadlineInMs", "(", "deadline", ")", ";", "return", "constraint", ";", "}", "</s>"]
["<s>", "@", "ParameterizedRobolectricTestRunner", ".", "Parameters", "(", "name", "=", "\"", "<STR_LIT>", "\"", ")", "public", "static", "List", "<", "Object", "[", "]", ">", "getParams", "(", ")", "{", "List", "<", "Object", "[", "]", ">", "params", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "for", "(", "long", "delay", ":", "new", "long", "[", "]", "{", "0", ",", "<NUM_LIT:10>", "}", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "<NUM_LIT:16>", ";", "i", "+", "+", ")", "{", "params", ".", "add", "(", "new", "Object", "[", "]", "{", "(", "i", "&", "1", ")", "=", "=", "1", ",", "(", "i", "&", "<NUM_LIT:2>", ")", "=", "=", "<NUM_LIT:2>", ",", "(", "i", "&", "<NUM_LIT:4>", ")", "=", "=", "<NUM_LIT:4>", ",", "delay", ",", "(", "i", "&", "<NUM_LIT:8>", ")", "=", "=", "<NUM_LIT:8>", ",", "}", ")", ";", "}", "}", "return", "params", ";", "}", "</s>"]
["<s>", "@", "Before", "public", "void", "clear", "(", ")", "{", "DeadlineJob", ".", "clear", "(", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "deadlineTest", "(", ")", "throws", "Exception", "{", "DummyNetworkUtil", "networkUtil", "=", "new", "DummyNetworkUtilWithConnectivityEventSupport", "(", ")", ";", "JobManager", "jobManager", "=", "createJobManager", "(", "new", "Configuration", ".", "Builder", "(", "RuntimeEnvironment", ".", "application", ")", ".", "networkUtil", "(", "networkUtil", ")", ".", "timer", "(", "mockTimer", ")", ")", ";", "networkUtil", ".", "setNetworkStatus", "(", "NetworkUtil", ".", "DISCONNECTED", ")", ";", "Params", "params", "=", "new", "Params", "(", "0", ")", ".", "setPersistent", "(", "persistent", ")", ".", "setRequiresNetwork", "(", "reqNetwork", ")", ".", "setRequiresUnmeteredNetwork", "(", "reqUnmeteredNetwork", ")", ".", "delayInMs", "(", "delay", ")", ";", "if", "(", "cancelOnDeadline", ")", "{", "params", ".", "overrideDeadlineToCancelInMs", "(", "<NUM_LIT>", ")", ";", "}", "else", "{", "params", ".", "overrideDeadlineToRunInMs", "(", "<NUM_LIT>", ")", ";", "}", "DeadlineJob", "job", "=", "new", "DeadlineJob", "(", "params", ")", ";", "jobManager", ".", "addJob", "(", "job", ")", ";", "if", "(", "!", "reqNetwork", "&", "&", "!", "reqUnmeteredNetwork", ")", "{", "if", "(", "delay", ">", "0", ")", "{", "assertThat", "(", "DeadlineJob", ".", "runLatch", ".", "await", "(", "<NUM_LIT:3>", ",", "TimeUnit", ".", "SECONDS", ")", ",", "is", "(", "false", ")", ")", ";", "assertThat", "(", "DeadlineJob", ".", "cancelLatch", ".", "await", "(", "<NUM_LIT:3>", ",", "TimeUnit", ".", "SECONDS", ")", ",", "is", "(", "false", ")", ")", ";", "mockTimer", ".", "incrementMs", "(", "delay", ")", ";", "}", "assertThat", "(", "DeadlineJob", ".", "runLatch", ".", "await", "(", "<NUM_LIT:3>", ",", "TimeUnit", ".", "SECONDS", ")", ",", "is", "(", "true", ")", ")", ";", "assertThat", "(", "DeadlineJob", ".", "cancelLatch", ".", "await", "(", "<NUM_LIT:3>", ",", "TimeUnit", ".", "SECONDS", ")", ",", "is", "(", "false", ")", ")", ";", "assertThat", "(", "DeadlineJob", ".", "wasDeadlineReached", ",", "is", "(", "false", ")", ")", ";", "return", ";", "}", "assertThat", "(", "DeadlineJob", ".", "runLatch", ".", "await", "(", "<NUM_LIT:3>", ",", "TimeUnit", ".", "SECONDS", ")", ",", "is", "(", "false", ")", ")", ";", "assertThat", "(", "DeadlineJob", ".", "cancelLatch", ".", "await", "(", "1", ",", "TimeUnit", ".", "MILLISECONDS", ")", ",", "is", "(", "false", ")", ")", ";", "mockTimer", ".", "incrementMs", "(", "<NUM_LIT>", ")", ";", "if", "(", "cancelOnDeadline", ")", "{", "assertThat", "(", "DeadlineJob", ".", "cancelLatch", ".", "await", "(", "<NUM_LIT:3>", ",", "TimeUnit", ".", "SECONDS", ")", ",", "is", "(", "true", ")", ")", ";", "assertThat", "(", "DeadlineJob", ".", "runLatch", ".", "await", "(", "1", ",", "TimeUnit", ".", "SECONDS", ")", ",", "is", "(", "false", ")", ")", ";", "assertThat", "(", "DeadlineJob", ".", "cancelReason", ",", "is", "(", "CancelReason", ".", "REACHED_DEADLINE", ")", ")", ";", "}", "else", "{", "assertThat", "(", "DeadlineJob", ".", "runLatch", ".", "await", "(", "<NUM_LIT:3>", ",", "TimeUnit", ".", "SECONDS", ")", ",", "is", "(", "true", ")", ")", ";", "assertThat", "(", "DeadlineJob", ".", "cancelLatch", ".", "await", "(", "1", ",", "TimeUnit", ".", "SECONDS", ")", ",", "is", "(", "false", ")", ")", ";", "assertThat", "(", "DeadlineJob", ".", "cancelReason", ",", "is", "(", "-", "1", ")", ")", ";", "}", "assertThat", "(", "DeadlineJob", ".", "wasDeadlineReached", ",", "is", "(", "true", ")", ")", ";", "}", "</s>"]
["<s>", "static", "void", "clear", "(", ")", "{", "runLatch", "=", "new", "CountDownLatch", "(", "1", ")", ";", "cancelLatch", "=", "new", "CountDownLatch", "(", "1", ")", ";", "cancelReason", "=", "-", "1", ";", "wasDeadlineReached", "=", "false", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "failAndHitDeadline", "(", ")", "throws", "InterruptedException", "{", "final", "JobManager", "jobManager", "=", "createJobManager", "(", ")", ";", "final", "AtomicBoolean", "calledShouldReRun", "=", "new", "AtomicBoolean", "(", "false", ")", ";", "final", "AtomicInteger", "reason", "=", "new", "AtomicInteger", "(", ")", ";", "final", "DummyJob", "job", "=", "new", "DummyJob", "(", "new", "Params", "(", "0", ")", ".", "overrideDeadlineToCancelInMs", "(", "<NUM_LIT:100>", ")", ")", "{", "@", "Override", "public", "void", "onRun", "(", ")", "throws", "Throwable", "{", "super", ".", "onRun", "(", ")", ";", "mockTimer", ".", "incrementMs", "(", "<NUM_LIT>", ")", ";", "throw", "new", "RuntimeException", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "@", "Override", "protected", "void", "onCancel", "(", "@", "CancelReason", "int", "cancelReason", ",", "@", "Nullable", "Throwable", "throwable", ")", "{", "reason", ".", "set", "(", "cancelReason", ")", ";", "super", ".", "onCancel", "(", "cancelReason", ",", "throwable", ")", ";", "}", "@", "Override", "protected", "RetryConstraint", "shouldReRunOnThrowable", "(", "@", "NonNull", "Throwable", "throwable", ",", "int", "runCount", ",", "int", "maxRunCount", ")", "{", "calledShouldReRun", ".", "set", "(", "true", ")", ";", "return", "RetryConstraint", ".", "RETRY", ";", "}", "}", ";", "waitUntilAJobIsDone", "(", "jobManager", ",", "new", "WaitUntilCallback", "(", ")", "{", "@", "Override", "public", "void", "run", "(", ")", "{", "jobManager", ".", "addJob", "(", "job", ")", ";", "}", "@", "Override", "public", "void", "assertJob", "(", "Job", "job", ")", "{", "}", "}", ")", ";", "MatcherAssert", ".", "assertThat", "(", "reason", ".", "get", "(", ")", ",", "CoreMatchers", ".", "is", "(", "CancelReason", ".", "REACHED_DEADLINE", ")", ")", ";", "MatcherAssert", ".", "assertThat", "(", "calledShouldReRun", ".", "get", "(", ")", ",", "CoreMatchers", ".", "is", "(", "false", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testNoDeadline", "(", ")", "throws", "Exception", "{", "JobQueue", "jobQueue", "=", "createNewJobQueue", "(", ")", ";", "JobHolder", "requireNetwork", "=", "createNewJobHolder", "(", "new", "Params", "(", "0", ")", ".", "requireNetwork", "(", ")", ")", ";", "jobQueue", ".", "insert", "(", "requireNetwork", ")", ";", "TestConstraint", "testConstraint", "=", "new", "TestConstraint", "(", "mockTimer", ")", ";", "testConstraint", ".", "setMaxNetworkType", "(", "NetworkUtil", ".", "DISCONNECTED", ")", ";", "assertThat", "(", "\"", "<STR_LIT>", "\"", ",", "jobQueue", ".", "nextJobAndIncRunCount", "(", "testConstraint", ")", ",", "is", "(", "nullValue", "(", ")", ")", ")", ";", "assertThat", "(", "\"", "<STR_LIT>", "\"", ",", "jobQueue", ".", "getNextJobDelayUntilNs", "(", "testConstraint", ")", ",", "is", "(", "nullValue", "(", ")", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testDeadlineWithRun", "(", ")", "throws", "Exception", "{", "testDeadline", "(", "false", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testDeadlineWithCancel", "(", ")", "throws", "Exception", "{", "testDeadline", "(", "true", ")", ";", "}", "</s>"]
["<s>", "private", "void", "testDeadline", "(", "boolean", "cancel", ")", "throws", "Exception", "{", "JobQueue", "jobQueue", "=", "createNewJobQueue", "(", ")", ";", "Params", "params", "=", "new", "Params", "(", "0", ")", ".", "requireNetwork", "(", ")", ";", "if", "(", "cancel", ")", "{", "params", ".", "overrideDeadlineToCancelInMs", "(", "<NUM_LIT:100>", ")", ";", "}", "else", "{", "params", ".", "overrideDeadlineToRunInMs", "(", "<NUM_LIT:100>", ")", ";", "}", "JobHolder", "requireNetwork", "=", "createNewJobHolder", "(", "params", ")", ";", "jobQueue", ".", "insert", "(", "requireNetwork", ")", ";", "TestConstraint", "testConstraint", "=", "new", "TestConstraint", "(", "mockTimer", ")", ";", "testConstraint", ".", "setMaxNetworkType", "(", "NetworkUtil", ".", "DISCONNECTED", ")", ";", "assertThat", "(", "\"", "<STR_LIT>", "\"", ",", "jobQueue", ".", "nextJobAndIncRunCount", "(", "testConstraint", ")", ",", "is", "(", "nullValue", "(", ")", ")", ")", ";", "assertThat", "(", "\"", "<STR_LIT>", "\"", ",", "jobQueue", ".", "getNextJobDelayUntilNs", "(", "testConstraint", ")", ",", "is", "(", "<NUM_LIT:100>", "*", "JobManager", ".", "NS_PER_MS", ")", ")", ";", "mockTimer", ".", "incrementMs", "(", "<NUM_LIT:100>", ")", ";", "JobHolder", "nextJob", "=", "jobQueue", ".", "nextJobAndIncRunCount", "(", "testConstraint", ")", ";", "assertThat", "(", "\"", "<STR_LIT>", "\"", ",", "nextJob", ",", "is", "(", "notNullValue", "(", ")", ")", ")", ";", "assertThat", "(", "\"", "<STR_LIT>", "\"", ",", "nextJob", ".", "getId", "(", ")", ",", "is", "(", "requireNetwork", ".", "getId", "(", ")", ")", ")", ";", "assertThat", "(", "nextJob", ".", "shouldCancelOnDeadline", "(", ")", ",", "is", "(", "cancel", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testDeadlineDoesNotAffectTags", "(", ")", "{", "JobQueue", "jobQueue", "=", "createNewJobQueue", "(", ")", ";", "JobHolder", "jobHolder", "=", "createNewJobHolder", "(", "new", "Params", "(", "0", ")", ".", "overrideDeadlineToRunInMs", "(", "<NUM_LIT:10>", ")", ")", ";", "jobQueue", ".", "insert", "(", "jobHolder", ")", ";", "mockTimer", ".", "incrementMs", "(", "<NUM_LIT:100>", ")", ";", "TestConstraint", "constraint", "=", "new", "TestConstraint", "(", "mockTimer", ")", ";", "constraint", ".", "setTags", "(", "new", "String", "[", "]", "{", "\"", "<STR_LIT>", "\"", "}", ")", ";", "constraint", ".", "setTagConstraint", "(", "TagConstraint", ".", "ANY", ")", ";", "assertThat", "(", "jobQueue", ".", "findJobs", "(", "constraint", ")", ",", "is", "(", "Collections", ".", "EMPTY_SET", ")", ")", ";", "assertThat", "(", "jobQueue", ".", "getNextJobDelayUntilNs", "(", "constraint", ")", ",", "is", "(", "nullValue", "(", ")", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testDeadlineDoesNotAffectIdQuery", "(", ")", "{", "JobQueue", "jobQueue", "=", "createNewJobQueue", "(", ")", ";", "JobHolder", "jobHolder", "=", "createNewJobHolder", "(", "new", "Params", "(", "0", ")", ".", "overrideDeadlineToRunInMs", "(", "<NUM_LIT:10>", ")", ")", ";", "jobQueue", ".", "insert", "(", "jobHolder", ")", ";", "mockTimer", ".", "incrementMs", "(", "<NUM_LIT:100>", ")", ";", "TestConstraint", "constraint", "=", "new", "TestConstraint", "(", "mockTimer", ")", ";", "constraint", ".", "setExcludeJobIds", "(", "Collections", ".", "singletonList", "(", "jobHolder", ".", "getId", "(", ")", ")", ")", ";", "assertThat", "(", "jobQueue", ".", "findJobs", "(", "constraint", ")", ",", "is", "(", "Collections", ".", "EMPTY_SET", ")", ")", ";", "assertThat", "(", "jobQueue", ".", "getNextJobDelayUntilNs", "(", "constraint", ")", ",", "is", "(", "nullValue", "(", ")", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testDeadlineDoesNotAffectExcludeGroupQuery", "(", ")", "{", "JobQueue", "jobQueue", "=", "createNewJobQueue", "(", ")", ";", "JobHolder", "jobHolder", "=", "createNewJobHolder", "(", "new", "Params", "(", "0", ")", ".", "groupBy", "(", "\"", "<STR_LIT:1>", "\"", ")", ".", "overrideDeadlineToRunInMs", "(", "<NUM_LIT:10>", ")", ")", ";", "jobQueue", ".", "insert", "(", "jobHolder", ")", ";", "mockTimer", ".", "incrementMs", "(", "<NUM_LIT:100>", ")", ";", "TestConstraint", "constraint", "=", "new", "TestConstraint", "(", "mockTimer", ")", ";", "constraint", ".", "setExcludeGroups", "(", "Arrays", ".", "asList", "(", "\"", "<STR_LIT:1>", "\"", ")", ")", ";", "assertThat", "(", "jobQueue", ".", "findJobs", "(", "constraint", ")", ",", "is", "(", "Collections", ".", "EMPTY_SET", ")", ")", ";", "assertThat", "(", "jobQueue", ".", "getNextJobDelayUntilNs", "(", "constraint", ")", ",", "is", "(", "nullValue", "(", ")", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testDeadlineDoesNotAffectExcludeRunning", "(", ")", "{", "JobQueue", "jobQueue", "=", "createNewJobQueue", "(", ")", ";", "JobHolder", "jobHolder", "=", "createNewJobHolder", "(", "new", "Params", "(", "0", ")", ".", "overrideDeadlineToRunInMs", "(", "<NUM_LIT:10>", ")", ")", ";", "jobQueue", ".", "insert", "(", "jobHolder", ")", ";", "TestConstraint", "testConstraint", "=", "new", "TestConstraint", "(", "mockTimer", ")", ";", "assertThat", "(", "jobQueue", ".", "nextJobAndIncRunCount", "(", "testConstraint", ")", ".", "getId", "(", ")", ",", "is", "(", "jobHolder", ".", "getId", "(", ")", ")", ")", ";", "mockTimer", ".", "incrementMs", "(", "<NUM_LIT:100>", ")", ";", "TestConstraint", "constraint", "=", "new", "TestConstraint", "(", "mockTimer", ")", ";", "constraint", ".", "setExcludeRunning", "(", "true", ")", ";", "assertThat", "(", "jobQueue", ".", "findJobs", "(", "constraint", ")", ",", "is", "(", "Collections", ".", "EMPTY_SET", ")", ")", ";", "assertThat", "(", "jobQueue", ".", "getNextJobDelayUntilNs", "(", "constraint", ")", ",", "is", "(", "nullValue", "(", ")", ")", ")", ";", "}", "</s>"]
["<s>", "private", "static", "org", ".", "fest", ".", "reflect", ".", "field", ".", "Invoker", "<", "Integer", ">", "getNetworkTypeField", "(", "Params", "params", ")", "{", "return", "Reflection", ".", "field", "(", "\"", "<STR_LIT>", "\"", ")", ".", "ofType", "(", "int", ".", "class", ")", ".", "in", "(", "params", ")", ";", "}", "</s>"]
["<s>", "private", "static", "org", ".", "fest", ".", "reflect", ".", "field", ".", "Invoker", "<", "Long", ">", "getDeadlineMsField", "(", "Params", "params", ")", "{", "return", "Reflection", ".", "field", "(", "\"", "<STR_LIT>", "\"", ")", ".", "ofType", "(", "long", ".", "class", ")", ".", "in", "(", "params", ")", ";", "}", "</s>"]
["<s>", "private", "static", "org", ".", "fest", ".", "reflect", ".", "field", ".", "Invoker", "<", "Boolean", ">", "getCancelOnDeadlineDeadlineField", "(", "Params", "params", ")", "{", "return", "Reflection", ".", "field", "(", "\"", "<STR_LIT>", "\"", ")", ".", "ofType", "(", "Boolean", ".", "class", ")", ".", "in", "(", "params", ")", ";", "}", "</s>"]
["<s>", "@", "Before", "public", "void", "init", "(", ")", "{", "fwScheduler", "=", "new", "FrameworkScheduler", "(", "MockFwService", ".", "class", ")", ";", "mockJobScheduler", "=", "mock", "(", "JobScheduler", ".", "class", ")", ";", "mockContext", "=", "mock", "(", "Context", ".", "class", ")", ";", "mockEditor", "=", "mock", "(", "SharedPreferences", ".", "Editor", ".", "class", ")", ";", "mockSharedPreferences", "=", "mock", "(", "SharedPreferences", ".", "class", ")", ";", "when", "(", "mockSharedPreferences", ".", "edit", "(", ")", ")", ".", "thenReturn", "(", "mockEditor", ")", ";", "when", "(", "mockEditor", ".", "commit", "(", ")", ")", ".", "thenReturn", "(", "true", ")", ";", "when", "(", "mockEditor", ".", "putInt", "(", "anyString", "(", ")", ",", "anyInt", "(", ")", ")", ")", ".", "thenReturn", "(", "mockEditor", ")", ";", "when", "(", "mockContext", ".", "getApplicationContext", "(", ")", ")", ".", "thenReturn", "(", "mockContext", ")", ";", "when", "(", "mockContext", ".", "getPackageName", "(", ")", ")", ".", "thenReturn", "(", "\"", "<STR_LIT>", "\"", ")", ";", "when", "(", "mockContext", ".", "getSystemService", "(", "Context", ".", "JOB_SCHEDULER_SERVICE", ")", ")", ".", "thenReturn", "(", "mockJobScheduler", ")", ";", "when", "(", "mockContext", ".", "getSharedPreferences", "(", "anyString", "(", ")", ",", "anyInt", "(", ")", ")", ")", ".", "thenReturn", "(", "mockSharedPreferences", ")", ";", "mockCallback", "=", "mock", "(", "Scheduler", ".", "Callback", ".", "class", ")", ";", "fwScheduler", ".", "init", "(", "mockContext", ",", "mockCallback", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "componentName", "(", ")", "{", "assertThat", "(", "fwScheduler", ".", "getComponentName", "(", ")", ",", "equalTo", "(", "new", "ComponentName", "(", "mockContext", ",", "MockFwService", ".", "class", ")", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "requestSimple", "(", ")", "{", "networkTest", "(", "NetworkUtil", ".", "METERED", ",", "JobInfo", ".", "NETWORK_TYPE_ANY", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "requestUnmetered", "(", ")", "{", "networkTest", "(", "NetworkUtil", ".", "UNMETERED", ",", "JobInfo", ".", "NETWORK_TYPE_UNMETERED", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "requestAnyNetwork", "(", ")", "{", "networkTest", "(", "NetworkUtil", ".", "DISCONNECTED", ",", "JobInfo", ".", "NETWORK_TYPE_NONE", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "delay", "(", ")", "{", "SchedulerConstraint", "constraint", "=", "mock", "(", "SchedulerConstraint", ".", "class", ")", ";", "when", "(", "constraint", ".", "getNetworkStatus", "(", ")", ")", ".", "thenReturn", "(", "NetworkUtil", ".", "DISCONNECTED", ")", ";", "when", "(", "constraint", ".", "getDelayInMs", "(", ")", ")", ".", "thenReturn", "(", "<NUM_LIT>", ")", ";", "JobInfo", "jobInfo", "=", "schedule", "(", "constraint", ")", ";", "assertThat", "(", "jobInfo", ".", "isPersisted", "(", ")", ",", "is", "(", "true", ")", ")", ";", "assertThat", "(", "jobInfo", ".", "getId", "(", ")", ",", "is", "(", "1", ")", ")", ";", "assertThat", "(", "jobInfo", ".", "getMinLatencyMillis", "(", ")", ",", "is", "(", "<NUM_LIT>", ")", ")", ";", "assertThat", "(", "jobInfo", ".", "getMaxExecutionDelayMillis", "(", ")", ",", "is", "(", "0", "L", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "deadline", "(", ")", "{", "SchedulerConstraint", "constraint", "=", "mock", "(", "SchedulerConstraint", ".", "class", ")", ";", "when", "(", "constraint", ".", "getNetworkStatus", "(", ")", ")", ".", "thenReturn", "(", "NetworkUtil", ".", "DISCONNECTED", ")", ";", "when", "(", "constraint", ".", "getOverrideDeadlineInMs", "(", ")", ")", ".", "thenReturn", "(", "<NUM_LIT>", ")", ";", "JobInfo", "jobInfo", "=", "schedule", "(", "constraint", ")", ";", "assertThat", "(", "jobInfo", ".", "isPersisted", "(", ")", ",", "is", "(", "true", ")", ")", ";", "assertThat", "(", "jobInfo", ".", "getId", "(", ")", ",", "is", "(", "1", ")", ")", ";", "assertThat", "(", "jobInfo", ".", "getMinLatencyMillis", "(", ")", ",", "is", "(", "0", "L", ")", ")", ";", "assertThat", "(", "jobInfo", ".", "getMaxExecutionDelayMillis", "(", ")", ",", "is", "(", "<NUM_LIT>", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "deadlineAndDelay", "(", ")", "{", "SchedulerConstraint", "constraint", "=", "mock", "(", "SchedulerConstraint", ".", "class", ")", ";", "when", "(", "constraint", ".", "getNetworkStatus", "(", ")", ")", ".", "thenReturn", "(", "NetworkUtil", ".", "DISCONNECTED", ")", ";", "when", "(", "constraint", ".", "getOverrideDeadlineInMs", "(", ")", ")", ".", "thenReturn", "(", "<NUM_LIT>", ")", ";", "when", "(", "constraint", ".", "getDelayInMs", "(", ")", ")", ".", "thenReturn", "(", "<NUM_LIT>", ")", ";", "JobInfo", "jobInfo", "=", "schedule", "(", "constraint", ")", ";", "assertThat", "(", "jobInfo", ".", "isPersisted", "(", ")", ",", "is", "(", "true", ")", ")", ";", "assertThat", "(", "jobInfo", ".", "getId", "(", ")", ",", "is", "(", "1", ")", ")", ";", "assertThat", "(", "jobInfo", ".", "getMinLatencyMillis", "(", ")", ",", "is", "(", "<NUM_LIT>", ")", ")", ";", "assertThat", "(", "jobInfo", ".", "getMaxExecutionDelayMillis", "(", ")", ",", "is", "(", "<NUM_LIT>", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "bundle", "(", ")", "{", "SchedulerConstraint", "constraint", "=", "mock", "(", "SchedulerConstraint", ".", "class", ")", ";", "when", "(", "constraint", ".", "getNetworkStatus", "(", ")", ")", ".", "thenReturn", "(", "NetworkUtil", ".", "METERED", ")", ";", "when", "(", "constraint", ".", "getUuid", "(", ")", ")", ".", "thenReturn", "(", "\"", "<STR_LIT>", "\"", ")", ";", "when", "(", "constraint", ".", "getDelayInMs", "(", ")", ")", ".", "thenReturn", "(", "<NUM_LIT>", ")", ";", "when", "(", "constraint", ".", "getOverrideDeadlineInMs", "(", ")", ")", ".", "thenReturn", "(", "<NUM_LIT>", ")", ";", "JobInfo", "jobInfo", "=", "schedule", "(", "constraint", ")", ";", "PersistableBundle", "extras", "=", "jobInfo", ".", "getExtras", "(", ")", ";", "SchedulerConstraint", "fromBundle", "=", "FrameworkScheduler", ".", "fromBundle", "(", "extras", ")", ";", "assertThat", "(", "fromBundle", ".", "getNetworkStatus", "(", ")", ",", "is", "(", "NetworkUtil", ".", "METERED", ")", ")", ";", "assertThat", "(", "fromBundle", ".", "getUuid", "(", ")", ",", "is", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "assertThat", "(", "fromBundle", ".", "getDelayInMs", "(", ")", ",", "is", "(", "<NUM_LIT>", ")", ")", ";", "assertThat", "(", "fromBundle", ".", "getOverrideDeadlineInMs", "(", ")", ",", "is", "(", "<NUM_LIT>", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "bundleNullDeadline", "(", ")", "{", "SchedulerConstraint", "constraint", "=", "mock", "(", "SchedulerConstraint", ".", "class", ")", ";", "when", "(", "constraint", ".", "getNetworkStatus", "(", ")", ")", ".", "thenReturn", "(", "NetworkUtil", ".", "METERED", ")", ";", "when", "(", "constraint", ".", "getUuid", "(", ")", ")", ".", "thenReturn", "(", "\"", "<STR_LIT>", "\"", ")", ";", "when", "(", "constraint", ".", "getDelayInMs", "(", ")", ")", ".", "thenReturn", "(", "<NUM_LIT>", ")", ";", "when", "(", "constraint", ".", "getOverrideDeadlineInMs", "(", ")", ")", ".", "thenReturn", "(", "null", ")", ";", "JobInfo", "jobInfo", "=", "schedule", "(", "constraint", ")", ";", "PersistableBundle", "extras", "=", "jobInfo", ".", "getExtras", "(", ")", ";", "SchedulerConstraint", "fromBundle", "=", "FrameworkScheduler", ".", "fromBundle", "(", "extras", ")", ";", "assertThat", "(", "fromBundle", ".", "getNetworkStatus", "(", ")", ",", "is", "(", "NetworkUtil", ".", "METERED", ")", ")", ";", "assertThat", "(", "fromBundle", ".", "getUuid", "(", ")", ",", "is", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "assertThat", "(", "fromBundle", ".", "getDelayInMs", "(", ")", ",", "is", "(", "<NUM_LIT>", ")", ")", ";", "assertThat", "(", "fromBundle", ".", "getOverrideDeadlineInMs", "(", ")", ",", "is", "(", "nullValue", "(", ")", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "onStart1", "(", ")", "{", "onStartTest", "(", "NetworkUtil", ".", "DISCONNECTED", ",", "0", ",", "null", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "onStart2", "(", ")", "{", "onStartTest", "(", "NetworkUtil", ".", "METERED", ",", "0", ",", "null", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "onStart3", "(", ")", "{", "onStartTest", "(", "NetworkUtil", ".", "UNMETERED", ",", "0", ",", "null", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "onStart4", "(", ")", "{", "onStartTest", "(", "NetworkUtil", ".", "METERED", ",", "<NUM_LIT:10>", ",", "null", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "onStart5", "(", ")", "{", "onStartTest", "(", "NetworkUtil", ".", "METERED", ",", "<NUM_LIT:10>", ",", "null", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "onStart6", "(", ")", "{", "onStartTest", "(", "NetworkUtil", ".", "METERED", ",", "0", ",", "<NUM_LIT>", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "onStart7", "(", ")", "{", "onStartTest", "(", "NetworkUtil", ".", "UNMETERED", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "onFinished", "(", ")", "{", "SchedulerConstraint", "constraint", "=", "mock", "(", "SchedulerConstraint", ".", "class", ")", ";", "when", "(", "constraint", ".", "getNetworkStatus", "(", ")", ")", ".", "thenReturn", "(", "NetworkUtil", ".", "METERED", ")", ";", "when", "(", "constraint", ".", "getUuid", "(", ")", ")", ".", "thenReturn", "(", "\"", "<STR_LIT>", "\"", ")", ";", "when", "(", "constraint", ".", "getDelayInMs", "(", ")", ")", ".", "thenReturn", "(", "<NUM_LIT>", ")", ";", "when", "(", "constraint", ".", "getOverrideDeadlineInMs", "(", ")", ")", ".", "thenReturn", "(", "null", ")", ";", "JobParameters", "[", "]", "outParams", "=", "new", "JobParameters", "[", "1", "]", ";", "SchedulerConstraint", "received", "=", "triggerOnStart", "(", "constraint", ",", "outParams", ")", ";", "fwScheduler", ".", "onFinished", "(", "received", ",", "false", ")", ";", "}", "</s>"]
["<s>", "private", "void", "onStartTest", "(", "int", "networkStatus", ",", "long", "delay", ",", "Long", "overrideDeadline", ")", "{", "SchedulerConstraint", "constraint", "=", "mock", "(", "SchedulerConstraint", ".", "class", ")", ";", "when", "(", "constraint", ".", "getNetworkStatus", "(", ")", ")", ".", "thenReturn", "(", "networkStatus", ")", ";", "when", "(", "constraint", ".", "getUuid", "(", ")", ")", ".", "thenReturn", "(", "\"", "<STR_LIT>", "\"", ")", ";", "when", "(", "constraint", ".", "getDelayInMs", "(", ")", ")", ".", "thenReturn", "(", "delay", ")", ";", "when", "(", "constraint", ".", "getOverrideDeadlineInMs", "(", ")", ")", ".", "thenReturn", "(", "overrideDeadline", ")", ";", "JobParameters", "[", "]", "outParams", "=", "new", "JobParameters", "[", "1", "]", ";", "SchedulerConstraint", "received", "=", "triggerOnStart", "(", "constraint", ",", "outParams", ")", ";", "assertThat", "(", "received", ".", "getOverrideDeadlineInMs", "(", ")", ",", "is", "(", "overrideDeadline", ")", ")", ";", "assertThat", "(", "received", ".", "getDelayInMs", "(", ")", ",", "is", "(", "delay", ")", ")", ";", "assertThat", "(", "received", ".", "getUuid", "(", ")", ",", "is", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "assertThat", "(", "received", ".", "getNetworkStatus", "(", ")", ",", "is", "(", "networkStatus", ")", ")", ";", "received", "=", "triggerOnStop", "(", "constraint", ",", "outParams", "[", "0", "]", ")", ";", "assertThat", "(", "received", ".", "getOverrideDeadlineInMs", "(", ")", ",", "is", "(", "overrideDeadline", ")", ")", ";", "assertThat", "(", "received", ".", "getDelayInMs", "(", ")", ",", "is", "(", "delay", ")", ")", ";", "assertThat", "(", "received", ".", "getUuid", "(", ")", ",", "is", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "assertThat", "(", "received", ".", "getNetworkStatus", "(", ")", ",", "is", "(", "networkStatus", ")", ")", ";", "}", "</s>"]
["<s>", "private", "SchedulerConstraint", "triggerOnStart", "(", "SchedulerConstraint", "constraint", ",", "JobParameters", "[", "]", "outParams", ")", "{", "ArgumentCaptor", "<", "SchedulerConstraint", ">", "constraintCaptor", "=", "ArgumentCaptor", ".", "forClass", "(", "SchedulerConstraint", ".", "class", ")", ";", "when", "(", "mockCallback", ".", "start", "(", "constraintCaptor", ".", "capture", "(", ")", ")", ")", ".", "thenReturn", "(", "true", ")", ";", "JobParameters", "params", "=", "prepareJobParameters", "(", "constraint", ")", ";", "outParams", "[", "0", "]", "=", "params", ";", "fwScheduler", ".", "onStartJob", "(", "params", ")", ";", "verify", "(", "mockCallback", ")", ".", "start", "(", "Mockito", ".", "any", "(", "SchedulerConstraint", ".", "class", ")", ")", ";", "return", "constraintCaptor", ".", "getValue", "(", ")", ";", "}", "</s>"]
["<s>", "private", "SchedulerConstraint", "triggerOnStop", "(", "SchedulerConstraint", "constraint", ",", "JobParameters", "params", ")", "{", "ArgumentCaptor", "<", "SchedulerConstraint", ">", "constraintCaptor", "=", "ArgumentCaptor", ".", "forClass", "(", "SchedulerConstraint", ".", "class", ")", ";", "when", "(", "mockCallback", ".", "stop", "(", "constraintCaptor", ".", "capture", "(", ")", ")", ")", ".", "thenReturn", "(", "false", ")", ";", "fwScheduler", ".", "onStopJob", "(", "params", ")", ";", "verify", "(", "mockCallback", ")", ".", "stop", "(", "Mockito", ".", "any", "(", "SchedulerConstraint", ".", "class", ")", ")", ";", "return", "constraintCaptor", ".", "getValue", "(", ")", ";", "}", "</s>"]
["<s>", "@", "NonNull", "private", "JobParameters", "prepareJobParameters", "(", "SchedulerConstraint", "constraint", ")", "{", "JobInfo", "info", "=", "schedule", "(", "constraint", ")", ";", "JobParameters", "params", "=", "mock", "(", "JobParameters", ".", "class", ")", ";", "when", "(", "params", ".", "getExtras", "(", ")", ")", ".", "thenReturn", "(", "info", ".", "getExtras", "(", ")", ")", ";", "when", "(", "params", ".", "getJobId", "(", ")", ")", ".", "thenReturn", "(", "info", ".", "getId", "(", ")", ")", ";", "return", "params", ";", "}", "</s>"]
["<s>", "private", "void", "networkTest", "(", "@", "NetworkUtil", ".", "NetworkStatus", "int", "networkType", ",", "int", "expected", ")", "{", "SchedulerConstraint", "constraint", "=", "mock", "(", "SchedulerConstraint", ".", "class", ")", ";", "when", "(", "constraint", ".", "getNetworkStatus", "(", ")", ")", ".", "thenReturn", "(", "networkType", ")", ";", "JobInfo", "jobInfo", "=", "schedule", "(", "constraint", ")", ";", "assertThat", "(", "jobInfo", ".", "isPersisted", "(", ")", ",", "is", "(", "true", ")", ")", ";", "assertThat", "(", "jobInfo", ".", "getId", "(", ")", ",", "is", "(", "1", ")", ")", ";", "assertThat", "(", "jobInfo", ".", "getMinLatencyMillis", "(", ")", ",", "is", "(", "0", "L", ")", ")", ";", "assertThat", "(", "jobInfo", ".", "getMaxExecutionDelayMillis", "(", ")", ",", "is", "(", "0", "L", ")", ")", ";", "assertThat", "(", "jobInfo", ".", "getNetworkType", "(", ")", ",", "is", "(", "expected", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "createId", "(", ")", "{", "when", "(", "mockSharedPreferences", ".", "getInt", "(", "FrameworkScheduler", ".", "KEY_ID", ",", "0", ")", ")", ".", "thenReturn", "(", "<NUM_LIT>", ")", ";", "assertThat", "(", "fwScheduler", ".", "createId", "(", ")", ",", "is", "(", "<NUM_LIT>", ")", ")", ";", "verify", "(", "mockEditor", ")", ".", "putInt", "(", "FrameworkScheduler", ".", "KEY_ID", ",", "<NUM_LIT>", ")", ";", "}", "</s>"]
["<s>", "private", "JobInfo", "schedule", "(", "SchedulerConstraint", "constraint", ")", "{", "ArgumentCaptor", "<", "JobInfo", ">", "infoCaptor", "=", "ArgumentCaptor", ".", "forClass", "(", "JobInfo", ".", "class", ")", ";", "when", "(", "mockJobScheduler", ".", "schedule", "(", "infoCaptor", ".", "capture", "(", ")", ")", ")", ".", "thenReturn", "(", "1", ")", ";", "fwScheduler", ".", "request", "(", "constraint", ")", ";", "verify", "(", "mockJobScheduler", ")", ".", "schedule", "(", "Mockito", ".", "any", "(", "JobInfo", ".", "class", ")", ")", ";", "verify", "(", "mockEditor", ")", ".", "putInt", "(", "FrameworkScheduler", ".", "KEY_ID", ",", "1", ")", ";", "return", "infoCaptor", ".", "getValue", "(", ")", ";", "}", "</s>"]
["<s>", "private", "void", "addCancelColumn", "(", "SQLiteDatabase", "sqLiteDatabase", ")", "{", "String", "query", "=", "\"", "<STR_LIT>", "\"", "+", "JOB_HOLDER_TABLE_NAME", "+", "\"", "<STR_LIT>", "\"", "+", "CANCELLED_COLUMN", ".", "columnName", "+", "\"", "\"", "+", "CANCELLED_COLUMN", ".", "type", ";", "sqLiteDatabase", ".", "execSQL", "(", "query", ")", ";", "}", "</s>"]
["<s>", "public", "SQLiteStatement", "getMarkAsCancelledStatement", "(", ")", "{", "if", "(", "markAsCancelledStatement", "=", "=", "null", ")", "{", "String", "sql", "=", "\"", "<STR_LIT>", "\"", "+", "tableName", "+", "\"", "<STR_LIT>", "\"", "+", "DbOpenHelper", ".", "CANCELLED_COLUMN", ".", "columnName", "+", "\"", "<STR_LIT>", "\"", "+", "\"", "<STR_LIT>", "\"", "+", "primaryKeyColumnName", "+", "\"", "<STR_LIT>", "\"", ";", "markAsCancelledStatement", "=", "db", ".", "compileStatement", "(", "sql", ")", ";", "}", "return", "markAsCancelledStatement", ";", "}", "</s>"]
["<s>", "private", "void", "reEnablePendingCancellations", "(", ")", "{", "db", ".", "execSQL", "(", "sqlHelper", ".", "RE_ENABLE_PENDING_CANCELLATIONS_QUERY", ")", ";", "}", "</s>"]
["<s>", "@", "Before", "public", "void", "init", "(", ")", "{", "mockJobManager", "=", "mock", "(", "JobManager", ".", "class", ")", ";", "service", "=", "new", "FrameworkJobSchedulerServiceImpl", "(", ")", ";", "mockScheduler", "=", "mock", "(", "FrameworkScheduler", ".", "class", ")", ";", "when", "(", "mockJobManager", ".", "getScheduler", "(", ")", ")", ".", "thenReturn", "(", "mockScheduler", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "createScheduler", "(", ")", "{", "FrameworkScheduler", "scheduler", "=", "FrameworkJobSchedulerService", ".", "createSchedulerFor", "(", "RuntimeEnvironment", ".", "application", ",", "FrameworkJobSchedulerServiceImpl", ".", "class", ")", ";", "assertThat", "(", "scheduler", ".", "serviceImpl", "=", "=", "FrameworkJobSchedulerServiceImpl", ".", "class", ",", "is", "(", "true", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "(", "expected", "=", "IllegalArgumentException", ".", "class", ")", "public", "void", "createBadScheduler", "(", ")", "{", "FrameworkJobSchedulerService", ".", "createSchedulerFor", "(", "RuntimeEnvironment", ".", "application", ",", "FrameworkJobSchedulerService", ".", "class", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "onCreate", "(", ")", "{", "service", ".", "onCreate", "(", ")", ";", "verify", "(", "mockScheduler", ")", ".", "setJobService", "(", "service", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "onCreateWithoutScheduler", "(", ")", "{", "when", "(", "mockJobManager", ".", "getScheduler", "(", ")", ")", ".", "thenReturn", "(", "null", ")", ";", "service", ".", "onCreate", "(", ")", ";", "verify", "(", "mockScheduler", ",", "never", "(", ")", ")", ".", "setJobService", "(", "service", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "onDestroy", "(", ")", "{", "service", ".", "onDestroy", "(", ")", ";", "verify", "(", "mockScheduler", ")", ".", "setJobService", "(", "null", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "onDestroyWithoutScheduler", "(", ")", "{", "when", "(", "mockJobManager", ".", "getScheduler", "(", ")", ")", ".", "thenReturn", "(", "null", ")", ";", "service", ".", "onDestroy", "(", ")", ";", "verify", "(", "mockScheduler", ",", "never", "(", ")", ")", ".", "setJobService", "(", "null", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "onStartJob", "(", ")", "{", "JobParameters", "params", "=", "mock", "(", "JobParameters", ".", "class", ")", ";", "service", ".", "onStartJob", "(", "params", ")", ";", "verify", "(", "mockScheduler", ")", ".", "onStartJob", "(", "params", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "onStartJobWithoutScheduler", "(", ")", "{", "when", "(", "mockJobManager", ".", "getScheduler", "(", ")", ")", ".", "thenReturn", "(", "null", ")", ";", "JobParameters", "params", "=", "mock", "(", "JobParameters", ".", "class", ")", ";", "service", ".", "onStartJob", "(", "params", ")", ";", "verify", "(", "mockScheduler", ",", "never", "(", ")", ")", ".", "onStartJob", "(", "params", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "onStopJob", "(", ")", "{", "JobParameters", "params", "=", "mock", "(", "JobParameters", ".", "class", ")", ";", "service", ".", "onStopJob", "(", "params", ")", ";", "verify", "(", "mockScheduler", ")", ".", "onStopJob", "(", "params", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "onStopJobWithoutScheduler", "(", ")", "{", "when", "(", "mockJobManager", ".", "getScheduler", "(", ")", ")", ".", "thenReturn", "(", "null", ")", ";", "JobParameters", "params", "=", "mock", "(", "JobParameters", ".", "class", ")", ";", "service", ".", "onStopJob", "(", "params", ")", ";", "verify", "(", "mockScheduler", ",", "never", "(", ")", ")", ".", "onStopJob", "(", "params", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "cancelAll", "(", ")", "{", "fwScheduler", ".", "cancelAll", "(", ")", ";", "verify", "(", "mockJobScheduler", ")", ".", "cancelAll", "(", ")", ";", "}", "</s>"]
["<s>", "@", "Before", "public", "void", "init", "(", ")", "{", "mockJobManager", "=", "mock", "(", "JobManager", ".", "class", ")", ";", "service", "=", "new", "GcmJobSchedulerServiceImpl", "(", ")", ";", "mockScheduler", "=", "mock", "(", "GcmScheduler", ".", "class", ")", ";", "when", "(", "mockJobManager", ".", "getScheduler", "(", ")", ")", ".", "thenReturn", "(", "mockScheduler", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "createScheduler", "(", ")", "{", "GcmScheduler", "scheduler", "=", "GcmJobSchedulerService", ".", "createSchedulerFor", "(", "RuntimeEnvironment", ".", "application", ",", "GcmJobSchedulerServiceImpl", ".", "class", ")", ";", "assertThat", "(", "scheduler", ".", "serviceClass", "=", "=", "GcmJobSchedulerServiceImpl", ".", "class", ",", "is", "(", "true", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "(", "expected", "=", "IllegalArgumentException", ".", "class", ")", "public", "void", "createBadScheduler", "(", ")", "{", "GcmJobSchedulerService", ".", "createSchedulerFor", "(", "RuntimeEnvironment", ".", "application", ",", "GcmJobSchedulerService", ".", "class", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "onStartJob", "(", ")", "{", "TaskParams", "params", "=", "mock", "(", "TaskParams", ".", "class", ")", ";", "service", ".", "onRunTask", "(", "params", ")", ";", "verify", "(", "mockScheduler", ")", ".", "onStartJob", "(", "params", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "onStartJobWithoutScheduler", "(", ")", "{", "when", "(", "mockJobManager", ".", "getScheduler", "(", ")", ")", ".", "thenReturn", "(", "null", ")", ";", "TaskParams", "params", "=", "mock", "(", "TaskParams", ".", "class", ")", ";", "service", ".", "onRunTask", "(", "params", ")", ";", "verify", "(", "mockScheduler", ",", "never", "(", ")", ")", ".", "onStartJob", "(", "params", ")", ";", "}", "</s>"]
["<s>", "@", "Before", "public", "void", "init", "(", ")", "{", "gcmScheduler", "=", "new", "GcmScheduler", "(", "RuntimeEnvironment", ".", "application", ",", "MockGcmService", ".", "class", ")", ";", "mockGcmNetworkManager", "=", "mock", "(", "GcmNetworkManager", ".", "class", ")", ";", "gcmScheduler", ".", "gcmNetworkManager", "=", "mockGcmNetworkManager", ";", "mockContext", "=", "mock", "(", "Context", ".", "class", ")", ";", "mockEditor", "=", "mock", "(", "SharedPreferences", ".", "Editor", ".", "class", ")", ";", "mockSharedPreferences", "=", "mock", "(", "SharedPreferences", ".", "class", ")", ";", "when", "(", "mockSharedPreferences", ".", "edit", "(", ")", ")", ".", "thenReturn", "(", "mockEditor", ")", ";", "when", "(", "mockEditor", ".", "commit", "(", ")", ")", ".", "thenReturn", "(", "true", ")", ";", "when", "(", "mockEditor", ".", "putInt", "(", "anyString", "(", ")", ",", "anyInt", "(", ")", ")", ")", ".", "thenReturn", "(", "mockEditor", ")", ";", "when", "(", "mockContext", ".", "getApplicationContext", "(", ")", ")", ".", "thenReturn", "(", "mockContext", ")", ";", "when", "(", "mockContext", ".", "getPackageName", "(", ")", ")", ".", "thenReturn", "(", "\"", "<STR_LIT>", "\"", ")", ";", "when", "(", "mockContext", ".", "getSharedPreferences", "(", "anyString", "(", ")", ",", "anyInt", "(", ")", ")", ")", ".", "thenReturn", "(", "mockSharedPreferences", ")", ";", "mockCallback", "=", "mock", "(", "Scheduler", ".", "Callback", ".", "class", ")", ";", "gcmScheduler", ".", "init", "(", "mockContext", ",", "mockCallback", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "requestSimple", "(", ")", "{", "networkTest", "(", "NetworkUtil", ".", "METERED", ",", "Task", ".", "NETWORK_STATE_CONNECTED", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "requestUnmetered", "(", ")", "{", "networkTest", "(", "NetworkUtil", ".", "UNMETERED", ",", "Task", ".", "NETWORK_STATE_UNMETERED", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "requestAnyNetwork", "(", ")", "{", "networkTest", "(", "NetworkUtil", ".", "DISCONNECTED", ",", "Task", ".", "NETWORK_STATE_ANY", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "delay", "(", ")", "{", "long", "delaySeconds", "=", "<NUM_LIT:3>", ";", "SchedulerConstraint", "constraint", "=", "mock", "(", "SchedulerConstraint", ".", "class", ")", ";", "when", "(", "constraint", ".", "getNetworkStatus", "(", ")", ")", ".", "thenReturn", "(", "NetworkUtil", ".", "DISCONNECTED", ")", ";", "when", "(", "constraint", ".", "getDelayInMs", "(", ")", ")", ".", "thenReturn", "(", "TimeUnit", ".", "SECONDS", ".", "toMillis", "(", "delaySeconds", ")", ")", ";", "when", "(", "constraint", ".", "getOverrideDeadlineInMs", "(", ")", ")", ".", "thenReturn", "(", "null", ")", ";", "OneoffTask", "jobInfo", "=", "schedule", "(", "constraint", ")", ";", "assertThat", "(", "jobInfo", ".", "isPersisted", "(", ")", ",", "is", "(", "true", ")", ")", ";", "assertThat", "(", "jobInfo", ".", "getWindowStart", "(", ")", ",", "is", "(", "delaySeconds", ")", ")", ";", "assertThat", "(", "jobInfo", ".", "getWindowEnd", "(", ")", ",", "is", "(", "delaySeconds", "+", "gcmScheduler", ".", "getExecutionWindowSizeInSeconds", "(", ")", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "deadline", "(", ")", "{", "SchedulerConstraint", "constraint", "=", "mock", "(", "SchedulerConstraint", ".", "class", ")", ";", "when", "(", "constraint", ".", "getNetworkStatus", "(", ")", ")", ".", "thenReturn", "(", "NetworkUtil", ".", "DISCONNECTED", ")", ";", "when", "(", "constraint", ".", "getOverrideDeadlineInMs", "(", ")", ")", ".", "thenReturn", "(", "TimeUnit", ".", "SECONDS", ".", "toMillis", "(", "<NUM_LIT>", ")", ")", ";", "OneoffTask", "jobInfo", "=", "schedule", "(", "constraint", ")", ";", "assertThat", "(", "jobInfo", ".", "isPersisted", "(", ")", ",", "is", "(", "true", ")", ")", ";", "assertThat", "(", "jobInfo", ".", "getWindowStart", "(", ")", ",", "is", "(", "0", "L", ")", ")", ";", "assertThat", "(", "jobInfo", ".", "getWindowEnd", "(", ")", ",", "is", "(", "<NUM_LIT>", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "deadlineAndDelay", "(", ")", "{", "long", "delaySeconds", "=", "<NUM_LIT>", ";", "long", "deadlineSeconds", "=", "<NUM_LIT>", ";", "SchedulerConstraint", "constraint", "=", "mock", "(", "SchedulerConstraint", ".", "class", ")", ";", "when", "(", "constraint", ".", "getNetworkStatus", "(", ")", ")", ".", "thenReturn", "(", "NetworkUtil", ".", "DISCONNECTED", ")", ";", "when", "(", "constraint", ".", "getOverrideDeadlineInMs", "(", ")", ")", ".", "thenReturn", "(", "TimeUnit", ".", "SECONDS", ".", "toMillis", "(", "deadlineSeconds", ")", ")", ";", "when", "(", "constraint", ".", "getDelayInMs", "(", ")", ")", ".", "thenReturn", "(", "TimeUnit", ".", "SECONDS", ".", "toMillis", "(", "delaySeconds", ")", ")", ";", "OneoffTask", "jobInfo", "=", "schedule", "(", "constraint", ")", ";", "assertThat", "(", "jobInfo", ".", "isPersisted", "(", ")", ",", "is", "(", "true", ")", ")", ";", "assertThat", "(", "jobInfo", ".", "getWindowStart", "(", ")", ",", "is", "(", "delaySeconds", ")", ")", ";", "assertThat", "(", "jobInfo", ".", "getWindowEnd", "(", ")", ",", "is", "(", "deadlineSeconds", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "bundle", "(", ")", "{", "SchedulerConstraint", "constraint", "=", "mock", "(", "SchedulerConstraint", ".", "class", ")", ";", "when", "(", "constraint", ".", "getNetworkStatus", "(", ")", ")", ".", "thenReturn", "(", "NetworkUtil", ".", "METERED", ")", ";", "when", "(", "constraint", ".", "getUuid", "(", ")", ")", ".", "thenReturn", "(", "\"", "<STR_LIT>", "\"", ")", ";", "when", "(", "constraint", ".", "getDelayInMs", "(", ")", ")", ".", "thenReturn", "(", "<NUM_LIT>", ")", ";", "when", "(", "constraint", ".", "getOverrideDeadlineInMs", "(", ")", ")", ".", "thenReturn", "(", "<NUM_LIT>", ")", ";", "OneoffTask", "jobInfo", "=", "schedule", "(", "constraint", ")", ";", "Bundle", "extras", "=", "jobInfo", ".", "getExtras", "(", ")", ";", "SchedulerConstraint", "fromBundle", "=", "GcmScheduler", ".", "fromBundle", "(", "extras", ")", ";", "assertThat", "(", "fromBundle", ".", "getNetworkStatus", "(", ")", ",", "is", "(", "NetworkUtil", ".", "METERED", ")", ")", ";", "assertThat", "(", "fromBundle", ".", "getUuid", "(", ")", ",", "is", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "assertThat", "(", "fromBundle", ".", "getDelayInMs", "(", ")", ",", "is", "(", "<NUM_LIT>", ")", ")", ";", "assertThat", "(", "fromBundle", ".", "getOverrideDeadlineInMs", "(", ")", ",", "is", "(", "<NUM_LIT>", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "bundleNullDeadline", "(", ")", "{", "SchedulerConstraint", "constraint", "=", "mock", "(", "SchedulerConstraint", ".", "class", ")", ";", "when", "(", "constraint", ".", "getNetworkStatus", "(", ")", ")", ".", "thenReturn", "(", "NetworkUtil", ".", "METERED", ")", ";", "when", "(", "constraint", ".", "getUuid", "(", ")", ")", ".", "thenReturn", "(", "\"", "<STR_LIT>", "\"", ")", ";", "when", "(", "constraint", ".", "getDelayInMs", "(", ")", ")", ".", "thenReturn", "(", "<NUM_LIT>", ")", ";", "when", "(", "constraint", ".", "getOverrideDeadlineInMs", "(", ")", ")", ".", "thenReturn", "(", "null", ")", ";", "OneoffTask", "jobInfo", "=", "schedule", "(", "constraint", ")", ";", "Bundle", "extras", "=", "jobInfo", ".", "getExtras", "(", ")", ";", "SchedulerConstraint", "fromBundle", "=", "GcmScheduler", ".", "fromBundle", "(", "extras", ")", ";", "assertThat", "(", "fromBundle", ".", "getNetworkStatus", "(", ")", ",", "is", "(", "NetworkUtil", ".", "METERED", ")", ")", ";", "assertThat", "(", "fromBundle", ".", "getUuid", "(", ")", ",", "is", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "assertThat", "(", "fromBundle", ".", "getDelayInMs", "(", ")", ",", "is", "(", "<NUM_LIT>", ")", ")", ";", "assertThat", "(", "fromBundle", ".", "getOverrideDeadlineInMs", "(", ")", ",", "is", "(", "nullValue", "(", ")", ")", ")", ";", "}", "</s>"]
["<s>", "private", "void", "onStartTest", "(", "int", "networkStatus", ",", "long", "delay", ",", "Long", "overrideDeadline", ")", "{", "SchedulerConstraint", "constraint", "=", "mock", "(", "SchedulerConstraint", ".", "class", ")", ";", "when", "(", "constraint", ".", "getNetworkStatus", "(", ")", ")", ".", "thenReturn", "(", "networkStatus", ")", ";", "when", "(", "constraint", ".", "getUuid", "(", ")", ")", ".", "thenReturn", "(", "\"", "<STR_LIT>", "\"", ")", ";", "when", "(", "constraint", ".", "getDelayInMs", "(", ")", ")", ".", "thenReturn", "(", "delay", ")", ";", "when", "(", "constraint", ".", "getOverrideDeadlineInMs", "(", ")", ")", ".", "thenReturn", "(", "overrideDeadline", ")", ";", "SchedulerConstraint", "received", "=", "triggerOnStart", "(", "constraint", ")", ";", "assertThat", "(", "received", ".", "getOverrideDeadlineInMs", "(", ")", ",", "is", "(", "overrideDeadline", ")", ")", ";", "assertThat", "(", "received", ".", "getDelayInMs", "(", ")", ",", "is", "(", "delay", ")", ")", ";", "assertThat", "(", "received", ".", "getUuid", "(", ")", ",", "is", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "assertThat", "(", "received", ".", "getNetworkStatus", "(", ")", ",", "is", "(", "networkStatus", ")", ")", ";", "}", "</s>"]
["<s>", "private", "SchedulerConstraint", "triggerOnStart", "(", "SchedulerConstraint", "constraint", ")", "{", "ArgumentCaptor", "<", "SchedulerConstraint", ">", "constraintCaptor", "=", "ArgumentCaptor", ".", "forClass", "(", "SchedulerConstraint", ".", "class", ")", ";", "when", "(", "mockCallback", ".", "start", "(", "constraintCaptor", ".", "capture", "(", ")", ")", ")", ".", "thenAnswer", "(", "new", "Answer", "<", "Boolean", ">", "(", ")", "{", "@", "Override", "public", "Boolean", "answer", "(", "final", "InvocationOnMock", "invocation", ")", "throws", "Throwable", "{", "new", "Thread", "(", "new", "Runnable", "(", ")", "{", "@", "Override", "public", "void", "run", "(", ")", "{", "SchedulerConstraint", "constrant", "=", "(", "SchedulerConstraint", ")", "invocation", ".", "getArguments", "(", ")", "[", "0", "]", ";", "gcmScheduler", ".", "onFinished", "(", "constrant", ",", "false", ")", ";", "}", "}", ")", ".", "start", "(", ")", ";", "return", "true", ";", "}", "}", ")", ";", "TaskParams", "params", "=", "prepareJobParameters", "(", "constraint", ")", ";", "gcmScheduler", ".", "onStartJob", "(", "params", ")", ";", "verify", "(", "mockCallback", ")", ".", "start", "(", "Mockito", ".", "any", "(", "SchedulerConstraint", ".", "class", ")", ")", ";", "return", "constraintCaptor", ".", "getValue", "(", ")", ";", "}", "</s>"]
["<s>", "private", "TaskParams", "prepareJobParameters", "(", "SchedulerConstraint", "constraint", ")", "{", "return", "new", "TaskParams", "(", "constraint", ".", "getUuid", "(", ")", ",", "GcmScheduler", ".", "toBundle", "(", "constraint", ")", ")", ";", "}", "</s>"]
["<s>", "private", "void", "networkTest", "(", "@", "NetworkUtil", ".", "NetworkStatus", "int", "networkType", ",", "int", "expected", ")", "{", "SchedulerConstraint", "constraint", "=", "mock", "(", "SchedulerConstraint", ".", "class", ")", ";", "when", "(", "constraint", ".", "getNetworkStatus", "(", ")", ")", ".", "thenReturn", "(", "networkType", ")", ";", "when", "(", "constraint", ".", "getOverrideDeadlineInMs", "(", ")", ")", ".", "thenReturn", "(", "null", ")", ";", "OneoffTask", "jobInfo", "=", "schedule", "(", "constraint", ")", ";", "assertThat", "(", "jobInfo", ".", "isPersisted", "(", ")", ",", "is", "(", "true", ")", ")", ";", "assertThat", "(", "jobInfo", ".", "getRequiredNetwork", "(", ")", ",", "is", "(", "expected", ")", ")", ";", "assertThat", "(", "jobInfo", ".", "getWindowStart", "(", ")", ",", "is", "(", "0", "L", ")", ")", ";", "assertThat", "(", "jobInfo", ".", "getWindowEnd", "(", ")", ",", "is", "(", "gcmScheduler", ".", "getExecutionWindowSizeInSeconds", "(", ")", ")", ")", ";", "}", "</s>"]
["<s>", "private", "OneoffTask", "schedule", "(", "SchedulerConstraint", "constraint", ")", "{", "if", "(", "constraint", ".", "getUuid", "(", ")", "=", "=", "null", ")", "{", "when", "(", "constraint", ".", "getUuid", "(", ")", ")", ".", "thenReturn", "(", "UUID", ".", "randomUUID", "(", ")", ".", "toString", "(", ")", ")", ";", "}", "ArgumentCaptor", "<", "OneoffTask", ">", "infoCaptor", "=", "ArgumentCaptor", ".", "forClass", "(", "OneoffTask", ".", "class", ")", ";", "gcmScheduler", ".", "request", "(", "constraint", ")", ";", "verify", "(", "mockGcmNetworkManager", ")", ".", "schedule", "(", "infoCaptor", ".", "capture", "(", ")", ")", ";", "OneoffTask", "jobInfo", "=", "infoCaptor", ".", "getValue", "(", ")", ";", "assertThat", "(", "jobInfo", ".", "getTag", "(", ")", ",", "is", "(", "constraint", ".", "getUuid", "(", ")", ")", ")", ";", "return", "jobInfo", ";", "}", "</s>"]
["<s>", "public", "boolean", "isForNextJob", "(", ")", "{", "return", "forNextJob", ";", "}", "</s>"]
["<s>", "public", "void", "setForNextJob", "(", "boolean", "forNextJob", ")", "{", "this", ".", "forNextJob", "=", "forNextJob", ";", "}", "</s>"]
["<s>", "@", "SuppressLint", "(", "\"", "<STR_LIT>", "\"", ")", "@", "Test", "public", "void", "testGoIdleIfNextJobCannotBeRunNow", "(", ")", "throws", "InterruptedException", "{", "final", "AtomicInteger", "nextJobDelayCall", "=", "new", "AtomicInteger", "(", "1", ")", ";", "JobManager", "jobManager", "=", "createJobManager", "(", "new", "Configuration", ".", "Builder", "(", "RuntimeEnvironment", ".", "application", ")", ".", "maxConsumerCount", "(", "<NUM_LIT:3>", ")", ".", "minConsumerCount", "(", "1", ")", ".", "loadFactor", "(", "<NUM_LIT:3>", ")", ".", "queueFactory", "(", "new", "QueueFactory", "(", ")", "{", "@", "Override", "public", "JobQueue", "createPersistentQueue", "(", "Configuration", "configuration", ",", "long", "sessionId", ")", "{", "return", "new", "SqliteJobQueue", "(", "configuration", ",", "sessionId", ",", "new", "SqliteJobQueue", ".", "JavaSerializer", "(", ")", ")", ";", "}", "@", "Override", "public", "JobQueue", "createNonPersistent", "(", "Configuration", "configuration", ",", "long", "sessionId", ")", "{", "return", "new", "SimpleInMemoryPriorityQueue", "(", "configuration", ",", "sessionId", ")", "{", "@", "Override", "public", "Long", "getNextJobDelayUntilNs", "(", "@", "NonNull", "Constraint", "constraint", ")", "{", "nextJobDelayCall", ".", "incrementAndGet", "(", ")", ";", "return", "super", ".", "getNextJobDelayUntilNs", "(", "constraint", ")", ";", "}", "}", ";", "}", "}", ")", ".", "timer", "(", "mockTimer", ")", ")", ";", "final", "DummyJobWithStartEndLatch", "job1", "=", "new", "DummyJobWithStartEndLatch", "(", "new", "Params", "(", "1", ")", ")", ";", "final", "DummyJobWithStartEndLatch", "job2", "=", "new", "DummyJobWithStartEndLatch", "(", "new", "Params", "(", "1", ")", ")", ";", "jobManager", ".", "addJob", "(", "job1", ")", ";", "jobManager", ".", "addJob", "(", "job2", ")", ";", "assertThat", "(", "startLatch", ".", "await", "(", "<NUM_LIT:5>", ",", "TimeUnit", ".", "MINUTES", ")", ",", "is", "(", "true", ")", ")", ";", "Thread", ".", "sleep", "(", "<NUM_LIT>", ")", ";", "int", "startCount", "=", "nextJobDelayCall", ".", "get", "(", ")", ";", "Thread", ".", "sleep", "(", "<NUM_LIT>", ")", ";", "assertThat", "(", "\"", "<STR_LIT>", "\"", ",", "nextJobDelayCall", ".", "get", "(", ")", ",", "is", "(", "startCount", ")", ")", ";", "waitUntilAJobIsDone", "(", "jobManager", ",", "new", "WaitUntilCallback", "(", ")", "{", "@", "Override", "public", "void", "run", "(", ")", "{", "canEndLatch", ".", "countDown", "(", ")", ";", "}", "@", "Override", "public", "void", "assertJob", "(", "Job", "job", ")", "{", "}", "}", ")", ";", "}", "</s>"]
["<s>", "@", "After", "public", "void", "clearLatches", "(", ")", "{", "canEndLatch", ".", "countDown", "(", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testDelayUntilWithRunningJobs", "(", ")", "{", "JobQueue", "jobQueue", "=", "createNewJobQueue", "(", ")", ";", "JobHolder", "holder", "=", "createNewJobHolder", "(", ")", ";", "jobQueue", ".", "insert", "(", "holder", ")", ";", "TestConstraint", "constraint", "=", "new", "TestConstraint", "(", "mockTimer", ")", ";", "constraint", ".", "setMaxNetworkType", "(", "NetworkUtil", ".", "METERED", ")", ";", "constraint", ".", "setExcludeRunning", "(", "true", ")", ";", "assertThat", "(", "jobQueue", ".", "getNextJobDelayUntilNs", "(", "constraint", ")", ",", "is", "(", "JobManager", ".", "NOT_DELAYED_JOB_DELAY", ")", ")", ";", "JobHolder", "nextJob", "=", "jobQueue", ".", "nextJobAndIncRunCount", "(", "constraint", ")", ";", "assertThat", "(", "nextJob", ",", "is", "(", "notNullValue", "(", ")", ")", ")", ";", "assertThat", "(", "nextJob", ".", "getId", "(", ")", ",", "is", "(", "holder", ".", "getId", "(", ")", ")", ")", ";", "assertThat", "(", "jobQueue", ".", "getNextJobDelayUntilNs", "(", "constraint", ")", ",", "is", "(", "nullValue", "(", ")", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "badBundleOnStart", "(", ")", "{", "JobParameters", "params", "=", "mock", "(", "JobParameters", ".", "class", ")", ";", "PersistableBundle", "badBundle", "=", "mock", "(", "PersistableBundle", ".", "class", ")", ";", "when", "(", "badBundle", ".", "getString", "(", "anyString", "(", ")", ",", "anyString", "(", ")", ")", ")", ".", "thenThrow", "(", "new", "NullPointerException", "(", ")", ")", ";", "when", "(", "badBundle", ".", "getString", "(", "anyString", "(", ")", ")", ")", ".", "thenThrow", "(", "new", "NullPointerException", "(", ")", ")", ";", "assertThat", "(", "fwScheduler", ".", "onStartJob", "(", "params", ")", ",", "is", "(", "false", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "badBundleOnStop", "(", ")", "{", "JobParameters", "params", "=", "mock", "(", "JobParameters", ".", "class", ")", ";", "PersistableBundle", "badBundle", "=", "mock", "(", "PersistableBundle", ".", "class", ")", ";", "when", "(", "badBundle", ".", "getString", "(", "anyString", "(", ")", ",", "anyString", "(", ")", ")", ")", ".", "thenThrow", "(", "new", "NullPointerException", "(", ")", ")", ";", "when", "(", "badBundle", ".", "getString", "(", "anyString", "(", ")", ")", ")", ".", "thenThrow", "(", "new", "NullPointerException", "(", ")", ")", ";", "assertThat", "(", "fwScheduler", ".", "onStopJob", "(", "params", ")", ",", "is", "(", "false", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "badBundleOnStart", "(", ")", "{", "TaskParams", "params", "=", "mock", "(", "TaskParams", ".", "class", ")", ";", "PersistableBundle", "badBundle", "=", "mock", "(", "PersistableBundle", ".", "class", ")", ";", "when", "(", "badBundle", ".", "getString", "(", "anyString", "(", ")", ",", "anyString", "(", ")", ")", ")", ".", "thenThrow", "(", "new", "NullPointerException", "(", ")", ")", ";", "when", "(", "badBundle", ".", "getString", "(", "anyString", "(", ")", ")", ")", ".", "thenThrow", "(", "new", "NullPointerException", "(", ")", ")", ";", "assertThat", "(", "gcmScheduler", ".", "onStartJob", "(", "params", ")", ",", "is", "(", "GcmNetworkManager", ".", "RESULT_SUCCESS", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Before", "public", "void", "init", "(", ")", "{", "Context", "context", "=", "Mockito", ".", "mock", "(", "Context", ".", "class", ")", ";", "Mockito", ".", "when", "(", "context", ".", "getApplicationContext", "(", ")", ")", ".", "thenReturn", "(", "context", ")", ";", "builder", "=", "new", "Configuration", ".", "Builder", "(", "context", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "(", "expected", "=", "IllegalArgumentException", ".", "class", ")", "public", "void", "idWithSpaces", "(", ")", "{", "testId", "(", "\"", "\"", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "(", "expected", "=", "IllegalArgumentException", ".", "class", ")", "public", "void", "nullId", "(", ")", "{", "testId", "(", "null", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "(", "expected", "=", "IllegalArgumentException", ".", "class", ")", "public", "void", "idWithSpace", "(", ")", "{", "testId", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "(", "expected", "=", "IllegalArgumentException", ".", "class", ")", "public", "void", "idWithBadChars", "(", ")", "{", "testId", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "(", "expected", "=", "IllegalArgumentException", ".", "class", ")", "public", "void", "idWithBadChars2", "(", ")", "{", "testId", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "goodId", "(", ")", "{", "testId", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "goodId2", "(", ")", "{", "testId", "(", "\"", "<STR_LIT:123>", "\"", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "goodId3", "(", ")", "{", "testId", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "goodId4", "(", ")", "{", "testId", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "goodUUID", "(", ")", "{", "testId", "(", "UUID", ".", "randomUUID", "(", ")", ".", "toString", "(", ")", ")", ";", "}", "</s>"]
["<s>", "private", "void", "testId", "(", "String", "id", ")", "{", "builder", ".", "id", "(", "id", ")", ".", "build", "(", ")", ";", "}", "</s>"]
