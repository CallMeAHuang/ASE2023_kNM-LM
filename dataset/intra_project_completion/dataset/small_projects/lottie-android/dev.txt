["<s>", "public", "float", "getMiterLimit", "(", ")", "{", "return", "miterLimit", ";", "}", "</s>"]
["<s>", "public", "static", "LottieTask", "<", "LottieComposition", ">", "fromZipStream", "(", "final", "ZipInputStream", "inputStream", ")", "{", "return", "new", "LottieTask", "<", ">", "(", "new", "Callable", "<", "LottieResult", "<", "LottieComposition", ">", ">", "(", ")", "{", "@", "Override", "public", "LottieResult", "<", "LottieComposition", ">", "call", "(", ")", "throws", "Exception", "{", "return", "fromZipStreamSync", "(", "inputStream", ")", ";", "}", "}", ")", ";", "}", "</s>"]
["<s>", "@", "WorkerThread", "private", "static", "LottieResult", "<", "LottieComposition", ">", "fromZipStreamSync", "(", "ZipInputStream", "inputStream", ")", "{", "try", "{", "return", "fromZipStreamSyncInternal", "(", "inputStream", ")", ";", "}", "finally", "{", "closeQuietly", "(", "inputStream", ")", ";", "}", "}", "</s>"]
["<s>", "@", "WorkerThread", "private", "static", "LottieResult", "<", "LottieComposition", ">", "fromZipStreamSyncInternal", "(", "ZipInputStream", "inputStream", ")", "{", "LottieComposition", "composition", "=", "null", ";", "Map", "<", "String", ",", "Bitmap", ">", "images", "=", "new", "HashMap", "<", ">", "(", ")", ";", "try", "{", "ZipEntry", "entry", "=", "inputStream", ".", "getNextEntry", "(", ")", ";", "while", "(", "entry", "!", "=", "null", ")", "{", "if", "(", "entry", ".", "getName", "(", ")", ".", "contains", "(", "\"", "<STR_LIT>", "\"", ")", ")", "{", "inputStream", ".", "closeEntry", "(", ")", ";", "}", "else", "if", "(", "entry", ".", "getName", "(", ")", ".", "contains", "(", "\"", "<STR_LIT>", "\"", ")", ")", "{", "composition", "=", "LottieComposition", ".", "Factory", ".", "fromInputStreamSync", "(", "inputStream", ",", "false", ")", ";", "}", "else", "if", "(", "entry", ".", "getName", "(", ")", ".", "contains", "(", "\"", "<STR_LIT>", "\"", ")", ")", "{", "String", "[", "]", "splitName", "=", "entry", ".", "getName", "(", ")", ".", "split", "(", "\"", "<STR_LIT:/>", "\"", ")", ";", "String", "name", "=", "splitName", "[", "splitName", ".", "length", "-", "1", "]", ";", "images", ".", "put", "(", "name", ",", "BitmapFactory", ".", "decodeStream", "(", "inputStream", ")", ")", ";", "}", "else", "{", "inputStream", ".", "closeEntry", "(", ")", ";", "}", "entry", "=", "inputStream", ".", "getNextEntry", "(", ")", ";", "}", "}", "catch", "(", "IOException", "e", ")", "{", "return", "new", "LottieResult", "<", ">", "(", "e", ")", ";", "}", "if", "(", "composition", "=", "=", "null", ")", "{", "return", "new", "LottieResult", "<", ">", "(", "new", "IllegalArgumentException", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "}", "for", "(", "Map", ".", "Entry", "<", "String", ",", "Bitmap", ">", "e", ":", "images", ".", "entrySet", "(", ")", ")", "{", "LottieImageAsset", "imageAsset", "=", "findImageAssetForFileName", "(", "composition", ",", "e", ".", "getKey", "(", ")", ")", ";", "if", "(", "imageAsset", "!", "=", "null", ")", "{", "imageAsset", ".", "setBitmap", "(", "e", ".", "getValue", "(", ")", ")", ";", "}", "}", "for", "(", "Map", ".", "Entry", "<", "String", ",", "LottieImageAsset", ">", "entry", ":", "composition", ".", "getImages", "(", ")", ".", "entrySet", "(", ")", ")", "{", "if", "(", "entry", ".", "getValue", "(", ")", ".", "getBitmap", "(", ")", "=", "=", "null", ")", "{", "return", "new", "LottieResult", "<", ">", "(", "new", "IllegalStateException", "(", "\"", "<STR_LIT>", "\"", "+", "entry", ".", "getValue", "(", ")", ".", "getFileName", "(", ")", ")", ")", ";", "}", "}", "return", "new", "LottieResult", "<", ">", "(", "composition", ")", ";", "}", "</s>"]
["<s>", "@", "Nullable", "private", "static", "LottieImageAsset", "findImageAssetForFileName", "(", "LottieComposition", "composition", ",", "String", "fileName", ")", "{", "for", "(", "LottieImageAsset", "asset", ":", "composition", ".", "getImages", "(", ")", ".", "values", "(", ")", ")", "{", "if", "(", "asset", ".", "getFileName", "(", ")", ".", "equals", "(", "fileName", ")", ")", "{", "return", "asset", ";", "}", "}", "return", "null", ";", "}", "</s>"]
["<s>", "@", "Nullable", "public", "Bitmap", "getBitmap", "(", ")", "{", "return", "bitmap", ";", "}", "</s>"]
["<s>", "public", "void", "setBitmap", "(", "@", "Nullable", "Bitmap", "bitmap", ")", "{", "this", ".", "bitmap", "=", "bitmap", ";", "}", "</s>"]
["<s>", "public", "void", "setAnimationFromJson", "(", "String", "jsonString", ",", "@", "Nullable", "String", "cacheKey", ")", "{", "setAnimation", "(", "new", "JsonReader", "(", "new", "StringReader", "(", "jsonString", ")", ")", ",", "cacheKey", ")", ";", "}", "</s>"]
["<s>", "public", "void", "setAnimation", "(", "JsonReader", "reader", ",", "@", "Nullable", "String", "cacheKey", ")", "{", "clearComposition", "(", ")", ";", "cancelLoaderTask", "(", ")", ";", "compositionTask", "=", "LottieCompositionFactory", ".", "fromJsonReader", "(", "reader", ",", "cacheKey", ")", ".", "addListener", "(", "loadedListener", ")", ".", "addFailureListener", "(", "failureListener", ")", ";", "}", "</s>"]
["<s>", "public", "void", "put", "(", "@", "Nullable", "String", "cacheKey", ",", "@", "Nullable", "LottieComposition", "composition", ")", "{", "if", "(", "cacheKey", "=", "=", "null", ")", "{", "return", ";", "}", "cache", ".", "put", "(", "cacheKey", ",", "composition", ")", ";", "}", "</s>"]
["<s>", "private", "void", "testUrl", "(", ")", "{", "LottieComposition", "composition", "=", "LottieCompositionFactory", ".", "fromUrlSync", "(", "context", ",", "\"", "<STR_LIT>", "\"", ")", ".", "getValue", "(", ")", ";", "drawComposition", "(", "composition", ",", "\"", "<STR_LIT>", "\"", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "debug", "(", "String", "msg", ")", "{", "if", "(", "DBG", ")", "Log", ".", "d", "(", "TAG", ",", "msg", ")", ";", "}", "</s>"]
["<s>", "public", "static", "LottieTask", "<", "LottieComposition", ">", "fromUrl", "(", "Context", "context", ",", "String", "url", ")", "{", "return", "NetworkFetcher", ".", "fetch", "(", "context", ",", "url", ")", ";", "}", "</s>"]
["<s>", "@", "WorkerThread", "public", "static", "LottieResult", "<", "LottieComposition", ">", "fromUrlSync", "(", "Context", "context", ",", "String", "url", ")", "{", "return", "NetworkFetcher", ".", "fetchSync", "(", "context", ",", "url", ")", ";", "}", "</s>"]
["<s>", "public", "String", "tempExtension", "(", ")", "{", "return", "\"", "<STR_LIT>", "\"", "+", "extension", ";", "}", "</s>"]
["<s>", "public", "static", "FileExtension", "forFile", "(", "String", "filename", ")", "{", "for", "(", "FileExtension", "e", ":", "values", "(", ")", ")", "{", "if", "(", "filename", ".", "endsWith", "(", "e", ".", "extension", ")", ")", "{", "return", "e", ";", "}", "}", "L", ".", "warn", "(", "\"", "<STR_LIT>", "\"", "+", "filename", ")", ";", "return", "Json", ";", "}", "</s>"]
["<s>", "@", "Nullable", "@", "WorkerThread", "Pair", "<", "FileExtension", ",", "InputStream", ">", "fetch", "(", ")", "{", "File", "cachedFile", "=", "null", ";", "try", "{", "cachedFile", "=", "getCachedFile", "(", "url", ")", ";", "}", "catch", "(", "FileNotFoundException", "e", ")", "{", "return", "null", ";", "}", "if", "(", "cachedFile", "=", "=", "null", ")", "{", "return", "null", ";", "}", "FileInputStream", "inputStream", ";", "try", "{", "inputStream", "=", "new", "FileInputStream", "(", "cachedFile", ")", ";", "}", "catch", "(", "FileNotFoundException", "e", ")", "{", "return", "null", ";", "}", "FileExtension", "extension", ";", "if", "(", "cachedFile", ".", "getAbsolutePath", "(", ")", ".", "endsWith", "(", "\"", "<STR_LIT>", "\"", ")", ")", "{", "extension", "=", "FileExtension", ".", "Zip", ";", "}", "else", "{", "extension", "=", "FileExtension", ".", "Json", ";", "}", "L", ".", "debug", "(", "\"", "<STR_LIT>", "\"", "+", "url", "+", "\"", "<STR_LIT>", "\"", "+", "cachedFile", ".", "getAbsolutePath", "(", ")", ")", ";", "return", "new", "Pair", "<", ">", "(", "extension", ",", "(", "InputStream", ")", "inputStream", ")", ";", "}", "</s>"]
["<s>", "File", "writeTempCacheFile", "(", "InputStream", "stream", ",", "FileExtension", "extension", ")", "throws", "IOException", "{", "String", "fileName", "=", "filenameForUrl", "(", "url", ",", "extension", ",", "true", ")", ";", "File", "file", "=", "new", "File", "(", "appContext", ".", "getCacheDir", "(", ")", ",", "fileName", ")", ";", "try", "{", "OutputStream", "output", "=", "new", "FileOutputStream", "(", "file", ")", ";", "try", "{", "byte", "[", "]", "buffer", "=", "new", "byte", "[", "<NUM_LIT>", "]", ";", "int", "read", ";", "while", "(", "(", "read", "=", "stream", ".", "read", "(", "buffer", ")", ")", "!", "=", "-", "1", ")", "{", "output", ".", "write", "(", "buffer", ",", "0", ",", "read", ")", ";", "}", "output", ".", "flush", "(", ")", ";", "}", "finally", "{", "output", ".", "close", "(", ")", ";", "}", "}", "finally", "{", "stream", ".", "close", "(", ")", ";", "}", "return", "file", ";", "}", "</s>"]
["<s>", "void", "renameTempFile", "(", "FileExtension", "extension", ")", "{", "String", "fileName", "=", "filenameForUrl", "(", "url", ",", "extension", ",", "true", ")", ";", "File", "file", "=", "new", "File", "(", "appContext", ".", "getCacheDir", "(", ")", ",", "fileName", ")", ";", "String", "newFileName", "=", "file", ".", "getAbsolutePath", "(", ")", ".", "replace", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "\"", ")", ";", "File", "newFile", "=", "new", "File", "(", "newFileName", ")", ";", "boolean", "renamed", "=", "file", ".", "renameTo", "(", "newFile", ")", ";", "L", ".", "debug", "(", "\"", "<STR_LIT>", "\"", "+", "newFile", "+", "\"", "<STR_LIT:)>", "\"", ")", ";", "if", "(", "!", "renamed", ")", "{", "L", ".", "warn", "(", "\"", "<STR_LIT>", "\"", "+", "file", ".", "getAbsolutePath", "(", ")", "+", "\"", "<STR_LIT>", "\"", "+", "newFile", ".", "getAbsolutePath", "(", ")", "+", "\"", "<STR_LIT:.>", "\"", ")", ";", "}", "}", "</s>"]
["<s>", "@", "Nullable", "private", "File", "getCachedFile", "(", "String", "url", ")", "throws", "FileNotFoundException", "{", "File", "jsonFile", "=", "new", "File", "(", "appContext", ".", "getCacheDir", "(", ")", ",", "filenameForUrl", "(", "url", ",", "FileExtension", ".", "Json", ",", "false", ")", ")", ";", "if", "(", "jsonFile", ".", "exists", "(", ")", ")", "{", "return", "jsonFile", ";", "}", "File", "zipFile", "=", "new", "File", "(", "appContext", ".", "getCacheDir", "(", ")", ",", "filenameForUrl", "(", "url", ",", "FileExtension", ".", "Zip", ",", "false", ")", ")", ";", "if", "(", "zipFile", ".", "exists", "(", ")", ")", "{", "return", "zipFile", ";", "}", "return", "null", ";", "}", "</s>"]
["<s>", "private", "static", "String", "filenameForUrl", "(", "String", "url", ",", "FileExtension", "extension", ",", "boolean", "isTemp", ")", "{", "return", "\"", "<STR_LIT>", "\"", "+", "url", ".", "replaceAll", "(", "\"", "<STR_LIT:\\\\>", "<STR_LIT>", "\"", ",", "\"", "\"", ")", "+", "(", "isTemp", "?", "extension", ".", "extension", ":", "extension", ".", "tempExtension", "(", ")", ")", ";", "}", "</s>"]
["<s>", "public", "static", "LottieTask", "<", "LottieComposition", ">", "fetch", "(", "Context", "context", ",", "String", "url", ")", "{", "return", "new", "NetworkFetcher", "(", "context", ",", "url", ")", ".", "fetch", "(", ")", ";", "}", "</s>"]
["<s>", "public", "static", "LottieResult", "<", "LottieComposition", ">", "fetchSync", "(", "Context", "context", ",", "String", "url", ")", "{", "return", "new", "NetworkFetcher", "(", "context", ",", "url", ")", ".", "fetchSync", "(", ")", ";", "}", "</s>"]
["<s>", "private", "LottieTask", "<", "LottieComposition", ">", "fetch", "(", ")", "{", "return", "new", "LottieTask", "<", ">", "(", "new", "Callable", "<", "LottieResult", "<", "LottieComposition", ">", ">", "(", ")", "{", "@", "Override", "public", "LottieResult", "<", "LottieComposition", ">", "call", "(", ")", "throws", "Exception", "{", "return", "fetchSync", "(", ")", ";", "}", "}", ")", ";", "}", "</s>"]
["<s>", "@", "WorkerThread", "public", "LottieResult", "<", "LottieComposition", ">", "fetchSync", "(", ")", "{", "LottieComposition", "result", "=", "fetchFromCache", "(", ")", ";", "if", "(", "result", "!", "=", "null", ")", "{", "return", "new", "LottieResult", "<", ">", "(", "result", ")", ";", "}", "L", ".", "debug", "(", "\"", "<STR_LIT>", "\"", "+", "url", "+", "\"", "<STR_LIT>", "\"", ")", ";", "return", "fetchFromNetwork", "(", ")", ";", "}", "</s>"]
["<s>", "@", "Nullable", "@", "WorkerThread", "private", "LottieComposition", "fetchFromCache", "(", ")", "{", "Pair", "<", "FileExtension", ",", "InputStream", ">", "cacheResult", "=", "networkCache", ".", "fetch", "(", ")", ";", "if", "(", "cacheResult", "=", "=", "null", ")", "{", "return", "null", ";", "}", "FileExtension", "extension", "=", "cacheResult", ".", "first", ";", "InputStream", "inputStream", "=", "cacheResult", ".", "second", ";", "LottieResult", "<", "LottieComposition", ">", "result", ";", "if", "(", "extension", "=", "=", "FileExtension", ".", "Zip", ")", "{", "result", "=", "LottieCompositionFactory", ".", "fromZipStreamSync", "(", "new", "ZipInputStream", "(", "inputStream", ")", ",", "url", ")", ";", "}", "else", "{", "result", "=", "LottieCompositionFactory", ".", "fromJsonInputStreamSync", "(", "inputStream", ",", "url", ")", ";", "}", "if", "(", "result", ".", "getValue", "(", ")", "!", "=", "null", ")", "{", "return", "result", ".", "getValue", "(", ")", ";", "}", "return", "null", ";", "}", "</s>"]
["<s>", "@", "WorkerThread", "private", "LottieResult", "<", "LottieComposition", ">", "fetchFromNetwork", "(", ")", "{", "try", "{", "return", "fetchFromNetworkInternal", "(", ")", ";", "}", "catch", "(", "IOException", "e", ")", "{", "return", "new", "LottieResult", "<", ">", "(", "e", ")", ";", "}", "}", "</s>"]
["<s>", "@", "WorkerThread", "private", "LottieResult", "fetchFromNetworkInternal", "(", ")", "throws", "IOException", "{", "L", ".", "debug", "(", "\"", "<STR_LIT>", "\"", "+", "url", ")", ";", "HttpURLConnection", "connection", "=", "(", "HttpURLConnection", ")", "new", "URL", "(", "url", ")", ".", "openConnection", "(", ")", ";", "connection", ".", "setRequestMethod", "(", "\"", "<STR_LIT:GET>", "\"", ")", ";", "connection", ".", "connect", "(", ")", ";", "if", "(", "connection", ".", "getErrorStream", "(", ")", "!", "=", "null", "|", "|", "connection", ".", "getResponseCode", "(", ")", "!", "=", "HttpURLConnection", ".", "HTTP_OK", ")", "{", "BufferedReader", "r", "=", "new", "BufferedReader", "(", "new", "InputStreamReader", "(", "connection", ".", "getErrorStream", "(", ")", ")", ")", ";", "StringBuilder", "error", "=", "new", "StringBuilder", "(", ")", ";", "String", "line", ";", "while", "(", "(", "line", "=", "r", ".", "readLine", "(", ")", ")", "!", "=", "null", ")", "{", "error", ".", "append", "(", "line", ")", ".", "append", "(", "<STR_LIT:\\n>", ")", ";", "}", "return", "new", "LottieResult", "<", ">", "(", "new", "IllegalArgumentException", "(", "\"", "<STR_LIT>", "\"", "+", "url", "+", "\"", "<STR_LIT>", "\"", "+", "connection", ".", "getResponseCode", "(", ")", "+", "\"", "<STR_LIT>", "<STR_LIT>", "\"", "+", "error", ")", ")", ";", "}", "File", "file", ";", "FileExtension", "extension", ";", "LottieResult", "<", "LottieComposition", ">", "result", ";", "switch", "(", "connection", ".", "getContentType", "(", ")", ")", "{", "case", "\"", "<STR_LIT>", "\"", ":", "L", ".", "debug", "(", "\"", "<STR_LIT>", "\"", ")", ";", "extension", "=", "FileExtension", ".", "Zip", ";", "file", "=", "networkCache", ".", "writeTempCacheFile", "(", "connection", ".", "getInputStream", "(", ")", ",", "extension", ")", ";", "result", "=", "LottieCompositionFactory", ".", "fromZipStreamSync", "(", "new", "ZipInputStream", "(", "new", "FileInputStream", "(", "file", ")", ")", ",", "url", ")", ";", "break", ";", "case", "\"", "<STR_LIT>", "\"", ":", "default", ":", "L", ".", "debug", "(", "\"", "<STR_LIT>", "\"", ")", ";", "extension", "=", "FileExtension", ".", "Json", ";", "file", "=", "networkCache", ".", "writeTempCacheFile", "(", "connection", ".", "getInputStream", "(", ")", ",", "extension", ")", ";", "result", "=", "LottieCompositionFactory", ".", "fromJsonInputStreamSync", "(", "new", "FileInputStream", "(", "new", "File", "(", "file", ".", "getAbsolutePath", "(", ")", ")", ")", ",", "url", ")", ";", "break", ";", "}", "if", "(", "result", ".", "getValue", "(", ")", "!", "=", "null", ")", "{", "networkCache", ".", "renameTempFile", "(", "extension", ")", ";", "}", "L", ".", "debug", "(", "\"", "<STR_LIT>", "\"", "+", "(", "result", ".", "getValue", "(", ")", "!", "=", "null", ")", ")", ";", "return", "result", ";", "}", "</s>"]
["<s>", "private", "static", "String", "rawResCacheKey", "(", "@", "RawRes", "int", "resId", ")", "{", "return", "\"", "<STR_LIT>", "\"", "+", "resId", ";", "}", "</s>"]
["<s>", "private", "static", "LottieTask", "<", "LottieComposition", ">", "cache", "(", "final", "String", "cacheKey", ",", "Callable", "<", "LottieResult", "<", "LottieComposition", ">", ">", "callable", ")", "{", "if", "(", "taskCache", ".", "containsKey", "(", "cacheKey", ")", ")", "{", "return", "taskCache", ".", "get", "(", "cacheKey", ")", ";", "}", "LottieTask", "<", "LottieComposition", ">", "task", "=", "new", "LottieTask", "<", ">", "(", "callable", ")", ";", "task", ".", "addListener", "(", "new", "LottieListener", "<", "LottieComposition", ">", "(", ")", "{", "@", "Override", "public", "void", "onResult", "(", "LottieComposition", "result", ")", "{", "taskCache", ".", "remove", "(", "cacheKey", ")", ";", "}", "}", ")", ";", "task", ".", "addFailureListener", "(", "new", "LottieListener", "<", "Throwable", ">", "(", ")", "{", "@", "Override", "public", "void", "onResult", "(", "Throwable", "result", ")", "{", "taskCache", ".", "remove", "(", "cacheKey", ")", ";", "}", "}", ")", ";", "taskCache", ".", "put", "(", "cacheKey", ",", "task", ")", ";", "return", "task", ";", "}", "</s>"]
["<s>", "public", "void", "setAnimationFromUrl", "(", "String", "url", ")", "{", "clearComposition", "(", ")", ";", "cancelLoaderTask", "(", ")", ";", "compositionTask", "=", "LottieCompositionFactory", ".", "fromUrl", "(", "getContext", "(", ")", ",", "url", ")", ".", "addListener", "(", "loadedListener", ")", ".", "addFailureListener", "(", "failureListener", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "addLottieOnCompositionLoadedListener", "(", "@", "NonNull", "LottieOnCompositionLoadedListener", "lottieOnCompositionLoadedListener", ")", "{", "return", "lottieOnCompositionLoadedListeners", ".", "add", "(", "lottieOnCompositionLoadedListener", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "removeLottieOnCompositionLoadedListener", "(", "@", "NonNull", "LottieOnCompositionLoadedListener", "lottieOnCompositionLoadedListener", ")", "{", "return", "lottieOnCompositionLoadedListeners", ".", "remove", "(", "lottieOnCompositionLoadedListener", ")", ";", "}", "</s>"]
["<s>", "public", "void", "removeAllLottieOnCompositionLoadedListener", "(", ")", "{", "lottieOnCompositionLoadedListeners", ".", "clear", "(", ")", ";", "}", "</s>"]
["<s>", "private", "void", "setCompositionTask", "(", "LottieTask", "<", "LottieComposition", ">", "compositionTask", ")", "{", "clearComposition", "(", ")", ";", "cancelLoaderTask", "(", ")", ";", "this", ".", "compositionTask", "=", "compositionTask", ".", "addListener", "(", "loadedListener", ")", ".", "addFailureListener", "(", "failureListener", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testSetFrameIntegrity", "(", ")", "{", "animator", ".", "setMinAndMaxFrames", "(", "<NUM_LIT>", ",", "<NUM_LIT>", ")", ";", "animator", ".", "setFrame", "(", "<NUM_LIT:100>", ")", ";", "assertEquals", "(", "<NUM_LIT>", ",", "animator", ".", "getFrame", "(", ")", ")", ";", "animator", ".", "setFrame", "(", "<NUM_LIT>", ")", ";", "assertEquals", "(", "<NUM_LIT>", ",", "animator", ".", "getFrame", "(", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "(", "expected", "=", "IllegalArgumentException", ".", "class", ")", "public", "void", "testMinAndMaxFrameIntegrity", "(", ")", "{", "animator", ".", "setMinAndMaxFrames", "(", "<NUM_LIT>", ",", "<NUM_LIT>", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "isHidden", "(", ")", "{", "return", "hidden", ";", "}", "</s>"]
["<s>", "public", "void", "clear", "(", ")", "{", "cache", ".", "evictAll", "(", ")", ";", "}", "</s>"]
["<s>", "public", "static", "Bitmap", "renderPath", "(", "Path", "path", ")", "{", "RectF", "bounds", "=", "new", "RectF", "(", ")", ";", "path", ".", "computeBounds", "(", "bounds", ",", "false", ")", ";", "Bitmap", "bitmap", "=", "Bitmap", ".", "createBitmap", "(", "(", "int", ")", "bounds", ".", "right", ",", "(", "int", ")", "bounds", ".", "bottom", ",", "Bitmap", ".", "Config", ".", "ARGB_8888", ")", ";", "Canvas", "canvas", "=", "new", "Canvas", "(", "bitmap", ")", ";", "Paint", "paint", "=", "new", "Paint", "(", ")", ";", "paint", ".", "setAntiAlias", "(", "true", ")", ";", "paint", ".", "setColor", "(", "Color", ".", "BLUE", ")", ";", "canvas", ".", "drawPath", "(", "path", ",", "paint", ")", ";", "return", "bitmap", ";", "}", "</s>"]
["<s>", "public", "int", "getIntValue", "(", "Keyframe", "<", "Integer", ">", "keyframe", ",", "float", "keyframeProgress", ")", "{", "if", "(", "keyframe", ".", "startValue", "=", "=", "null", "|", "|", "keyframe", ".", "endValue", "=", "=", "null", ")", "{", "throw", "new", "IllegalStateException", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "int", "startColor", "=", "keyframe", ".", "startValue", ";", "int", "endColor", "=", "keyframe", ".", "endValue", ";", "if", "(", "valueCallback", "!", "=", "null", ")", "{", "Integer", "value", "=", "valueCallback", ".", "getValueInternal", "(", "keyframe", ".", "startFrame", ",", "keyframe", ".", "endFrame", ",", "startColor", ",", "endColor", ",", "keyframeProgress", ",", "getLinearCurrentKeyframeProgress", "(", ")", ",", "getProgress", "(", ")", ")", ";", "if", "(", "value", "!", "=", "null", ")", "{", "return", "value", ";", "}", "}", "return", "GammaEvaluator", ".", "evaluate", "(", "MiscUtils", ".", "clamp", "(", "keyframeProgress", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ")", ",", "startColor", ",", "endColor", ")", ";", "}", "</s>"]
["<s>", "public", "int", "getIntValue", "(", ")", "{", "return", "getIntValue", "(", "getCurrentKeyframe", "(", ")", ",", "getInterpolatedCurrentKeyframeProgress", "(", ")", ")", ";", "}", "</s>"]
["<s>", "float", "getFloatValue", "(", "Keyframe", "<", "Float", ">", "keyframe", ",", "float", "keyframeProgress", ")", "{", "if", "(", "keyframe", ".", "startValue", "=", "=", "null", "|", "|", "keyframe", ".", "endValue", "=", "=", "null", ")", "{", "throw", "new", "IllegalStateException", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "if", "(", "valueCallback", "!", "=", "null", ")", "{", "Float", "value", "=", "valueCallback", ".", "getValueInternal", "(", "keyframe", ".", "startFrame", ",", "keyframe", ".", "endFrame", ",", "keyframe", ".", "startValue", ",", "keyframe", ".", "endValue", ",", "keyframeProgress", ",", "getLinearCurrentKeyframeProgress", "(", ")", ",", "getProgress", "(", ")", ")", ";", "if", "(", "value", "!", "=", "null", ")", "{", "return", "value", ";", "}", "}", "return", "MiscUtils", ".", "lerp", "(", "keyframe", ".", "getStartValueFloat", "(", ")", ",", "keyframe", ".", "getEndValueFloat", "(", ")", ",", "keyframeProgress", ")", ";", "}", "</s>"]
["<s>", "public", "float", "getFloatValue", "(", ")", "{", "return", "getFloatValue", "(", "getCurrentKeyframe", "(", ")", ",", "getInterpolatedCurrentKeyframeProgress", "(", ")", ")", ";", "}", "</s>"]
["<s>", "int", "getIntValue", "(", "Keyframe", "<", "Integer", ">", "keyframe", ",", "float", "keyframeProgress", ")", "{", "if", "(", "keyframe", ".", "startValue", "=", "=", "null", "|", "|", "keyframe", ".", "endValue", "=", "=", "null", ")", "{", "throw", "new", "IllegalStateException", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "if", "(", "valueCallback", "!", "=", "null", ")", "{", "Integer", "value", "=", "valueCallback", ".", "getValueInternal", "(", "keyframe", ".", "startFrame", ",", "keyframe", ".", "endFrame", ",", "keyframe", ".", "startValue", ",", "keyframe", ".", "endValue", ",", "keyframeProgress", ",", "getLinearCurrentKeyframeProgress", "(", ")", ",", "getProgress", "(", ")", ")", ";", "if", "(", "value", "!", "=", "null", ")", "{", "return", "value", ";", "}", "}", "return", "MiscUtils", ".", "lerp", "(", "keyframe", ".", "getStartValueInt", "(", ")", ",", "keyframe", ".", "getEndValueInt", "(", ")", ",", "keyframeProgress", ")", ";", "}", "</s>"]
["<s>", "public", "float", "getStartValueFloat", "(", ")", "{", "if", "(", "startValueFloat", "=", "=", "UNSET_FLOAT", ")", "{", "startValueFloat", "=", "(", "float", ")", "(", "Float", ")", "startValue", ";", "}", "return", "startValueFloat", ";", "}", "</s>"]
["<s>", "public", "float", "getEndValueFloat", "(", ")", "{", "if", "(", "endValueFloat", "=", "=", "UNSET_FLOAT", ")", "{", "endValueFloat", "=", "(", "float", ")", "(", "Float", ")", "endValue", ";", "}", "return", "endValueFloat", ";", "}", "</s>"]
["<s>", "public", "int", "getStartValueInt", "(", ")", "{", "if", "(", "startValueInt", "=", "=", "UNSET_INT", ")", "{", "startValueInt", "=", "(", "int", ")", "(", "Integer", ")", "startValue", ";", "}", "return", "startValueInt", ";", "}", "</s>"]
["<s>", "public", "int", "getEndValueInt", "(", ")", "{", "if", "(", "endValueInt", "=", "=", "UNSET_INT", ")", "{", "endValueInt", "=", "(", "int", ")", "(", "Integer", ")", "endValue", ";", "}", "return", "endValueInt", ";", "}", "</s>"]
["<s>", "public", "void", "set", "(", "float", "scaleX", ",", "float", "scaleY", ")", "{", "this", ".", "scaleX", "=", "scaleX", ";", "this", ".", "scaleY", "=", "scaleY", ";", "}", "</s>"]
["<s>", "@", "RestrictTo", "(", "RestrictTo", ".", "Scope", ".", "LIBRARY", ")", "public", "void", "setHasDashPattern", "(", "boolean", "hasDashPattern", ")", "{", "this", ".", "hasDashPattern", "=", "hasDashPattern", ";", "}", "</s>"]
["<s>", "public", "boolean", "hasDashPattern", "(", ")", "{", "return", "hasDashPattern", ";", "}", "</s>"]
["<s>", "public", "boolean", "isIdentity", "(", ")", "{", "return", "isIdentity", ";", "}", "</s>"]
["<s>", "public", "List", "<", "Keyframe", "<", "V", ">", ">", "getKeyframes", "(", ")", "{", "return", "keyframes", ";", "}", "</s>"]
["<s>", "public", "boolean", "equals", "(", "float", "scaleX", ",", "float", "scaleY", ")", "{", "return", "this", ".", "scaleX", "=", "=", "scaleX", "&", "&", "this", ".", "scaleY", "=", "=", "scaleY", ";", "}", "</s>"]
["<s>", "private", "float", "getTotalTextWidthForGlyphs", "(", "DocumentData", "documentData", ",", "Font", "font", ",", "float", "fontScale", ",", "float", "parentScale", ")", "{", "float", "totalWidth", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "documentData", ".", "text", ".", "length", "(", ")", ";", "i", "+", "+", ")", "{", "char", "c", "=", "documentData", ".", "text", ".", "charAt", "(", "i", ")", ";", "int", "characterHash", "=", "FontCharacter", ".", "hashFor", "(", "c", ",", "font", ".", "getFamily", "(", ")", ",", "font", ".", "getStyle", "(", ")", ")", ";", "FontCharacter", "character", "=", "composition", ".", "getCharacters", "(", ")", ".", "get", "(", "characterHash", ")", ";", "if", "(", "character", "=", "=", "null", ")", "{", "continue", ";", "}", "totalWidth", "+", "=", "character", ".", "getWidth", "(", ")", "*", "fontScale", "*", "Utils", ".", "dpScale", "(", ")", "*", "parentScale", ";", "}", "return", "totalWidth", ";", "}", "</s>"]
["<s>", "private", "void", "applyJustification", "(", "Justification", "justification", ",", "Canvas", "canvas", ",", "float", "totalTextWidth", ")", "{", "switch", "(", "justification", ")", "{", "case", "LeftAlign", ":", "break", ";", "case", "RightAlign", ":", "canvas", ".", "translate", "(", "-", "totalTextWidth", ",", "0", ")", ";", "break", ";", "case", "Center", ":", "canvas", ".", "translate", "(", "-", "totalTextWidth", "/", "<NUM_LIT:2>", ",", "0", ")", ";", "break", ";", "}", "}", "</s>"]
["<s>", "public", "void", "setRenderMode", "(", "RenderMode", "renderMode", ")", "{", "this", ".", "renderMode", "=", "renderMode", ";", "enableOrDisableHardwareLayer", "(", ")", ";", "}", "</s>"]
["<s>", "@", "RestrictTo", "(", "RestrictTo", ".", "Scope", ".", "LIBRARY", ")", "public", "void", "incrementMatteOrMaskCount", "(", "int", "amount", ")", "{", "maskAndMatteCount", "+", "=", "amount", ";", "}", "</s>"]
["<s>", "@", "RestrictTo", "(", "RestrictTo", ".", "Scope", ".", "LIBRARY", ")", "public", "int", "getMaskAndMatteCount", "(", ")", "{", "return", "maskAndMatteCount", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testNullMultipleTimesAsync", "(", ")", "{", "JsonReader", "reader", "=", "new", "JsonReader", "(", "new", "StringReader", "(", "JSON", ")", ")", ";", "LottieTask", "<", "LottieComposition", ">", "task1", "=", "LottieCompositionFactory", ".", "fromJsonReader", "(", "reader", ",", "null", ")", ";", "LottieTask", "<", "LottieComposition", ">", "task2", "=", "LottieCompositionFactory", ".", "fromJsonReader", "(", "reader", ",", "null", ")", ";", "assertFalse", "(", "task1", "=", "=", "task2", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testNullMultipleTimesSync", "(", ")", "{", "JsonReader", "reader", "=", "new", "JsonReader", "(", "new", "StringReader", "(", "JSON", ")", ")", ";", "LottieResult", "<", "LottieComposition", ">", "task1", "=", "LottieCompositionFactory", ".", "fromJsonReaderSync", "(", "reader", ",", "null", ")", ";", "LottieResult", "<", "LottieComposition", ">", "task2", "=", "LottieCompositionFactory", ".", "fromJsonReaderSync", "(", "reader", ",", "null", ")", ";", "assertFalse", "(", "task1", "=", "=", "task2", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "setMaxCacheSize", "(", "int", "size", ")", "{", "LottieCompositionCache", ".", "getInstance", "(", ")", ".", "resize", "(", "size", ")", ";", "}", "</s>"]
["<s>", "public", "void", "resize", "(", "int", "size", ")", "{", "cache", ".", "resize", "(", "size", ")", ";", "}", "</s>"]
["<s>", "@", "Before", "public", "void", "setup", "(", ")", "{", "LottieCompositionCache", ".", "getInstance", "(", ")", ".", "clear", "(", ")", ";", "LottieCompositionCache", ".", "getInstance", "(", ")", ".", "resize", "(", "<NUM_LIT:20>", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testCacheWorks", "(", ")", "{", "JsonReader", "reader", "=", "new", "JsonReader", "(", "new", "StringReader", "(", "JSON", ")", ")", ";", "LottieTask", "<", "LottieComposition", ">", "task1", "=", "LottieCompositionFactory", ".", "fromJsonReader", "(", "reader", ",", "\"", "<STR_LIT>", "\"", ")", ";", "LottieTask", "<", "LottieComposition", ">", "task2", "=", "LottieCompositionFactory", ".", "fromJsonReader", "(", "reader", ",", "\"", "<STR_LIT>", "\"", ")", ";", "assertTrue", "(", "task1", "=", "=", "task2", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testZeroCacheWorks", "(", ")", "{", "JsonReader", "reader", "=", "new", "JsonReader", "(", "new", "StringReader", "(", "JSON", ")", ")", ";", "LottieCompositionFactory", ".", "setMaxCacheSize", "(", "1", ")", ";", "LottieResult", "<", "LottieComposition", ">", "taskFoo1", "=", "LottieCompositionFactory", ".", "fromJsonReaderSync", "(", "reader", ",", "\"", "<STR_LIT>", "\"", ")", ";", "LottieResult", "<", "LottieComposition", ">", "taskBar", "=", "LottieCompositionFactory", ".", "fromJsonReaderSync", "(", "reader", ",", "\"", "<STR_LIT>", "\"", ")", ";", "LottieResult", "<", "LottieComposition", ">", "taskFoo2", "=", "LottieCompositionFactory", ".", "fromJsonReaderSync", "(", "reader", ",", "\"", "<STR_LIT>", "\"", ")", ";", "assertFalse", "(", "taskFoo1", "=", "=", "taskFoo2", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "(", "expected", "=", "IllegalArgumentException", ".", "class", ")", "public", "void", "testCannotSetCacheSizeToZero", "(", ")", "{", "LottieCompositionFactory", ".", "setMaxCacheSize", "(", "0", ")", ";", "}", "</s>"]
["<s>", "private", "static", "LottieResult", "<", "LottieComposition", ">", "fromJsonReaderSyncInternal", "(", "JsonReader", "reader", ",", "@", "Nullable", "String", "cacheKey", ",", "boolean", "close", ")", "{", "try", "{", "LottieComposition", "composition", "=", "LottieCompositionParser", ".", "parse", "(", "reader", ")", ";", "LottieCompositionCache", ".", "getInstance", "(", ")", ".", "put", "(", "cacheKey", ",", "composition", ")", ";", "return", "new", "LottieResult", "<", ">", "(", "composition", ")", ";", "}", "catch", "(", "Exception", "e", ")", "{", "return", "new", "LottieResult", "<", ">", "(", "e", ")", ";", "}", "finally", "{", "if", "(", "close", ")", "{", "closeQuietly", "(", "reader", ")", ";", "}", "}", "}", "</s>"]
["<s>", "public", "void", "setMinFrame", "(", "String", "markerName", ")", "{", "lottieDrawable", ".", "setMinFrame", "(", "markerName", ")", ";", "}", "</s>"]
["<s>", "public", "void", "setMaxFrame", "(", "String", "markerName", ")", "{", "lottieDrawable", ".", "setMaxFrame", "(", "markerName", ")", ";", "}", "</s>"]
["<s>", "public", "void", "setMinAndMaxFrame", "(", "String", "markerName", ")", "{", "lottieDrawable", ".", "setMinAndMaxFrame", "(", "markerName", ")", ";", "}", "</s>"]
["<s>", "public", "List", "<", "Marker", ">", "getMarkers", "(", ")", "{", "return", "markers", ";", "}", "</s>"]
["<s>", "@", "Nullable", "public", "Marker", "getMarker", "(", "String", "markerName", ")", "{", "int", "size", "=", "markers", ".", "size", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "markers", ".", "size", "(", ")", ";", "i", "+", "+", ")", "{", "Marker", "marker", "=", "markers", ".", "get", "(", "i", ")", ";", "if", "(", "markerName", ".", "equals", "(", "marker", ".", "name", ")", ")", "{", "return", "marker", ";", "}", "}", "return", "null", ";", "}", "</s>"]
["<s>", "public", "void", "setMinFrame", "(", "final", "String", "markerName", ")", "{", "if", "(", "composition", "=", "=", "null", ")", "{", "lazyCompositionTasks", ".", "add", "(", "new", "LazyCompositionTask", "(", ")", "{", "@", "Override", "public", "void", "run", "(", "LottieComposition", "composition", ")", "{", "setMinFrame", "(", "markerName", ")", ";", "}", "}", ")", ";", "return", ";", "}", "Marker", "marker", "=", "composition", ".", "getMarker", "(", "markerName", ")", ";", "if", "(", "marker", "=", "=", "null", ")", "{", "throw", "new", "IllegalArgumentException", "(", "\"", "<STR_LIT>", "\"", "+", "markerName", "+", "\"", "<STR_LIT:.>", "\"", ")", ";", "}", "setMinFrame", "(", "(", "int", ")", "marker", ".", "startFrame", ")", ";", "}", "</s>"]
["<s>", "public", "void", "setMaxFrame", "(", "final", "String", "markerName", ")", "{", "if", "(", "composition", "=", "=", "null", ")", "{", "lazyCompositionTasks", ".", "add", "(", "new", "LazyCompositionTask", "(", ")", "{", "@", "Override", "public", "void", "run", "(", "LottieComposition", "composition", ")", "{", "setMaxFrame", "(", "markerName", ")", ";", "}", "}", ")", ";", "return", ";", "}", "Marker", "marker", "=", "composition", ".", "getMarker", "(", "markerName", ")", ";", "if", "(", "marker", "=", "=", "null", ")", "{", "throw", "new", "IllegalArgumentException", "(", "\"", "<STR_LIT>", "\"", "+", "markerName", "+", "\"", "<STR_LIT:.>", "\"", ")", ";", "}", "setMaxFrame", "(", "(", "int", ")", "(", "marker", ".", "startFrame", "+", "marker", ".", "durationFrames", ")", ")", ";", "}", "</s>"]
["<s>", "public", "void", "setMinAndMaxFrame", "(", "final", "String", "markerName", ")", "{", "if", "(", "composition", "=", "=", "null", ")", "{", "lazyCompositionTasks", ".", "add", "(", "new", "LazyCompositionTask", "(", ")", "{", "@", "Override", "public", "void", "run", "(", "LottieComposition", "composition", ")", "{", "setMinAndMaxFrame", "(", "markerName", ")", ";", "}", "}", ")", ";", "return", ";", "}", "Marker", "marker", "=", "composition", ".", "getMarker", "(", "markerName", ")", ";", "if", "(", "marker", "=", "=", "null", ")", "{", "throw", "new", "IllegalArgumentException", "(", "\"", "<STR_LIT>", "\"", "+", "markerName", "+", "\"", "<STR_LIT:.>", "\"", ")", ";", "}", "int", "startFrame", "=", "(", "int", ")", "marker", ".", "startFrame", ";", "setMinAndMaxFrame", "(", "startFrame", ",", "startFrame", "+", "(", "int", ")", "marker", ".", "durationFrames", ")", ";", "}", "</s>"]
["<s>", "private", "static", "void", "parseMarkers", "(", "JsonReader", "reader", ",", "LottieComposition", "composition", ",", "List", "<", "Marker", ">", "markers", ")", "throws", "IOException", "{", "reader", ".", "beginArray", "(", ")", ";", "while", "(", "reader", ".", "hasNext", "(", ")", ")", "{", "String", "comment", "=", "null", ";", "float", "frame", "=", "<NUM_LIT>", ";", "float", "durationFrames", "=", "<NUM_LIT>", ";", "reader", ".", "beginObject", "(", ")", ";", "while", "(", "reader", ".", "hasNext", "(", ")", ")", "{", "switch", "(", "reader", ".", "nextName", "(", ")", ")", "{", "case", "\"", "<STR_LIT>", "\"", ":", "comment", "=", "reader", ".", "nextString", "(", ")", ";", "break", ";", "case", "\"", "<STR_LIT>", "\"", ":", "frame", "=", "(", "float", ")", "reader", ".", "nextDouble", "(", ")", ";", "break", ";", "case", "\"", "<STR_LIT>", "\"", ":", "durationFrames", "=", "(", "float", ")", "reader", ".", "nextDouble", "(", ")", ";", "break", ";", "default", ":", "reader", ".", "skipValue", "(", ")", ";", "}", "}", "reader", ".", "endObject", "(", ")", ";", "markers", ".", "add", "(", "new", "Marker", "(", "comment", ",", "frame", ",", "durationFrames", ")", ")", ";", "}", "reader", ".", "endArray", "(", ")", ";", "}", "</s>"]
["<s>", "private", "void", "clearSkewValues", "(", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "<NUM_LIT:9>", ";", "i", "+", "+", ")", "{", "skewValues", "[", "i", "]", "=", "<NUM_LIT>", ";", "}", "}", "</s>"]
["<s>", "@", "Nullable", "public", "AnimatableFloatValue", "getSkew", "(", ")", "{", "return", "skew", ";", "}", "</s>"]
["<s>", "@", "Nullable", "public", "AnimatableFloatValue", "getSkewAngle", "(", ")", "{", "return", "skewAngle", ";", "}", "</s>"]
["<s>", "void", "addTrimPath", "(", "TrimPathContent", "trimPath", ")", "{", "contents", ".", "add", "(", "trimPath", ")", ";", "}", "</s>"]
["<s>", "public", "void", "apply", "(", "Path", "path", ")", "{", "for", "(", "int", "i", "=", "contents", ".", "size", "(", ")", "-", "1", ";", "i", ">", "=", "0", ";", "i", "-", "-", ")", "{", "Utils", ".", "applyTrimPathIfNeeded", "(", "path", ",", "contents", ".", "get", "(", "i", ")", ")", ";", "}", "}", "</s>"]
["<s>", "public", "void", "createPath", "(", ")", "{", "boolean", "equals", "=", "endValue", "!", "=", "null", "&", "&", "startValue", "!", "=", "null", "&", "&", "startValue", ".", "equals", "(", "endValue", ".", "x", ",", "endValue", ".", "y", ")", ";", "if", "(", "endValue", "!", "=", "null", "&", "&", "!", "equals", ")", "{", "path", "=", "Utils", ".", "createPath", "(", "startValue", ",", "endValue", ",", "pointKeyFrame", ".", "pathCp1", ",", "pointKeyFrame", ".", "pathCp2", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "<", "T", ">", "void", "setEndFrames", "(", "List", "<", "?", "extends", "Keyframe", "<", "T", ">", ">", "keyframes", ")", "{", "int", "size", "=", "keyframes", ".", "size", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "size", "-", "1", ";", "i", "+", "+", ")", "{", "Keyframe", "<", "T", ">", "keyframe", "=", "keyframes", ".", "get", "(", "i", ")", ";", "Keyframe", "<", "T", ">", "nextKeyframe", "=", "keyframes", ".", "get", "(", "i", "+", "1", ")", ";", "keyframe", ".", "endFrame", "=", "nextKeyframe", ".", "startFrame", ";", "if", "(", "keyframe", ".", "endValue", "=", "=", "null", "&", "&", "nextKeyframe", ".", "startValue", "!", "=", "null", ")", "{", "keyframe", ".", "endValue", "=", "nextKeyframe", ".", "startValue", ";", "if", "(", "keyframe", "instanceof", "PathKeyframe", ")", "{", "(", "(", "PathKeyframe", ")", "keyframe", ")", ".", "createPath", "(", ")", ";", "}", "}", "}", "Keyframe", "<", "?", ">", "lastKeyframe", "=", "keyframes", ".", "get", "(", "size", "-", "1", ")", ";", "if", "(", "(", "lastKeyframe", ".", "startValue", "=", "=", "null", "|", "|", "lastKeyframe", ".", "endValue", "=", "=", "null", ")", "&", "&", "keyframes", ".", "size", "(", ")", ">", "1", ")", "{", "keyframes", ".", "remove", "(", "lastKeyframe", ")", ";", "}", "}", "</s>"]
["<s>", "private", "void", "drawRect", "(", "Canvas", "canvas", ",", "float", "lp", ",", "float", "tp", ",", "float", "rp", ",", "float", "bp", ",", "@", "Nullable", "PorterDuff", ".", "Mode", "mode", ",", "int", "color", ")", "{", "Paint", "paint", "=", "new", "Paint", "(", ")", ";", "paint", ".", "setColor", "(", "color", ")", ";", "if", "(", "mode", "!", "=", "null", ")", "{", "paint", ".", "setXfermode", "(", "new", "PorterDuffXfermode", "(", "mode", ")", ")", ";", "}", "canvas", ".", "drawRect", "(", "canvas", ".", "getWidth", "(", ")", "*", "lp", ",", "canvas", ".", "getHeight", "(", ")", "*", "tp", ",", "canvas", ".", "getWidth", "(", ")", "*", "rp", ",", "canvas", ".", "getHeight", "(", ")", "*", "bp", ",", "paint", ")", ";", "}", "</s>"]
["<s>", "private", "void", "applyAddMask", "(", "Canvas", "canvas", ",", "Matrix", "matrix", ",", "Mask", "mask", ",", "BaseKeyframeAnimation", "<", "ShapeData", ",", "Path", ">", "maskAnimation", ",", "BaseKeyframeAnimation", "<", "Integer", ",", "Integer", ">", "opacityAnimation", ")", "{", "Path", "maskPath", "=", "maskAnimation", ".", "getValue", "(", ")", ";", "path", ".", "set", "(", "maskPath", ")", ";", "path", ".", "transform", "(", "matrix", ")", ";", "addMaskPaint", ".", "setAlpha", "(", "(", "int", ")", "(", "opacityAnimation", ".", "getValue", "(", ")", "*", "<NUM_LIT>", ")", ")", ";", "canvas", ".", "drawPath", "(", "path", ",", "addMaskPaint", ")", ";", "}", "</s>"]
["<s>", "private", "void", "applyInvertedAddMask", "(", "Canvas", "canvas", ",", "Matrix", "matrix", ",", "Mask", "mask", ",", "BaseKeyframeAnimation", "<", "ShapeData", ",", "Path", ">", "maskAnimation", ",", "BaseKeyframeAnimation", "<", "Integer", ",", "Integer", ">", "opacityAnimation", ")", "{", "saveLayerCompat", "(", "canvas", ",", "rect", ",", "addInvMaskLayerPaint", ",", "true", ")", ";", "canvas", ".", "drawRect", "(", "rect", ",", "addInvMaskLayerPaint", ")", ";", "Path", "maskPath", "=", "maskAnimation", ".", "getValue", "(", ")", ";", "path", ".", "set", "(", "maskPath", ")", ";", "path", ".", "transform", "(", "matrix", ")", ";", "addMaskPaint", ".", "setAlpha", "(", "(", "int", ")", "(", "opacityAnimation", ".", "getValue", "(", ")", "*", "<NUM_LIT>", ")", ")", ";", "canvas", ".", "drawPath", "(", "path", ",", "addInvMaskPaintClear", ")", ";", "canvas", ".", "restore", "(", ")", ";", "}", "</s>"]
["<s>", "private", "void", "applySubtractMask", "(", "Canvas", "canvas", ",", "Matrix", "matrix", ",", "Mask", "mask", ",", "BaseKeyframeAnimation", "<", "ShapeData", ",", "Path", ">", "maskAnimation", ",", "BaseKeyframeAnimation", "<", "Integer", ",", "Integer", ">", "opacityAnimation", ")", "{", "Path", "maskPath", "=", "maskAnimation", ".", "getValue", "(", ")", ";", "path", ".", "set", "(", "maskPath", ")", ";", "path", ".", "transform", "(", "matrix", ")", ";", "canvas", ".", "drawPath", "(", "path", ",", "subtractMaskPaintDstOut", ")", ";", "}", "</s>"]
["<s>", "private", "void", "applyInvertedSubtractMask", "(", "Canvas", "canvas", ",", "Matrix", "matrix", ",", "Mask", "mask", ",", "BaseKeyframeAnimation", "<", "ShapeData", ",", "Path", ">", "maskAnimation", ",", "BaseKeyframeAnimation", "<", "Integer", ",", "Integer", ">", "opacityAnimation", ")", "{", "saveLayerCompat", "(", "canvas", ",", "rect", ",", "subtractMaskPaintDstOut", ",", "true", ")", ";", "canvas", ".", "drawRect", "(", "rect", ",", "subtractMaskStartingPaintNormal", ")", ";", "subtractMaskPaintDstOut", ".", "setAlpha", "(", "(", "int", ")", "(", "opacityAnimation", ".", "getValue", "(", ")", "*", "<NUM_LIT>", ")", ")", ";", "Path", "maskPath", "=", "maskAnimation", ".", "getValue", "(", ")", ";", "path", ".", "set", "(", "maskPath", ")", ";", "path", ".", "transform", "(", "matrix", ")", ";", "canvas", ".", "drawPath", "(", "path", ",", "subtractMaskPaintDstOut", ")", ";", "canvas", ".", "restore", "(", ")", ";", "}", "</s>"]
["<s>", "private", "void", "applyIntersectMask", "(", "Canvas", "canvas", ",", "Matrix", "matrix", ",", "Mask", "mask", ",", "BaseKeyframeAnimation", "<", "ShapeData", ",", "Path", ">", "maskAnimation", ",", "BaseKeyframeAnimation", "<", "Integer", ",", "Integer", ">", "opacityAnimation", ")", "{", "saveLayerCompat", "(", "canvas", ",", "rect", ",", "dstInPaint", ",", "true", ")", ";", "Path", "maskPath", "=", "maskAnimation", ".", "getValue", "(", ")", ";", "path", ".", "set", "(", "maskPath", ")", ";", "path", ".", "transform", "(", "matrix", ")", ";", "contentPaint", ".", "setAlpha", "(", "(", "int", ")", "(", "opacityAnimation", ".", "getValue", "(", ")", "*", "<NUM_LIT>", ")", ")", ";", "canvas", ".", "drawPath", "(", "path", ",", "contentPaint", ")", ";", "canvas", ".", "restore", "(", ")", ";", "}", "</s>"]
["<s>", "private", "void", "applyInvertedIntersectMask", "(", "Canvas", "canvas", ",", "Matrix", "matrix", ",", "Mask", "mask", ",", "BaseKeyframeAnimation", "<", "ShapeData", ",", "Path", ">", "maskAnimation", ",", "BaseKeyframeAnimation", "<", "Integer", ",", "Integer", ">", "opacityAnimation", ")", "{", "saveLayerCompat", "(", "canvas", ",", "rect", ",", "dstInPaint", ",", "true", ")", ";", "canvas", ".", "drawRect", "(", "rect", ",", "contentPaint", ")", ";", "dstOutPaint", ".", "setAlpha", "(", "(", "int", ")", "(", "opacityAnimation", ".", "getValue", "(", ")", "*", "<NUM_LIT>", ")", ")", ";", "Path", "maskPath", "=", "maskAnimation", ".", "getValue", "(", ")", ";", "path", ".", "set", "(", "maskPath", ")", ";", "path", ".", "transform", "(", "matrix", ")", ";", "canvas", ".", "drawPath", "(", "path", ",", "dstOutPaint", ")", ";", "canvas", ".", "restore", "(", ")", ";", "}", "</s>"]
["<s>", "private", "static", "boolean", "isAnchorPointIdentity", "(", "AnimatablePathValue", "anchorPoint", ")", "{", "return", "anchorPoint", "=", "=", "null", "|", "|", "(", "anchorPoint", ".", "isStatic", "(", ")", "&", "&", "anchorPoint", ".", "getKeyframes", "(", ")", ".", "get", "(", "0", ")", ".", "startValue", ".", "equals", "(", "<NUM_LIT>", ",", "<NUM_LIT>", ")", ")", ";", "}", "</s>"]
["<s>", "private", "static", "boolean", "isPositionIdentity", "(", "AnimatableValue", "<", "PointF", ",", "PointF", ">", "position", ")", "{", "return", "position", "=", "=", "null", "|", "|", "(", "!", "(", "position", "instanceof", "AnimatableSplitDimensionPathValue", ")", "&", "&", "position", ".", "isStatic", "(", ")", "&", "&", "position", ".", "getKeyframes", "(", ")", ".", "get", "(", "0", ")", ".", "startValue", ".", "equals", "(", "<NUM_LIT>", ",", "<NUM_LIT>", ")", ")", ";", "}", "</s>"]
["<s>", "private", "static", "boolean", "isRotationIdentity", "(", "AnimatableFloatValue", "rotation", ")", "{", "return", "rotation", "=", "=", "null", "|", "|", "(", "rotation", ".", "isStatic", "(", ")", "&", "&", "rotation", ".", "getKeyframes", "(", ")", ".", "get", "(", "0", ")", ".", "startValue", "=", "=", "<NUM_LIT>", ")", ";", "}", "</s>"]
["<s>", "private", "static", "boolean", "isScaleIdentity", "(", "AnimatableScaleValue", "scale", ")", "{", "return", "scale", "=", "=", "null", "|", "|", "(", "scale", ".", "isStatic", "(", ")", "&", "&", "scale", ".", "getKeyframes", "(", ")", ".", "get", "(", "0", ")", ".", "startValue", ".", "equals", "(", "<NUM_LIT>", ",", "<NUM_LIT>", ")", ")", ";", "}", "</s>"]
["<s>", "private", "static", "boolean", "isSkewIdentity", "(", "AnimatableFloatValue", "skew", ")", "{", "return", "skew", "=", "=", "null", "|", "|", "(", "skew", ".", "isStatic", "(", ")", "&", "&", "skew", ".", "getKeyframes", "(", ")", ".", "get", "(", "0", ")", ".", "startValue", "=", "=", "<NUM_LIT>", ")", ";", "}", "</s>"]
["<s>", "private", "static", "boolean", "isSkewAngleIdentity", "(", "AnimatableFloatValue", "skewAngle", ")", "{", "return", "skewAngle", "=", "=", "null", "|", "|", "(", "skewAngle", ".", "isStatic", "(", ")", "&", "&", "skewAngle", ".", "getKeyframes", "(", ")", ".", "get", "(", "0", ")", ".", "startValue", "=", "=", "<NUM_LIT>", ")", ";", "}", "</s>"]
["<s>", "private", "void", "drawGlyphTextLine", "(", "String", "text", ",", "DocumentData", "documentData", ",", "Matrix", "parentMatrix", ",", "Font", "font", ",", "Canvas", "canvas", ",", "float", "parentScale", ",", "float", "fontScale", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "text", ".", "length", "(", ")", ";", "i", "+", "+", ")", "{", "char", "c", "=", "text", ".", "charAt", "(", "i", ")", ";", "int", "characterHash", "=", "FontCharacter", ".", "hashFor", "(", "c", ",", "font", ".", "getFamily", "(", ")", ",", "font", ".", "getStyle", "(", ")", ")", ";", "FontCharacter", "character", "=", "composition", ".", "getCharacters", "(", ")", ".", "get", "(", "characterHash", ")", ";", "if", "(", "character", "=", "=", "null", ")", "{", "continue", ";", "}", "drawCharacterAsGlyph", "(", "character", ",", "parentMatrix", ",", "fontScale", ",", "documentData", ",", "canvas", ")", ";", "float", "tx", "=", "(", "float", ")", "character", ".", "getWidth", "(", ")", "*", "fontScale", "*", "Utils", ".", "dpScale", "(", ")", "*", "parentScale", ";", "float", "tracking", "=", "documentData", ".", "tracking", "/", "<NUM_LIT:10>", "f", ";", "if", "(", "trackingAnimation", "!", "=", "null", ")", "{", "tracking", "+", "=", "trackingAnimation", ".", "getValue", "(", ")", ";", "}", "tx", "+", "=", "tracking", "*", "parentScale", ";", "canvas", ".", "translate", "(", "tx", ",", "0", ")", ";", "}", "}", "</s>"]
["<s>", "private", "List", "<", "String", ">", "getTextLines", "(", "String", "text", ")", "{", "String", "formattedText", "=", "text", ".", "replaceAll", "(", "\"", "<STR_LIT>", "<STR_LIT>", "<STR_LIT>", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "<STR_LIT>", "\"", ")", ".", "replaceAll", "(", "\"", "<STR_LIT>", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "<STR_LIT>", "\"", ")", ";", "String", "[", "]", "textLinesArray", "=", "formattedText", ".", "split", "(", "\"", "<STR_LIT>", "<STR_LIT>", "\"", ")", ";", "return", "Arrays", ".", "asList", "(", "textLinesArray", ")", ";", "}", "</s>"]
["<s>", "private", "void", "drawFontTextLine", "(", "String", "text", ",", "DocumentData", "documentData", ",", "Canvas", "canvas", ",", "float", "parentScale", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "text", ".", "length", "(", ")", ";", "i", "+", "+", ")", "{", "char", "character", "=", "text", ".", "charAt", "(", "i", ")", ";", "drawCharacterFromFont", "(", "character", ",", "documentData", ",", "canvas", ")", ";", "tempCharArray", "[", "0", "]", "=", "character", ";", "float", "charWidth", "=", "fillPaint", ".", "measureText", "(", "tempCharArray", ",", "0", ",", "1", ")", ";", "float", "tracking", "=", "documentData", ".", "tracking", "/", "<NUM_LIT:10>", "f", ";", "if", "(", "trackingAnimation", "!", "=", "null", ")", "{", "tracking", "+", "=", "trackingAnimation", ".", "getValue", "(", ")", ";", "}", "float", "tx", "=", "charWidth", "+", "tracking", "*", "parentScale", ";", "canvas", ".", "translate", "(", "tx", ",", "0", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "boolean", "hasZeroScaleAxis", "(", "Matrix", "matrix", ")", "{", "points", "[", "0", "]", "=", "0", ";", "points", "[", "1", "]", "=", "0", ";", "points", "[", "<NUM_LIT:2>", "]", "=", "<NUM_LIT>", ";", "points", "[", "<NUM_LIT:3>", "]", "=", "<NUM_LIT>", ";", "matrix", ".", "mapPoints", "(", "points", ")", ";", "if", "(", "points", "[", "0", "]", "=", "=", "points", "[", "<NUM_LIT:2>", "]", "|", "|", "points", "[", "1", "]", "=", "=", "points", "[", "<NUM_LIT:3>", "]", ")", "{", "return", "true", ";", "}", "return", "false", ";", "}", "</s>"]
["<s>", "private", "String", "codePointToString", "(", "String", "text", ",", "int", "startIndex", ")", "{", "int", "firstCodePoint", "=", "text", ".", "codePointAt", "(", "startIndex", ")", ";", "int", "firstCodePointLength", "=", "Character", ".", "charCount", "(", "firstCodePoint", ")", ";", "int", "key", "=", "firstCodePoint", ";", "int", "index", "=", "startIndex", "+", "firstCodePointLength", ";", "while", "(", "index", "<", "text", ".", "length", "(", ")", ")", "{", "int", "nextCodePoint", "=", "text", ".", "codePointAt", "(", "index", ")", ";", "if", "(", "!", "isModifier", "(", "nextCodePoint", ")", ")", "{", "break", ";", "}", "int", "nextCodePointLength", "=", "Character", ".", "charCount", "(", "nextCodePoint", ")", ";", "index", "+", "=", "nextCodePointLength", ";", "key", "=", "key", "*", "<NUM_LIT:31>", "+", "nextCodePoint", ";", "}", "if", "(", "codePointCache", ".", "containsKey", "(", "key", ")", ")", "{", "return", "codePointCache", ".", "get", "(", "key", ")", ";", "}", "stringBuilder", ".", "setLength", "(", "0", ")", ";", "for", "(", "int", "i", "=", "startIndex", ";", "i", "<", "index", ";", ")", "{", "int", "codePoint", "=", "text", ".", "codePointAt", "(", "i", ")", ";", "stringBuilder", ".", "appendCodePoint", "(", "codePoint", ")", ";", "i", "+", "=", "Character", ".", "charCount", "(", "codePoint", ")", ";", "}", "String", "str", "=", "stringBuilder", ".", "toString", "(", ")", ";", "codePointCache", ".", "put", "(", "key", ",", "str", ")", ";", "return", "str", ";", "}", "</s>"]
["<s>", "private", "boolean", "isModifier", "(", "int", "codePoint", ")", "{", "return", "Character", ".", "getType", "(", "codePoint", ")", "=", "=", "Character", ".", "FORMAT", "|", "|", "Character", ".", "getType", "(", "codePoint", ")", "=", "=", "Character", ".", "MODIFIER_SYMBOL", "|", "|", "Character", ".", "getType", "(", "codePoint", ")", "=", "=", "Character", ".", "NON_SPACING_MARK", "|", "|", "Character", ".", "getType", "(", "codePoint", ")", "=", "=", "Character", ".", "OTHER_SYMBOL", "|", "|", "Character", ".", "getType", "(", "codePoint", ")", "=", "=", "Character", ".", "SURROGATE", ";", "}", "</s>"]
["<s>", "private", "int", "[", "]", "applyDynamicColorsIfNeeded", "(", "int", "[", "]", "colors", ")", "{", "if", "(", "colorCallbackAnimation", "!", "=", "null", ")", "{", "Integer", "[", "]", "dynamicColors", "=", "(", "Integer", "[", "]", ")", "colorCallbackAnimation", ".", "getValue", "(", ")", ";", "if", "(", "colors", ".", "length", "=", "=", "dynamicColors", ".", "length", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "colors", ".", "length", ";", "i", "+", "+", ")", "{", "colors", "[", "i", "]", "=", "dynamicColors", "[", "i", "]", ";", "}", "}", "else", "{", "colors", "=", "new", "int", "[", "dynamicColors", ".", "length", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "dynamicColors", ".", "length", ";", "i", "+", "+", ")", "{", "colors", "[", "i", "]", "=", "dynamicColors", "[", "i", "]", ";", "}", "}", "}", "return", "colors", ";", "}", "</s>"]
["<s>", "public", "void", "removeAnimation", "(", "BaseKeyframeAnimation", "<", "?", ",", "?", ">", "animation", ")", "{", "animations", ".", "remove", "(", "animation", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "matchesName", "(", "String", "name", ")", "{", "if", "(", "this", ".", "name", ".", "equalsIgnoreCase", "(", "name", ")", ")", "{", "return", "true", ";", "}", "if", "(", "this", ".", "name", ".", "endsWith", "(", "CARRIAGE_RETURN", ")", "&", "&", "this", ".", "name", ".", "substring", "(", "0", ",", "this", ".", "name", ".", "length", "(", ")", "-", "1", ")", ".", "equalsIgnoreCase", "(", "name", ")", ")", "{", "return", "true", ";", "}", "return", "false", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testMarkerWithCarriageReturn", "(", ")", "{", "Marker", "marker", "=", "new", "Marker", "(", "\"", "<STR_LIT>", "<STR_LIT>", "<STR_LIT>", "\"", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ")", ";", "assertTrue", "(", "marker", ".", "matchesName", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "}", "</s>"]
["<s>", "void", "setSystemAnimationsAreEnabled", "(", "Boolean", "areEnabled", ")", "{", "systemAnimationsEnabled", "=", "areEnabled", ";", "}", "</s>"]
["<s>", "public", "void", "warning", "(", "String", "message", ")", "{", "warning", "(", "message", ",", "null", ")", ";", "}", "</s>"]
["<s>", "public", "void", "warning", "(", "String", "message", ",", "Throwable", "exception", ")", "{", "if", "(", "loggedMessages", ".", "contains", "(", "message", ")", ")", "{", "return", ";", "}", "Log", ".", "w", "(", "L", ".", "TAG", ",", "message", ",", "exception", ")", ";", "loggedMessages", ".", "add", "(", "message", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "setInstance", "(", "LottieLogger", "instance", ")", "{", "Logger", ".", "INSTANCE", "=", "instance", ";", "}", "</s>"]
["<s>", "public", "static", "void", "debug", "(", "String", "message", ")", "{", "INSTANCE", ".", "debug", "(", "message", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "debug", "(", "String", "message", ",", "Throwable", "exception", ")", "{", "INSTANCE", ".", "debug", "(", "message", ",", "exception", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "warning", "(", "String", "message", ")", "{", "INSTANCE", ".", "warning", "(", "message", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "warning", "(", "String", "message", ",", "Throwable", "exception", ")", "{", "INSTANCE", ".", "warning", "(", "message", ",", "exception", ")", ";", "}", "</s>"]
["<s>", "private", "String", "getErrorFromConnection", "(", "HttpURLConnection", "connection", ")", "throws", "IOException", "{", "int", "responseCode", "=", "connection", ".", "getResponseCode", "(", ")", ";", "BufferedReader", "r", "=", "new", "BufferedReader", "(", "new", "InputStreamReader", "(", "connection", ".", "getErrorStream", "(", ")", ")", ")", ";", "StringBuilder", "error", "=", "new", "StringBuilder", "(", ")", ";", "String", "line", ";", "try", "{", "while", "(", "(", "line", "=", "r", ".", "readLine", "(", ")", ")", "!", "=", "null", ")", "{", "error", ".", "append", "(", "line", ")", ".", "append", "(", "<STR_LIT:\\n>", ")", ";", "}", "}", "catch", "(", "Exception", "e", ")", "{", "throw", "e", ";", "}", "finally", "{", "try", "{", "r", ".", "close", "(", ")", ";", "}", "catch", "(", "Exception", "e", ")", "{", "}", "}", "return", "error", ".", "toString", "(", ")", ";", "}", "</s>"]
["<s>", "@", "Nullable", "private", "LottieResult", "<", "LottieComposition", ">", "getResultFromConnection", "(", "HttpURLConnection", "connection", ")", "throws", "IOException", "{", "File", "file", ";", "FileExtension", "extension", ";", "LottieResult", "<", "LottieComposition", ">", "result", "=", "null", ";", "switch", "(", "connection", ".", "getContentType", "(", ")", ")", "{", "case", "\"", "<STR_LIT>", "\"", ":", "Logger", ".", "debug", "(", "\"", "<STR_LIT>", "\"", ")", ";", "extension", "=", "FileExtension", ".", "ZIP", ";", "file", "=", "networkCache", ".", "writeTempCacheFile", "(", "connection", ".", "getInputStream", "(", ")", ",", "extension", ")", ";", "result", "=", "LottieCompositionFactory", ".", "fromZipStreamSync", "(", "new", "ZipInputStream", "(", "new", "FileInputStream", "(", "file", ")", ")", ",", "url", ")", ";", "break", ";", "case", "\"", "<STR_LIT>", "\"", ":", "default", ":", "Logger", ".", "debug", "(", "\"", "<STR_LIT>", "\"", ")", ";", "extension", "=", "FileExtension", ".", "JSON", ";", "file", "=", "networkCache", ".", "writeTempCacheFile", "(", "connection", ".", "getInputStream", "(", ")", ",", "extension", ")", ";", "result", "=", "LottieCompositionFactory", ".", "fromJsonInputStreamSync", "(", "new", "FileInputStream", "(", "new", "File", "(", "file", ".", "getAbsolutePath", "(", ")", ")", ")", ",", "url", ")", ";", "break", ";", "}", "if", "(", "result", ".", "getValue", "(", ")", "!", "=", "null", ")", "{", "networkCache", ".", "renameTempFile", "(", "extension", ")", ";", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "static", "Bitmap", "resizeBitmapIfNeeded", "(", "Bitmap", "bitmap", ",", "int", "width", ",", "int", "height", ")", "{", "if", "(", "bitmap", ".", "getWidth", "(", ")", "=", "=", "width", "&", "&", "bitmap", ".", "getHeight", "(", ")", "=", "=", "height", ")", "{", "return", "bitmap", ";", "}", "float", "scaleWidth", "=", "(", "(", "float", ")", "width", ")", "/", "bitmap", ".", "getWidth", "(", ")", ";", "float", "scaleHeight", "=", "(", "(", "float", ")", "height", ")", "/", "bitmap", ".", "getHeight", "(", ")", ";", "Bitmap", "resizedBitmap", "=", "Bitmap", ".", "createScaledBitmap", "(", "bitmap", ",", "width", ",", "height", ",", "true", ")", ";", "bitmap", ".", "recycle", "(", ")", ";", "return", "resizedBitmap", ";", "}", "</s>"]
["<s>", "public", "static", "LottieComposition", "parse", "(", "JsonReader", "reader", ")", "throws", "IOException", "{", "float", "scale", "=", "Utils", ".", "dpScale", "(", ")", ";", "float", "startFrame", "=", "<NUM_LIT>", ";", "float", "endFrame", "=", "<NUM_LIT>", ";", "float", "frameRate", "=", "<NUM_LIT>", ";", "final", "LongSparseArray", "<", "Layer", ">", "layerMap", "=", "new", "LongSparseArray", "<", ">", "(", ")", ";", "final", "List", "<", "Layer", ">", "layers", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "int", "width", "=", "0", ";", "int", "height", "=", "0", ";", "Map", "<", "String", ",", "List", "<", "Layer", ">", ">", "precomps", "=", "new", "HashMap", "<", ">", "(", ")", ";", "Map", "<", "String", ",", "LottieImageAsset", ">", "images", "=", "new", "HashMap", "<", ">", "(", ")", ";", "Map", "<", "String", ",", "Font", ">", "fonts", "=", "new", "HashMap", "<", ">", "(", ")", ";", "List", "<", "Marker", ">", "markers", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "SparseArrayCompat", "<", "FontCharacter", ">", "characters", "=", "new", "SparseArrayCompat", "<", ">", "(", ")", ";", "LottieComposition", "composition", "=", "new", "LottieComposition", "(", ")", ";", "reader", ".", "beginObject", "(", ")", ";", "while", "(", "reader", ".", "hasNext", "(", ")", ")", "{", "switch", "(", "reader", ".", "selectName", "(", "NAMES", ")", ")", "{", "case", "0", ":", "width", "=", "reader", ".", "nextInt", "(", ")", ";", "break", ";", "case", "1", ":", "height", "=", "reader", ".", "nextInt", "(", ")", ";", "break", ";", "case", "<NUM_LIT:2>", ":", "startFrame", "=", "(", "float", ")", "reader", ".", "nextDouble", "(", ")", ";", "break", ";", "case", "<NUM_LIT:3>", ":", "endFrame", "=", "(", "float", ")", "reader", ".", "nextDouble", "(", ")", "-", "<NUM_LIT>", ";", "break", ";", "case", "<NUM_LIT:4>", ":", "frameRate", "=", "(", "float", ")", "reader", ".", "nextDouble", "(", ")", ";", "break", ";", "case", "<NUM_LIT:5>", ":", "String", "version", "=", "reader", ".", "nextString", "(", ")", ";", "String", "[", "]", "versions", "=", "version", ".", "split", "(", "\"", "<STR_LIT:\\\\>", "<STR_LIT:.>", "\"", ")", ";", "int", "majorVersion", "=", "Integer", ".", "parseInt", "(", "versions", "[", "0", "]", ")", ";", "int", "minorVersion", "=", "Integer", ".", "parseInt", "(", "versions", "[", "1", "]", ")", ";", "int", "patchVersion", "=", "Integer", ".", "parseInt", "(", "versions", "[", "<NUM_LIT:2>", "]", ")", ";", "if", "(", "!", "Utils", ".", "isAtLeastVersion", "(", "majorVersion", ",", "minorVersion", ",", "patchVersion", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:4>", ",", "0", ")", ")", "{", "composition", ".", "addWarning", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "break", ";", "case", "<NUM_LIT:6>", ":", "parseLayers", "(", "reader", ",", "composition", ",", "layers", ",", "layerMap", ")", ";", "break", ";", "case", "<NUM_LIT:7>", ":", "parseAssets", "(", "reader", ",", "composition", ",", "precomps", ",", "images", ")", ";", "break", ";", "case", "<NUM_LIT:8>", ":", "parseFonts", "(", "reader", ",", "fonts", ")", ";", "break", ";", "case", "<NUM_LIT:9>", ":", "parseChars", "(", "reader", ",", "composition", ",", "characters", ")", ";", "break", ";", "case", "<NUM_LIT:10>", ":", "parseMarkers", "(", "reader", ",", "composition", ",", "markers", ")", ";", "break", ";", "default", ":", "reader", ".", "skipName", "(", ")", ";", "reader", ".", "skipValue", "(", ")", ";", "}", "}", "int", "scaledWidth", "=", "(", "int", ")", "(", "width", "*", "scale", ")", ";", "int", "scaledHeight", "=", "(", "int", ")", "(", "height", "*", "scale", ")", ";", "Rect", "bounds", "=", "new", "Rect", "(", "0", ",", "0", ",", "scaledWidth", ",", "scaledHeight", ")", ";", "composition", ".", "init", "(", "bounds", ",", "startFrame", ",", "endFrame", ",", "frameRate", ",", "layers", ",", "layerMap", ",", "precomps", ",", "images", ",", "characters", ",", "fonts", ",", "markers", ")", ";", "return", "composition", ";", "}", "</s>"]
["<s>", "private", "static", "void", "parseLayers", "(", "JsonReader", "reader", ",", "LottieComposition", "composition", ",", "List", "<", "Layer", ">", "layers", ",", "LongSparseArray", "<", "Layer", ">", "layerMap", ")", "throws", "IOException", "{", "int", "imageCount", "=", "0", ";", "reader", ".", "beginArray", "(", ")", ";", "while", "(", "reader", ".", "hasNext", "(", ")", ")", "{", "Layer", "layer", "=", "LayerParser", ".", "parse", "(", "reader", ",", "composition", ")", ";", "if", "(", "layer", ".", "getLayerType", "(", ")", "=", "=", "Layer", ".", "LayerType", ".", "IMAGE", ")", "{", "imageCount", "+", "+", ";", "}", "layers", ".", "add", "(", "layer", ")", ";", "layerMap", ".", "put", "(", "layer", ".", "getId", "(", ")", ",", "layer", ")", ";", "if", "(", "imageCount", ">", "<NUM_LIT:4>", ")", "{", "Logger", ".", "warning", "(", "\"", "<STR_LIT>", "\"", "+", "imageCount", "+", "\"", "<STR_LIT>", "\"", "+", "\"", "<STR_LIT>", "\"", "+", "\"", "<STR_LIT>", "\"", ")", ";", "}", "}", "reader", ".", "endArray", "(", ")", ";", "}", "</s>"]
["<s>", "public", "static", "JsonReader", "of", "(", "BufferedSource", "source", ")", "{", "return", "new", "JsonUtf8Reader", "(", "source", ")", ";", "}", "</s>"]
["<s>", "final", "void", "pushScope", "(", "int", "newTop", ")", "{", "if", "(", "stackSize", "=", "=", "scopes", ".", "length", ")", "{", "if", "(", "stackSize", "=", "=", "<NUM_LIT>", ")", "{", "throw", "new", "JsonDataException", "(", "\"", "<STR_LIT>", "\"", "+", "getPath", "(", ")", ")", ";", "}", "scopes", "=", "Arrays", ".", "copyOf", "(", "scopes", ",", "scopes", ".", "length", "*", "<NUM_LIT:2>", ")", ";", "pathNames", "=", "Arrays", ".", "copyOf", "(", "pathNames", ",", "pathNames", ".", "length", "*", "<NUM_LIT:2>", ")", ";", "pathIndices", "=", "Arrays", ".", "copyOf", "(", "pathIndices", ",", "pathIndices", ".", "length", "*", "<NUM_LIT:2>", ")", ";", "}", "scopes", "[", "stackSize", "+", "+", "]", "=", "newTop", ";", "}", "</s>"]
["<s>", "final", "JsonEncodingException", "syntaxError", "(", "String", "message", ")", "throws", "JsonEncodingException", "{", "throw", "new", "JsonEncodingException", "(", "message", "+", "\"", "<STR_LIT>", "\"", "+", "getPath", "(", ")", ")", ";", "}", "</s>"]
["<s>", "public", "final", "String", "getPath", "(", ")", "{", "return", "JsonScope", ".", "getPath", "(", "stackSize", ",", "scopes", ",", "pathNames", ",", "pathIndices", ")", ";", "}", "</s>"]
["<s>", "public", "static", "Options", "of", "(", "String", ".", ".", ".", "strings", ")", "{", "try", "{", "ByteString", "[", "]", "result", "=", "new", "ByteString", "[", "strings", ".", "length", "]", ";", "Buffer", "buffer", "=", "new", "Buffer", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "strings", ".", "length", ";", "i", "+", "+", ")", "{", "string", "(", "buffer", ",", "strings", "[", "i", "]", ")", ";", "buffer", ".", "readByte", "(", ")", ";", "result", "[", "i", "]", "=", "buffer", ".", "readByteString", "(", ")", ";", "}", "return", "new", "Options", "(", "strings", ".", "clone", "(", ")", ",", "okio", ".", "Options", ".", "of", "(", "result", ")", ")", ";", "}", "catch", "(", "IOException", "e", ")", "{", "throw", "new", "AssertionError", "(", "e", ")", ";", "}", "}", "</s>"]
["<s>", "private", "static", "void", "string", "(", "BufferedSink", "sink", ",", "String", "value", ")", "throws", "IOException", "{", "String", "[", "]", "replacements", "=", "REPLACEMENT_CHARS", ";", "sink", ".", "writeByte", "(", "<CHAR_LIT:\">", ")", ";", "int", "last", "=", "0", ";", "int", "length", "=", "value", ".", "length", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "length", ";", "i", "+", "+", ")", "{", "char", "c", "=", "value", ".", "charAt", "(", "i", ")", ";", "String", "replacement", ";", "if", "(", "c", "<", "<NUM_LIT>", ")", "{", "replacement", "=", "replacements", "[", "c", "]", ";", "if", "(", "replacement", "=", "=", "null", ")", "{", "continue", ";", "}", "}", "else", "if", "(", "c", "=", "=", "<STR_LIT>", ")", "{", "replacement", "=", "\"", "<STR_LIT:\\\\>", "<STR_LIT>", "\"", ";", "}", "else", "if", "(", "c", "=", "=", "<STR_LIT>", ")", "{", "replacement", "=", "\"", "<STR_LIT:\\\\>", "<STR_LIT>", "\"", ";", "}", "else", "{", "continue", ";", "}", "if", "(", "last", "<", "i", ")", "{", "sink", ".", "writeUtf8", "(", "value", ",", "last", ",", "i", ")", ";", "}", "sink", ".", "writeUtf8", "(", "replacement", ")", ";", "last", "=", "i", "+", "1", ";", "}", "if", "(", "last", "<", "length", ")", "{", "sink", ".", "writeUtf8", "(", "value", ",", "last", ",", "length", ")", ";", "}", "sink", ".", "writeByte", "(", "<CHAR_LIT:\">", ")", ";", "}", "</s>"]
["<s>", "static", "String", "getPath", "(", "int", "stackSize", ",", "int", "[", "]", "stack", ",", "String", "[", "]", "pathNames", ",", "int", "[", "]", "pathIndices", ")", "{", "StringBuilder", "result", "=", "new", "StringBuilder", "(", ")", ".", "append", "(", "<CHAR_LIT>", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "stackSize", ";", "i", "+", "+", ")", "{", "switch", "(", "stack", "[", "i", "]", ")", "{", "case", "EMPTY_ARRAY", ":", "case", "NONEMPTY_ARRAY", ":", "result", ".", "append", "(", "<CHAR_LIT:[>", ")", ".", "append", "(", "pathIndices", "[", "i", "]", ")", ".", "append", "(", "<CHAR_LIT:]>", ")", ";", "break", ";", "case", "EMPTY_OBJECT", ":", "case", "DANGLING_NAME", ":", "case", "NONEMPTY_OBJECT", ":", "result", ".", "append", "(", "<CHAR_LIT:.>", ")", ";", "if", "(", "pathNames", "[", "i", "]", "!", "=", "null", ")", "{", "result", ".", "append", "(", "pathNames", "[", "i", "]", ")", ";", "}", "break", ";", "case", "NONEMPTY_DOCUMENT", ":", "case", "EMPTY_DOCUMENT", ":", "case", "CLOSED", ":", "break", ";", "}", "}", "return", "result", ".", "toString", "(", ")", ";", "}", "</s>"]
["<s>", "private", "int", "doPeek", "(", ")", "throws", "IOException", "{", "int", "peekStack", "=", "scopes", "[", "stackSize", "-", "1", "]", ";", "if", "(", "peekStack", "=", "=", "JsonScope", ".", "EMPTY_ARRAY", ")", "{", "scopes", "[", "stackSize", "-", "1", "]", "=", "JsonScope", ".", "NONEMPTY_ARRAY", ";", "}", "else", "if", "(", "peekStack", "=", "=", "JsonScope", ".", "NONEMPTY_ARRAY", ")", "{", "int", "c", "=", "nextNonWhitespace", "(", "true", ")", ";", "buffer", ".", "readByte", "(", ")", ";", "switch", "(", "c", ")", "{", "case", "<CHAR_LIT:]>", ":", "return", "peeked", "=", "PEEKED_END_ARRAY", ";", "case", "<CHAR_LIT:;>", ":", "checkLenient", "(", ")", ";", "case", "<CHAR_LIT:U+002C>", ":", "break", ";", "default", ":", "throw", "syntaxError", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "}", "else", "if", "(", "peekStack", "=", "=", "JsonScope", ".", "EMPTY_OBJECT", "|", "|", "peekStack", "=", "=", "JsonScope", ".", "NONEMPTY_OBJECT", ")", "{", "scopes", "[", "stackSize", "-", "1", "]", "=", "JsonScope", ".", "DANGLING_NAME", ";", "if", "(", "peekStack", "=", "=", "JsonScope", ".", "NONEMPTY_OBJECT", ")", "{", "int", "c", "=", "nextNonWhitespace", "(", "true", ")", ";", "buffer", ".", "readByte", "(", ")", ";", "switch", "(", "c", ")", "{", "case", "<CHAR_LIT:}>", ":", "return", "peeked", "=", "PEEKED_END_OBJECT", ";", "case", "<CHAR_LIT:;>", ":", "checkLenient", "(", ")", ";", "case", "<CHAR_LIT:U+002C>", ":", "break", ";", "default", ":", "throw", "syntaxError", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "}", "int", "c", "=", "nextNonWhitespace", "(", "true", ")", ";", "switch", "(", "c", ")", "{", "case", "<CHAR_LIT:\">", ":", "buffer", ".", "readByte", "(", ")", ";", "return", "peeked", "=", "PEEKED_DOUBLE_QUOTED_NAME", ";", "case", "<STR_LIT>", ":", "buffer", ".", "readByte", "(", ")", ";", "checkLenient", "(", ")", ";", "return", "peeked", "=", "PEEKED_SINGLE_QUOTED_NAME", ";", "case", "<CHAR_LIT:}>", ":", "if", "(", "peekStack", "!", "=", "JsonScope", ".", "NONEMPTY_OBJECT", ")", "{", "buffer", ".", "readByte", "(", ")", ";", "return", "peeked", "=", "PEEKED_END_OBJECT", ";", "}", "else", "{", "throw", "syntaxError", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "default", ":", "checkLenient", "(", ")", ";", "if", "(", "isLiteral", "(", "(", "char", ")", "c", ")", ")", "{", "return", "peeked", "=", "PEEKED_UNQUOTED_NAME", ";", "}", "else", "{", "throw", "syntaxError", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "}", "}", "else", "if", "(", "peekStack", "=", "=", "JsonScope", ".", "DANGLING_NAME", ")", "{", "scopes", "[", "stackSize", "-", "1", "]", "=", "JsonScope", ".", "NONEMPTY_OBJECT", ";", "int", "c", "=", "nextNonWhitespace", "(", "true", ")", ";", "buffer", ".", "readByte", "(", ")", ";", "switch", "(", "c", ")", "{", "case", "<CHAR_LIT::>", ":", "break", ";", "case", "<CHAR_LIT:=>", ":", "checkLenient", "(", ")", ";", "if", "(", "source", ".", "request", "(", "1", ")", "&", "&", "buffer", ".", "getByte", "(", "0", ")", "=", "=", "<CHAR_LIT:>>", ")", "{", "buffer", ".", "readByte", "(", ")", ";", "}", "break", ";", "default", ":", "throw", "syntaxError", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "}", "else", "if", "(", "peekStack", "=", "=", "JsonScope", ".", "EMPTY_DOCUMENT", ")", "{", "scopes", "[", "stackSize", "-", "1", "]", "=", "JsonScope", ".", "NONEMPTY_DOCUMENT", ";", "}", "else", "if", "(", "peekStack", "=", "=", "JsonScope", ".", "NONEMPTY_DOCUMENT", ")", "{", "int", "c", "=", "nextNonWhitespace", "(", "false", ")", ";", "if", "(", "c", "=", "=", "-", "1", ")", "{", "return", "peeked", "=", "PEEKED_EOF", ";", "}", "else", "{", "checkLenient", "(", ")", ";", "}", "}", "else", "if", "(", "peekStack", "=", "=", "JsonScope", ".", "CLOSED", ")", "{", "throw", "new", "IllegalStateException", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "int", "c", "=", "nextNonWhitespace", "(", "true", ")", ";", "switch", "(", "c", ")", "{", "case", "<CHAR_LIT:]>", ":", "if", "(", "peekStack", "=", "=", "JsonScope", ".", "EMPTY_ARRAY", ")", "{", "buffer", ".", "readByte", "(", ")", ";", "return", "peeked", "=", "PEEKED_END_ARRAY", ";", "}", "case", "<CHAR_LIT:;>", ":", "case", "<CHAR_LIT:U+002C>", ":", "if", "(", "peekStack", "=", "=", "JsonScope", ".", "EMPTY_ARRAY", "|", "|", "peekStack", "=", "=", "JsonScope", ".", "NONEMPTY_ARRAY", ")", "{", "checkLenient", "(", ")", ";", "return", "peeked", "=", "PEEKED_NULL", ";", "}", "else", "{", "throw", "syntaxError", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "case", "<STR_LIT>", ":", "checkLenient", "(", ")", ";", "buffer", ".", "readByte", "(", ")", ";", "return", "peeked", "=", "PEEKED_SINGLE_QUOTED", ";", "case", "<CHAR_LIT:\">", ":", "buffer", ".", "readByte", "(", ")", ";", "return", "peeked", "=", "PEEKED_DOUBLE_QUOTED", ";", "case", "<CHAR_LIT:[>", ":", "buffer", ".", "readByte", "(", ")", ";", "return", "peeked", "=", "PEEKED_BEGIN_ARRAY", ";", "case", "<CHAR_LIT>", ":", "buffer", ".", "readByte", "(", ")", ";", "return", "peeked", "=", "PEEKED_BEGIN_OBJECT", ";", "default", ":", "}", "int", "result", "=", "peekKeyword", "(", ")", ";", "if", "(", "result", "!", "=", "PEEKED_NONE", ")", "{", "return", "result", ";", "}", "result", "=", "peekNumber", "(", ")", ";", "if", "(", "result", "!", "=", "PEEKED_NONE", ")", "{", "return", "result", ";", "}", "if", "(", "!", "isLiteral", "(", "buffer", ".", "getByte", "(", "0", ")", ")", ")", "{", "throw", "syntaxError", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "checkLenient", "(", ")", ";", "return", "peeked", "=", "PEEKED_UNQUOTED", ";", "}", "</s>"]
["<s>", "private", "int", "peekKeyword", "(", ")", "throws", "IOException", "{", "byte", "c", "=", "buffer", ".", "getByte", "(", "0", ")", ";", "String", "keyword", ";", "String", "keywordUpper", ";", "int", "peeking", ";", "if", "(", "c", "=", "=", "<CHAR_LIT>", "|", "|", "c", "=", "=", "<CHAR_LIT>", ")", "{", "keyword", "=", "\"", "<STR_LIT>", "\"", ";", "keywordUpper", "=", "\"", "<STR_LIT>", "\"", ";", "peeking", "=", "PEEKED_TRUE", ";", "}", "else", "if", "(", "c", "=", "=", "<CHAR_LIT>", "|", "|", "c", "=", "=", "<CHAR_LIT>", ")", "{", "keyword", "=", "\"", "<STR_LIT>", "\"", ";", "keywordUpper", "=", "\"", "<STR_LIT>", "\"", ";", "peeking", "=", "PEEKED_FALSE", ";", "}", "else", "if", "(", "c", "=", "=", "<CHAR_LIT>", "|", "|", "c", "=", "=", "<CHAR_LIT>", ")", "{", "keyword", "=", "\"", "<STR_LIT>", "\"", ";", "keywordUpper", "=", "\"", "<STR_LIT>", "\"", ";", "peeking", "=", "PEEKED_NULL", ";", "}", "else", "{", "return", "PEEKED_NONE", ";", "}", "int", "length", "=", "keyword", ".", "length", "(", ")", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "length", ";", "i", "+", "+", ")", "{", "if", "(", "!", "source", ".", "request", "(", "i", "+", "1", ")", ")", "{", "return", "PEEKED_NONE", ";", "}", "c", "=", "buffer", ".", "getByte", "(", "i", ")", ";", "if", "(", "c", "!", "=", "keyword", ".", "charAt", "(", "i", ")", "&", "&", "c", "!", "=", "keywordUpper", ".", "charAt", "(", "i", ")", ")", "{", "return", "PEEKED_NONE", ";", "}", "}", "if", "(", "source", ".", "request", "(", "length", "+", "1", ")", "&", "&", "isLiteral", "(", "buffer", ".", "getByte", "(", "length", ")", ")", ")", "{", "return", "PEEKED_NONE", ";", "}", "buffer", ".", "skip", "(", "length", ")", ";", "return", "peeked", "=", "peeking", ";", "}", "</s>"]
["<s>", "private", "int", "peekNumber", "(", ")", "throws", "IOException", "{", "long", "value", "=", "0", ";", "boolean", "negative", "=", "false", ";", "boolean", "fitsInLong", "=", "true", ";", "int", "last", "=", "NUMBER_CHAR_NONE", ";", "int", "i", "=", "0", ";", "charactersOfNumber", ":", "for", "(", ";", "true", ";", "i", "+", "+", ")", "{", "if", "(", "!", "source", ".", "request", "(", "i", "+", "1", ")", ")", "{", "break", ";", "}", "byte", "c", "=", "buffer", ".", "getByte", "(", "i", ")", ";", "switch", "(", "c", ")", "{", "case", "<CHAR_LIT:->", ":", "if", "(", "last", "=", "=", "NUMBER_CHAR_NONE", ")", "{", "negative", "=", "true", ";", "last", "=", "NUMBER_CHAR_SIGN", ";", "continue", ";", "}", "else", "if", "(", "last", "=", "=", "NUMBER_CHAR_EXP_E", ")", "{", "last", "=", "NUMBER_CHAR_EXP_SIGN", ";", "continue", ";", "}", "return", "PEEKED_NONE", ";", "case", "<CHAR_LIT>", ":", "if", "(", "last", "=", "=", "NUMBER_CHAR_EXP_E", ")", "{", "last", "=", "NUMBER_CHAR_EXP_SIGN", ";", "continue", ";", "}", "return", "PEEKED_NONE", ";", "case", "<CHAR_LIT:e>", ":", "case", "<CHAR_LIT>", ":", "if", "(", "last", "=", "=", "NUMBER_CHAR_DIGIT", "|", "|", "last", "=", "=", "NUMBER_CHAR_FRACTION_DIGIT", ")", "{", "last", "=", "NUMBER_CHAR_EXP_E", ";", "continue", ";", "}", "return", "PEEKED_NONE", ";", "case", "<CHAR_LIT:.>", ":", "if", "(", "last", "=", "=", "NUMBER_CHAR_DIGIT", ")", "{", "last", "=", "NUMBER_CHAR_DECIMAL", ";", "continue", ";", "}", "return", "PEEKED_NONE", ";", "default", ":", "if", "(", "c", "<", "<CHAR_LIT:0>", "|", "|", "c", ">", "<CHAR_LIT:9>", ")", "{", "if", "(", "!", "isLiteral", "(", "c", ")", ")", "{", "break", "charactersOfNumber", ";", "}", "return", "PEEKED_NONE", ";", "}", "if", "(", "last", "=", "=", "NUMBER_CHAR_SIGN", "|", "|", "last", "=", "=", "NUMBER_CHAR_NONE", ")", "{", "value", "=", "-", "(", "c", "-", "<CHAR_LIT:0>", ")", ";", "last", "=", "NUMBER_CHAR_DIGIT", ";", "}", "else", "if", "(", "last", "=", "=", "NUMBER_CHAR_DIGIT", ")", "{", "if", "(", "value", "=", "=", "0", ")", "{", "return", "PEEKED_NONE", ";", "}", "long", "newValue", "=", "value", "*", "<NUM_LIT:10>", "-", "(", "c", "-", "<CHAR_LIT:0>", ")", ";", "fitsInLong", "&", "=", "value", ">", "MIN_INCOMPLETE_INTEGER", "|", "|", "(", "value", "=", "=", "MIN_INCOMPLETE_INTEGER", "&", "&", "newValue", "<", "value", ")", ";", "value", "=", "newValue", ";", "}", "else", "if", "(", "last", "=", "=", "NUMBER_CHAR_DECIMAL", ")", "{", "last", "=", "NUMBER_CHAR_FRACTION_DIGIT", ";", "}", "else", "if", "(", "last", "=", "=", "NUMBER_CHAR_EXP_E", "|", "|", "last", "=", "=", "NUMBER_CHAR_EXP_SIGN", ")", "{", "last", "=", "NUMBER_CHAR_EXP_DIGIT", ";", "}", "}", "}", "if", "(", "last", "=", "=", "NUMBER_CHAR_DIGIT", "&", "&", "fitsInLong", "&", "&", "(", "value", "!", "=", "Long", ".", "MIN_VALUE", "|", "|", "negative", ")", "&", "&", "(", "value", "!", "=", "0", "|", "|", "!", "negative", ")", ")", "{", "peekedLong", "=", "negative", "?", "value", ":", "-", "value", ";", "buffer", ".", "skip", "(", "i", ")", ";", "return", "peeked", "=", "PEEKED_LONG", ";", "}", "else", "if", "(", "last", "=", "=", "NUMBER_CHAR_DIGIT", "|", "|", "last", "=", "=", "NUMBER_CHAR_FRACTION_DIGIT", "|", "|", "last", "=", "=", "NUMBER_CHAR_EXP_DIGIT", ")", "{", "peekedNumberLength", "=", "i", ";", "return", "peeked", "=", "PEEKED_NUMBER", ";", "}", "else", "{", "return", "PEEKED_NONE", ";", "}", "}", "</s>"]
["<s>", "private", "boolean", "isLiteral", "(", "int", "c", ")", "throws", "IOException", "{", "switch", "(", "c", ")", "{", "case", "<CHAR_LIT:/>", ":", "case", "<STR_LIT:\\\\>", ":", "case", "<CHAR_LIT:;>", ":", "case", "<CHAR_LIT>", ":", "case", "<CHAR_LIT:=>", ":", "checkLenient", "(", ")", ";", "case", "<CHAR_LIT>", ":", "case", "<CHAR_LIT:}>", ":", "case", "<CHAR_LIT:[>", ":", "case", "<CHAR_LIT:]>", ":", "case", "<CHAR_LIT::>", ":", "case", "<CHAR_LIT:U+002C>", ":", "case", "<CHAR_LIT>", ":", "case", "<STR_LIT:\\t>", ":", "case", "<STR_LIT>", ":", "case", "<STR_LIT>", ":", "case", "<STR_LIT:\\n>", ":", "return", "false", ";", "default", ":", "return", "true", ";", "}", "}", "</s>"]
["<s>", "private", "int", "findName", "(", "String", "name", ",", "Options", "options", ")", "{", "for", "(", "int", "i", "=", "0", ",", "size", "=", "options", ".", "strings", ".", "length", ";", "i", "<", "size", ";", "i", "+", "+", ")", "{", "if", "(", "name", ".", "equals", "(", "options", ".", "strings", "[", "i", "]", ")", ")", "{", "peeked", "=", "PEEKED_NONE", ";", "pathNames", "[", "stackSize", "-", "1", "]", "=", "name", ";", "return", "i", ";", "}", "}", "return", "-", "1", ";", "}", "</s>"]
["<s>", "private", "int", "findString", "(", "String", "string", ",", "Options", "options", ")", "{", "for", "(", "int", "i", "=", "0", ",", "size", "=", "options", ".", "strings", ".", "length", ";", "i", "<", "size", ";", "i", "+", "+", ")", "{", "if", "(", "string", ".", "equals", "(", "options", ".", "strings", "[", "i", "]", ")", ")", "{", "peeked", "=", "PEEKED_NONE", ";", "pathIndices", "[", "stackSize", "-", "1", "]", "+", "+", ";", "return", "i", ";", "}", "}", "return", "-", "1", ";", "}", "</s>"]
["<s>", "private", "String", "nextQuotedValue", "(", "ByteString", "runTerminator", ")", "throws", "IOException", "{", "StringBuilder", "builder", "=", "null", ";", "while", "(", "true", ")", "{", "long", "index", "=", "source", ".", "indexOfElement", "(", "runTerminator", ")", ";", "if", "(", "index", "=", "=", "-", "<NUM_LIT>", ")", "throw", "syntaxError", "(", "\"", "<STR_LIT>", "\"", ")", ";", "if", "(", "buffer", ".", "getByte", "(", "index", ")", "=", "=", "<STR_LIT:\\\\>", ")", "{", "if", "(", "builder", "=", "=", "null", ")", "builder", "=", "new", "StringBuilder", "(", ")", ";", "builder", ".", "append", "(", "buffer", ".", "readUtf8", "(", "index", ")", ")", ";", "buffer", ".", "readByte", "(", ")", ";", "builder", ".", "append", "(", "readEscapeCharacter", "(", ")", ")", ";", "continue", ";", "}", "if", "(", "builder", "=", "=", "null", ")", "{", "String", "result", "=", "buffer", ".", "readUtf8", "(", "index", ")", ";", "buffer", ".", "readByte", "(", ")", ";", "return", "result", ";", "}", "else", "{", "builder", ".", "append", "(", "buffer", ".", "readUtf8", "(", "index", ")", ")", ";", "buffer", ".", "readByte", "(", ")", ";", "return", "builder", ".", "toString", "(", ")", ";", "}", "}", "}", "</s>"]
["<s>", "private", "String", "nextUnquotedValue", "(", ")", "throws", "IOException", "{", "long", "i", "=", "source", ".", "indexOfElement", "(", "UNQUOTED_STRING_TERMINALS", ")", ";", "return", "i", "!", "=", "-", "1", "?", "buffer", ".", "readUtf8", "(", "i", ")", ":", "buffer", ".", "readUtf8", "(", ")", ";", "}", "</s>"]
["<s>", "private", "void", "skipQuotedValue", "(", "ByteString", "runTerminator", ")", "throws", "IOException", "{", "while", "(", "true", ")", "{", "long", "index", "=", "source", ".", "indexOfElement", "(", "runTerminator", ")", ";", "if", "(", "index", "=", "=", "-", "<NUM_LIT>", ")", "throw", "syntaxError", "(", "\"", "<STR_LIT>", "\"", ")", ";", "if", "(", "buffer", ".", "getByte", "(", "index", ")", "=", "=", "<STR_LIT:\\\\>", ")", "{", "buffer", ".", "skip", "(", "index", "+", "1", ")", ";", "readEscapeCharacter", "(", ")", ";", "}", "else", "{", "buffer", ".", "skip", "(", "index", "+", "1", ")", ";", "return", ";", "}", "}", "}", "</s>"]
["<s>", "private", "void", "skipUnquotedValue", "(", ")", "throws", "IOException", "{", "long", "i", "=", "source", ".", "indexOfElement", "(", "UNQUOTED_STRING_TERMINALS", ")", ";", "buffer", ".", "skip", "(", "i", "!", "=", "-", "<NUM_LIT>", "?", "i", ":", "buffer", ".", "size", "(", ")", ")", ";", "}", "</s>"]
["<s>", "private", "int", "nextNonWhitespace", "(", "boolean", "throwOnEof", ")", "throws", "IOException", "{", "int", "p", "=", "0", ";", "while", "(", "source", ".", "request", "(", "p", "+", "1", ")", ")", "{", "int", "c", "=", "buffer", ".", "getByte", "(", "p", "+", "+", ")", ";", "if", "(", "c", "=", "=", "<STR_LIT:\\n>", "|", "|", "c", "=", "=", "<CHAR_LIT>", "|", "|", "c", "=", "=", "<STR_LIT>", "|", "|", "c", "=", "=", "<STR_LIT:\\t>", ")", "{", "continue", ";", "}", "buffer", ".", "skip", "(", "p", "-", "1", ")", ";", "if", "(", "c", "=", "=", "<CHAR_LIT:/>", ")", "{", "if", "(", "!", "source", ".", "request", "(", "<NUM_LIT:2>", ")", ")", "{", "return", "c", ";", "}", "checkLenient", "(", ")", ";", "byte", "peek", "=", "buffer", ".", "getByte", "(", "1", ")", ";", "switch", "(", "peek", ")", "{", "case", "<CHAR_LIT>", ":", "buffer", ".", "readByte", "(", ")", ";", "buffer", ".", "readByte", "(", ")", ";", "if", "(", "!", "skipToEndOfBlockComment", "(", ")", ")", "{", "throw", "syntaxError", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "p", "=", "0", ";", "continue", ";", "case", "<CHAR_LIT:/>", ":", "buffer", ".", "readByte", "(", ")", ";", "buffer", ".", "readByte", "(", ")", ";", "skipToEndOfLine", "(", ")", ";", "p", "=", "0", ";", "continue", ";", "default", ":", "return", "c", ";", "}", "}", "else", "if", "(", "c", "=", "=", "<CHAR_LIT>", ")", "{", "checkLenient", "(", ")", ";", "skipToEndOfLine", "(", ")", ";", "p", "=", "0", ";", "}", "else", "{", "return", "c", ";", "}", "}", "if", "(", "throwOnEof", ")", "{", "throw", "new", "EOFException", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "else", "{", "return", "-", "1", ";", "}", "}", "</s>"]
["<s>", "private", "void", "checkLenient", "(", ")", "throws", "IOException", "{", "if", "(", "!", "lenient", ")", "{", "throw", "syntaxError", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "}", "</s>"]
["<s>", "private", "void", "skipToEndOfLine", "(", ")", "throws", "IOException", "{", "long", "index", "=", "source", ".", "indexOfElement", "(", "LINEFEED_OR_CARRIAGE_RETURN", ")", ";", "buffer", ".", "skip", "(", "index", "!", "=", "-", "1", "?", "index", "+", "1", ":", "buffer", ".", "size", "(", ")", ")", ";", "}", "</s>"]
["<s>", "private", "boolean", "skipToEndOfBlockComment", "(", ")", "throws", "IOException", "{", "long", "index", "=", "source", ".", "indexOf", "(", "CLOSING_BLOCK_COMMENT", ")", ";", "boolean", "found", "=", "index", "!", "=", "-", "1", ";", "buffer", ".", "skip", "(", "found", "?", "index", "+", "CLOSING_BLOCK_COMMENT", ".", "size", "(", ")", ":", "buffer", ".", "size", "(", ")", ")", ";", "return", "found", ";", "}", "</s>"]
["<s>", "private", "char", "readEscapeCharacter", "(", ")", "throws", "IOException", "{", "if", "(", "!", "source", ".", "request", "(", "1", ")", ")", "{", "throw", "syntaxError", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "byte", "escaped", "=", "buffer", ".", "readByte", "(", ")", ";", "switch", "(", "escaped", ")", "{", "case", "<CHAR_LIT>", ":", "if", "(", "!", "source", ".", "request", "(", "<NUM_LIT:4>", ")", ")", "{", "throw", "new", "EOFException", "(", "\"", "<STR_LIT>", "\"", "+", "getPath", "(", ")", ")", ";", "}", "char", "result", "=", "0", ";", "for", "(", "int", "i", "=", "0", ",", "end", "=", "i", "+", "<NUM_LIT:4>", ";", "i", "<", "end", ";", "i", "+", "+", ")", "{", "byte", "c", "=", "buffer", ".", "getByte", "(", "i", ")", ";", "result", "<", "<", "=", "<NUM_LIT:4>", ";", "if", "(", "c", ">", "=", "<CHAR_LIT:0>", "&", "&", "c", "<", "=", "<CHAR_LIT:9>", ")", "{", "result", "+", "=", "(", "c", "-", "<CHAR_LIT:0>", ")", ";", "}", "else", "if", "(", "c", ">", "=", "<CHAR_LIT:a>", "&", "&", "c", "<", "=", "<CHAR_LIT>", ")", "{", "result", "+", "=", "(", "c", "-", "<CHAR_LIT:a>", "+", "<NUM_LIT:10>", ")", ";", "}", "else", "if", "(", "c", ">", "=", "<CHAR_LIT:A>", "&", "&", "c", "<", "=", "<CHAR_LIT>", ")", "{", "result", "+", "=", "(", "c", "-", "<CHAR_LIT:A>", "+", "<NUM_LIT:10>", ")", ";", "}", "else", "{", "throw", "syntaxError", "(", "\"", "<STR_LIT:\\\\>", "<STR_LIT>", "\"", "+", "buffer", ".", "readUtf8", "(", "<NUM_LIT:4>", ")", ")", ";", "}", "}", "buffer", ".", "skip", "(", "<NUM_LIT:4>", ")", ";", "return", "result", ";", "case", "<CHAR_LIT>", ":", "return", "<STR_LIT:\\t>", ";", "case", "<CHAR_LIT:b>", ":", "return", "<STR_LIT>", ";", "case", "<CHAR_LIT>", ":", "return", "<STR_LIT:\\n>", ";", "case", "<CHAR_LIT>", ":", "return", "<STR_LIT>", ";", "case", "<CHAR_LIT>", ":", "return", "<STR_LIT>", ";", "case", "<STR_LIT:\\n>", ":", "case", "<STR_LIT>", ":", "case", "<CHAR_LIT:\">", ":", "case", "<STR_LIT:\\\\>", ":", "case", "<CHAR_LIT:/>", ":", "return", "(", "char", ")", "escaped", ";", "default", ":", "if", "(", "!", "lenient", ")", "throw", "syntaxError", "(", "\"", "<STR_LIT>", "<STR_LIT:\\\\>", "\"", "+", "(", "char", ")", "escaped", ")", ";", "return", "(", "char", ")", "escaped", ";", "}", "}", "</s>"]
["<s>", "public", "int", "compare", "(", "Comparable", "a", ",", "Comparable", "b", ")", "{", "return", "a", ".", "compareTo", "(", "b", ")", ";", "}", "</s>"]
["<s>", "Node", "<", "K", ",", "V", ">", "find", "(", "K", "key", ",", "boolean", "create", ")", "{", "Comparator", "<", "?", "super", "K", ">", "comparator", "=", "this", ".", "comparator", ";", "Node", "<", "K", ",", "V", ">", "[", "]", "table", "=", "this", ".", "table", ";", "int", "hash", "=", "secondaryHash", "(", "key", ".", "hashCode", "(", ")", ")", ";", "int", "index", "=", "hash", "&", "(", "table", ".", "length", "-", "1", ")", ";", "Node", "<", "K", ",", "V", ">", "nearest", "=", "table", "[", "index", "]", ";", "int", "comparison", "=", "0", ";", "if", "(", "nearest", "!", "=", "null", ")", "{", "@", "SuppressWarnings", "(", "\"", "<STR_LIT>", "\"", ")", "Comparable", "<", "Object", ">", "comparableKey", "=", "(", "comparator", "=", "=", "NATURAL_ORDER", ")", "?", "(", "Comparable", "<", "Object", ">", ")", "key", ":", "null", ";", "while", "(", "true", ")", "{", "comparison", "=", "(", "comparableKey", "!", "=", "null", ")", "?", "comparableKey", ".", "compareTo", "(", "nearest", ".", "key", ")", ":", "comparator", ".", "compare", "(", "key", ",", "nearest", ".", "key", ")", ";", "if", "(", "comparison", "=", "=", "0", ")", "{", "return", "nearest", ";", "}", "Node", "<", "K", ",", "V", ">", "child", "=", "(", "comparison", "<", "0", ")", "?", "nearest", ".", "left", ":", "nearest", ".", "right", ";", "if", "(", "child", "=", "=", "null", ")", "{", "break", ";", "}", "nearest", "=", "child", ";", "}", "}", "if", "(", "!", "create", ")", "{", "return", "null", ";", "}", "Node", "<", "K", ",", "V", ">", "header", "=", "this", ".", "header", ";", "Node", "<", "K", ",", "V", ">", "created", ";", "if", "(", "nearest", "=", "=", "null", ")", "{", "if", "(", "comparator", "=", "=", "NATURAL_ORDER", "&", "&", "!", "(", "key", "instanceof", "Comparable", ")", ")", "{", "throw", "new", "ClassCastException", "(", "key", ".", "getClass", "(", ")", ".", "getName", "(", ")", "+", "\"", "<STR_LIT>", "\"", ")", ";", "}", "created", "=", "new", "Node", "<", ">", "(", "nearest", ",", "key", ",", "hash", ",", "header", ",", "header", ".", "prev", ")", ";", "table", "[", "index", "]", "=", "created", ";", "}", "else", "{", "created", "=", "new", "Node", "<", ">", "(", "nearest", ",", "key", ",", "hash", ",", "header", ",", "header", ".", "prev", ")", ";", "if", "(", "comparison", "<", "0", ")", "{", "nearest", ".", "left", "=", "created", ";", "}", "else", "{", "nearest", ".", "right", "=", "created", ";", "}", "rebalance", "(", "nearest", ",", "true", ")", ";", "}", "if", "(", "size", "+", "+", ">", "threshold", ")", "{", "doubleCapacity", "(", ")", ";", "}", "modCount", "+", "+", ";", "return", "created", ";", "}", "</s>"]
["<s>", "@", "SuppressWarnings", "(", "\"", "<STR_LIT>", "\"", ")", "Node", "<", "K", ",", "V", ">", "findByObject", "(", "Object", "key", ")", "{", "try", "{", "return", "key", "!", "=", "null", "?", "find", "(", "(", "K", ")", "key", ",", "false", ")", ":", "null", ";", "}", "catch", "(", "ClassCastException", "e", ")", "{", "return", "null", ";", "}", "}", "</s>"]
["<s>", "Node", "<", "K", ",", "V", ">", "findByEntry", "(", "Entry", "<", "?", ",", "?", ">", "entry", ")", "{", "Node", "<", "K", ",", "V", ">", "mine", "=", "findByObject", "(", "entry", ".", "getKey", "(", ")", ")", ";", "boolean", "valuesEqual", "=", "mine", "!", "=", "null", "&", "&", "equal", "(", "mine", ".", "value", ",", "entry", ".", "getValue", "(", ")", ")", ";", "return", "valuesEqual", "?", "mine", ":", "null", ";", "}", "</s>"]
["<s>", "private", "boolean", "equal", "(", "Object", "a", ",", "Object", "b", ")", "{", "return", "a", "=", "=", "b", "|", "|", "(", "a", "!", "=", "null", "&", "&", "a", ".", "equals", "(", "b", ")", ")", ";", "}", "</s>"]
["<s>", "private", "static", "int", "secondaryHash", "(", "int", "h", ")", "{", "h", "^", "=", "(", "h", ">", ">", ">", "<NUM_LIT:20>", ")", "^", "(", "h", ">", ">", ">", "<NUM_LIT:12>", ")", ";", "return", "h", "^", "(", "h", ">", ">", ">", "<NUM_LIT:7>", ")", "^", "(", "h", ">", ">", ">", "<NUM_LIT:4>", ")", ";", "}", "</s>"]
["<s>", "void", "removeInternal", "(", "Node", "<", "K", ",", "V", ">", "node", ",", "boolean", "unlink", ")", "{", "if", "(", "unlink", ")", "{", "node", ".", "prev", ".", "next", "=", "node", ".", "next", ";", "node", ".", "next", ".", "prev", "=", "node", ".", "prev", ";", "node", ".", "next", "=", "node", ".", "prev", "=", "null", ";", "}", "Node", "<", "K", ",", "V", ">", "left", "=", "node", ".", "left", ";", "Node", "<", "K", ",", "V", ">", "right", "=", "node", ".", "right", ";", "Node", "<", "K", ",", "V", ">", "originalParent", "=", "node", ".", "parent", ";", "if", "(", "left", "!", "=", "null", "&", "&", "right", "!", "=", "null", ")", "{", "Node", "<", "K", ",", "V", ">", "adjacent", "=", "(", "left", ".", "height", ">", "right", ".", "height", ")", "?", "left", ".", "last", "(", ")", ":", "right", ".", "first", "(", ")", ";", "removeInternal", "(", "adjacent", ",", "false", ")", ";", "int", "leftHeight", "=", "0", ";", "left", "=", "node", ".", "left", ";", "if", "(", "left", "!", "=", "null", ")", "{", "leftHeight", "=", "left", ".", "height", ";", "adjacent", ".", "left", "=", "left", ";", "left", ".", "parent", "=", "adjacent", ";", "node", ".", "left", "=", "null", ";", "}", "int", "rightHeight", "=", "0", ";", "right", "=", "node", ".", "right", ";", "if", "(", "right", "!", "=", "null", ")", "{", "rightHeight", "=", "right", ".", "height", ";", "adjacent", ".", "right", "=", "right", ";", "right", ".", "parent", "=", "adjacent", ";", "node", ".", "right", "=", "null", ";", "}", "adjacent", ".", "height", "=", "Math", ".", "max", "(", "leftHeight", ",", "rightHeight", ")", "+", "1", ";", "replaceInParent", "(", "node", ",", "adjacent", ")", ";", "return", ";", "}", "else", "if", "(", "left", "!", "=", "null", ")", "{", "replaceInParent", "(", "node", ",", "left", ")", ";", "node", ".", "left", "=", "null", ";", "}", "else", "if", "(", "right", "!", "=", "null", ")", "{", "replaceInParent", "(", "node", ",", "right", ")", ";", "node", ".", "right", "=", "null", ";", "}", "else", "{", "replaceInParent", "(", "node", ",", "null", ")", ";", "}", "rebalance", "(", "originalParent", ",", "false", ")", ";", "size", "-", "-", ";", "modCount", "+", "+", ";", "}", "</s>"]
["<s>", "Node", "<", "K", ",", "V", ">", "removeInternalByKey", "(", "Object", "key", ")", "{", "Node", "<", "K", ",", "V", ">", "node", "=", "findByObject", "(", "key", ")", ";", "if", "(", "node", "!", "=", "null", ")", "{", "removeInternal", "(", "node", ",", "true", ")", ";", "}", "return", "node", ";", "}", "</s>"]
["<s>", "private", "void", "replaceInParent", "(", "Node", "<", "K", ",", "V", ">", "node", ",", "Node", "<", "K", ",", "V", ">", "replacement", ")", "{", "Node", "<", "K", ",", "V", ">", "parent", "=", "node", ".", "parent", ";", "node", ".", "parent", "=", "null", ";", "if", "(", "replacement", "!", "=", "null", ")", "{", "replacement", ".", "parent", "=", "parent", ";", "}", "if", "(", "parent", "!", "=", "null", ")", "{", "if", "(", "parent", ".", "left", "=", "=", "node", ")", "{", "parent", ".", "left", "=", "replacement", ";", "}", "else", "{", "assert", "(", "parent", ".", "right", "=", "=", "node", ")", ";", "parent", ".", "right", "=", "replacement", ";", "}", "}", "else", "{", "int", "index", "=", "node", ".", "hash", "&", "(", "table", ".", "length", "-", "1", ")", ";", "table", "[", "index", "]", "=", "replacement", ";", "}", "}", "</s>"]
["<s>", "private", "void", "rebalance", "(", "Node", "<", "K", ",", "V", ">", "unbalanced", ",", "boolean", "insert", ")", "{", "for", "(", "Node", "<", "K", ",", "V", ">", "node", "=", "unbalanced", ";", "node", "!", "=", "null", ";", "node", "=", "node", ".", "parent", ")", "{", "Node", "<", "K", ",", "V", ">", "left", "=", "node", ".", "left", ";", "Node", "<", "K", ",", "V", ">", "right", "=", "node", ".", "right", ";", "int", "leftHeight", "=", "left", "!", "=", "null", "?", "left", ".", "height", ":", "0", ";", "int", "rightHeight", "=", "right", "!", "=", "null", "?", "right", ".", "height", ":", "0", ";", "int", "delta", "=", "leftHeight", "-", "rightHeight", ";", "if", "(", "delta", "=", "=", "-", "<NUM_LIT:2>", ")", "{", "Node", "<", "K", ",", "V", ">", "rightLeft", "=", "right", ".", "left", ";", "Node", "<", "K", ",", "V", ">", "rightRight", "=", "right", ".", "right", ";", "int", "rightRightHeight", "=", "rightRight", "!", "=", "null", "?", "rightRight", ".", "height", ":", "0", ";", "int", "rightLeftHeight", "=", "rightLeft", "!", "=", "null", "?", "rightLeft", ".", "height", ":", "0", ";", "int", "rightDelta", "=", "rightLeftHeight", "-", "rightRightHeight", ";", "if", "(", "rightDelta", "=", "=", "-", "1", "|", "|", "(", "rightDelta", "=", "=", "0", "&", "&", "!", "insert", ")", ")", "{", "rotateLeft", "(", "node", ")", ";", "}", "else", "{", "assert", "(", "rightDelta", "=", "=", "1", ")", ";", "rotateRight", "(", "right", ")", ";", "rotateLeft", "(", "node", ")", ";", "}", "if", "(", "insert", ")", "{", "break", ";", "}", "}", "else", "if", "(", "delta", "=", "=", "<NUM_LIT:2>", ")", "{", "Node", "<", "K", ",", "V", ">", "leftLeft", "=", "left", ".", "left", ";", "Node", "<", "K", ",", "V", ">", "leftRight", "=", "left", ".", "right", ";", "int", "leftRightHeight", "=", "leftRight", "!", "=", "null", "?", "leftRight", ".", "height", ":", "0", ";", "int", "leftLeftHeight", "=", "leftLeft", "!", "=", "null", "?", "leftLeft", ".", "height", ":", "0", ";", "int", "leftDelta", "=", "leftLeftHeight", "-", "leftRightHeight", ";", "if", "(", "leftDelta", "=", "=", "1", "|", "|", "(", "leftDelta", "=", "=", "0", "&", "&", "!", "insert", ")", ")", "{", "rotateRight", "(", "node", ")", ";", "}", "else", "{", "assert", "(", "leftDelta", "=", "=", "-", "1", ")", ";", "rotateLeft", "(", "left", ")", ";", "rotateRight", "(", "node", ")", ";", "}", "if", "(", "insert", ")", "{", "break", ";", "}", "}", "else", "if", "(", "delta", "=", "=", "0", ")", "{", "node", ".", "height", "=", "leftHeight", "+", "1", ";", "if", "(", "insert", ")", "{", "break", ";", "}", "}", "else", "{", "assert", "(", "delta", "=", "=", "-", "1", "|", "|", "delta", "=", "=", "1", ")", ";", "node", ".", "height", "=", "Math", ".", "max", "(", "leftHeight", ",", "rightHeight", ")", "+", "1", ";", "if", "(", "!", "insert", ")", "{", "break", ";", "}", "}", "}", "}", "</s>"]
["<s>", "private", "void", "rotateLeft", "(", "Node", "<", "K", ",", "V", ">", "root", ")", "{", "Node", "<", "K", ",", "V", ">", "left", "=", "root", ".", "left", ";", "Node", "<", "K", ",", "V", ">", "pivot", "=", "root", ".", "right", ";", "Node", "<", "K", ",", "V", ">", "pivotLeft", "=", "pivot", ".", "left", ";", "Node", "<", "K", ",", "V", ">", "pivotRight", "=", "pivot", ".", "right", ";", "root", ".", "right", "=", "pivotLeft", ";", "if", "(", "pivotLeft", "!", "=", "null", ")", "{", "pivotLeft", ".", "parent", "=", "root", ";", "}", "replaceInParent", "(", "root", ",", "pivot", ")", ";", "pivot", ".", "left", "=", "root", ";", "root", ".", "parent", "=", "pivot", ";", "root", ".", "height", "=", "Math", ".", "max", "(", "left", "!", "=", "null", "?", "left", ".", "height", ":", "0", ",", "pivotLeft", "!", "=", "null", "?", "pivotLeft", ".", "height", ":", "0", ")", "+", "1", ";", "pivot", ".", "height", "=", "Math", ".", "max", "(", "root", ".", "height", ",", "pivotRight", "!", "=", "null", "?", "pivotRight", ".", "height", ":", "0", ")", "+", "1", ";", "}", "</s>"]
["<s>", "private", "void", "rotateRight", "(", "Node", "<", "K", ",", "V", ">", "root", ")", "{", "Node", "<", "K", ",", "V", ">", "pivot", "=", "root", ".", "left", ";", "Node", "<", "K", ",", "V", ">", "right", "=", "root", ".", "right", ";", "Node", "<", "K", ",", "V", ">", "pivotLeft", "=", "pivot", ".", "left", ";", "Node", "<", "K", ",", "V", ">", "pivotRight", "=", "pivot", ".", "right", ";", "root", ".", "left", "=", "pivotRight", ";", "if", "(", "pivotRight", "!", "=", "null", ")", "{", "pivotRight", ".", "parent", "=", "root", ";", "}", "replaceInParent", "(", "root", ",", "pivot", ")", ";", "pivot", ".", "right", "=", "root", ";", "root", ".", "parent", "=", "pivot", ";", "root", ".", "height", "=", "Math", ".", "max", "(", "right", "!", "=", "null", "?", "right", ".", "height", ":", "0", ",", "pivotRight", "!", "=", "null", "?", "pivotRight", ".", "height", ":", "0", ")", "+", "1", ";", "pivot", ".", "height", "=", "Math", ".", "max", "(", "root", ".", "height", ",", "pivotLeft", "!", "=", "null", "?", "pivotLeft", ".", "height", ":", "0", ")", "+", "1", ";", "}", "</s>"]
["<s>", "public", "K", "getKey", "(", ")", "{", "return", "key", ";", "}", "</s>"]
["<s>", "public", "V", "getValue", "(", ")", "{", "return", "value", ";", "}", "</s>"]
["<s>", "public", "V", "setValue", "(", "V", "value", ")", "{", "V", "oldValue", "=", "this", ".", "value", ";", "this", ".", "value", "=", "value", ";", "return", "oldValue", ";", "}", "</s>"]
["<s>", "public", "Node", "<", "K", ",", "V", ">", "first", "(", ")", "{", "Node", "<", "K", ",", "V", ">", "node", "=", "this", ";", "Node", "<", "K", ",", "V", ">", "child", "=", "node", ".", "left", ";", "while", "(", "child", "!", "=", "null", ")", "{", "node", "=", "child", ";", "child", "=", "node", ".", "left", ";", "}", "return", "node", ";", "}", "</s>"]
["<s>", "public", "Node", "<", "K", ",", "V", ">", "last", "(", ")", "{", "Node", "<", "K", ",", "V", ">", "node", "=", "this", ";", "Node", "<", "K", ",", "V", ">", "child", "=", "node", ".", "right", ";", "while", "(", "child", "!", "=", "null", ")", "{", "node", "=", "child", ";", "child", "=", "node", ".", "right", ";", "}", "return", "node", ";", "}", "</s>"]
["<s>", "private", "void", "doubleCapacity", "(", ")", "{", "table", "=", "doubleCapacity", "(", "table", ")", ";", "threshold", "=", "(", "table", ".", "length", "/", "<NUM_LIT:2>", ")", "+", "(", "table", ".", "length", "/", "<NUM_LIT:4>", ")", ";", "}", "</s>"]
["<s>", "static", "<", "K", ",", "V", ">", "Node", "<", "K", ",", "V", ">", "[", "]", "doubleCapacity", "(", "Node", "<", "K", ",", "V", ">", "[", "]", "oldTable", ")", "{", "int", "oldCapacity", "=", "oldTable", ".", "length", ";", "@", "SuppressWarnings", "(", "\"", "<STR_LIT>", "\"", ")", "Node", "<", "K", ",", "V", ">", "[", "]", "newTable", "=", "new", "Node", "[", "oldCapacity", "*", "<NUM_LIT:2>", "]", ";", "AvlIterator", "<", "K", ",", "V", ">", "iterator", "=", "new", "AvlIterator", "<", ">", "(", ")", ";", "AvlBuilder", "<", "K", ",", "V", ">", "leftBuilder", "=", "new", "AvlBuilder", "<", ">", "(", ")", ";", "AvlBuilder", "<", "K", ",", "V", ">", "rightBuilder", "=", "new", "AvlBuilder", "<", ">", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "oldCapacity", ";", "i", "+", "+", ")", "{", "Node", "<", "K", ",", "V", ">", "root", "=", "oldTable", "[", "i", "]", ";", "if", "(", "root", "=", "=", "null", ")", "{", "continue", ";", "}", "iterator", ".", "reset", "(", "root", ")", ";", "int", "leftSize", "=", "0", ";", "int", "rightSize", "=", "0", ";", "for", "(", "Node", "<", "K", ",", "V", ">", "node", ";", "(", "node", "=", "iterator", ".", "next", "(", ")", ")", "!", "=", "null", ";", ")", "{", "if", "(", "(", "node", ".", "hash", "&", "oldCapacity", ")", "=", "=", "0", ")", "{", "leftSize", "+", "+", ";", "}", "else", "{", "rightSize", "+", "+", ";", "}", "}", "leftBuilder", ".", "reset", "(", "leftSize", ")", ";", "rightBuilder", ".", "reset", "(", "rightSize", ")", ";", "iterator", ".", "reset", "(", "root", ")", ";", "for", "(", "Node", "<", "K", ",", "V", ">", "node", ";", "(", "node", "=", "iterator", ".", "next", "(", ")", ")", "!", "=", "null", ";", ")", "{", "if", "(", "(", "node", ".", "hash", "&", "oldCapacity", ")", "=", "=", "0", ")", "{", "leftBuilder", ".", "add", "(", "node", ")", ";", "}", "else", "{", "rightBuilder", ".", "add", "(", "node", ")", ";", "}", "}", "newTable", "[", "i", "]", "=", "leftSize", ">", "0", "?", "leftBuilder", ".", "root", "(", ")", ":", "null", ";", "newTable", "[", "i", "+", "oldCapacity", "]", "=", "rightSize", ">", "0", "?", "rightBuilder", ".", "root", "(", ")", ":", "null", ";", "}", "return", "newTable", ";", "}", "</s>"]
["<s>", "void", "reset", "(", "Node", "<", "K", ",", "V", ">", "root", ")", "{", "Node", "<", "K", ",", "V", ">", "stackTop", "=", "null", ";", "for", "(", "Node", "<", "K", ",", "V", ">", "n", "=", "root", ";", "n", "!", "=", "null", ";", "n", "=", "n", ".", "left", ")", "{", "n", ".", "parent", "=", "stackTop", ";", "stackTop", "=", "n", ";", "}", "this", ".", "stackTop", "=", "stackTop", ";", "}", "</s>"]
["<s>", "public", "Node", "<", "K", ",", "V", ">", "next", "(", ")", "{", "Node", "<", "K", ",", "V", ">", "stackTop", "=", "this", ".", "stackTop", ";", "if", "(", "stackTop", "=", "=", "null", ")", "{", "return", "null", ";", "}", "Node", "<", "K", ",", "V", ">", "result", "=", "stackTop", ";", "stackTop", "=", "result", ".", "parent", ";", "result", ".", "parent", "=", "null", ";", "for", "(", "Node", "<", "K", ",", "V", ">", "n", "=", "result", ".", "right", ";", "n", "!", "=", "null", ";", "n", "=", "n", ".", "left", ")", "{", "n", ".", "parent", "=", "stackTop", ";", "stackTop", "=", "n", ";", "}", "this", ".", "stackTop", "=", "stackTop", ";", "return", "result", ";", "}", "</s>"]
["<s>", "void", "reset", "(", "int", "targetSize", ")", "{", "int", "treeCapacity", "=", "Integer", ".", "highestOneBit", "(", "targetSize", ")", "*", "<NUM_LIT:2>", "-", "1", ";", "leavesToSkip", "=", "treeCapacity", "-", "targetSize", ";", "size", "=", "0", ";", "leavesSkipped", "=", "0", ";", "stack", "=", "null", ";", "}", "</s>"]
