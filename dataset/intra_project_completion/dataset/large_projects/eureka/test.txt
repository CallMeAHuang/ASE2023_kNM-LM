["<s>", "public", "Builder", "withVipAddressResolver", "(", "VipAddressResolver", "vipAddressResolver", ")", "{", "this", ".", "vipAddressResolver", "=", "vipAddressResolver", ";", "return", "this", ";", "}", "</s>"]
["<s>", "public", "static", "DynamicPropertyFactory", "initConfig", "(", "String", "configName", ")", "{", "DynamicPropertyFactory", "configInstance", "=", "DynamicPropertyFactory", ".", "getInstance", "(", ")", ";", "DynamicStringProperty", "EUREKA_PROPS_FILE", "=", "configInstance", ".", "getStringProperty", "(", "\"", "<STR_LIT>", "\"", ",", "configName", ")", ";", "String", "env", "=", "ConfigurationManager", ".", "getConfigInstance", "(", ")", ".", "getString", "(", "EUREKA_ENVIRONMENT", ",", "\"", "<STR_LIT>", "\"", ")", ";", "ConfigurationManager", ".", "getConfigInstance", "(", ")", ".", "setProperty", "(", "ARCHAIUS_DEPLOYMENT_ENVIRONMENT", ",", "env", ")", ";", "String", "eurekaPropsFile", "=", "EUREKA_PROPS_FILE", ".", "get", "(", ")", ";", "try", "{", "ConfigurationManager", ".", "loadCascadedPropertiesFromResources", "(", "eurekaPropsFile", ")", ";", "}", "catch", "(", "IOException", "e", ")", "{", "logger", ".", "warn", "(", "\"", "<STR_LIT>", "\"", "+", "\"", "<STR_LIT>", "\"", ",", "eurekaPropsFile", ")", ";", "}", "return", "configInstance", ";", "}", "</s>"]
["<s>", "public", "static", "Builder", "newBuilder", "(", "VipAddressResolver", "vipAddressResolver", ")", "{", "return", "new", "Builder", "(", "new", "InstanceInfo", "(", ")", ",", "vipAddressResolver", ")", ";", "}", "</s>"]
["<s>", "private", "boolean", "isInEc2", "(", ")", "{", "String", "result", "=", "config", ".", "getPrefixedView", "(", "namespace", ")", ".", "getString", "(", "INIT_WITH_EC2_INSTANCE_CONFIG_KEY", ",", "\"", "<STR_LIT>", "\"", ")", ";", "return", "!", "\"", "<STR_LIT>", "\"", ".", "equals", "(", "result", ")", ";", "}", "</s>"]
["<s>", "protected", "LinkedBindingBuilder", "<", "String", ">", "bindEurekaInstanceConfigNamespace", "(", ")", "{", "return", "bind", "(", "String", ".", "class", ")", ".", "annotatedWith", "(", "Names", ".", "named", "(", "InternalEurekaClientModule", ".", "INSTANCE_CONFIG_NAMESPACE_KEY", ")", ")", ";", "}", "</s>"]
["<s>", "protected", "LinkedBindingBuilder", "<", "String", ">", "bindEurekaClientConfigNamespace", "(", ")", "{", "return", "bind", "(", "String", ".", "class", ")", ".", "annotatedWith", "(", "Names", ".", "named", "(", "InternalEurekaClientModule", ".", "CLIENT_CONFIG_NAMESPACE_KEY", ")", ")", ";", "}", "</s>"]
["<s>", "protected", "LinkedBindingBuilder", "<", "EurekaInstanceConfigFactory", ">", "bindEurekaInstanceConfigFactory", "(", ")", "{", "return", "bind", "(", "EurekaInstanceConfigFactory", ".", "class", ")", ";", "}", "</s>"]
["<s>", "String", "getInstanceConfigNamespace", "(", ")", "{", "return", "instanceConfigNamespace", "=", "=", "null", "?", "\"", "<STR_LIT>", "\"", ":", "instanceConfigNamespace", ";", "}", "</s>"]
["<s>", "String", "getClientConfigNamespace", "(", ")", "{", "return", "clientConfigNamespace", "=", "=", "null", "?", "\"", "<STR_LIT>", "\"", ":", "clientConfigNamespace", ";", "}", "</s>"]
["<s>", "EurekaInstanceConfigFactory", "getInstanceConfigProvider", "(", ")", "{", "return", "instanceConfigFactory", "=", "=", "null", "?", "new", "CompositeInstanceConfigFactory", "(", "config", ",", "getInstanceConfigNamespace", "(", ")", ")", ":", "instanceConfigFactory", ";", "}", "</s>"]
["<s>", "@", "Provides", "@", "Singleton", "public", "EurekaTransportConfig", "getEurekaTransportConfig", "(", "Config", "config", ",", "ModuleConfig", "moduleConfig", ")", "{", "return", "new", "EurekaArchaius2TransportConfig", "(", "config", ",", "moduleConfig", ".", "getClientConfigNamespace", "(", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Provides", "@", "Singleton", "public", "EurekaClientConfig", "getEurekaClientConfig", "(", "Config", "config", ",", "EurekaTransportConfig", "transportConfig", ",", "ModuleConfig", "moduleConfig", ")", "{", "return", "new", "EurekaArchaius2ClientConfig", "(", "config", ",", "transportConfig", ",", "moduleConfig", ".", "getClientConfigNamespace", "(", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Provides", "@", "Singleton", "public", "EurekaInstanceConfig", "getEurekaInstanceConfigProvider", "(", "ModuleConfig", "moduleConfig", ")", "{", "return", "moduleConfig", ".", "getInstanceConfigProvider", "(", ")", ".", "get", "(", ")", ";", "}", "</s>"]
["<s>", "@", "Before", "public", "void", "setUp", "(", ")", "throws", "Exception", "{", "injector", "=", "InjectorBuilder", ".", "fromModules", "(", "new", "ArchaiusModule", "(", ")", "{", "@", "Override", "protected", "void", "configureArchaius", "(", ")", "{", "bindApplicationConfigurationOverride", "(", ")", ".", "toInstance", "(", "MapConfig", ".", "builder", "(", ")", ".", "put", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ")", ".", "put", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ")", ".", "put", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ")", ".", "put", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ")", ".", "put", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ")", ".", "put", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ")", ".", "put", "(", "\"", "<STR_LIT>", "\"", ",", "0", ")", ".", "put", "(", "\"", "<STR_LIT>", "\"", ",", "<NUM_LIT:1000>", ")", ".", "put", "(", "\"", "<STR_LIT>", "\"", ",", "true", ")", ".", "build", "(", ")", ")", ";", "}", "}", ",", "new", "EurekaClientModule", "(", ")", "{", "@", "Override", "protected", "void", "configureEureka", "(", ")", "{", "bindEurekaConfigNamespace", "(", ")", ".", "toInstance", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "}", ")", ".", "createInjector", "(", ")", ";", "}", "</s>"]
["<s>", "@", "SuppressWarnings", "(", "\"", "<STR_LIT>", "\"", ")", "@", "Test", "public", "void", "testDI", "(", ")", "{", "InstanceInfo", "instanceInfo", "=", "injector", ".", "getInstance", "(", "InstanceInfo", ".", "class", ")", ";", "Assert", ".", "assertEquals", "(", "ApplicationInfoManager", ".", "getInstance", "(", ")", ".", "getInfo", "(", ")", ",", "instanceInfo", ")", ";", "VipAddressResolver", "vipAddressResolver", "=", "injector", ".", "getInstance", "(", "VipAddressResolver", ".", "class", ")", ";", "Assert", ".", "assertTrue", "(", "vipAddressResolver", "instanceof", "Archaius2VipAddressResolver", ")", ";", "EurekaClient", "eurekaClient", "=", "injector", ".", "getInstance", "(", "EurekaClient", ".", "class", ")", ";", "DiscoveryClient", "discoveryClient", "=", "injector", ".", "getInstance", "(", "DiscoveryClient", ".", "class", ")", ";", "Assert", ".", "assertEquals", "(", "DiscoveryManager", ".", "getInstance", "(", ")", ".", "getEurekaClient", "(", ")", ",", "eurekaClient", ")", ";", "Assert", ".", "assertEquals", "(", "DiscoveryManager", ".", "getInstance", "(", ")", ".", "getDiscoveryClient", "(", ")", ",", "discoveryClient", ")", ";", "Assert", ".", "assertEquals", "(", "eurekaClient", ",", "discoveryClient", ")", ";", "EurekaClientConfig", "eurekaClientConfig", "=", "injector", ".", "getInstance", "(", "EurekaClientConfig", ".", "class", ")", ";", "Assert", ".", "assertEquals", "(", "DiscoveryManager", ".", "getInstance", "(", ")", ".", "getEurekaClientConfig", "(", ")", ",", "eurekaClientConfig", ")", ";", "EurekaInstanceConfig", "eurekaInstanceConfig", "=", "injector", ".", "getInstance", "(", "EurekaInstanceConfig", ".", "class", ")", ";", "Assert", ".", "assertEquals", "(", "DiscoveryManager", ".", "getInstance", "(", ")", ".", "getEurekaInstanceConfig", "(", ")", ",", "eurekaInstanceConfig", ")", ";", "Assert", ".", "assertTrue", "(", "eurekaInstanceConfig", "instanceof", "Ec2EurekaArchaius2InstanceConfig", ")", ";", "ApplicationInfoManager", "applicationInfoManager", "=", "injector", ".", "getInstance", "(", "ApplicationInfoManager", ".", "class", ")", ";", "InstanceInfo", "myInfo", "=", "applicationInfoManager", ".", "getInfo", "(", ")", ";", "Assert", ".", "assertTrue", "(", "myInfo", ".", "getDataCenterInfo", "(", ")", "instanceof", "AmazonInfo", ")", ";", "Assert", ".", "assertEquals", "(", "DataCenterInfo", ".", "Name", ".", "Amazon", ",", "myInfo", ".", "getDataCenterInfo", "(", ")", ".", "getName", "(", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testBindEurekaInstanceConfigFactory", "(", ")", "{", "final", "EurekaInstanceConfigFactory", "mockFactory", "=", "Mockito", ".", "mock", "(", "EurekaInstanceConfigFactory", ".", "class", ")", ";", "final", "EurekaInstanceConfig", "mockConfig", "=", "Mockito", ".", "mock", "(", "EurekaInstanceConfig", ".", "class", ")", ";", "final", "ApplicationInfoManager", "mockInfoManager", "=", "Mockito", ".", "mock", "(", "ApplicationInfoManager", ".", "class", ")", ";", "Mockito", ".", "when", "(", "mockFactory", ".", "get", "(", ")", ")", ".", "thenReturn", "(", "mockConfig", ")", ";", "LifecycleInjector", "injector", "=", "InjectorBuilder", ".", "fromModules", "(", "new", "ArchaiusModule", "(", ")", ",", "new", "EurekaClientModule", "(", ")", "{", "@", "Override", "protected", "void", "configureEureka", "(", ")", "{", "bindEurekaInstanceConfigFactory", "(", ")", ".", "toInstance", "(", "mockFactory", ")", ";", "}", "}", ")", ".", "overrideWith", "(", "new", "AbstractModule", "(", ")", "{", "@", "Override", "protected", "void", "configure", "(", ")", "{", "bind", "(", "ApplicationInfoManager", ".", "class", ")", ".", "toInstance", "(", "mockInfoManager", ")", ";", "}", "}", ")", ".", "createInjector", "(", ")", ";", "EurekaInstanceConfig", "config", "=", "injector", ".", "getInstance", "(", "EurekaInstanceConfig", ".", "class", ")", ";", "Assert", ".", "assertEquals", "(", "mockConfig", ",", "config", ")", ";", "}", "</s>"]
["<s>", "@", "Before", "public", "void", "setUp", "(", ")", "throws", "Exception", "{", "injector", "=", "InjectorBuilder", ".", "fromModules", "(", "new", "ArchaiusModule", "(", ")", "{", "@", "Override", "protected", "void", "configureArchaius", "(", ")", "{", "bindApplicationConfigurationOverride", "(", ")", ".", "toInstance", "(", "MapConfig", ".", "builder", "(", ")", ".", "put", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ")", ".", "put", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ")", ".", "put", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ")", ".", "put", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ")", ".", "put", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ")", ".", "build", "(", ")", ")", ";", "}", "}", ",", "new", "EurekaClientModule", "(", ")", ")", ".", "createInjector", "(", ")", ";", "}", "</s>"]
["<s>", "@", "SuppressWarnings", "(", "\"", "<STR_LIT>", "\"", ")", "@", "Test", "public", "void", "testDI", "(", ")", "{", "InstanceInfo", "instanceInfo", "=", "injector", ".", "getInstance", "(", "InstanceInfo", ".", "class", ")", ";", "Assert", ".", "assertEquals", "(", "ApplicationInfoManager", ".", "getInstance", "(", ")", ".", "getInfo", "(", ")", ",", "instanceInfo", ")", ";", "VipAddressResolver", "vipAddressResolver", "=", "injector", ".", "getInstance", "(", "VipAddressResolver", ".", "class", ")", ";", "Assert", ".", "assertTrue", "(", "vipAddressResolver", "instanceof", "Archaius2VipAddressResolver", ")", ";", "EurekaClient", "eurekaClient", "=", "injector", ".", "getInstance", "(", "EurekaClient", ".", "class", ")", ";", "DiscoveryClient", "discoveryClient", "=", "injector", ".", "getInstance", "(", "DiscoveryClient", ".", "class", ")", ";", "Assert", ".", "assertEquals", "(", "DiscoveryManager", ".", "getInstance", "(", ")", ".", "getEurekaClient", "(", ")", ",", "eurekaClient", ")", ";", "Assert", ".", "assertEquals", "(", "DiscoveryManager", ".", "getInstance", "(", ")", ".", "getDiscoveryClient", "(", ")", ",", "discoveryClient", ")", ";", "Assert", ".", "assertEquals", "(", "eurekaClient", ",", "discoveryClient", ")", ";", "EurekaClientConfig", "eurekaClientConfig", "=", "injector", ".", "getInstance", "(", "EurekaClientConfig", ".", "class", ")", ";", "Assert", ".", "assertEquals", "(", "DiscoveryManager", ".", "getInstance", "(", ")", ".", "getEurekaClientConfig", "(", ")", ",", "eurekaClientConfig", ")", ";", "EurekaInstanceConfig", "eurekaInstanceConfig", "=", "injector", ".", "getInstance", "(", "EurekaInstanceConfig", ".", "class", ")", ";", "Assert", ".", "assertEquals", "(", "DiscoveryManager", ".", "getInstance", "(", ")", ".", "getEurekaInstanceConfig", "(", ")", ",", "eurekaInstanceConfig", ")", ";", "Assert", ".", "assertTrue", "(", "eurekaInstanceConfig", "instanceof", "EurekaArchaius2InstanceConfig", ")", ";", "ApplicationInfoManager", "applicationInfoManager", "=", "injector", ".", "getInstance", "(", "ApplicationInfoManager", ".", "class", ")", ";", "InstanceInfo", "myInfo", "=", "applicationInfoManager", ".", "getInfo", "(", ")", ";", "Assert", ".", "assertEquals", "(", "DataCenterInfo", ".", "Name", ".", "MyOwn", ",", "myInfo", ".", "getDataCenterInfo", "(", ")", ".", "getName", "(", ")", ")", ";", "}", "</s>"]
["<s>", "public", "Builder", "withInstanceInfo", "(", "InstanceInfo", "instanceInfo", ")", "{", "result", ".", "instanceInfo", "=", "instanceInfo", ";", "return", "this", ";", "}", "</s>"]
["<s>", "private", "boolean", "autoDetectEc2", "(", ")", "{", "try", "{", "URL", "url", "=", "AmazonInfo", ".", "MetaDataKey", ".", "instanceId", ".", "getURL", "(", "null", ",", "null", ")", ";", "String", "id", "=", "AmazonInfoUtils", ".", "readEc2MetadataUrl", "(", "AmazonInfo", ".", "MetaDataKey", ".", "instanceId", ",", "url", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ")", ";", "if", "(", "id", "!", "=", "null", ")", "{", "logger", ".", "info", "(", "\"", "<STR_LIT>", "\"", ",", "id", ")", ";", "return", "true", ";", "}", "else", "{", "logger", ".", "info", "(", "\"", "<STR_LIT>", "\"", ")", ";", "return", "false", ";", "}", "}", "catch", "(", "SocketTimeoutException", "e", ")", "{", "logger", ".", "info", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "catch", "(", "Exception", "e", ")", "{", "logger", ".", "warn", "(", "\"", "<STR_LIT>", "\"", ",", "e", ")", ";", "}", "return", "false", ";", "}", "</s>"]
["<s>", "private", "String", "getDeploymentEnvironmentOverride", "(", ")", "{", "return", "config", ".", "getPrefixedView", "(", "namespace", ")", ".", "getString", "(", "DEPLOYMENT_ENVIRONMENT_OVERRIDE_KEY", ",", "null", ")", ";", "}", "</s>"]
["<s>", "public", "static", "String", "readEc2MetadataUrl", "(", "MetaDataKey", "metaDataKey", ",", "URL", "url", ",", "int", "connectionTimeoutMs", ",", "int", "readTimeoutMs", ")", "throws", "IOException", "{", "HttpURLConnection", "uc", "=", "(", "HttpURLConnection", ")", "url", ".", "openConnection", "(", ")", ";", "uc", ".", "setConnectTimeout", "(", "connectionTimeoutMs", ")", ";", "uc", ".", "setReadTimeout", "(", "readTimeoutMs", ")", ";", "if", "(", "uc", ".", "getResponseCode", "(", ")", "!", "=", "HttpURLConnection", ".", "HTTP_OK", ")", "{", "BufferedReader", "br", "=", "new", "BufferedReader", "(", "new", "InputStreamReader", "(", "uc", ".", "getErrorStream", "(", ")", ")", ")", ";", "try", "{", "while", "(", "br", ".", "readLine", "(", ")", "!", "=", "null", ")", "{", "}", "}", "finally", "{", "br", ".", "close", "(", ")", ";", "}", "}", "else", "{", "return", "metaDataKey", ".", "read", "(", "uc", ".", "getInputStream", "(", ")", ")", ";", "}", "return", "null", ";", "}", "</s>"]
["<s>", "@", "Provides", "@", "Singleton", "public", "EurekaTransportConfig", "getEurekaTransportConfig", "(", "Config", "config", ",", "ModuleConfig", "moduleConfig", ",", "EurekaConfigLoader", "configLoader", ")", "{", "return", "new", "EurekaArchaius2TransportConfig", "(", "config", ",", "moduleConfig", ".", "getClientConfigNamespace", "(", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Provides", "@", "Singleton", "public", "EurekaClientConfig", "getEurekaClientConfig", "(", "Config", "config", ",", "EurekaTransportConfig", "transportConfig", ",", "ModuleConfig", "moduleConfig", ",", "EurekaConfigLoader", "configLoader", ")", "{", "return", "new", "EurekaArchaius2ClientConfig", "(", "config", ",", "transportConfig", ",", "moduleConfig", ".", "getClientConfigNamespace", "(", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Provides", "@", "Singleton", "public", "EurekaInstanceConfig", "getEurekaInstanceConfigProvider", "(", "ModuleConfig", "moduleConfig", ",", "EurekaConfigLoader", "configLoader", ")", "{", "return", "moduleConfig", ".", "getInstanceConfigProvider", "(", ")", ".", "get", "(", ")", ";", "}", "</s>"]
["<s>", "public", "synchronized", "void", "refresh", "(", ")", "{", "try", "{", "AmazonInfo", "newInfo", "=", "AmazonInfo", ".", "Builder", ".", "newBuilder", "(", ")", ".", "withAmazonInfoConfig", "(", "amazonInfoConfig", ")", ".", "autoBuild", "(", "amazonInfoConfig", ".", "getNamespace", "(", ")", ")", ";", "if", "(", "shouldUpdate", "(", "newInfo", ",", "info", ")", ")", "{", "logger", ".", "info", "(", "\"", "<STR_LIT>", "\"", ",", "info", ",", "newInfo", ")", ";", "this", ".", "info", "=", "newInfo", ";", "}", "}", "catch", "(", "Throwable", "t", ")", "{", "logger", ".", "error", "(", "\"", "<STR_LIT>", "\"", ",", "t", ")", ";", "}", "}", "</s>"]
["<s>", "public", "AmazonInfo", "getCurrent", "(", ")", "{", "return", "info", ";", "}", "</s>"]
["<s>", "static", "boolean", "shouldUpdate", "(", "AmazonInfo", "newInfo", ",", "AmazonInfo", "oldInfo", ")", "{", "if", "(", "newInfo", ".", "getMetadata", "(", ")", ".", "isEmpty", "(", ")", ")", "{", "logger", ".", "warn", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "else", "if", "(", "!", "newInfo", ".", "equals", "(", "oldInfo", ")", ")", "{", "if", "(", "isBlank", "(", "newInfo", ".", "get", "(", "AmazonInfo", ".", "MetaDataKey", ".", "instanceId", ")", ")", ")", "{", "logger", ".", "warn", "(", "\"", "<STR_LIT>", "\"", ")", ";", "return", "false", ";", "}", "else", "if", "(", "isBlank", "(", "newInfo", ".", "get", "(", "AmazonInfo", ".", "MetaDataKey", ".", "localIpv4", ")", ")", ")", "{", "logger", ".", "warn", "(", "\"", "<STR_LIT>", "\"", ")", ";", "return", "false", ";", "}", "else", "{", "Set", "<", "String", ">", "newKeys", "=", "new", "HashSet", "<", ">", "(", "newInfo", ".", "getMetadata", "(", ")", ".", "keySet", "(", ")", ")", ";", "Set", "<", "String", ">", "oldKeys", "=", "new", "HashSet", "<", ">", "(", "oldInfo", ".", "getMetadata", "(", ")", ".", "keySet", "(", ")", ")", ";", "Set", "<", "String", ">", "union", "=", "new", "HashSet", "<", ">", "(", "newKeys", ")", ";", "union", ".", "retainAll", "(", "oldKeys", ")", ";", "newKeys", ".", "removeAll", "(", "union", ")", ";", "oldKeys", ".", "removeAll", "(", "union", ")", ";", "for", "(", "String", "key", ":", "newKeys", ")", "{", "logger", ".", "info", "(", "\"", "<STR_LIT>", "\"", ",", "key", ",", "newInfo", ".", "getMetadata", "(", ")", ".", "get", "(", "key", ")", ")", ";", "}", "for", "(", "String", "key", ":", "oldKeys", ")", "{", "logger", ".", "info", "(", "\"", "<STR_LIT>", "\"", ",", "key", ",", "oldInfo", ".", "getMetadata", "(", ")", ".", "get", "(", "key", ")", ")", ";", "}", "}", "return", "true", ";", "}", "return", "false", ";", "}", "</s>"]
["<s>", "private", "String", "getDNSName", "(", ")", "{", "return", "\"", "<STR_LIT:.>", "\"", "+", "getRegion", "(", ")", "+", "<CHAR_LIT:.>", "+", "clientConfig", ".", "getEurekaServerDNSName", "(", ")", ";", "}", "</s>"]
["<s>", "private", "static", "void", "failFastOnInitCheck", "(", "EurekaClientConfig", "clientConfig", ",", "String", "msg", ")", "{", "if", "(", "\"", "<STR_LIT>", "\"", ".", "equals", "(", "clientConfig", ".", "getExperimental", "(", "\"", "<STR_LIT>", "\"", ")", ")", ")", "{", "throw", "new", "RuntimeException", "(", "msg", ")", ";", "}", "}", "</s>"]
["<s>", "private", "CloudInstanceConfig", "createConfig", "(", "AmazonInfo", "info", ")", "{", "return", "new", "CloudInstanceConfig", "(", "info", ")", "{", "@", "Override", "public", "String", "[", "]", "getDefaultAddressResolutionOrder", "(", ")", "{", "return", "new", "String", "[", "]", "{", "publicHostname", ".", "name", "(", ")", ",", "localIpv4", ".", "name", "(", ")", "}", ";", "}", "@", "Override", "public", "String", "getHostName", "(", "boolean", "refresh", ")", "{", "return", "dummyDefault", ";", "}", "}", ";", "}", "</s>"]
["<s>", "@", "Before", "public", "void", "setUp", "(", ")", "{", "instanceInfo", "=", "InstanceInfoGenerator", ".", "takeOne", "(", ")", ";", "}", "</s>"]
["<s>", "private", "static", "AmazonInfo", "init", "(", "AmazonInfoConfig", "amazonInfoConfig", ",", "FallbackAddressProvider", "fallbackAddressProvider", ")", "{", "AmazonInfo", "info", ";", "try", "{", "info", "=", "AmazonInfo", ".", "Builder", ".", "newBuilder", "(", ")", ".", "withAmazonInfoConfig", "(", "amazonInfoConfig", ")", ".", "autoBuild", "(", "amazonInfoConfig", ".", "getNamespace", "(", ")", ")", ";", "logger", ".", "info", "(", "\"", "<STR_LIT>", "\"", "+", "DataCenterInfo", ".", "Name", ".", "Amazon", ")", ";", "}", "catch", "(", "Throwable", "e", ")", "{", "logger", ".", "error", "(", "\"", "<STR_LIT>", "\"", ",", "e", ")", ";", "throw", "new", "RuntimeException", "(", "e", ")", ";", "}", "if", "(", "info", ".", "get", "(", "AmazonInfo", ".", "MetaDataKey", ".", "instanceId", ")", "=", "=", "null", ")", "{", "if", "(", "amazonInfoConfig", ".", "shouldValidateInstanceId", "(", ")", ")", "{", "throw", "new", "RuntimeException", "(", "\"", "<STR_LIT>", "\"", "+", "\"", "<STR_LIT>", "<STR_LIT>", "<STR_LIT>", "\"", "+", "amazonInfoConfig", ".", "getNamespace", "(", ")", "+", "\"", "<STR_LIT>", "\"", ")", ";", "}", "else", "{", "Map", "<", "String", ",", "String", ">", "metadataMap", "=", "new", "HashMap", "<", "String", ",", "String", ">", "(", ")", ";", "metadataMap", ".", "put", "(", "AmazonInfo", ".", "MetaDataKey", ".", "instanceId", ".", "getName", "(", ")", ",", "fallbackAddressProvider", ".", "getFallbackIp", "(", ")", ")", ";", "metadataMap", ".", "put", "(", "AmazonInfo", ".", "MetaDataKey", ".", "publicHostname", ".", "getName", "(", ")", ",", "fallbackAddressProvider", ".", "getFallbackHostname", "(", ")", ")", ";", "info", ".", "setMetadata", "(", "metadataMap", ")", ";", "}", "}", "else", "if", "(", "(", "info", ".", "get", "(", "AmazonInfo", ".", "MetaDataKey", ".", "publicHostname", ")", "=", "=", "null", ")", "&", "&", "(", "info", ".", "get", "(", "AmazonInfo", ".", "MetaDataKey", ".", "localIpv4", ")", "!", "=", "null", ")", ")", "{", "info", ".", "getMetadata", "(", ")", ".", "put", "(", "AmazonInfo", ".", "MetaDataKey", ".", "publicHostname", ".", "getName", "(", ")", ",", "(", "info", ".", "get", "(", "AmazonInfo", ".", "MetaDataKey", ".", "localIpv4", ")", ")", ")", ";", "}", "return", "info", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testAmazonInfoNoUpdateIfEqual", "(", ")", "{", "AmazonInfo", "oldInfo", "=", "(", "AmazonInfo", ")", "instanceInfo", ".", "getDataCenterInfo", "(", ")", ";", "AmazonInfo", "newInfo", "=", "copyAmazonInfo", "(", "instanceInfo", ")", ";", "assertThat", "(", "RefreshableAmazonInfoProvider", ".", "shouldUpdate", "(", "newInfo", ",", "oldInfo", ")", ",", "is", "(", "false", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testAmazonInfoNoUpdateIfEmpty", "(", ")", "{", "AmazonInfo", "oldInfo", "=", "(", "AmazonInfo", ")", "instanceInfo", ".", "getDataCenterInfo", "(", ")", ";", "AmazonInfo", "newInfo", "=", "new", "AmazonInfo", "(", ")", ";", "assertThat", "(", "RefreshableAmazonInfoProvider", ".", "shouldUpdate", "(", "newInfo", ",", "oldInfo", ")", ",", "is", "(", "false", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testAmazonInfoNoUpdateIfNoInstanceId", "(", ")", "{", "AmazonInfo", "oldInfo", "=", "(", "AmazonInfo", ")", "instanceInfo", ".", "getDataCenterInfo", "(", ")", ";", "AmazonInfo", "newInfo", "=", "copyAmazonInfo", "(", "instanceInfo", ")", ";", "newInfo", ".", "getMetadata", "(", ")", ".", "remove", "(", "instanceId", ".", "getName", "(", ")", ")", ";", "assertThat", "(", "newInfo", ".", "getId", "(", ")", ",", "is", "(", "nullValue", "(", ")", ")", ")", ";", "assertThat", "(", "newInfo", ".", "get", "(", "instanceId", ")", ",", "is", "(", "nullValue", "(", ")", ")", ")", ";", "assertThat", "(", "CloudInstanceConfig", ".", "shouldUpdate", "(", "newInfo", ",", "oldInfo", ")", ",", "is", "(", "false", ")", ")", ";", "newInfo", ".", "getMetadata", "(", ")", ".", "put", "(", "instanceId", ".", "getName", "(", ")", ",", "\"", "\"", ")", ";", "assertThat", "(", "newInfo", ".", "getId", "(", ")", ",", "is", "(", "\"", "\"", ")", ")", ";", "assertThat", "(", "newInfo", ".", "get", "(", "instanceId", ")", ",", "is", "(", "\"", "\"", ")", ")", ";", "assertThat", "(", "RefreshableAmazonInfoProvider", ".", "shouldUpdate", "(", "newInfo", ",", "oldInfo", ")", ",", "is", "(", "false", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testAmazonInfoNoUpdateIfNoLocalIpv4", "(", ")", "{", "AmazonInfo", "oldInfo", "=", "(", "AmazonInfo", ")", "instanceInfo", ".", "getDataCenterInfo", "(", ")", ";", "AmazonInfo", "newInfo", "=", "copyAmazonInfo", "(", "instanceInfo", ")", ";", "newInfo", ".", "getMetadata", "(", ")", ".", "remove", "(", "localIpv4", ".", "getName", "(", ")", ")", ";", "assertThat", "(", "newInfo", ".", "get", "(", "localIpv4", ")", ",", "is", "(", "nullValue", "(", ")", ")", ")", ";", "assertThat", "(", "CloudInstanceConfig", ".", "shouldUpdate", "(", "newInfo", ",", "oldInfo", ")", ",", "is", "(", "false", ")", ")", ";", "newInfo", ".", "getMetadata", "(", ")", ".", "put", "(", "localIpv4", ".", "getName", "(", ")", ",", "\"", "\"", ")", ";", "assertThat", "(", "newInfo", ".", "get", "(", "localIpv4", ")", ",", "is", "(", "\"", "\"", ")", ")", ";", "assertThat", "(", "RefreshableAmazonInfoProvider", ".", "shouldUpdate", "(", "newInfo", ",", "oldInfo", ")", ",", "is", "(", "false", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testAmazonInfoUpdatePositiveCase", "(", ")", "{", "AmazonInfo", "oldInfo", "=", "(", "AmazonInfo", ")", "instanceInfo", ".", "getDataCenterInfo", "(", ")", ";", "AmazonInfo", "newInfo", "=", "copyAmazonInfo", "(", "instanceInfo", ")", ";", "newInfo", ".", "getMetadata", "(", ")", ".", "remove", "(", "amiId", ".", "getName", "(", ")", ")", ";", "assertThat", "(", "newInfo", ".", "getMetadata", "(", ")", ".", "size", "(", ")", ",", "is", "(", "oldInfo", ".", "getMetadata", "(", ")", ".", "size", "(", ")", "-", "1", ")", ")", ";", "assertThat", "(", "RefreshableAmazonInfoProvider", ".", "shouldUpdate", "(", "newInfo", ",", "oldInfo", ")", ",", "is", "(", "true", ")", ")", ";", "String", "newKey", "=", "\"", "<STR_LIT>", "\"", ";", "newInfo", ".", "getMetadata", "(", ")", ".", "put", "(", "newKey", ",", "\"", "<STR_LIT>", "\"", ")", ";", "assertThat", "(", "newInfo", ".", "getMetadata", "(", ")", ".", "size", "(", ")", ",", "is", "(", "oldInfo", ".", "getMetadata", "(", ")", ".", "size", "(", ")", ")", ")", ";", "assertThat", "(", "RefreshableAmazonInfoProvider", ".", "shouldUpdate", "(", "newInfo", ",", "oldInfo", ")", ",", "is", "(", "true", ")", ")", ";", "}", "</s>"]
["<s>", "public", "String", "getString", "(", "String", "key", ",", "String", "defaultValue", ")", "{", "return", "config", ".", "getString", "(", "namespace", "+", "key", ",", "defaultValue", ")", ";", "}", "</s>"]
["<s>", "public", "Integer", "getInteger", "(", "String", "key", ",", "Integer", "defaultValue", ")", "{", "return", "config", ".", "getInteger", "(", "namespace", "+", "key", ",", "defaultValue", ")", ";", "}", "</s>"]
["<s>", "public", "Long", "getLong", "(", "String", "key", ",", "Long", "defaultValue", ")", "{", "return", "config", ".", "getLong", "(", "namespace", "+", "key", ",", "defaultValue", ")", ";", "}", "</s>"]
["<s>", "public", "Double", "getDouble", "(", "String", "key", ",", "Double", "defaultValue", ")", "{", "return", "config", ".", "getDouble", "(", "namespace", "+", "key", ",", "defaultValue", ")", ";", "}", "</s>"]
["<s>", "public", "Boolean", "getBoolean", "(", "String", "key", ",", "Boolean", "defaultValue", ")", "{", "return", "config", ".", "getBoolean", "(", "namespace", "+", "key", ",", "defaultValue", ")", ";", "}", "</s>"]
["<s>", "public", "Iterator", "<", "String", ">", "getKeys", "(", ")", "{", "final", "String", "prefixRegex", "=", "\"", "<STR_LIT>", "\"", "+", "namespace", ";", "final", "Iterator", "<", "String", ">", "internalIterator", "=", "config", ".", "getKeys", "(", "namespace", ")", ";", "return", "new", "Iterator", "<", "String", ">", "(", ")", "{", "@", "Override", "public", "boolean", "hasNext", "(", ")", "{", "return", "internalIterator", ".", "hasNext", "(", ")", ";", "}", "@", "Override", "public", "String", "next", "(", ")", "{", "String", "value", "=", "internalIterator", ".", "next", "(", ")", ";", "return", "value", ".", "replaceFirst", "(", "prefixRegex", ",", "\"", "\"", ")", ";", "}", "}", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testPrefixes", "(", ")", "{", "Config", "configInstance", "=", "Mockito", ".", "mock", "(", "Config", ".", "class", ")", ";", "Archaius2PrefixedConfig", "config", "=", "new", "Archaius2PrefixedConfig", "(", "configInstance", ")", ";", "Assert", ".", "assertEquals", "(", "\"", "\"", ",", "config", ".", "getNamespace", "(", ")", ")", ";", "config", "=", "new", "Archaius2PrefixedConfig", "(", "configInstance", ",", "\"", "<STR_LIT>", "\"", ")", ";", "Assert", ".", "assertEquals", "(", "\"", "<STR_LIT:.>", "\"", ",", "config", ".", "getNamespace", "(", ")", ")", ";", "config", "=", "new", "Archaius2PrefixedConfig", "(", "configInstance", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ")", ";", "Assert", ".", "assertEquals", "(", "\"", "<STR_LIT>", "\"", ",", "config", ".", "getNamespace", "(", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testPrefixes", "(", ")", "{", "Config", "configInstance", "=", "Mockito", ".", "mock", "(", "Config", ".", "class", ")", ";", "InternalPrefixedConfig", "config", "=", "new", "InternalPrefixedConfig", "(", "configInstance", ")", ";", "Assert", ".", "assertEquals", "(", "\"", "\"", ",", "config", ".", "getNamespace", "(", ")", ")", ";", "config", "=", "new", "InternalPrefixedConfig", "(", "configInstance", ",", "\"", "<STR_LIT>", "\"", ")", ";", "Assert", ".", "assertEquals", "(", "\"", "<STR_LIT:.>", "\"", ",", "config", ".", "getNamespace", "(", ")", ")", ";", "config", "=", "new", "InternalPrefixedConfig", "(", "configInstance", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ")", ";", "Assert", ".", "assertEquals", "(", "\"", "<STR_LIT>", "\"", ",", "config", ".", "getNamespace", "(", ")", ")", ";", "}", "</s>"]
["<s>", "@", "com", ".", "google", ".", "inject", ".", "Inject", "(", "optional", "=", "true", ")", "public", "void", "setInstanceStatusMapper", "(", "InstanceStatusMapper", "instanceStatusMapper", ")", "{", "this", ".", "instanceStatusMapper", "=", "instanceStatusMapper", ";", "}", "</s>"]
["<s>", "InstanceStatusMapper", "getInstanceStatusMapper", "(", ")", "{", "return", "instanceStatusMapper", "=", "=", "null", "?", "NO_OP_MAPPER", ":", "instanceStatusMapper", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testCustomInstanceStatusMapper", "(", ")", "{", "ApplicationInfoManager", ".", "OptionalArgs", "optionalArgs", "=", "new", "ApplicationInfoManager", ".", "OptionalArgs", "(", ")", ";", "optionalArgs", ".", "setInstanceStatusMapper", "(", "new", "ApplicationInfoManager", ".", "InstanceStatusMapper", "(", ")", "{", "@", "Override", "public", "InstanceInfo", ".", "InstanceStatus", "map", "(", "InstanceInfo", ".", "InstanceStatus", "prev", ")", "{", "return", "InstanceInfo", ".", "InstanceStatus", ".", "UNKNOWN", ";", "}", "}", ")", ";", "applicationInfoManager", "=", "new", "ApplicationInfoManager", "(", "config", ",", "instanceInfo", ",", "optionalArgs", ")", ";", "InstanceInfo", ".", "InstanceStatus", "existingStatus", "=", "applicationInfoManager", ".", "getInfo", "(", ")", ".", "getStatus", "(", ")", ";", "assertNotEquals", "(", "existingStatus", ",", "InstanceInfo", ".", "InstanceStatus", ".", "UNKNOWN", ")", ";", "applicationInfoManager", ".", "setInstanceStatus", "(", "InstanceInfo", ".", "InstanceStatus", ".", "UNKNOWN", ")", ";", "existingStatus", "=", "applicationInfoManager", ".", "getInfo", "(", ")", ".", "getStatus", "(", ")", ";", "assertEquals", "(", "existingStatus", ",", "InstanceInfo", ".", "InstanceStatus", ".", "UNKNOWN", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testNullResultInstanceStatusMapper", "(", ")", "{", "ApplicationInfoManager", ".", "OptionalArgs", "optionalArgs", "=", "new", "ApplicationInfoManager", ".", "OptionalArgs", "(", ")", ";", "optionalArgs", ".", "setInstanceStatusMapper", "(", "new", "ApplicationInfoManager", ".", "InstanceStatusMapper", "(", ")", "{", "@", "Override", "public", "InstanceInfo", ".", "InstanceStatus", "map", "(", "InstanceInfo", ".", "InstanceStatus", "prev", ")", "{", "return", "null", ";", "}", "}", ")", ";", "applicationInfoManager", "=", "new", "ApplicationInfoManager", "(", "config", ",", "instanceInfo", ",", "optionalArgs", ")", ";", "InstanceInfo", ".", "InstanceStatus", "existingStatus1", "=", "applicationInfoManager", ".", "getInfo", "(", ")", ".", "getStatus", "(", ")", ";", "assertNotEquals", "(", "existingStatus1", ",", "InstanceInfo", ".", "InstanceStatus", ".", "UNKNOWN", ")", ";", "applicationInfoManager", ".", "setInstanceStatus", "(", "InstanceInfo", ".", "InstanceStatus", ".", "UNKNOWN", ")", ";", "InstanceInfo", ".", "InstanceStatus", "existingStatus2", "=", "applicationInfoManager", ".", "getInfo", "(", ")", ".", "getStatus", "(", ")", ";", "assertEquals", "(", "existingStatus2", ",", "existingStatus1", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testResolveDefaultAddress", "(", ")", "{", "AmazonInfo", "info", "=", "(", "AmazonInfo", ")", "instanceInfo", ".", "getDataCenterInfo", "(", ")", ";", "config", "=", "createConfig", "(", "info", ")", ";", "assertThat", "(", "config", ".", "resolveDefaultAddress", "(", "false", ")", ",", "is", "(", "info", ".", "get", "(", "publicHostname", ")", ")", ")", ";", "info", ".", "getMetadata", "(", ")", ".", "remove", "(", "publicHostname", ".", "getName", "(", ")", ")", ";", "config", "=", "createConfig", "(", "info", ")", ";", "assertThat", "(", "config", ".", "resolveDefaultAddress", "(", "false", ")", ",", "is", "(", "info", ".", "get", "(", "localIpv4", ")", ")", ")", ";", "info", ".", "getMetadata", "(", ")", ".", "remove", "(", "localIpv4", ".", "getName", "(", ")", ")", ";", "config", "=", "createConfig", "(", "info", ")", ";", "assertThat", "(", "config", ".", "resolveDefaultAddress", "(", "false", ")", ",", "is", "(", "dummyDefault", ")", ")", ";", "}", "</s>"]
["<s>", "private", "Ec2EurekaArchaius2InstanceConfig", "createConfig", "(", "AmazonInfo", "info", ")", "{", "return", "new", "Ec2EurekaArchaius2InstanceConfig", "(", "MapConfig", ".", "from", "(", "Collections", ".", "<", "String", ",", "String", ">", "emptyMap", "(", ")", ")", ",", "info", ")", "{", "@", "Override", "public", "String", "[", "]", "getDefaultAddressResolutionOrder", "(", ")", "{", "return", "new", "String", "[", "]", "{", "publicHostname", ".", "name", "(", ")", ",", "localIpv4", ".", "name", "(", ")", "}", ";", "}", "@", "Override", "public", "String", "getHostName", "(", "boolean", "refresh", ")", "{", "return", "dummyDefault", ";", "}", "}", ";", "}", "</s>"]
["<s>", "public", "boolean", "isThisMyUrl", "(", "String", "url", ")", "{", "return", "isInstanceURL", "(", "url", ",", "applicationInfoManager", ".", "getInfo", "(", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "getMinNumberOfAvailablePeers", "(", ")", "{", "return", "serverConfig", ".", "getHealthStatusMinNumberOfAvailablePeers", "(", ")", ";", "}", "</s>"]
["<s>", "private", "MonitoredConnectionManager", "createDefaultSslCM", "(", ")", "{", "final", "SchemeRegistry", "registry", "=", "new", "SchemeRegistry", "(", ")", ";", "registry", ".", "register", "(", "new", "Scheme", "(", "\"", "<STR_LIT>", "\"", ",", "<NUM_LIT>", ",", "PlainSocketFactory", ".", "getSocketFactory", "(", ")", ")", ")", ";", "registry", ".", "register", "(", "new", "Scheme", "(", "\"", "<STR_LIT>", "\"", ",", "<NUM_LIT>", ",", "new", "SSLSocketFactoryAdapter", "(", "SSLConnectionSocketFactory", ".", "getSocketFactory", "(", ")", ")", ")", ")", ";", "return", "new", "MonitoredConnectionManager", "(", "clientName", ",", "registry", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testConflictResponseReturnsTheInstanceInfoInTheResponseEntity", "(", ")", "throws", "Exception", "{", "when", "(", "instanceResource", ".", "renewLease", "(", "anyString", "(", ")", ",", "anyString", "(", ")", ",", "anyString", "(", ")", ",", "anyString", "(", ")", ")", ")", ".", "thenReturn", "(", "Response", ".", "status", "(", "Status", ".", "CONFLICT", ")", ".", "entity", "(", "instanceInfo", ")", ".", "build", "(", ")", ")", ";", "ReplicationInstance", "replicationInstance", "=", "newReplicationInstanceOf", "(", "Action", ".", "Heartbeat", ",", "instanceInfo", ")", ";", "Response", "response", "=", "peerReplicationResource", ".", "batchReplication", "(", "new", "ReplicationList", "(", "replicationInstance", ")", ")", ";", "assertStatusIsConflict", "(", "response", ")", ";", "}", "</s>"]
["<s>", "private", "static", "void", "assertStatusIsConflict", "(", "Response", "httpResponse", ")", "{", "assertStatus", "(", "httpResponse", ",", "<NUM_LIT>", ")", ";", "}", "</s>"]
["<s>", "private", "static", "void", "assertStatus", "(", "Response", "httpResponse", ",", "int", "expectedStatusCode", ")", "{", "ReplicationListResponse", "entity", "=", "(", "ReplicationListResponse", ")", "httpResponse", ".", "getEntity", "(", ")", ";", "assertThat", "(", "entity", ",", "is", "(", "notNullValue", "(", ")", ")", ")", ";", "ReplicationInstanceResponse", "replicationResponse", "=", "entity", ".", "getResponseList", "(", ")", ".", "get", "(", "0", ")", ";", "assertThat", "(", "replicationResponse", ".", "getStatusCode", "(", ")", ",", "is", "(", "equalTo", "(", "expectedStatusCode", ")", ")", ")", ";", "}", "</s>"]
["<s>", "public", "EurekaJerseyClientBuilder", "withCustomSSL", "(", "SSLContext", "sslContext", ")", "{", "this", ".", "sslContext", "=", "sslContext", ";", "return", "this", ";", "}", "</s>"]
["<s>", "private", "void", "expectStatuses", "(", "int", "n", ",", "long", "timeout", ",", "TimeUnit", "timeUnit", ")", "throws", "InterruptedException", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "n", ";", "i", "+", "+", ")", "{", "String", "status", "=", "mockLocalEurekaServer", ".", "registrationStatusesQueue", ".", "poll", "(", "timeout", ",", "timeUnit", ")", ";", "Assert", ".", "assertNotNull", "(", "status", ")", ";", "}", "}", "</s>"]
["<s>", "@", "Before", "public", "void", "setUp", "(", ")", "{", "serverContext", "=", "mock", "(", "EurekaServerContext", ".", "class", ")", ";", "when", "(", "serverContext", ".", "getServerConfig", "(", ")", ")", ".", "thenReturn", "(", "mock", "(", "EurekaServerConfig", ".", "class", ")", ")", ";", "peerReplicationResource", "=", "new", "PeerReplicationResource", "(", "serverContext", ")", "{", "@", "Override", "ApplicationResource", "createApplicationResource", "(", "ReplicationInstance", "instanceInfo", ")", "{", "return", "applicationResource", ";", "}", "@", "Override", "InstanceResource", "createInstanceResource", "(", "ReplicationInstance", "instanceInfo", ",", "ApplicationResource", "applicationResource", ")", "{", "return", "instanceResource", ";", "}", "}", ";", "}", "</s>"]
["<s>", "private", "static", "void", "assertResponseEntityExist", "(", "Response", "httpResponse", ")", "{", "ReplicationListResponse", "entity", "=", "(", "ReplicationListResponse", ")", "httpResponse", ".", "getEntity", "(", ")", ";", "assertThat", "(", "entity", ",", "is", "(", "notNullValue", "(", ")", ")", ")", ";", "ReplicationInstanceResponse", "replicationResponse", "=", "entity", ".", "getResponseList", "(", ")", ".", "get", "(", "0", ")", ";", "assertThat", "(", "replicationResponse", ".", "getResponseEntity", "(", ")", ",", "is", "(", "notNullValue", "(", ")", ")", ")", ";", "}", "</s>"]
["<s>", "private", "static", "void", "setUpInitTime", "(", "ApplicationInfoManager", "applicationInfoManager", ",", "Applications", "applications", ",", "long", "initTime", ")", "{", "logger", ".", "info", "(", "\"", "<STR_LIT>", "\"", ",", "initTime", ",", "applications", ".", "size", "(", ")", ")", ";", "applicationInfoManager", ".", "getInfo", "(", ")", ".", "getMetadata", "(", ")", ".", "put", "(", "CommonConstants", ".", "Metadata", ".", "EUREKA_CLIENT_INIT_TIME", ",", "initTime", "+", "\"", "\"", ")", ";", "}", "</s>"]
["<s>", "@", "Inject", "(", "optional", "=", "true", ")", "public", "void", "setPreRegistrationHandler", "(", "PreRegistrationHandler", "preRegistrationHandler", ")", "{", "this", ".", "preRegistrationHandler", "=", "preRegistrationHandler", ";", "}", "</s>"]
["<s>", "private", "void", "expectStatus", "(", "InstanceInfo", ".", "InstanceStatus", "expected", ",", "long", "timeout", ",", "TimeUnit", "timeUnit", ")", "throws", "InterruptedException", "{", "String", "status", "=", "mockLocalEurekaServer", ".", "registrationStatusesQueue", ".", "poll", "(", "timeout", ",", "timeUnit", ")", ";", "Assert", ".", "assertEquals", "(", "expected", ".", "name", "(", ")", ",", "status", ")", ";", "}", "</s>"]
["<s>", "private", "static", "<", "T", ">", "T", "getLast", "(", "List", "<", "T", ">", "list", ")", "{", "return", "list", ".", "get", "(", "list", ".", "size", "(", ")", "-", "1", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testEncodingDecodingWithoutMetaData", "(", ")", "throws", "Exception", "{", "Applications", "applications", "=", "InstanceInfoGenerator", ".", "newBuilder", "(", "<NUM_LIT:10>", ",", "<NUM_LIT:2>", ")", ".", "withMetaData", "(", "false", ")", ".", "build", "(", ")", ".", "toApplications", "(", ")", ";", "XStream", "xstream", "=", "JsonXStream", ".", "getInstance", "(", ")", ";", "String", "jsonDocument", "=", "xstream", ".", "toXML", "(", "applications", ")", ";", "Applications", "decodedApplications", "=", "(", "Applications", ")", "xstream", ".", "fromXML", "(", "jsonDocument", ")", ";", "assertThat", "(", "EurekaEntityComparators", ".", "equal", "(", "decodedApplications", ",", "applications", ")", ",", "is", "(", "true", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testEncodingDecodingWithMetaData", "(", ")", "throws", "Exception", "{", "Applications", "applications", "=", "InstanceInfoGenerator", ".", "newBuilder", "(", "<NUM_LIT:10>", ",", "<NUM_LIT:2>", ")", ".", "withMetaData", "(", "true", ")", ".", "build", "(", ")", ".", "toApplications", "(", ")", ";", "XStream", "xstream", "=", "JsonXStream", ".", "getInstance", "(", ")", ";", "String", "jsonDocument", "=", "xstream", ".", "toXML", "(", "applications", ")", ";", "Applications", "decodedApplications", "=", "(", "Applications", ")", "xstream", ".", "fromXML", "(", "jsonDocument", ")", ";", "assertThat", "(", "EurekaEntityComparators", ".", "equal", "(", "decodedApplications", ",", "applications", ")", ",", "is", "(", "true", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "(", "expected", "=", "ForbiddenClassException", ".", "class", ",", "timeout", "=", "<NUM_LIT>", ")", "public", "void", "testVoidElementUnmarshalling", "(", ")", "throws", "Exception", "{", "XStream", "xstream", "=", "JsonXStream", ".", "getInstance", "(", ")", ";", "xstream", ".", "fromXML", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testEncodingDecodingWithoutMetaData", "(", ")", "throws", "Exception", "{", "Applications", "applications", "=", "InstanceInfoGenerator", ".", "newBuilder", "(", "<NUM_LIT:10>", ",", "<NUM_LIT:2>", ")", ".", "withMetaData", "(", "false", ")", ".", "build", "(", ")", ".", "toApplications", "(", ")", ";", "XStream", "xstream", "=", "XmlXStream", ".", "getInstance", "(", ")", ";", "String", "xmlDocument", "=", "xstream", ".", "toXML", "(", "applications", ")", ";", "Applications", "decodedApplications", "=", "(", "Applications", ")", "xstream", ".", "fromXML", "(", "xmlDocument", ")", ";", "assertThat", "(", "EurekaEntityComparators", ".", "equal", "(", "decodedApplications", ",", "applications", ")", ",", "is", "(", "true", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testEncodingDecodingWithMetaData", "(", ")", "throws", "Exception", "{", "Applications", "applications", "=", "InstanceInfoGenerator", ".", "newBuilder", "(", "<NUM_LIT:10>", ",", "<NUM_LIT:2>", ")", ".", "withMetaData", "(", "true", ")", ".", "build", "(", ")", ".", "toApplications", "(", ")", ";", "XStream", "xstream", "=", "XmlXStream", ".", "getInstance", "(", ")", ";", "String", "xmlDocument", "=", "xstream", ".", "toXML", "(", "applications", ")", ";", "Applications", "decodedApplications", "=", "(", "Applications", ")", "xstream", ".", "fromXML", "(", "xmlDocument", ")", ";", "assertThat", "(", "EurekaEntityComparators", ".", "equal", "(", "decodedApplications", ",", "applications", ")", ",", "is", "(", "true", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "(", "expected", "=", "ForbiddenClassException", ".", "class", ",", "timeout", "=", "<NUM_LIT>", ")", "public", "void", "testVoidElementUnmarshalling", "(", ")", "throws", "Exception", "{", "XStream", "xstream", "=", "XmlXStream", ".", "getInstance", "(", ")", ";", "xstream", ".", "fromXML", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "(", "expected", "=", "ForbiddenClassException", ".", "class", ",", "timeout", "=", "<NUM_LIT>", ")", "public", "void", "testVoidAttributeUnmarshalling", "(", ")", "throws", "Exception", "{", "XStream", "xstream", "=", "XmlXStream", ".", "getInstance", "(", ")", ";", "xstream", ".", "fromXML", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "</s>"]
["<s>", "public", "static", "Builder", "newBuilder", "(", "Function", "<", "String", ",", "String", ">", "intern", ")", "{", "return", "new", "Builder", "(", "new", "InstanceInfo", "(", ")", ",", "LazyHolder", ".", "DEFAULT_VIP_ADDRESS_RESOLVER", ",", "intern", ")", ";", "}", "</s>"]
["<s>", "public", "Builder", "setAppNameForDeser", "(", "String", "appName", ")", "{", "result", ".", "appName", "=", "appName", ";", "return", "this", ";", "}", "</s>"]
["<s>", "public", "Builder", "setAppGroupNameForDeser", "(", "String", "appGroupName", ")", "{", "result", ".", "appGroupName", "=", "appGroupName", ";", "return", "this", ";", "}", "</s>"]
["<s>", "public", "T", "find", "(", "JsonParser", "jp", ")", "throws", "IOException", "{", "return", "find", "(", "jp", ",", "null", ")", ";", "}", "</s>"]
["<s>", "public", "T", "find", "(", "JsonParser", "jp", ",", "T", "defaultValue", ")", "throws", "IOException", "{", "if", "(", "jp", ".", "getCurrentToken", "(", ")", "=", "=", "JsonToken", ".", "FIELD_NAME", ")", "{", "return", "stringLookup", ".", "getOrDefault", "(", "jp", ".", "getCurrentName", "(", ")", ",", "defaultValue", ")", ";", "}", "return", "find", "(", "jp", ".", "getTextCharacters", "(", ")", ",", "jp", ".", "getTextOffset", "(", ")", ",", "jp", ".", "getTextLength", "(", ")", ",", "defaultValue", ")", ";", "}", "</s>"]
["<s>", "public", "T", "find", "(", "char", "[", "]", "a", ",", "int", "offset", ",", "int", "length", ")", "{", "return", "find", "(", "a", ",", "offset", ",", "length", ",", "null", ")", ";", "}", "</s>"]
["<s>", "public", "T", "find", "(", "char", "[", "]", "a", ",", "int", "offset", ",", "int", "length", ",", "T", "defaultValue", ")", "{", "if", "(", "length", "<", "this", ".", "minLength", "|", "|", "length", ">", "this", ".", "maxLength", ")", "return", "defaultValue", ";", "int", "hash", "=", "hashCode", "(", "a", ",", "offset", ",", "length", ")", ";", "int", "index", "=", "Arrays", ".", "binarySearch", "(", "sortedHashes", ",", "hash", ")", ";", "if", "(", "index", ">", "=", "0", ")", "{", "for", "(", "int", "i", "=", "index", ";", "i", "<", "sortedValues", ".", "length", "&", "&", "sortedHashes", "[", "index", "]", "=", "=", "hash", ";", "i", "+", "+", ")", "{", "if", "(", "equals", "(", "sortedNames", "[", "i", "]", ",", "a", ",", "offset", ",", "length", ")", ")", "{", "return", "sortedValues", "[", "i", "]", ";", "}", "}", "}", "return", "defaultValue", ";", "}", "</s>"]
["<s>", "public", "static", "boolean", "equals", "(", "char", "[", "]", "a1", ",", "char", "[", "]", "a2", ",", "int", "a2Offset", ",", "int", "a2Length", ")", "{", "if", "(", "a1", ".", "length", "!", "=", "a2Length", ")", "return", "false", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "a2Length", ";", "i", "+", "+", ")", "{", "if", "(", "a1", "[", "i", "]", "!", "=", "a2", "[", "i", "+", "a2Offset", "]", ")", "return", "false", ";", "}", "return", "true", ";", "}", "</s>"]
["<s>", "public", "static", "int", "hashCode", "(", "char", "[", "]", "a", ",", "int", "offset", ",", "int", "length", ")", "{", "if", "(", "a", "=", "=", "null", ")", "return", "0", ";", "int", "result", "=", "1", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "length", ";", "i", "+", "+", ")", "{", "result", "=", "<NUM_LIT:31>", "*", "result", "+", "a", "[", "i", "+", "offset", "]", ";", "}", "return", "result", ";", "}", "</s>"]
["<s>", "static", "EurekaClientConfig", "loadConfig", "(", ")", "{", "return", "com", ".", "netflix", ".", "discovery", ".", "DiscoveryManager", ".", "getInstance", "(", ")", ".", "getEurekaClientConfig", "(", ")", ";", "}", "</s>"]
["<s>", "public", "char", "[", "]", "getFieldName", "(", ")", "{", "return", "fieldName", ";", "}", "</s>"]
["<s>", "public", "char", "[", "]", "getElementName", "(", ")", "{", "return", "elementName", ";", "}", "</s>"]
["<s>", "private", "static", "void", "tryCatchLog", "(", "Callable", "<", "Void", ">", "callable", ")", "{", "try", "{", "callable", ".", "call", "(", ")", ";", "}", "catch", "(", "Exception", "ex", ")", "{", "logger", ".", "error", "(", "\"", "<STR_LIT>", "\"", ",", "ex", ")", ";", "}", "}", "</s>"]
["<s>", "public", "AtomicLong", "getRoundRobinIndex", "(", ")", "{", "return", "roundRobinIndex", ";", "}", "</s>"]
["<s>", "public", "AtomicReference", "<", "List", "<", "InstanceInfo", ">", ">", "getVipList", "(", ")", "{", "return", "vipList", ";", "}", "</s>"]
["<s>", "public", "void", "populateInstanceCountMap", "(", "Map", "<", "String", ",", "AtomicInteger", ">", "instanceCountMap", ")", "{", "for", "(", "Application", "app", ":", "this", ".", "getRegisteredApplications", "(", ")", ")", "{", "for", "(", "InstanceInfo", "info", ":", "app", ".", "getInstancesAsIsFromEureka", "(", ")", ")", "{", "AtomicInteger", "instanceCount", "=", "instanceCountMap", ".", "computeIfAbsent", "(", "info", ".", "getStatus", "(", ")", ".", "name", "(", ")", ",", "k", "-", ">", "new", "AtomicInteger", "(", "0", ")", ")", ";", "instanceCount", ".", "incrementAndGet", "(", ")", ";", "}", "}", "}", "</s>"]
["<s>", "public", "static", "String", "getReconcileHashCode", "(", "Map", "<", "String", ",", "AtomicInteger", ">", "instanceCountMap", ")", "{", "StringBuilder", "reconcileHashCode", "=", "new", "StringBuilder", "(", "<NUM_LIT>", ")", ";", "for", "(", "Map", ".", "Entry", "<", "String", ",", "AtomicInteger", ">", "mapEntry", ":", "instanceCountMap", ".", "entrySet", "(", ")", ")", "{", "reconcileHashCode", ".", "append", "(", "mapEntry", ".", "getKey", "(", ")", ")", ".", "append", "(", "STATUS_DELIMITER", ")", ".", "append", "(", "mapEntry", ".", "getValue", "(", ")", ".", "get", "(", ")", ")", ".", "append", "(", "STATUS_DELIMITER", ")", ";", "}", "return", "reconcileHashCode", ".", "toString", "(", ")", ";", "}", "</s>"]
["<s>", "private", "void", "shuffleAndFilterInstances", "(", "Map", "<", "String", ",", "VipIndexSupport", ">", "srcMap", ",", "boolean", "filterUpInstances", ")", "{", "Random", "shuffleRandom", "=", "new", "Random", "(", ")", ";", "for", "(", "Map", ".", "Entry", "<", "String", ",", "VipIndexSupport", ">", "entries", ":", "srcMap", ".", "entrySet", "(", ")", ")", "{", "VipIndexSupport", "vipIndexSupport", "=", "entries", ".", "getValue", "(", ")", ";", "AbstractQueue", "<", "InstanceInfo", ">", "vipInstances", "=", "vipIndexSupport", ".", "instances", ";", "final", "List", "<", "InstanceInfo", ">", "filteredInstances", ";", "if", "(", "filterUpInstances", ")", "{", "filteredInstances", "=", "vipInstances", ".", "stream", "(", ")", ".", "filter", "(", "ii", "-", ">", "ii", ".", "getStatus", "(", ")", "=", "=", "InstanceStatus", ".", "UP", ")", ".", "collect", "(", "Collectors", ".", "toCollection", "(", "(", ")", "-", ">", "new", "ArrayList", "<", ">", "(", "vipInstances", ".", "size", "(", ")", ")", ")", ")", ";", "}", "else", "{", "filteredInstances", "=", "new", "ArrayList", "<", "InstanceInfo", ">", "(", "vipInstances", ")", ";", "}", "Collections", ".", "shuffle", "(", "filteredInstances", ",", "shuffleRandom", ")", ";", "vipIndexSupport", ".", "vipList", ".", "set", "(", "filteredInstances", ")", ";", "vipIndexSupport", ".", "roundRobinIndex", ".", "set", "(", "0", ")", ";", "}", "}", "</s>"]
["<s>", "private", "void", "addInstanceToMap", "(", "InstanceInfo", "info", ",", "String", "vipAddresses", ",", "Map", "<", "String", ",", "VipIndexSupport", ">", "vipMap", ")", "{", "if", "(", "vipAddresses", "!", "=", "null", ")", "{", "String", "[", "]", "vipAddressArray", "=", "vipAddresses", ".", "toUpperCase", "(", "Locale", ".", "ROOT", ")", ".", "split", "(", "\"", "<STR_LIT:U+002C>", "\"", ")", ";", "for", "(", "String", "vipAddress", ":", "vipAddressArray", ")", "{", "VipIndexSupport", "vis", "=", "vipMap", ".", "computeIfAbsent", "(", "vipAddress", ",", "k", "-", ">", "new", "VipIndexSupport", "(", ")", ")", ";", "vis", ".", "instances", ".", "add", "(", "info", ")", ";", "}", "}", "}", "</s>"]
["<s>", "public", "static", "ObjectReader", "init", "(", "ObjectReader", "reader", ")", "{", "return", "reader", ".", "withAttribute", "(", "ATTR_STRING_CACHE", ",", "new", "DeserializerStringCache", "(", "new", "HashMap", "<", "CharBuffer", ",", "String", ">", "(", "<NUM_LIT>", ")", ",", "new", "LinkedHashMap", "<", "CharBuffer", ",", "String", ">", "(", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "true", ")", "{", "@", "Override", "protected", "boolean", "removeEldestEntry", "(", "Entry", "<", "CharBuffer", ",", "String", ">", "eldest", ")", "{", "return", "size", "(", ")", ">", "LRU_LIMIT", ";", "}", "}", ")", ")", ";", "}", "</s>"]
["<s>", "public", "static", "ObjectReader", "init", "(", "ObjectReader", "reader", ",", "DeserializationContext", "context", ")", "{", "return", "withCache", "(", "context", ",", "cache", "-", ">", "{", "if", "(", "cache", "=", "=", "null", ")", "throw", "new", "IllegalStateException", "(", ")", ";", "return", "reader", ".", "withAttribute", "(", "ATTR_STRING_CACHE", ",", "cache", ")", ";", "}", ")", ";", "}", "</s>"]
["<s>", "public", "static", "DeserializerStringCache", "from", "(", "DeserializationContext", "context", ")", "{", "return", "withCache", "(", "context", ",", "cache", "-", ">", "{", "if", "(", "cache", "=", "=", "null", ")", "{", "cache", "=", "new", "DeserializerStringCache", "(", "new", "HashMap", "<", "CharBuffer", ",", "String", ">", "(", ")", ",", "new", "HashMap", "<", "CharBuffer", ",", "String", ">", "(", ")", ")", ";", "}", "return", "cache", ";", "}", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "clear", "(", "ObjectReader", "reader", ")", "{", "clear", "(", "reader", ",", "CacheScope", ".", "APPLICATION_SCOPE", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "clear", "(", "ObjectReader", "reader", ",", "final", "CacheScope", "scope", ")", "{", "withCache", "(", "reader", ",", "cache", "-", ">", "{", "if", "(", "scope", "=", "=", "CacheScope", ".", "GLOBAL_SCOPE", ")", "{", "if", "(", "logEnabled", ")", "logger", ".", "debug", "(", "\"", "<STR_LIT>", "\"", ",", "cache", ".", "globalCache", ".", "size", "(", ")", ")", ";", "cache", ".", "globalCache", ".", "clear", "(", ")", ";", "}", "if", "(", "logEnabled", ")", "logger", ".", "debug", "(", "\"", "<STR_LIT>", "\"", ",", "cache", ".", "applicationCache", ".", "size", "(", ")", ")", ";", "cache", ".", "applicationCache", ".", "clear", "(", ")", ";", "return", "null", ";", "}", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "clear", "(", "DeserializationContext", "context", ")", "{", "clear", "(", "context", ",", "CacheScope", ".", "APPLICATION_SCOPE", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "clear", "(", "DeserializationContext", "context", ",", "CacheScope", "scope", ")", "{", "withCache", "(", "context", ",", "cache", "-", ">", "{", "if", "(", "scope", "=", "=", "CacheScope", ".", "GLOBAL_SCOPE", ")", "{", "if", "(", "logEnabled", ")", "logger", ".", "debug", "(", "\"", "<STR_LIT>", "\"", ",", "cache", ".", "globalCache", ".", "size", "(", ")", ")", ";", "cache", ".", "globalCache", ".", "clear", "(", ")", ";", "}", "if", "(", "logEnabled", ")", "logger", ".", "debug", "(", "\"", "<STR_LIT>", "\"", ",", "cache", ".", "applicationCache", ".", "size", "(", ")", ")", ";", "cache", ".", "applicationCache", ".", "clear", "(", ")", ";", "return", "null", ";", "}", ")", ";", "}", "</s>"]
["<s>", "private", "static", "<", "T", ">", "T", "withCache", "(", "DeserializationContext", "context", ",", "Function", "<", "DeserializerStringCache", ",", "T", ">", "consumer", ")", "{", "DeserializerStringCache", "cache", "=", "(", "DeserializerStringCache", ")", "context", ".", "getAttribute", "(", "ATTR_STRING_CACHE", ")", ";", "return", "consumer", ".", "apply", "(", "cache", ")", ";", "}", "</s>"]
["<s>", "private", "static", "<", "T", ">", "T", "withCache", "(", "ObjectReader", "reader", ",", "Function", "<", "DeserializerStringCache", ",", "T", ">", "consumer", ")", "{", "DeserializerStringCache", "cache", "=", "(", "DeserializerStringCache", ")", "reader", ".", "getAttributes", "(", ")", ".", "getAttribute", "(", "ATTR_STRING_CACHE", ")", ";", "return", "consumer", ".", "apply", "(", "cache", ")", ";", "}", "</s>"]
["<s>", "public", "ObjectReader", "initReader", "(", "ObjectReader", "reader", ")", "{", "return", "reader", ".", "withAttribute", "(", "ATTR_STRING_CACHE", ",", "this", ")", ";", "}", "</s>"]
["<s>", "public", "String", "apply", "(", "final", "JsonParser", "jp", ")", "throws", "IOException", "{", "return", "apply", "(", "jp", ",", "CacheScope", ".", "APPLICATION_SCOPE", ",", "null", ")", ";", "}", "</s>"]
["<s>", "public", "String", "apply", "(", "final", "JsonParser", "jp", ",", "CacheScope", "cacheScope", ")", "throws", "IOException", "{", "return", "apply", "(", "jp", ",", "cacheScope", ",", "null", ")", ";", "}", "</s>"]
["<s>", "public", "String", "apply", "(", "final", "JsonParser", "jp", ",", "CacheScope", "cacheScope", ",", "Supplier", "<", "String", ">", "source", ")", "throws", "IOException", "{", "return", "apply", "(", "CharBuffer", ".", "wrap", "(", "jp", ",", "source", ")", ",", "cacheScope", ")", ";", "}", "</s>"]
["<s>", "public", "String", "apply", "(", "final", "CharBuffer", "charValue", ")", "{", "return", "apply", "(", "charValue", ",", "CacheScope", ".", "APPLICATION_SCOPE", ")", ";", "}", "</s>"]
["<s>", "public", "String", "apply", "(", "CharBuffer", "charValue", ",", "CacheScope", "cacheScope", ")", "{", "int", "keyLength", "=", "charValue", ".", "length", "(", ")", ";", "if", "(", "(", "lengthLimit", "<", "0", "|", "|", "keyLength", "<", "=", "lengthLimit", ")", ")", "{", "Map", "<", "CharBuffer", ",", "String", ">", "cache", "=", "(", "cacheScope", "=", "=", "CacheScope", ".", "GLOBAL_SCOPE", ")", "?", "globalCache", ":", "applicationCache", ";", "String", "value", "=", "cache", ".", "get", "(", "charValue", ")", ";", "if", "(", "value", "=", "=", "null", ")", "{", "value", "=", "charValue", ".", "consume", "(", "(", "k", ",", "v", ")", "-", ">", "{", "cache", ".", "put", "(", "k", ",", "v", ")", ";", "}", ")", ";", "}", "else", "{", "}", "return", "value", ";", "}", "return", "charValue", ".", "toString", "(", ")", ";", "}", "</s>"]
["<s>", "public", "String", "apply", "(", "final", "String", "stringValue", ",", "CacheScope", "cacheScope", ")", "{", "if", "(", "stringValue", "!", "=", "null", "&", "&", "(", "lengthLimit", "<", "0", "|", "|", "stringValue", ".", "length", "(", ")", "<", "=", "lengthLimit", ")", ")", "{", "return", "(", "String", ")", "(", "cacheScope", "=", "=", "CacheScope", ".", "GLOBAL_SCOPE", "?", "globalCache", ":", "applicationCache", ")", ".", "computeIfAbsent", "(", "CharBuffer", ".", "wrap", "(", "stringValue", ")", ",", "s", "-", ">", "{", "if", "(", "logger", ".", "isTraceEnabled", "(", ")", ")", "logger", ".", "trace", "(", "\"", "<STR_LIT>", "\"", ",", "stringValue", ",", "cacheScope", ")", ";", "return", "stringValue", ";", "}", ")", ";", "}", "return", "stringValue", ";", "}", "</s>"]
["<s>", "public", "int", "size", "(", ")", "{", "return", "globalCache", ".", "size", "(", ")", "+", "applicationCache", ".", "size", "(", ")", ";", "}", "</s>"]
["<s>", "public", "static", "CharBuffer", "wrap", "(", "JsonParser", "source", ",", "Supplier", "<", "String", ">", "stringSource", ")", "throws", "IOException", "{", "return", "new", "ArrayCharBuffer", "(", "source", ",", "stringSource", ")", ";", "}", "</s>"]
["<s>", "public", "static", "CharBuffer", "wrap", "(", "JsonParser", "source", ")", "throws", "IOException", "{", "return", "new", "ArrayCharBuffer", "(", "source", ")", ";", "}", "</s>"]
["<s>", "public", "static", "CharBuffer", "wrap", "(", "String", "source", ")", "{", "return", "new", "StringCharBuffer", "(", "source", ")", ";", "}", "</s>"]
["<s>", "private", "static", "int", "arrayHash", "(", "char", "[", "]", "a", ",", "int", "offset", ",", "int", "length", ")", "{", "if", "(", "a", "=", "=", "null", ")", "return", "0", ";", "int", "result", "=", "0", ";", "int", "limit", "=", "offset", "+", "length", ";", "for", "(", "int", "i", "=", "offset", ";", "i", "<", "limit", ";", "i", "+", "+", ")", "{", "result", "=", "<NUM_LIT:31>", "*", "result", "+", "a", "[", "i", "]", ";", "}", "return", "result", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testLookup", "(", ")", "{", "EnumLookup", "<", "TestEnum", ">", "lookup", "=", "new", "EnumLookup", "<", ">", "(", "TestEnum", ".", "class", ",", "v", "-", ">", "v", ".", "name", ".", "toCharArray", "(", ")", ")", ";", "char", "[", "]", "buffer", "=", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ";", "Assert", ".", "assertSame", "(", "TestEnum", ".", "VAL_ONE", ",", "lookup", ".", "find", "(", "buffer", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:3>", ")", ")", ";", "Assert", ".", "assertSame", "(", "TestEnum", ".", "VAL_TWO", ",", "lookup", ".", "find", "(", "buffer", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:3>", ")", ")", ";", "Assert", ".", "assertSame", "(", "TestEnum", ".", "VAL_THREE", ",", "lookup", ".", "find", "(", "buffer", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:5>", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testRealDecode", "(", ")", "throws", "Exception", "{", "Applications", "applications", ";", "File", "localDiscovery", "=", "new", "File", "(", "\"", "<STR_LIT>", "\"", ")", ";", "long", "testStart", "=", "System", ".", "currentTimeMillis", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "<NUM_LIT>", ";", "i", "+", "+", ")", "{", "try", "(", "InputStream", "is", "=", "new", "FileInputStream", "(", "localDiscovery", ")", ")", "{", "long", "start", "=", "System", ".", "currentTimeMillis", "(", ")", ";", "applications", "=", "codec", ".", "readValue", "(", "Applications", ".", "class", ",", "is", ")", ";", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", "+", "applications", ".", "getRegisteredApplications", "(", ")", ".", "size", "(", ")", "+", "\"", "<STR_LIT>", "\"", "+", "(", "System", ".", "currentTimeMillis", "(", ")", "-", "start", ")", ")", ";", "}", "}", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", "+", "\"", "<STR_LIT>", "\"", "+", "(", "System", ".", "currentTimeMillis", "(", ")", "-", "testStart", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testCuriosity", "(", ")", "{", "char", "[", "]", "arr1", "=", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ";", "char", "[", "]", "arr2", "=", "new", "char", "[", "]", "{", "<CHAR_LIT>", ",", "<CHAR_LIT:e>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", "}", ";", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", "+", "arr1", ".", "equals", "(", "arr2", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testDecodeTimeout", "(", ")", "throws", "Exception", "{", "ExecutorService", "executor", "=", "Executors", ".", "newFixedThreadPool", "(", "<NUM_LIT:5>", ")", ";", "File", "localDiscovery", "=", "downloadRegistration", "(", "System", ".", "getProperty", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "Callable", "<", "Applications", ">", "task", "=", "(", ")", "-", ">", "{", "try", "(", "InputStream", "is", "=", "new", "FileInputStream", "(", "localDiscovery", ")", ")", "{", "return", "codec", ".", "readValue", "(", "Applications", ".", "class", ",", "is", ")", ";", "}", "}", ";", "final", "int", "cancelAllButNthTask", "=", "<NUM_LIT:3>", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "<NUM_LIT:30>", ";", "i", "+", "+", ")", "{", "Future", "<", "Applications", ">", "appsFuture", "=", "executor", ".", "submit", "(", "task", ")", ";", "if", "(", "i", "%", "cancelAllButNthTask", "<", "cancelAllButNthTask", "-", "1", ")", "{", "Thread", ".", "sleep", "(", "UNREASONABLE_TIMEOUT_MS", ")", ";", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT:...>", "\"", "+", "\"", "<STR_LIT>", "\"", "+", "i", "+", "\"", "<STR_LIT>", "\"", "+", "(", "i", "%", "<NUM_LIT:3>", ")", ")", ";", "appsFuture", ".", "cancel", "(", "true", ")", ";", "}", "try", "{", "Applications", "apps", "=", "appsFuture", ".", "get", "(", ")", ";", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", "+", "apps", ".", "toString", "(", ")", "+", "\"", "<STR_LIT::>", "\"", "+", "apps", ".", "getRegisteredApplications", "(", ")", ".", "size", "(", ")", "+", "\"", "<STR_LIT>", "\"", "+", "i", "+", "\"", "<STR_LIT>", "\"", "+", "(", "i", "%", "<NUM_LIT:3>", ")", ")", ";", "}", "catch", "(", "Exception", "e", ")", "{", "System", ".", "out", ".", "println", "(", "e", "+", "\"", "<STR_LIT>", "\"", "+", "\"", "<STR_LIT>", "\"", "+", "i", "+", "\"", "<STR_LIT>", "\"", "+", "(", "i", "%", "<NUM_LIT:3>", ")", ")", ";", "}", "}", "}", "</s>"]
["<s>", "private", "static", "File", "downloadRegistration", "(", "String", "discoveryUrl", ")", "throws", "IOException", "{", "if", "(", "discoveryUrl", "=", "=", "null", ")", "{", "throw", "new", "IllegalArgumentException", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "File", "localFile", "=", "File", ".", "createTempFile", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ")", ";", "URL", "url", "=", "new", "URL", "(", "discoveryUrl", ")", ";", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", "+", "url", "+", "\"", "<STR_LIT>", "\"", "+", "localFile", ")", ";", "HttpURLConnection", "hurlConn", "=", "(", "HttpURLConnection", ")", "url", ".", "openConnection", "(", ")", ";", "hurlConn", ".", "setDoOutput", "(", "true", ")", ";", "hurlConn", ".", "setRequestProperty", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ")", ";", "hurlConn", ".", "connect", "(", ")", ";", "try", "(", "InputStream", "is", "=", "hurlConn", ".", "getInputStream", "(", ")", ")", "{", "java", ".", "nio", ".", "file", ".", "Files", ".", "copy", "(", "is", ",", "localFile", ".", "toPath", "(", ")", ",", "StandardCopyOption", ".", "REPLACE_EXISTING", ")", ";", "}", "return", "localFile", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testVersionAndAppHash", "(", ")", "{", "Applications", "apps", "=", "new", "Applications", "(", ")", ";", "assertEquals", "(", "-", "<NUM_LIT>", ",", "(", "long", ")", "apps", ".", "getVersion", "(", ")", ")", ";", "assertNull", "(", "apps", ".", "getAppsHashCode", "(", ")", ")", ";", "apps", ".", "setVersion", "(", "<NUM_LIT>", ")", ";", "apps", ".", "setAppsHashCode", "(", "\"", "<STR_LIT>", "\"", ")", ";", "assertEquals", "(", "<NUM_LIT>", ",", "(", "long", ")", "apps", ".", "getVersion", "(", ")", ")", ";", "assertEquals", "(", "\"", "<STR_LIT>", "\"", ",", "apps", ".", "getAppsHashCode", "(", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "shuffleSecureVirtualHostNameMapLastInstanceTest", "(", ")", "{", "DataCenterInfo", "myDCI", "=", "new", "DataCenterInfo", "(", ")", "{", "public", "DataCenterInfo", ".", "Name", "getName", "(", ")", "{", "return", "DataCenterInfo", ".", "Name", ".", "MyOwn", ";", "}", "}", ";", "InstanceInfo", "instanceInfo", "=", "InstanceInfo", ".", "Builder", ".", "newBuilder", "(", ")", ".", "setAppName", "(", "\"", "<STR_LIT>", "\"", ")", ".", "setVIPAddress", "(", "\"", "<STR_LIT>", "\"", ")", ".", "setSecureVIPAddress", "(", "\"", "<STR_LIT>", "\"", ")", ".", "setDataCenterInfo", "(", "myDCI", ")", ".", "setHostName", "(", "\"", "<STR_LIT>", "\"", ")", ".", "build", "(", ")", ";", "Application", "application", "=", "new", "Application", "(", "\"", "<STR_LIT>", "\"", ")", ";", "application", ".", "addInstance", "(", "instanceInfo", ")", ";", "Applications", "applications", "=", "new", "Applications", "(", ")", ";", "assertEquals", "(", "0", ",", "applications", ".", "size", "(", ")", ")", ";", "applications", ".", "addApplication", "(", "application", ")", ";", "assertEquals", "(", "1", ",", "applications", ".", "size", "(", ")", ")", ";", "applications", ".", "shuffleInstances", "(", "true", ")", ";", "List", "<", "InstanceInfo", ">", "testApp", "=", "applications", ".", "getInstancesByVirtualHostName", "(", "\"", "<STR_LIT>", "\"", ")", ";", "assertEquals", "(", "Iterables", ".", "getOnlyElement", "(", "testApp", ")", ",", "application", ".", "getByInstanceId", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "application", ".", "removeInstance", "(", "instanceInfo", ")", ";", "assertNull", "(", "application", ".", "getByInstanceId", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "assertEquals", "(", "0", ",", "applications", ".", "size", "(", ")", ")", ";", "applications", ".", "shuffleInstances", "(", "true", ")", ";", "testApp", "=", "applications", ".", "getInstancesBySecureVirtualHostName", "(", "\"", "<STR_LIT>", "\"", ")", ";", "assertTrue", "(", "testApp", ".", "isEmpty", "(", ")", ")", ";", "assertNull", "(", "application", ".", "getByInstanceId", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "shuffleRemoteRegistryTest", "(", ")", "throws", "Exception", "{", "AmazonInfo", "ai1", "=", "AmazonInfo", ".", "Builder", ".", "newBuilder", "(", ")", ".", "addMetadata", "(", "MetaDataKey", ".", "availabilityZone", ",", "\"", "<STR_LIT>", "\"", ")", ".", "build", "(", ")", ";", "InstanceInfo", "instanceInfo1", "=", "InstanceInfo", ".", "Builder", ".", "newBuilder", "(", ")", ".", "setAppName", "(", "\"", "<STR_LIT>", "\"", ")", ".", "setVIPAddress", "(", "\"", "<STR_LIT>", "\"", ")", ".", "setSecureVIPAddress", "(", "\"", "<STR_LIT>", "\"", ")", ".", "setDataCenterInfo", "(", "ai1", ")", ".", "setAppName", "(", "\"", "<STR_LIT>", "\"", ")", ".", "setHostName", "(", "\"", "<STR_LIT>", "\"", ")", ".", "build", "(", ")", ";", "AmazonInfo", "ai2", "=", "AmazonInfo", ".", "Builder", ".", "newBuilder", "(", ")", ".", "addMetadata", "(", "MetaDataKey", ".", "availabilityZone", ",", "\"", "<STR_LIT>", "\"", ")", ".", "build", "(", ")", ";", "InstanceInfo", "instanceInfo2", "=", "InstanceInfo", ".", "Builder", ".", "newBuilder", "(", ")", ".", "setAppName", "(", "\"", "<STR_LIT>", "\"", ")", ".", "setVIPAddress", "(", "\"", "<STR_LIT>", "\"", ")", ".", "setSecureVIPAddress", "(", "\"", "<STR_LIT>", "\"", ")", ".", "setDataCenterInfo", "(", "ai2", ")", ".", "setAppName", "(", "\"", "<STR_LIT>", "\"", ")", ".", "setHostName", "(", "\"", "<STR_LIT>", "\"", ")", ".", "build", "(", ")", ";", "Application", "application", "=", "new", "Application", "(", "\"", "<STR_LIT>", "\"", ")", ";", "application", ".", "addInstance", "(", "instanceInfo1", ")", ";", "application", ".", "addInstance", "(", "instanceInfo2", ")", ";", "Applications", "applications", "=", "new", "Applications", "(", ")", ";", "assertEquals", "(", "0", ",", "applications", ".", "size", "(", ")", ")", ";", "applications", ".", "addApplication", "(", "application", ")", ";", "assertEquals", "(", "<NUM_LIT:2>", ",", "applications", ".", "size", "(", ")", ")", ";", "EurekaClientConfig", "clientConfig", "=", "Mockito", ".", "mock", "(", "EurekaClientConfig", ".", "class", ")", ";", "Mockito", ".", "when", "(", "clientConfig", ".", "getAvailabilityZones", "(", "\"", "<STR_LIT>", "\"", ")", ")", ".", "thenReturn", "(", "new", "String", "[", "]", "{", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", "}", ")", ";", "Mockito", ".", "when", "(", "clientConfig", ".", "getAvailabilityZones", "(", "\"", "<STR_LIT>", "\"", ")", ")", ".", "thenReturn", "(", "new", "String", "[", "]", "{", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", "}", ")", ";", "Mockito", ".", "when", "(", "clientConfig", ".", "getRegion", "(", ")", ")", ".", "thenReturn", "(", "\"", "<STR_LIT>", "\"", ")", ";", "Constructor", "<", "?", ">", "ctor", "=", "InstanceRegionChecker", ".", "class", ".", "getDeclaredConstructor", "(", "AzToRegionMapper", ".", "class", ",", "String", ".", "class", ")", ";", "ctor", ".", "setAccessible", "(", "true", ")", ";", "PropertyBasedAzToRegionMapper", "azToRegionMapper", "=", "new", "PropertyBasedAzToRegionMapper", "(", "clientConfig", ")", ";", "azToRegionMapper", ".", "setRegionsToFetch", "(", "new", "String", "[", "]", "{", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", "}", ")", ";", "InstanceRegionChecker", "instanceRegionChecker", "=", "(", "InstanceRegionChecker", ")", "ctor", ".", "newInstance", "(", "azToRegionMapper", ",", "\"", "<STR_LIT>", "\"", ")", ";", "Map", "<", "String", ",", "Applications", ">", "remoteRegionsRegistry", "=", "new", "HashMap", "<", ">", "(", ")", ";", "remoteRegionsRegistry", ".", "put", "(", "\"", "<STR_LIT>", "\"", ",", "new", "Applications", "(", ")", ")", ";", "applications", ".", "shuffleAndIndexInstances", "(", "remoteRegionsRegistry", ",", "clientConfig", ",", "instanceRegionChecker", ")", ";", "assertNotNull", "(", "remoteRegionsRegistry", ".", "get", "(", "\"", "<STR_LIT>", "\"", ")", ".", "getRegisteredApplications", "(", "\"", "<STR_LIT>", "\"", ")", ".", "getByInstanceId", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "assertNull", "(", "applications", ".", "getRegisteredApplications", "(", "\"", "<STR_LIT>", "\"", ")", ".", "getByInstanceId", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "assertNull", "(", "remoteRegionsRegistry", ".", "get", "(", "\"", "<STR_LIT>", "\"", ")", ".", "getRegisteredApplications", "(", "\"", "<STR_LIT>", "\"", ")", ".", "getByInstanceId", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "assertNotNull", "(", "applications", ".", "getRegisteredApplications", "(", "\"", "<STR_LIT>", "\"", ")", ".", "getByInstanceId", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testRegisteredApplications", "(", ")", "{", "DataCenterInfo", "myDCI", "=", "new", "DataCenterInfo", "(", ")", "{", "public", "DataCenterInfo", ".", "Name", "getName", "(", ")", "{", "return", "DataCenterInfo", ".", "Name", ".", "MyOwn", ";", "}", "}", ";", "InstanceInfo", "instanceInfo", "=", "InstanceInfo", ".", "Builder", ".", "newBuilder", "(", ")", ".", "setAppName", "(", "\"", "<STR_LIT>", "\"", ")", ".", "setVIPAddress", "(", "\"", "<STR_LIT>", "\"", ")", ".", "setSecureVIPAddress", "(", "\"", "<STR_LIT>", "\"", ")", ".", "setDataCenterInfo", "(", "myDCI", ")", ".", "setHostName", "(", "\"", "<STR_LIT>", "\"", ")", ".", "build", "(", ")", ";", "Application", "application", "=", "new", "Application", "(", "\"", "<STR_LIT>", "\"", ")", ";", "application", ".", "addInstance", "(", "instanceInfo", ")", ";", "Applications", "applications", "=", "new", "Applications", "(", ")", ";", "applications", ".", "addApplication", "(", "application", ")", ";", "List", "<", "Application", ">", "appsList", "=", "applications", ".", "getRegisteredApplications", "(", ")", ";", "Assert", ".", "assertEquals", "(", "1", ",", "appsList", ".", "size", "(", ")", ")", ";", "Assert", ".", "assertTrue", "(", "appsList", ".", "contains", "(", "application", ")", ")", ";", "Assert", ".", "assertEquals", "(", "application", ",", "applications", ".", "getRegisteredApplications", "(", "application", ".", "getName", "(", ")", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testRegisteredApplicationsConstructor", "(", ")", "{", "DataCenterInfo", "myDCI", "=", "new", "DataCenterInfo", "(", ")", "{", "public", "DataCenterInfo", ".", "Name", "getName", "(", ")", "{", "return", "DataCenterInfo", ".", "Name", ".", "MyOwn", ";", "}", "}", ";", "InstanceInfo", "instanceInfo", "=", "InstanceInfo", ".", "Builder", ".", "newBuilder", "(", ")", ".", "setAppName", "(", "\"", "<STR_LIT>", "\"", ")", ".", "setVIPAddress", "(", "\"", "<STR_LIT>", "\"", ")", ".", "setSecureVIPAddress", "(", "\"", "<STR_LIT>", "\"", ")", ".", "setDataCenterInfo", "(", "myDCI", ")", ".", "setHostName", "(", "\"", "<STR_LIT>", "\"", ")", ".", "build", "(", ")", ";", "Application", "application", "=", "new", "Application", "(", "\"", "<STR_LIT>", "\"", ")", ";", "application", ".", "addInstance", "(", "instanceInfo", ")", ";", "Applications", "applications", "=", "new", "Applications", "(", "\"", "<STR_LIT>", "\"", ",", "-", "<NUM_LIT>", ",", "Arrays", ".", "asList", "(", "application", ")", ")", ";", "List", "<", "Application", ">", "appsList", "=", "applications", ".", "getRegisteredApplications", "(", ")", ";", "Assert", ".", "assertEquals", "(", "1", ",", "appsList", ".", "size", "(", ")", ")", ";", "Assert", ".", "assertTrue", "(", "appsList", ".", "contains", "(", "application", ")", ")", ";", "Assert", ".", "assertEquals", "(", "application", ",", "applications", ".", "getRegisteredApplications", "(", "application", ".", "getName", "(", ")", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testApplicationsHashAndVersion", "(", ")", "{", "Applications", "applications", "=", "new", "Applications", "(", "\"", "<STR_LIT>", "\"", ",", "<NUM_LIT>", ",", "Collections", ".", "emptyList", "(", ")", ")", ";", "assertEquals", "(", "<NUM_LIT>", ",", "(", "long", ")", "applications", ".", "getVersion", "(", ")", ")", ";", "assertEquals", "(", "\"", "<STR_LIT>", "\"", ",", "applications", ".", "getAppsHashCode", "(", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testPopulateInstanceCount", "(", ")", "{", "DataCenterInfo", "myDCI", "=", "new", "DataCenterInfo", "(", ")", "{", "public", "DataCenterInfo", ".", "Name", "getName", "(", ")", "{", "return", "DataCenterInfo", ".", "Name", ".", "MyOwn", ";", "}", "}", ";", "InstanceInfo", "instanceInfo", "=", "InstanceInfo", ".", "Builder", ".", "newBuilder", "(", ")", ".", "setAppName", "(", "\"", "<STR_LIT>", "\"", ")", ".", "setVIPAddress", "(", "\"", "<STR_LIT>", "\"", ")", ".", "setSecureVIPAddress", "(", "\"", "<STR_LIT>", "\"", ")", ".", "setDataCenterInfo", "(", "myDCI", ")", ".", "setHostName", "(", "\"", "<STR_LIT>", "\"", ")", ".", "setStatus", "(", "InstanceStatus", ".", "UP", ")", ".", "build", "(", ")", ";", "Application", "application", "=", "new", "Application", "(", "\"", "<STR_LIT>", "\"", ")", ";", "application", ".", "addInstance", "(", "instanceInfo", ")", ";", "Applications", "applications", "=", "new", "Applications", "(", ")", ";", "applications", ".", "addApplication", "(", "application", ")", ";", "TreeMap", "<", "String", ",", "AtomicInteger", ">", "instanceCountMap", "=", "new", "TreeMap", "<", ">", "(", ")", ";", "applications", ".", "populateInstanceCountMap", "(", "instanceCountMap", ")", ";", "assertEquals", "(", "1", ",", "instanceCountMap", ".", "size", "(", ")", ")", ";", "assertNotNull", "(", "instanceCountMap", ".", "get", "(", "InstanceStatus", ".", "UP", ".", "name", "(", ")", ")", ")", ";", "assertEquals", "(", "1", ",", "instanceCountMap", ".", "get", "(", "InstanceStatus", ".", "UP", ".", "name", "(", ")", ")", ".", "get", "(", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testGetNextIndex", "(", ")", "{", "DataCenterInfo", "myDCI", "=", "new", "DataCenterInfo", "(", ")", "{", "public", "DataCenterInfo", ".", "Name", "getName", "(", ")", "{", "return", "DataCenterInfo", ".", "Name", ".", "MyOwn", ";", "}", "}", ";", "InstanceInfo", "instanceInfo", "=", "InstanceInfo", ".", "Builder", ".", "newBuilder", "(", ")", ".", "setAppName", "(", "\"", "<STR_LIT>", "\"", ")", ".", "setVIPAddress", "(", "\"", "<STR_LIT>", "\"", ")", ".", "setSecureVIPAddress", "(", "\"", "<STR_LIT>", "\"", ")", ".", "setDataCenterInfo", "(", "myDCI", ")", ".", "setHostName", "(", "\"", "<STR_LIT>", "\"", ")", ".", "setStatus", "(", "InstanceStatus", ".", "UP", ")", ".", "build", "(", ")", ";", "Application", "application", "=", "new", "Application", "(", "\"", "<STR_LIT>", "\"", ")", ";", "application", ".", "addInstance", "(", "instanceInfo", ")", ";", "Applications", "applications", "=", "new", "Applications", "(", ")", ";", "applications", ".", "addApplication", "(", "application", ")", ";", "assertNotNull", "(", "applications", ".", "getNextIndex", "(", "\"", "<STR_LIT>", "\"", ",", "false", ")", ")", ";", "assertEquals", "(", "0", "L", ",", "applications", ".", "getNextIndex", "(", "\"", "<STR_LIT>", "\"", ",", "false", ")", ".", "get", "(", ")", ")", ";", "assertNotNull", "(", "applications", ".", "getNextIndex", "(", "\"", "<STR_LIT>", "\"", ",", "true", ")", ")", ";", "assertEquals", "(", "0", "L", ",", "applications", ".", "getNextIndex", "(", "\"", "<STR_LIT>", "\"", ",", "true", ")", ".", "get", "(", ")", ")", ";", "assertNotSame", "(", "applications", ".", "getNextIndex", "(", "\"", "<STR_LIT>", "\"", ",", "false", ")", ",", "applications", ".", "getNextIndex", "(", "\"", "<STR_LIT>", "\"", ",", "true", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testReconcileHashcode", "(", ")", "{", "DataCenterInfo", "myDCI", "=", "new", "DataCenterInfo", "(", ")", "{", "public", "DataCenterInfo", ".", "Name", "getName", "(", ")", "{", "return", "DataCenterInfo", ".", "Name", ".", "MyOwn", ";", "}", "}", ";", "InstanceInfo", "instanceInfo", "=", "InstanceInfo", ".", "Builder", ".", "newBuilder", "(", ")", ".", "setAppName", "(", "\"", "<STR_LIT>", "\"", ")", ".", "setVIPAddress", "(", "\"", "<STR_LIT>", "\"", ")", ".", "setSecureVIPAddress", "(", "\"", "<STR_LIT>", "\"", ")", ".", "setDataCenterInfo", "(", "myDCI", ")", ".", "setHostName", "(", "\"", "<STR_LIT>", "\"", ")", ".", "setStatus", "(", "InstanceStatus", ".", "UP", ")", ".", "build", "(", ")", ";", "Application", "application", "=", "new", "Application", "(", "\"", "<STR_LIT>", "\"", ")", ";", "application", ".", "addInstance", "(", "instanceInfo", ")", ";", "Applications", "applications", "=", "new", "Applications", "(", ")", ";", "String", "hashCode", "=", "applications", ".", "getReconcileHashCode", "(", ")", ";", "assertTrue", "(", "hashCode", ".", "isEmpty", "(", ")", ")", ";", "applications", ".", "addApplication", "(", "application", ")", ";", "hashCode", "=", "applications", ".", "getReconcileHashCode", "(", ")", ";", "assertFalse", "(", "hashCode", ".", "isEmpty", "(", ")", ")", ";", "assertEquals", "(", "\"", "<STR_LIT>", "\"", ",", "hashCode", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testInstanceFiltering", "(", ")", "{", "DataCenterInfo", "myDCI", "=", "new", "DataCenterInfo", "(", ")", "{", "public", "DataCenterInfo", ".", "Name", "getName", "(", ")", "{", "return", "DataCenterInfo", ".", "Name", ".", "MyOwn", ";", "}", "}", ";", "InstanceInfo", "instanceInfo", "=", "InstanceInfo", ".", "Builder", ".", "newBuilder", "(", ")", ".", "setAppName", "(", "\"", "<STR_LIT>", "\"", ")", ".", "setVIPAddress", "(", "\"", "<STR_LIT>", "\"", ")", ".", "setSecureVIPAddress", "(", "\"", "<STR_LIT>", "\"", ")", ".", "setDataCenterInfo", "(", "myDCI", ")", ".", "setHostName", "(", "\"", "<STR_LIT>", "\"", ")", ".", "setStatus", "(", "InstanceStatus", ".", "DOWN", ")", ".", "build", "(", ")", ";", "Application", "application", "=", "new", "Application", "(", "\"", "<STR_LIT>", "\"", ")", ";", "application", ".", "addInstance", "(", "instanceInfo", ")", ";", "Applications", "applications", "=", "new", "Applications", "(", ")", ";", "applications", ".", "addApplication", "(", "application", ")", ";", "applications", ".", "shuffleInstances", "(", "true", ")", ";", "assertNotNull", "(", "applications", ".", "getRegisteredApplications", "(", "\"", "<STR_LIT>", "\"", ")", ".", "getByInstanceId", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "assertTrue", "(", "applications", ".", "getInstancesBySecureVirtualHostName", "(", "\"", "<STR_LIT>", "\"", ")", ".", "isEmpty", "(", ")", ")", ";", "assertTrue", "(", "applications", ".", "getInstancesBySecureVirtualHostName", "(", "\"", "<STR_LIT>", "\"", ")", ".", "isEmpty", "(", ")", ")", ";", "}", "</s>"]
["<s>", "private", "void", "shutdownAndAwaitTermination", "(", "ExecutorService", "pool", ")", "{", "pool", ".", "shutdown", "(", ")", ";", "try", "{", "if", "(", "!", "pool", ".", "awaitTermination", "(", "<NUM_LIT:3>", ",", "TimeUnit", ".", "SECONDS", ")", ")", "{", "pool", ".", "shutdownNow", "(", ")", ";", "}", "}", "catch", "(", "InterruptedException", "e", ")", "{", "logger", ".", "warn", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "}", "</s>"]
["<s>", "public", "synchronized", "long", "setIsDirtyWithTime", "(", ")", "{", "setIsDirty", "(", ")", ";", "return", "lastDirtyTimestamp", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testStatusOverrideWithRenewAppliedToAReplica", "(", ")", "throws", "Exception", "{", "InstanceInfo", "seed", "=", "createLocalInstance", "(", "LOCAL_REGION_INSTANCE_1_HOSTNAME", ")", ";", "seed", ".", "setLastDirtyTimestamp", "(", "<NUM_LIT>", ")", ";", "InstanceInfo", "myInstance1", "=", "new", "InstanceInfo", "(", "seed", ")", ";", "registerInstanceLocally", "(", "myInstance1", ")", ";", "verifyLocalInstanceStatus", "(", "myInstance1", ".", "getId", "(", ")", ",", "InstanceStatus", ".", "UP", ")", ";", "boolean", "statusResult", "=", "registry", ".", "statusUpdate", "(", "LOCAL_REGION_APP_NAME", ",", "seed", ".", "getId", "(", ")", ",", "InstanceStatus", ".", "OUT_OF_SERVICE", ",", "\"", "<STR_LIT:0>", "\"", ",", "false", ")", ";", "assertThat", "(", "\"", "<STR_LIT>", "\"", ",", "statusResult", ",", "is", "(", "true", ")", ")", ";", "verifyLocalInstanceStatus", "(", "seed", ".", "getId", "(", ")", ",", "InstanceStatus", ".", "OUT_OF_SERVICE", ")", ";", "InstanceInfo", "registeredInstance", "=", "registry", ".", "getInstanceByAppAndId", "(", "seed", ".", "getAppName", "(", ")", ",", "seed", ".", "getId", "(", ")", ")", ";", "registeredInstance", ".", "setStatusWithoutDirty", "(", "InstanceStatus", ".", "UP", ")", ";", "verifyLocalInstanceStatus", "(", "seed", ".", "getId", "(", ")", ",", "InstanceStatus", ".", "UP", ")", ";", "registry", ".", "renew", "(", "seed", ".", "getAppName", "(", ")", ",", "seed", ".", "getId", "(", ")", ",", "false", ")", ";", "verifyLocalInstanceStatus", "(", "seed", ".", "getId", "(", ")", ",", "InstanceStatus", ".", "OUT_OF_SERVICE", ")", ";", "statusResult", "=", "registry", ".", "deleteStatusOverride", "(", "LOCAL_REGION_APP_NAME", ",", "seed", ".", "getId", "(", ")", ",", "InstanceStatus", ".", "DOWN", ",", "\"", "<STR_LIT:0>", "\"", ",", "false", ")", ";", "assertThat", "(", "\"", "<STR_LIT>", "\"", ",", "statusResult", ",", "is", "(", "true", ")", ")", ";", "verifyLocalInstanceStatus", "(", "seed", ".", "getId", "(", ")", ",", "InstanceStatus", ".", "DOWN", ")", ";", "InstanceInfo", "myInstance3", "=", "new", "InstanceInfo", "(", "seed", ")", ";", "myInstance3", ".", "setLastDirtyTimestamp", "(", "<NUM_LIT>", ")", ";", "registry", ".", "register", "(", "myInstance3", ",", "<NUM_LIT>", ",", "false", ")", ";", "verifyLocalInstanceStatus", "(", "seed", ".", "getId", "(", ")", ",", "InstanceStatus", ".", "UP", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "shouldUnregisterOnShutdown", "(", ")", "{", "return", "prefixedConfig", ".", "getBoolean", "(", "SHOULD_UNREGISTER_ON_SHUTDOWN_KEY", ",", "true", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testDoNotUnregisterOnShutdown", "(", ")", "throws", "Exception", "{", "client", ".", "shutdown", "(", ")", ";", "ConfigurationManager", ".", "getConfigInstance", "(", ")", ".", "setProperty", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ")", ";", "client", "=", "Mockito", ".", "spy", "(", "new", "TestClient", "(", "applicationInfoManager", ",", "new", "DefaultEurekaClientConfig", "(", ")", ")", ")", ";", "client", ".", "shutdown", "(", ")", ";", "Mockito", ".", "verify", "(", "client", ",", "Mockito", ".", "never", "(", ")", ")", ".", "unregister", "(", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "shouldEnforceRegistrationAtInit", "(", ")", "{", "return", "prefixedConfig", ".", "getBoolean", "(", "SHOULD_ENFORCE_REGISTRATION_AT_INIT", ",", "false", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "(", "expected", "=", "ProvisionException", ".", "class", ")", "public", "void", "testEnforcingRegistrationOnInitFastFail", "(", ")", "{", "Injector", "injector", "=", "LifecycleInjector", ".", "builder", "(", ")", ".", "withModules", "(", "new", "AbstractModule", "(", ")", "{", "@", "Override", "protected", "void", "configure", "(", ")", "{", "bind", "(", "EurekaInstanceConfig", ".", "class", ")", ".", "to", "(", "LocalEurekaInstanceConfig", ".", "class", ")", ";", "bind", "(", "EurekaClientConfig", ".", "class", ")", ".", "to", "(", "BadServerEurekaClientConfig2", ".", "class", ")", ";", "bind", "(", "AbstractDiscoveryClientOptionalArgs", ".", "class", ")", ".", "to", "(", "Jersey1DiscoveryClientOptionalArgs", ".", "class", ")", ".", "in", "(", "Scopes", ".", "SINGLETON", ")", ";", "}", "}", ")", ".", "build", "(", ")", ".", "createInjector", "(", ")", ";", "LifecycleManager", "lifecycleManager", "=", "injector", ".", "getInstance", "(", "LifecycleManager", ".", "class", ")", ";", "try", "{", "lifecycleManager", ".", "start", "(", ")", ";", "}", "catch", "(", "Exception", "e", ")", "{", "throw", "new", "RuntimeException", "(", "e", ")", ";", "}", "EurekaClient", "client", "=", "injector", ".", "getInstance", "(", "EurekaClient", ".", "class", ")", ";", "}", "</s>"]
["<s>", "public", "Optional", "<", "SSLContext", ">", "getSSLContext", "(", ")", "{", "return", "sslContext", ";", "}", "</s>"]
["<s>", "@", "Inject", "(", "optional", "=", "true", ")", "public", "void", "setSSLContext", "(", "SSLContext", "sslContext", ")", "{", "this", ".", "sslContext", "=", "Optional", ".", "of", "(", "sslContext", ")", ";", "}", "</s>"]
["<s>", "public", "Optional", "<", "HostnameVerifier", ">", "getHostnameVerifier", "(", ")", "{", "return", "hostnameVerifier", ";", "}", "</s>"]
["<s>", "@", "Inject", "(", "optional", "=", "true", ")", "public", "void", "setHostnameVerifier", "(", "HostnameVerifier", "hostnameVerifier", ")", "{", "this", ".", "hostnameVerifier", "=", "Optional", ".", "of", "(", "hostnameVerifier", ")", ";", "}", "</s>"]
["<s>", "public", "B", "withHostnameVerifier", "(", "HostnameVerifier", "hostnameVerifier", ")", "{", "this", ".", "hostnameVerifier", "=", "hostnameVerifier", ";", "return", "self", "(", ")", ";", "}", "</s>"]
["<s>", "public", "void", "withHostnameVerifier", "(", "HostnameVerifier", "hostnameVerifier", ")", "{", "this", ".", "hostnameVerifier", "=", "hostnameVerifier", ";", "}", "</s>"]
["<s>", "public", "static", "Jersey2ApplicationClientFactory", "create", "(", "EurekaClientConfig", "clientConfig", ",", "Collection", "<", "ClientRequestFilter", ">", "additionalFilters", ",", "InstanceInfo", "myInstanceInfo", ",", "AbstractEurekaIdentity", "clientIdentity", ")", "{", "return", "create", "(", "clientConfig", ",", "additionalFilters", ",", "myInstanceInfo", ",", "clientIdentity", ",", "Optional", ".", "empty", "(", ")", ",", "Optional", ".", "empty", "(", ")", ")", ";", "}", "</s>"]
["<s>", "public", "static", "JerseyEurekaHttpClientFactory", "create", "(", "EurekaClientConfig", "clientConfig", ",", "Collection", "<", "ClientFilter", ">", "additionalFilters", ",", "InstanceInfo", "myInstanceInfo", ",", "AbstractEurekaIdentity", "clientIdentity", ")", "{", "return", "create", "(", "clientConfig", ",", "additionalFilters", ",", "myInstanceInfo", ",", "clientIdentity", ",", "Optional", ".", "empty", "(", ")", ",", "Optional", ".", "empty", "(", ")", ")", ";", "}", "</s>"]
["<s>", "private", "static", "boolean", "maybeReadTimeOut", "(", "Throwable", "e", ")", "{", "do", "{", "if", "(", "IOException", ".", "class", ".", "isInstance", "(", "e", ")", ")", "{", "String", "message", "=", "e", ".", "getMessage", "(", ")", ".", "toLowerCase", "(", ")", ";", "Matcher", "matcher", "=", "READ_TIME_OUT_PATTERN", ".", "matcher", "(", "message", ")", ";", "if", "(", "matcher", ".", "find", "(", ")", ")", "{", "return", "true", ";", "}", "}", "e", "=", "e", ".", "getCause", "(", ")", ";", "}", "while", "(", "e", "!", "=", "null", ")", ";", "return", "false", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testBatchableTaskNetworkReadTimeOutHandling", "(", ")", "throws", "Exception", "{", "TestableInstanceReplicationTask", "task", "=", "aReplicationTask", "(", ")", ".", "build", "(", ")", ";", "replicationClient", ".", "withReadtimeOut", "(", "1", ")", ";", "ProcessingResult", "status", "=", "replicationTaskProcessor", ".", "process", "(", "Collections", ".", "<", "ReplicationTask", ">", "singletonList", "(", "task", ")", ")", ";", "assertThat", "(", "status", ",", "is", "(", "ProcessingResult", ".", "Congestion", ")", ")", ";", "assertThat", "(", "task", ".", "getProcessingState", "(", ")", ",", "is", "(", "ProcessingState", ".", "Pending", ")", ")", ";", "}", "</s>"]
["<s>", "public", "void", "withReadtimeOut", "(", "int", "readtimeOutRepeatCount", ")", "{", "this", ".", "readtimeOutRepeatCount", "=", "readtimeOutRepeatCount", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testInstanceInfoEncodeDecodeCompatibilityDueToOverriddenStatusRenaming", "(", ")", "throws", "Exception", "{", "final", "InstanceInfo", "instanceInfo", "=", "infoIterator", ".", "next", "(", ")", ";", "new", "InstanceInfo", ".", "Builder", "(", "instanceInfo", ")", ".", "setOverriddenStatus", "(", "InstanceInfo", ".", "InstanceStatus", ".", "OUT_OF_SERVICE", ")", ";", "Action2", "codingAction", "=", "new", "Action2", "(", ")", "{", "@", "Override", "public", "void", "call", "(", "EncoderWrapper", "encodingCodec", ",", "DecoderWrapper", "decodingCodec", ")", "throws", "IOException", "{", "String", "encodedString", "=", "encodingCodec", ".", "encode", "(", "instanceInfo", ")", ";", "encodedString", "=", "encodedString", ".", "replace", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ")", ";", "InstanceInfo", "decodedValue", "=", "decodingCodec", ".", "decode", "(", "encodedString", ",", "InstanceInfo", ".", "class", ")", ";", "assertThat", "(", "EurekaEntityComparators", ".", "equal", "(", "instanceInfo", ",", "decodedValue", ")", ",", "is", "(", "true", ")", ")", ";", "assertThat", "(", "EurekaEntityComparators", ".", "equal", "(", "instanceInfo", ",", "decodedValue", ",", "new", "EurekaEntityComparators", ".", "RawIdEqualFunc", "(", ")", ")", ",", "is", "(", "true", ")", ")", ";", "}", "}", ";", "verifyForPair", "(", "codingAction", ",", "InstanceInfo", ".", "class", ",", "new", "CodecWrappers", ".", "JacksonJson", "(", ")", ",", "new", "CodecWrappers", ".", "LegacyJacksonJson", "(", ")", ")", ";", "}", "</s>"]
["<s>", "protected", "static", "InstanceInfo", "createLocalInstanceWithIdAndStatus", "(", "String", "hostname", ",", "String", "id", ",", "InstanceInfo", ".", "InstanceStatus", "status", ")", "{", "InstanceInfo", ".", "Builder", "instanceBuilder", "=", "InstanceInfo", ".", "Builder", ".", "newBuilder", "(", ")", ";", "instanceBuilder", ".", "setInstanceId", "(", "id", ")", ";", "instanceBuilder", ".", "setAppName", "(", "LOCAL_REGION_APP_NAME", ")", ";", "instanceBuilder", ".", "setHostName", "(", "hostname", ")", ";", "instanceBuilder", ".", "setIPAddr", "(", "\"", "<STR_LIT>", "\"", ")", ";", "instanceBuilder", ".", "setDataCenterInfo", "(", "getAmazonInfo", "(", "null", ",", "hostname", ")", ")", ";", "instanceBuilder", ".", "setLeaseInfo", "(", "LeaseInfo", ".", "Builder", ".", "newBuilder", "(", ")", ".", "build", "(", ")", ")", ";", "instanceBuilder", ".", "setStatus", "(", "status", ")", ";", "return", "instanceBuilder", ".", "build", "(", ")", ";", "}", "</s>"]
["<s>", "protected", "void", "registerInstanceLocallyWithLeaseDurationInSecs", "(", "InstanceInfo", "remoteInstance", ",", "int", "leaseDurationInSecs", ")", "{", "registry", ".", "register", "(", "remoteInstance", ",", "leaseDurationInSecs", ",", "false", ")", ";", "registeredApps", ".", "add", "(", "new", "Pair", "<", "String", ",", "String", ">", "(", "LOCAL_REGION_APP_NAME", ",", "remoteInstance", ".", "getId", "(", ")", ")", ")", ";", "}", "</s>"]
["<s>", "protected", "SingleEvent", ".", "Action", "renewPartOfTheWholeInstancesAction", "(", ")", "{", "return", "new", "SingleEvent", ".", "Action", "(", ")", "{", "@", "Override", "public", "void", "execute", "(", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "<NUM_LIT>", ";", "j", "+", "+", ")", "{", "registry", ".", "renew", "(", "LOCAL_REGION_APP_NAME", ",", "LOCAL_REGION_INSTANCE_1_HOSTNAME", "+", "j", ",", "false", ")", ";", "}", "}", "}", ";", "}", "</s>"]
["<s>", "protected", "SingleEvent", "buildEvent", "(", "int", "intervalTimeInSecs", ",", "SingleEvent", ".", "Action", "action", ")", "{", "return", "SingleEvent", ".", "Builder", ".", "newBuilder", "(", ")", ".", "withIntervalTimeInMs", "(", "intervalTimeInSecs", "*", "<NUM_LIT:1000>", ")", ".", "withAction", "(", "action", ")", ".", "build", "(", ")", ";", "}", "</s>"]
["<s>", "protected", "List", "<", "SingleEvent", ">", "buildEvents", "(", "int", "intervalTimeInSecs", ",", "int", "eventCount", ",", "SingleEvent", ".", "Action", "action", ")", "{", "List", "<", "SingleEvent", ">", "result", "=", "Lists", ".", "newArrayListWithCapacity", "(", "eventCount", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "eventCount", ";", "i", "+", "+", ")", "{", "result", ".", "add", "(", "SingleEvent", ".", "Builder", ".", "newBuilder", "(", ")", ".", "withIntervalTimeInMs", "(", "intervalTimeInSecs", "*", "<NUM_LIT:1000>", ")", ".", "withAction", "(", "action", ")", ".", "build", "(", ")", ")", ";", "}", "return", "result", ";", "}", "</s>"]
["<s>", "@", "Test", "@", "Ignore", "public", "void", "testLeaseExpirationAndUpdateRenewalThreshold", "(", ")", "throws", "Exception", "{", "final", "int", "registeredInstanceCount", "=", "<NUM_LIT>", ";", "final", "int", "leaseDurationInSecs", "=", "<NUM_LIT:30>", ";", "AsyncSequentialExecutor", "executor", "=", "new", "AsyncSequentialExecutor", "(", ")", ";", "SequentialEvents", "registerMyLocalAppAndInstancesEvents", "=", "SequentialEvents", ".", "of", "(", "buildEvent", "(", "0", ",", "new", "SingleEvent", ".", "Action", "(", ")", "{", "@", "Override", "public", "void", "execute", "(", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "registeredInstanceCount", ";", "j", "+", "+", ")", "{", "registerInstanceLocallyWithLeaseDurationInSecs", "(", "createLocalInstanceWithIdAndStatus", "(", "LOCAL_REGION_APP_NAME", ",", "LOCAL_REGION_INSTANCE_1_HOSTNAME", "+", "j", ",", "InstanceStatus", ".", "UP", ")", ",", "leaseDurationInSecs", ")", ";", "}", "}", "}", ")", ")", ";", "SequentialEvents", "showRegistryStatusEvents", "=", "SequentialEvents", ".", "of", "(", "buildEvents", "(", "<NUM_LIT:5>", ",", "<NUM_LIT:24>", ",", "new", "SingleEvent", ".", "Action", "(", ")", "{", "@", "Override", "public", "void", "execute", "(", ")", "{", "System", ".", "out", ".", "println", "(", "String", ".", "format", "(", "\"", "<STR_LIT>", "\"", "+", "\"", "<STR_LIT>", "\"", ",", "registry", ".", "isLeaseExpirationEnabled", "(", ")", ",", "registry", ".", "getNumOfRenewsInLastMin", "(", ")", ",", "registry", ".", "getNumOfRenewsPerMinThreshold", "(", ")", ",", "registry", ".", "getApplication", "(", "LOCAL_REGION_APP_NAME", ")", ".", "getInstances", "(", ")", ".", "size", "(", ")", ")", ")", ";", "}", "}", ")", ")", ";", "SequentialEvents", "renewEvents", "=", "SequentialEvents", ".", "of", "(", "buildEvent", "(", "<NUM_LIT:15>", ",", "renewPartOfTheWholeInstancesAction", "(", ")", ")", ",", "buildEvent", "(", "<NUM_LIT:30>", ",", "renewPartOfTheWholeInstancesAction", "(", ")", ")", ",", "buildEvent", "(", "<NUM_LIT:30>", ",", "renewPartOfTheWholeInstancesAction", "(", ")", ")", ",", "buildEvent", "(", "<NUM_LIT:30>", ",", "renewPartOfTheWholeInstancesAction", "(", ")", ")", ")", ";", "SequentialEvents", "remoteRegionAddMoreInstancesEvents", "=", "SequentialEvents", ".", "of", "(", "buildEvent", "(", "<NUM_LIT>", ",", "new", "SingleEvent", ".", "Action", "(", ")", "{", "@", "Override", "public", "void", "execute", "(", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "<NUM_LIT>", ";", "i", "+", "+", ")", "{", "InstanceInfo", "newlyCreatedInstance", "=", "createLocalInstanceWithIdAndStatus", "(", "REMOTE_REGION_APP_NAME", ",", "LOCAL_REGION_INSTANCE_1_HOSTNAME", "+", "i", ",", "InstanceStatus", ".", "UP", ")", ";", "remoteRegionApps", ".", "get", "(", "REMOTE_REGION_APP_NAME", ")", ".", "addInstance", "(", "newlyCreatedInstance", ")", ";", "remoteRegionAppsDelta", ".", "get", "(", "REMOTE_REGION_APP_NAME", ")", ".", "addInstance", "(", "newlyCreatedInstance", ")", ";", "}", "}", "}", ")", ")", ";", "SequentialEvents", "checkEvents", "=", "SequentialEvents", ".", "of", "(", "buildEvent", "(", "<NUM_LIT>", ",", "new", "SingleEvent", ".", "Action", "(", ")", "{", "@", "Override", "public", "void", "execute", "(", ")", "{", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", ")", ";", "Preconditions", ".", "checkState", "(", "Boolean", ".", "FALSE", ".", "equals", "(", "registry", ".", "isLeaseExpirationEnabled", "(", ")", ")", ",", "\"", "<STR_LIT>", "\"", ")", ";", "Preconditions", ".", "checkState", "(", "registry", ".", "getNumOfRenewsInLastMin", "(", ")", "=", "=", "0", ",", "\"", "<STR_LIT>", "\"", ")", ";", "Preconditions", ".", "checkState", "(", "registry", ".", "getApplication", "(", "LOCAL_REGION_APP_NAME", ")", ".", "getInstances", "(", ")", ".", "size", "(", ")", "=", "=", "<NUM_LIT>", ",", "\"", "<STR_LIT>", "\"", ")", ";", "}", "}", ")", ",", "buildEvent", "(", "<NUM_LIT>", ",", "new", "SingleEvent", ".", "Action", "(", ")", "{", "@", "Override", "public", "void", "execute", "(", ")", "{", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", ")", ";", "Preconditions", ".", "checkState", "(", "Boolean", ".", "TRUE", ".", "equals", "(", "registry", ".", "isLeaseExpirationEnabled", "(", ")", ")", ",", "\"", "<STR_LIT>", "\"", ")", ";", "Preconditions", ".", "checkState", "(", "registry", ".", "getNumOfRenewsInLastMin", "(", ")", "=", "=", "<NUM_LIT>", ",", "\"", "<STR_LIT>", "\"", ")", ";", "Preconditions", ".", "checkState", "(", "registry", ".", "getApplication", "(", "LOCAL_REGION_APP_NAME", ")", ".", "getInstances", "(", ")", ".", "size", "(", ")", "=", "=", "<NUM_LIT>", ",", "\"", "<STR_LIT>", "\"", ")", ";", "}", "}", ")", ",", "buildEvent", "(", "<NUM_LIT>", ",", "new", "SingleEvent", ".", "Action", "(", ")", "{", "@", "Override", "public", "void", "execute", "(", ")", "{", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", ")", ";", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", "+", "registry", ".", "getNumOfRenewsPerMinThreshold", "(", ")", ")", ";", "Preconditions", ".", "checkState", "(", "registry", ".", "getNumOfRenewsPerMinThreshold", "(", ")", "=", "=", "<NUM_LIT>", ",", "\"", "<STR_LIT>", "\"", ")", ";", "Preconditions", ".", "checkState", "(", "registry", ".", "getApplication", "(", "LOCAL_REGION_APP_NAME", ")", ".", "getInstances", "(", ")", ".", "size", "(", ")", "=", "=", "<NUM_LIT>", ",", "\"", "<STR_LIT>", "\"", ")", ";", "}", "}", ")", ")", ";", "AsyncResult", "<", "AsyncSequentialExecutor", ".", "ResultStatus", ">", "registerMyLocalAppAndInstancesResult", "=", "executor", ".", "run", "(", "registerMyLocalAppAndInstancesEvents", ")", ";", "AsyncResult", "<", "AsyncSequentialExecutor", ".", "ResultStatus", ">", "showRegistryStatusEventResult", "=", "executor", ".", "run", "(", "showRegistryStatusEvents", ")", ";", "AsyncResult", "<", "AsyncSequentialExecutor", ".", "ResultStatus", ">", "renewResult", "=", "executor", ".", "run", "(", "renewEvents", ")", ";", "AsyncResult", "<", "AsyncSequentialExecutor", ".", "ResultStatus", ">", "remoteRegionAddMoreInstancesResult", "=", "executor", ".", "run", "(", "remoteRegionAddMoreInstancesEvents", ")", ";", "AsyncResult", "<", "AsyncSequentialExecutor", ".", "ResultStatus", ">", "checkResult", "=", "executor", ".", "run", "(", "checkEvents", ")", ";", "Assert", ".", "assertEquals", "(", "\"", "<STR_LIT>", "\"", ",", "AsyncSequentialExecutor", ".", "ResultStatus", ".", "DONE", ",", "registerMyLocalAppAndInstancesResult", ".", "getResult", "(", ")", ")", ";", "Assert", ".", "assertEquals", "(", "\"", "<STR_LIT>", "\"", ",", "AsyncSequentialExecutor", ".", "ResultStatus", ".", "DONE", ",", "showRegistryStatusEventResult", ".", "getResult", "(", ")", ")", ";", "Assert", ".", "assertEquals", "(", "\"", "<STR_LIT>", "\"", ",", "AsyncSequentialExecutor", ".", "ResultStatus", ".", "DONE", ",", "renewResult", ".", "getResult", "(", ")", ")", ";", "Assert", ".", "assertEquals", "(", "\"", "<STR_LIT>", "\"", ",", "AsyncSequentialExecutor", ".", "ResultStatus", ".", "DONE", ",", "remoteRegionAddMoreInstancesResult", ".", "getResult", "(", ")", ")", ";", "Assert", ".", "assertEquals", "(", "\"", "<STR_LIT>", "\"", ",", "AsyncSequentialExecutor", ".", "ResultStatus", ".", "DONE", ",", "checkResult", ".", "getResult", "(", ")", ")", ";", "}", "</s>"]
["<s>", "public", "AsyncResult", "<", "ResultStatus", ">", "run", "(", "SequentialEvents", "events", ")", "{", "return", "run", "(", "new", "Callable", "<", "ResultStatus", ">", "(", ")", "{", "@", "Override", "public", "ResultStatus", "call", "(", ")", "throws", "Exception", "{", "if", "(", "events", "=", "=", "null", "|", "|", "CollectionUtils", ".", "isNullOrEmpty", "(", "events", ".", "getEventList", "(", ")", ")", ")", "{", "throw", "new", "IllegalArgumentException", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "for", "(", "SingleEvent", "singleEvent", ":", "events", ".", "getEventList", "(", ")", ")", "{", "new", "Backoff", "(", "singleEvent", ".", "getIntervalTimeInMs", "(", ")", ")", ".", "backoff", "(", ")", ";", "singleEvent", ".", "getAction", "(", ")", ".", "execute", "(", ")", ";", "}", "return", "ResultStatus", ".", "DONE", ";", "}", "}", ")", ";", "}", "</s>"]
["<s>", "protected", "<", "T", ">", "AsyncResult", "<", "T", ">", "run", "(", "Callable", "<", "T", ">", "task", ")", "{", "final", "AsyncResult", "<", "T", ">", "result", "=", "new", "ConcreteAsyncResult", "<", "T", ">", "(", ")", ";", "new", "Thread", "(", "new", "Runnable", "(", ")", "{", "@", "Override", "public", "void", "run", "(", ")", "{", "T", "value", "=", "null", ";", "Optional", "<", "Exception", ">", "e", "=", "Optional", ".", "absent", "(", ")", ";", "try", "{", "value", "=", "task", ".", "call", "(", ")", ";", "result", ".", "handleResult", "(", "value", ")", ";", "}", "catch", "(", "Exception", "e1", ")", "{", "e", "=", "Optional", ".", "of", "(", "e1", ")", ";", "result", ".", "handleError", "(", "e1", ")", ";", "}", "}", "}", ",", "\"", "<STR_LIT>", "\"", "+", "INDEX", ".", "incrementAndGet", "(", ")", ")", ".", "start", "(", ")", ";", "return", "result", ";", "}", "</s>"]
["<s>", "public", "void", "backoff", "(", ")", "throws", "InterruptedException", "{", "Thread", ".", "sleep", "(", "pauseTimeInMs", ")", ";", "}", "</s>"]
["<s>", "public", "void", "handleError", "(", "Throwable", "error", ")", "{", "this", ".", "error", "=", "error", ";", "latch", ".", "countDown", "(", ")", ";", "}", "</s>"]
["<s>", "public", "T", "getResult", "(", ")", "throws", "AsyncExecutorException", "{", "return", "get", "(", ")", ";", "}", "</s>"]
["<s>", "public", "Throwable", "getError", "(", ")", "{", "return", "error", ";", "}", "</s>"]
["<s>", "public", "boolean", "cancel", "(", "boolean", "mayInterruptIfRunning", ")", "{", "latch", ".", "countDown", "(", ")", ";", "return", "false", ";", "}", "</s>"]
["<s>", "public", "boolean", "isCancelled", "(", ")", "{", "return", "false", ";", "}", "</s>"]
["<s>", "public", "T", "get", "(", ")", "throws", "AsyncExecutorException", "{", "try", "{", "latch", ".", "await", "(", ")", ";", "}", "catch", "(", "InterruptedException", "e", ")", "{", "throw", "new", "AsyncExecutorException", "(", "\"", "<STR_LIT>", "\"", ",", "error", ")", ";", "}", "if", "(", "error", "!", "=", "null", ")", "{", "if", "(", "error", "instanceof", "AsyncExecutorException", ")", "{", "throw", "(", "AsyncExecutorException", ")", "error", ";", "}", "else", "{", "throw", "new", "AsyncExecutorException", "(", "\"", "<STR_LIT>", "\"", ",", "error", ")", ";", "}", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "T", "get", "(", "long", "timeout", ",", "TimeUnit", "unit", ")", "throws", "AsyncExecutorException", "{", "try", "{", "if", "(", "latch", ".", "await", "(", "timeout", ",", "unit", ")", ")", "{", "if", "(", "error", "!", "=", "null", ")", "{", "if", "(", "error", "instanceof", "AsyncExecutorException", ")", "{", "throw", "(", "AsyncExecutorException", ")", "error", ";", "}", "else", "{", "throw", "new", "RuntimeException", "(", "\"", "<STR_LIT>", "\"", ",", "error", ")", ";", "}", "}", "return", "result", ";", "}", "else", "{", "throw", "new", "AsyncExecutorException", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "}", "catch", "(", "InterruptedException", "e", ")", "{", "Thread", ".", "currentThread", "(", ")", ".", "interrupt", "(", ")", ";", "throw", "new", "AsyncExecutorException", "(", "\"", "<STR_LIT>", "\"", ",", "e", ")", ";", "}", "}", "</s>"]
["<s>", "public", "void", "await", "(", ")", "throws", "InterruptedException", "{", "latch", ".", "await", "(", ")", ";", "}", "</s>"]
["<s>", "public", "void", "await", "(", "long", "timeout", ",", "TimeUnit", "unit", ")", "throws", "InterruptedException", ",", "TimeoutException", "{", "if", "(", "!", "latch", ".", "await", "(", "timeout", ",", "unit", ")", ")", "{", "throw", "new", "TimeoutException", "(", ")", ";", "}", "}", "</s>"]
["<s>", "public", "boolean", "isDone", "(", ")", "{", "return", "latch", ".", "getCount", "(", ")", "<", "=", "0", ";", "}", "</s>"]
["<s>", "public", "static", "SequentialEvents", "newInstance", "(", ")", "{", "return", "new", "SequentialEvents", "(", "new", "ArrayList", "<", ">", "(", ")", ")", ";", "}", "</s>"]
["<s>", "public", "static", "SequentialEvents", "newInstance", "(", "int", "expectedEventListSize", ")", "{", "return", "new", "SequentialEvents", "(", "new", "ArrayList", "<", ">", "(", "expectedEventListSize", ")", ")", ";", "}", "</s>"]
["<s>", "public", "static", "SequentialEvents", "of", "(", "SingleEvent", ".", ".", ".", "events", ")", "{", "return", "new", "SequentialEvents", "(", "Arrays", ".", "asList", "(", "events", ")", ")", ";", "}", "</s>"]
["<s>", "public", "static", "SequentialEvents", "of", "(", "List", "<", "SingleEvent", ">", "eventList", ")", "{", "return", "new", "SequentialEvents", "(", "eventList", ")", ";", "}", "</s>"]
["<s>", "public", "SequentialEvents", "with", "(", "SingleEvent", "event", ")", "{", "Preconditions", ".", "checkNotNull", "(", "eventList", ",", "\"", "<STR_LIT>", "\"", ")", ";", "this", ".", "eventList", ".", "add", "(", "event", ")", ";", "return", "this", ";", "}", "</s>"]
["<s>", "public", "List", "<", "SingleEvent", ">", "getEventList", "(", ")", "{", "return", "eventList", ";", "}", "</s>"]
["<s>", "public", "int", "getIntervalTimeInMs", "(", ")", "{", "return", "intervalTimeInMs", ";", "}", "</s>"]
["<s>", "public", "Builder", "withIntervalTimeInMs", "(", "int", "intervalTimeInMs", ")", "{", "this", ".", "intervalTimeInMs", "=", "intervalTimeInMs", ";", "return", "this", ";", "}", "</s>"]
["<s>", "public", "Builder", "withAction", "(", "Action", "action", ")", "{", "this", ".", "action", "=", "action", ";", "return", "this", ";", "}", "</s>"]
["<s>", "public", "SingleEvent", "build", "(", ")", "{", "Preconditions", ".", "checkNotNull", "(", "intervalTimeInMs", ",", "\"", "<STR_LIT>", "\"", ")", ";", "Preconditions", ".", "checkNotNull", "(", "action", ",", "\"", "<STR_LIT>", "\"", ")", ";", "return", "new", "SingleEvent", "(", "intervalTimeInMs", ",", "action", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testInstanceInfoEncodeDecodeCompatibilityDueToOverriddenStatusRenamingV2", "(", ")", "throws", "Exception", "{", "final", "InstanceInfo", "instanceInfo", "=", "infoIterator", ".", "next", "(", ")", ";", "new", "InstanceInfo", ".", "Builder", "(", "instanceInfo", ")", ".", "setOverriddenStatus", "(", "InstanceInfo", ".", "InstanceStatus", ".", "OUT_OF_SERVICE", ")", ";", "Action2", "codingAction", "=", "new", "Action2", "(", ")", "{", "@", "Override", "public", "void", "call", "(", "EncoderWrapper", "encodingCodec", ",", "DecoderWrapper", "decodingCodec", ")", "throws", "IOException", "{", "String", "encodedString", "=", "encodingCodec", ".", "encode", "(", "instanceInfo", ")", ";", "encodedString", "=", "encodedString", ".", "replace", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ")", ";", "InstanceInfo", "decodedValue", "=", "decodingCodec", ".", "decode", "(", "encodedString", ",", "InstanceInfo", ".", "class", ")", ";", "assertThat", "(", "EurekaEntityComparators", ".", "equal", "(", "instanceInfo", ",", "decodedValue", ")", ",", "is", "(", "true", ")", ")", ";", "assertThat", "(", "EurekaEntityComparators", ".", "equal", "(", "instanceInfo", ",", "decodedValue", ",", "new", "EurekaEntityComparators", ".", "RawIdEqualFunc", "(", ")", ")", ",", "is", "(", "true", ")", ")", ";", "}", "}", ";", "verifyAllPairs", "(", "codingAction", ",", "Application", ".", "class", ",", "availableJsonWrappers", ")", ";", "verifyAllPairs", "(", "codingAction", ",", "Application", ".", "class", ",", "availableXmlWrappers", ")", ";", "}", "</s>"]
["<s>", "protected", "EurekaClient", "getSetupDiscoveryClient", "(", ")", "{", "return", "getSetupDiscoveryClient", "(", "<NUM_LIT:30>", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "shouldRegisterHealthCheckHandlerInConcurrentEnvironment", "(", ")", "throws", "Exception", "{", "HealthCheckHandler", "myHealthCheckHandler", "=", "new", "MyHealthCheckHandler", "(", "InstanceInfo", ".", "InstanceStatus", ".", "UP", ")", ";", "int", "testsCount", "=", "<NUM_LIT:20>", ";", "int", "threadsCount", "=", "testsCount", "*", "<NUM_LIT:2>", ";", "CountDownLatch", "starterLatch", "=", "new", "CountDownLatch", "(", "threadsCount", ")", ";", "CountDownLatch", "finishLatch", "=", "new", "CountDownLatch", "(", "threadsCount", ")", ";", "List", "<", "DiscoveryClient", ">", "discoveryClients", "=", "range", "(", "0", ",", "testsCount", ")", ".", "mapToObj", "(", "i", "-", ">", "(", "DiscoveryClient", ")", "getSetupDiscoveryClient", "(", ")", ")", ".", "collect", "(", "toList", "(", ")", ")", ";", "Stream", "<", "Thread", ">", "registerCustomHandlerThreads", "=", "discoveryClients", ".", "stream", "(", ")", ".", "map", "(", "client", "-", ">", "new", "SimultaneousStarter", "(", "starterLatch", ",", "finishLatch", ",", "(", ")", "-", ">", "client", ".", "registerHealthCheck", "(", "myHealthCheckHandler", ")", ")", ")", ";", "Stream", "<", "Thread", ">", "lazyInitOfDefaultHandlerThreads", "=", "discoveryClients", ".", "stream", "(", ")", ".", "map", "(", "client", "-", ">", "new", "SimultaneousStarter", "(", "starterLatch", ",", "finishLatch", ",", "client", ":", ":", "getHealthCheckHandler", ")", ")", ";", "List", "<", "Thread", ">", "threads", "=", "Stream", ".", "concat", "(", "registerCustomHandlerThreads", ",", "lazyInitOfDefaultHandlerThreads", ")", ".", "collect", "(", "toList", "(", ")", ")", ";", "Collections", ".", "shuffle", "(", "threads", ")", ";", "threads", ".", "forEach", "(", "Thread", ":", ":", "start", ")", ";", "try", "{", "finishLatch", ".", "await", "(", ")", ";", "discoveryClients", ".", "forEach", "(", "client", "-", ">", "Assert", ".", "assertSame", "(", "\"", "<STR_LIT>", "\"", ",", "myHealthCheckHandler", ",", "client", ".", "getHealthCheckHandler", "(", ")", ")", ")", ";", "}", "finally", "{", "discoveryClients", ".", "forEach", "(", "DiscoveryClient", ":", ":", "shutdown", ")", ";", "}", "}", "</s>"]
["<s>", "public", "void", "removeApplication", "(", "Application", "app", ")", "{", "this", ".", "appNameApplicationMap", ".", "remove", "(", "app", ".", "getName", "(", ")", ".", "toUpperCase", "(", "Locale", ".", "ROOT", ")", ")", ";", "this", ".", "applications", ".", "remove", "(", "app", ")", ";", "}", "</s>"]
["<s>", "protected", "void", "updateRenewsPerMinThreshold", "(", ")", "{", "this", ".", "numberOfRenewsPerMinThreshold", "=", "(", "int", ")", "(", "this", ".", "expectedNumberOfClientsSendingRenews", "*", "(", "<NUM_LIT>", "/", "serverConfig", ".", "getExpectedClientRenewalIntervalSeconds", "(", ")", ")", "*", "serverConfig", ".", "getRenewalPercentThreshold", "(", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testEurekaClientPeriodicCacheRefreshForDelete", "(", ")", "throws", "Exception", "{", "InstanceInfoGenerator", "instanceGen", "=", "InstanceInfoGenerator", ".", "newBuilder", "(", "<NUM_LIT:3>", ",", "1", ")", ".", "build", "(", ")", ";", "Applications", "initialApps", "=", "instanceGen", ".", "takeDelta", "(", "<NUM_LIT:2>", ")", ";", "Applications", "deltaForDelete", "=", "instanceGen", ".", "takeDeltaForDelete", "(", "true", ",", "1", ")", ";", "when", "(", "requestHandler", ".", "getApplications", "(", "TEST_REMOTE_REGION", ")", ")", ".", "thenReturn", "(", "anEurekaHttpResponse", "(", "<NUM_LIT>", ",", "initialApps", ")", ".", "type", "(", "MediaType", ".", "APPLICATION_JSON_TYPE", ")", ".", "build", "(", ")", ")", ";", "EurekaClient", "client", "=", "discoveryClientResource", ".", "getClient", "(", ")", ";", "assertThat", "(", "countInstances", "(", "client", ".", "getApplications", "(", ")", ")", ",", "is", "(", "equalTo", "(", "<NUM_LIT:2>", ")", ")", ")", ";", "when", "(", "requestHandler", ".", "getDelta", "(", "TEST_REMOTE_REGION", ")", ")", ".", "thenReturn", "(", "anEurekaHttpResponse", "(", "<NUM_LIT>", ",", "deltaForDelete", ")", ".", "type", "(", "MediaType", ".", "APPLICATION_JSON_TYPE", ")", ".", "build", "(", ")", ")", ";", "assertThat", "(", "discoveryClientResource", ".", "awaitCacheUpdate", "(", "<NUM_LIT:5>", ",", "TimeUnit", ".", "SECONDS", ")", ",", "is", "(", "true", ")", ")", ";", "assertThat", "(", "client", ".", "getApplications", "(", ")", ".", "getRegisteredApplications", "(", ")", ".", "size", "(", ")", ",", "is", "(", "equalTo", "(", "1", ")", ")", ")", ";", "assertThat", "(", "countInstances", "(", "client", ".", "getApplications", "(", ")", ")", ",", "is", "(", "equalTo", "(", "1", ")", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testEurekaClientPeriodicCacheRefreshForDeleteAndNoApplication", "(", ")", "throws", "Exception", "{", "InstanceInfoGenerator", "instanceGen", "=", "InstanceInfoGenerator", ".", "newBuilder", "(", "<NUM_LIT:3>", ",", "1", ")", ".", "build", "(", ")", ";", "Applications", "initialApps", "=", "instanceGen", ".", "takeDelta", "(", "1", ")", ";", "Applications", "deltaForDelete", "=", "instanceGen", ".", "takeDeltaForDelete", "(", "true", ",", "1", ")", ";", "when", "(", "requestHandler", ".", "getApplications", "(", "TEST_REMOTE_REGION", ")", ")", ".", "thenReturn", "(", "anEurekaHttpResponse", "(", "<NUM_LIT>", ",", "initialApps", ")", ".", "type", "(", "MediaType", ".", "APPLICATION_JSON_TYPE", ")", ".", "build", "(", ")", ")", ";", "EurekaClient", "client", "=", "discoveryClientResource", ".", "getClient", "(", ")", ";", "assertThat", "(", "countInstances", "(", "client", ".", "getApplications", "(", ")", ")", ",", "is", "(", "equalTo", "(", "1", ")", ")", ")", ";", "when", "(", "requestHandler", ".", "getDelta", "(", "TEST_REMOTE_REGION", ")", ")", ".", "thenReturn", "(", "anEurekaHttpResponse", "(", "<NUM_LIT>", ",", "deltaForDelete", ")", ".", "type", "(", "MediaType", ".", "APPLICATION_JSON_TYPE", ")", ".", "build", "(", ")", ")", ";", "assertThat", "(", "discoveryClientResource", ".", "awaitCacheUpdate", "(", "<NUM_LIT:5>", ",", "TimeUnit", ".", "SECONDS", ")", ",", "is", "(", "true", ")", ")", ";", "assertEquals", "(", "client", ".", "getApplications", "(", ")", ".", "getRegisteredApplications", "(", ")", ",", "new", "ArrayList", "<", ">", "(", ")", ")", ";", "}", "</s>"]
["<s>", "public", "Applications", "takeDeltaForDelete", "(", "boolean", "useInstanceId", ",", "int", "instanceCount", ")", "{", "List", "<", "InstanceInfo", ">", "instanceInfoList", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "instanceCount", ";", "i", "+", "+", ")", "{", "instanceInfoList", ".", "add", "(", "this", ".", "generateInstanceInfo", "(", "i", ",", "i", ",", "useInstanceId", ",", "ActionType", ".", "DELETED", ")", ")", ";", "}", "Applications", "delete", "=", "EurekaEntityFunctions", ".", "toApplications", "(", "toApplicationMap", "(", "instanceInfoList", ")", ")", ";", "allApplications", "=", "mergeApplications", "(", "allApplications", ",", "delete", ")", ";", "delete", ".", "setAppsHashCode", "(", "allApplications", ".", "getAppsHashCode", "(", ")", ")", ";", "return", "delete", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testURLSeparator", "(", ")", "throws", "Exception", "{", "testURLSeparator", "(", "\"", "<STR_LIT:U+002C>", "\"", ")", ";", "testURLSeparator", "(", "\"", "<STR_LIT>", "\"", ")", ";", "testURLSeparator", "(", "\"", "<STR_LIT>", "\"", ")", ";", "testURLSeparator", "(", "\"", "<STR_LIT>", "\"", ")", ";", "testURLSeparator", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "</s>"]
["<s>", "private", "void", "testURLSeparator", "(", "String", "separator", ")", "{", "ConfigurationManager", ".", "getConfigInstance", "(", ")", ".", "setProperty", "(", "CommonConstants", ".", "DEFAULT_CONFIG_NAMESPACE", "+", "\"", "<STR_LIT>", "\"", ",", "SERVICE_URI", "+", "separator", "+", "SERVICE_URI", ")", ";", "DefaultEurekaClientConfig", "clientConfig", "=", "new", "DefaultEurekaClientConfig", "(", ")", ";", "List", "<", "String", ">", "serviceUrls", "=", "clientConfig", ".", "getEurekaServerServiceUrls", "(", "\"", "<STR_LIT>", "\"", ")", ";", "assertThat", "(", "serviceUrls", ".", "get", "(", "0", ")", ",", "is", "(", "equalTo", "(", "SERVICE_URI", ")", ")", ")", ";", "assertThat", "(", "serviceUrls", ".", "get", "(", "1", ")", ",", "is", "(", "equalTo", "(", "SERVICE_URI", ")", ")", ")", ";", "}", "</s>"]
["<s>", "public", "<", "R", ">", "R", "inLock", "(", "Supplier", "<", "R", ">", "method", ")", "{", "try", "{", "write", ".", "lock", "(", ")", ";", "return", "method", ".", "get", "(", ")", ";", "}", "finally", "{", "write", ".", "unlock", "(", ")", ";", "}", "}", "</s>"]
["<s>", "AmazonInfo", "getNewAmazonInfo", "(", ")", "{", "return", "AmazonInfo", ".", "Builder", ".", "newBuilder", "(", ")", ".", "withAmazonInfoConfig", "(", "amazonInfoConfig", ")", ".", "autoBuild", "(", "amazonInfoConfig", ".", "getNamespace", "(", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testSpotInstanceTermination", "(", ")", "{", "AmazonInfo", "initialAmazonInfo", "=", "AmazonInfo", ".", "Builder", ".", "newBuilder", "(", ")", ".", "build", "(", ")", ";", "config", "=", "spy", "(", "new", "CloudInstanceConfig", "(", "initialAmazonInfo", ")", ")", ";", "RefreshableAmazonInfoProvider", "refreshableAmazonInfoProvider", "=", "spy", "(", "new", "RefreshableAmazonInfoProvider", "(", "initialAmazonInfo", ",", "new", "Archaius1AmazonInfoConfig", "(", "CommonConstants", ".", "DEFAULT_CONFIG_NAMESPACE", ")", ")", ")", ";", "config", ".", "amazonInfoHolder", "=", "refreshableAmazonInfoProvider", ";", "this", ".", "applicationInfoManager", "=", "new", "ApplicationInfoManager", "(", "config", ",", "instanceInfo", ",", "null", ")", ";", "String", "terminationTime", "=", "\"", "<STR_LIT>", "\"", ";", "String", "spotInstanceAction", "=", "\"", "<STR_LIT:{>", "<STR_LIT:\\\">", "<STR_LIT>", "<STR_LIT:\\\">", "<STR_LIT>", "<STR_LIT:\\\">", "<STR_LIT>", "<STR_LIT:\\\">", "<STR_LIT>", "<STR_LIT:\\\">", "<STR_LIT>", "<STR_LIT:\\\">", "<STR_LIT>", "<STR_LIT:\\\">", "<STR_LIT>", "<STR_LIT:\\\">", "<STR_LIT:}>", "\"", ";", "AmazonInfo", "newAmazonInfo", "=", "AmazonInfo", ".", "Builder", ".", "newBuilder", "(", ")", ".", "addMetadata", "(", "AmazonInfo", ".", "MetaDataKey", ".", "spotInstanceTerminationTime", ",", "terminationTime", ")", ".", "addMetadata", "(", "AmazonInfo", ".", "MetaDataKey", ".", "spotInstanceAction", ",", "spotInstanceAction", ")", ".", "addMetadata", "(", "AmazonInfo", ".", "MetaDataKey", ".", "publicHostname", ",", "instanceInfo", ".", "getHostName", "(", ")", ")", ".", "addMetadata", "(", "AmazonInfo", ".", "MetaDataKey", ".", "instanceId", ",", "instanceInfo", ".", "getInstanceId", "(", ")", ")", ".", "addMetadata", "(", "AmazonInfo", ".", "MetaDataKey", ".", "localIpv4", ",", "instanceInfo", ".", "getIPAddr", "(", ")", ")", ".", "build", "(", ")", ";", "when", "(", "refreshableAmazonInfoProvider", ".", "getNewAmazonInfo", "(", ")", ")", ".", "thenReturn", "(", "newAmazonInfo", ")", ";", "applicationInfoManager", ".", "refreshDataCenterInfoIfRequired", "(", ")", ";", "assertThat", "(", "(", "(", "AmazonInfo", ")", "instanceInfo", ".", "getDataCenterInfo", "(", ")", ")", ".", "getMetadata", "(", ")", ".", "get", "(", "AmazonInfo", ".", "MetaDataKey", ".", "spotInstanceTerminationTime", ".", "getName", "(", ")", ")", ",", "is", "(", "terminationTime", ")", ")", ";", "assertThat", "(", "(", "(", "AmazonInfo", ")", "instanceInfo", ".", "getDataCenterInfo", "(", ")", ")", ".", "getMetadata", "(", ")", ".", "get", "(", "AmazonInfo", ".", "MetaDataKey", ".", "spotInstanceAction", ".", "getName", "(", ")", ")", ",", "is", "(", "spotInstanceAction", ")", ")", ";", "}", "</s>"]
["<s>", "private", "void", "updateInstanceInfo", "(", "String", "newAddress", ",", "String", "newIp", ")", "{", "InstanceInfo", ".", "Builder", "builder", "=", "new", "InstanceInfo", ".", "Builder", "(", "instanceInfo", ")", ";", "if", "(", "newAddress", "!", "=", "null", ")", "{", "builder", ".", "setHostName", "(", "newAddress", ")", ";", "}", "if", "(", "newIp", "!", "=", "null", ")", "{", "builder", ".", "setIPAddr", "(", "newIp", ")", ";", "}", "builder", ".", "setDataCenterInfo", "(", "config", ".", "getDataCenterInfo", "(", ")", ")", ";", "instanceInfo", ".", "setIsDirty", "(", ")", ";", "}", "</s>"]
["<s>", "@", "Before", "public", "void", "setUp", "(", ")", "{", "when", "(", "config", ".", "shouldUseDnsForFetchingServiceUrls", "(", ")", ")", ".", "thenReturn", "(", "Boolean", ".", "FALSE", ")", ";", "eipManager", "=", "new", "EIPManager", "(", "null", ",", "config", ",", "null", ",", "null", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "shouldFilterNonElasticNames", "(", ")", "{", "when", "(", "config", ".", "getRegion", "(", ")", ")", ".", "thenReturn", "(", "\"", "<STR_LIT>", "\"", ")", ";", "List", "<", "String", ">", "hosts", "=", "Lists", ".", "newArrayList", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ")", ";", "when", "(", "config", ".", "getEurekaServerServiceUrls", "(", "any", "(", "String", ".", "class", ")", ")", ")", ".", "thenReturn", "(", "hosts", ")", ";", "Collection", "<", "String", ">", "returnValue", "=", "eipManager", ".", "getCandidateEIPs", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ")", ";", "assertEquals", "(", "<NUM_LIT:2>", ",", "returnValue", ".", "size", "(", ")", ")", ";", "assertTrue", "(", "returnValue", ".", "contains", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "assertTrue", "(", "returnValue", ".", "contains", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "shouldFilterNonElasticNamesInOtherRegion", "(", ")", "{", "when", "(", "config", ".", "getRegion", "(", ")", ")", ".", "thenReturn", "(", "\"", "<STR_LIT>", "\"", ")", ";", "List", "<", "String", ">", "hosts", "=", "Lists", ".", "newArrayList", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ")", ";", "when", "(", "config", ".", "getEurekaServerServiceUrls", "(", "any", "(", "String", ".", "class", ")", ")", ")", ".", "thenReturn", "(", "hosts", ")", ";", "Collection", "<", "String", ">", "returnValue", "=", "eipManager", ".", "getCandidateEIPs", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ")", ";", "assertEquals", "(", "<NUM_LIT:2>", ",", "returnValue", ".", "size", "(", ")", ")", ";", "assertTrue", "(", "returnValue", ".", "contains", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "assertTrue", "(", "returnValue", ".", "contains", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "(", "expected", "=", "RuntimeException", ".", "class", ")", "public", "void", "shouldThrowExceptionWhenNoElasticNames", "(", ")", "{", "when", "(", "config", ".", "getRegion", "(", ")", ")", ".", "thenReturn", "(", "\"", "<STR_LIT>", "\"", ")", ";", "List", "<", "String", ">", "hosts", "=", "Lists", ".", "newArrayList", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ")", ";", "when", "(", "config", ".", "getEurekaServerServiceUrls", "(", "any", "(", "String", ".", "class", ")", ")", ")", ".", "thenReturn", "(", "hosts", ")", ";", "eipManager", ".", "getCandidateEIPs", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testInfoDetailApplications", "(", ")", "{", "DataCenterInfo", "myDCI", "=", "new", "DataCenterInfo", "(", ")", "{", "public", "DataCenterInfo", ".", "Name", "getName", "(", ")", "{", "return", "DataCenterInfo", ".", "Name", ".", "MyOwn", ";", "}", "}", ";", "InstanceInfo", "instanceInfo", "=", "InstanceInfo", ".", "Builder", ".", "newBuilder", "(", ")", ".", "setInstanceId", "(", "\"", "<STR_LIT>", "\"", ")", ".", "setAppName", "(", "\"", "<STR_LIT>", "\"", ")", ".", "setHostName", "(", "\"", "<STR_LIT>", "\"", ")", ".", "setStatus", "(", "InstanceStatus", ".", "UP", ")", ".", "setIPAddr", "(", "\"", "<STR_LIT>", "\"", ")", ".", "setPort", "(", "<NUM_LIT>", ")", ".", "setSecurePort", "(", "<NUM_LIT>", ")", ".", "setDataCenterInfo", "(", "myDCI", ")", ".", "build", "(", ")", ";", "Application", "application", "=", "new", "Application", "(", "\"", "<STR_LIT>", "\"", ")", ";", "application", ".", "addInstance", "(", "instanceInfo", ")", ";", "Applications", "applications", "=", "new", "Applications", "(", ")", ";", "applications", ".", "addApplication", "(", "application", ")", ";", "List", "<", "InstanceInfo", ">", "instanceInfos", "=", "application", ".", "getInstances", "(", ")", ";", "Assert", ".", "assertEquals", "(", "1", ",", "instanceInfos", ".", "size", "(", ")", ")", ";", "Assert", ".", "assertTrue", "(", "instanceInfos", ".", "contains", "(", "instanceInfo", ")", ")", ";", "List", "<", "Application", ">", "appsList", "=", "applications", ".", "getRegisteredApplications", "(", ")", ";", "Assert", ".", "assertEquals", "(", "1", ",", "appsList", ".", "size", "(", ")", ")", ";", "Assert", ".", "assertTrue", "(", "appsList", ".", "contains", "(", "application", ")", ")", ";", "Assert", ".", "assertEquals", "(", "application", ",", "applications", ".", "getRegisteredApplications", "(", "application", ".", "getName", "(", ")", ")", ")", ";", "}", "</s>"]
["<s>", "private", "Application", "createSingleInstanceApp", "(", "String", "appId", ",", "String", "instanceId", ",", "InstanceInfo", ".", "ActionType", "actionType", ")", "{", "InstanceInfo", "instanceInfo", "=", "Mockito", ".", "mock", "(", "InstanceInfo", ".", "class", ")", ";", "Mockito", ".", "when", "(", "instanceInfo", ".", "getId", "(", ")", ")", ".", "thenReturn", "(", "instanceId", ")", ";", "Mockito", ".", "when", "(", "instanceInfo", ".", "getAppName", "(", ")", ")", ".", "thenReturn", "(", "instanceId", ")", ";", "Mockito", ".", "when", "(", "instanceInfo", ".", "getStatus", "(", ")", ")", ".", "thenReturn", "(", "InstanceInfo", ".", "InstanceStatus", ".", "UP", ")", ";", "Mockito", ".", "when", "(", "instanceInfo", ".", "getActionType", "(", ")", ")", ".", "thenReturn", "(", "actionType", ")", ";", "Application", "application", "=", "new", "Application", "(", "appId", ")", ";", "application", ".", "addInstance", "(", "instanceInfo", ")", ";", "return", "application", ";", "}", "</s>"]
["<s>", "private", "Applications", "createApplications", "(", "Application", ".", ".", ".", "applications", ")", "{", "return", "new", "Applications", "(", "\"", "<STR_LIT>", "\"", ",", "<NUM_LIT>", ",", "new", "ArrayList", "<", ">", "(", "Arrays", ".", "asList", "(", "applications", ")", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testSelectApplicationNamesIfNotNullReturnNameString", "(", ")", "{", "Applications", "applications", "=", "createApplications", "(", "new", "Application", "(", "\"", "<STR_LIT>", "\"", ")", ",", "new", "Application", "(", "\"", "<STR_LIT>", "\"", ")", ",", "new", "Application", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "HashSet", "<", "String", ">", "strings", "=", "new", "HashSet", "<", ">", "(", "Arrays", ".", "asList", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ")", ")", ";", "Assert", ".", "assertEquals", "(", "strings", ",", "EurekaEntityFunctions", ".", "selectApplicationNames", "(", "applications", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testSelectInstancesMappedByIdIfNotNullReturnMapOfInstances", "(", ")", "{", "Application", "application", "=", "createSingleInstanceApp", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "InstanceInfo", ".", "ActionType", ".", "ADDED", ")", ";", "HashMap", "<", "String", ",", "InstanceInfo", ">", "hashMap", "=", "new", "HashMap", "<", ">", "(", ")", ";", "hashMap", ".", "put", "(", "\"", "<STR_LIT>", "\"", ",", "application", ".", "getByInstanceId", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "Assert", ".", "assertEquals", "(", "hashMap", ",", "EurekaEntityFunctions", ".", "selectInstancesMappedById", "(", "application", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testSelectInstanceIfInstanceExistsReturnSelectedInstance", "(", ")", "{", "Application", "application", "=", "createSingleInstanceApp", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "InstanceInfo", ".", "ActionType", ".", "ADDED", ")", ";", "Applications", "applications", "=", "createApplications", "(", "application", ")", ";", "Assert", ".", "assertNull", "(", "EurekaEntityFunctions", ".", "selectInstance", "(", "new", "Applications", "(", ")", ",", "\"", "<STR_LIT>", "\"", ")", ")", ";", "Assert", ".", "assertNull", "(", "EurekaEntityFunctions", ".", "selectInstance", "(", "new", "Applications", "(", ")", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ")", ")", ";", "Assert", ".", "assertEquals", "(", "application", ".", "getByInstanceId", "(", "\"", "<STR_LIT>", "\"", ")", ",", "EurekaEntityFunctions", ".", "selectInstance", "(", "applications", ",", "\"", "<STR_LIT>", "\"", ")", ")", ";", "Assert", ".", "assertEquals", "(", "application", ".", "getByInstanceId", "(", "\"", "<STR_LIT>", "\"", ")", ",", "EurekaEntityFunctions", ".", "selectInstance", "(", "applications", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testTakeFirstIfNotNullReturnFirstInstance", "(", ")", "{", "Application", "application", "=", "createSingleInstanceApp", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "InstanceInfo", ".", "ActionType", ".", "ADDED", ")", ";", "Applications", "applications", "=", "createApplications", "(", "application", ")", ";", "applications", ".", "addApplication", "(", "application", ")", ";", "Assert", ".", "assertNull", "(", "EurekaEntityFunctions", ".", "takeFirst", "(", "new", "Applications", "(", ")", ")", ")", ";", "Assert", ".", "assertEquals", "(", "application", ".", "getByInstanceId", "(", "\"", "<STR_LIT>", "\"", ")", ",", "EurekaEntityFunctions", ".", "takeFirst", "(", "applications", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testSelectAllIfNotNullReturnAllInstances", "(", ")", "{", "Application", "application", "=", "createSingleInstanceApp", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "InstanceInfo", ".", "ActionType", ".", "ADDED", ")", ";", "Applications", "applications", "=", "createApplications", "(", "application", ")", ";", "applications", ".", "addApplication", "(", "application", ")", ";", "Assert", ".", "assertEquals", "(", "new", "ArrayList", "<", ">", "(", "Arrays", ".", "asList", "(", "application", ".", "getByInstanceId", "(", "\"", "<STR_LIT>", "\"", ")", ",", "application", ".", "getByInstanceId", "(", "\"", "<STR_LIT>", "\"", ")", ")", ")", ",", "EurekaEntityFunctions", ".", "selectAll", "(", "applications", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testToApplicationMapIfNotNullReturnMapOfApplication", "(", ")", "{", "Application", "application", "=", "createSingleInstanceApp", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "InstanceInfo", ".", "ActionType", ".", "ADDED", ")", ";", "Assert", ".", "assertEquals", "(", "1", ",", "EurekaEntityFunctions", ".", "toApplicationMap", "(", "new", "ArrayList", "<", ">", "(", "Arrays", ".", "asList", "(", "application", ".", "getByInstanceId", "(", "\"", "<STR_LIT>", "\"", ")", ")", ")", ")", ".", "size", "(", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testToApplicationsIfNotNullReturnApplicationsFromMapOfApplication", "(", ")", "{", "HashMap", "<", "String", ",", "Application", ">", "hashMap", "=", "new", "HashMap", "<", ">", "(", ")", ";", "hashMap", ".", "put", "(", "\"", "<STR_LIT>", "\"", ",", "new", "Application", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "hashMap", ".", "put", "(", "\"", "<STR_LIT>", "\"", ",", "new", "Application", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "hashMap", ".", "put", "(", "\"", "<STR_LIT>", "\"", ",", "new", "Application", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "Applications", "applications", "=", "createApplications", "(", "new", "Application", "(", "\"", "<STR_LIT>", "\"", ")", ",", "new", "Application", "(", "\"", "<STR_LIT>", "\"", ")", ",", "new", "Application", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "Assert", ".", "assertEquals", "(", "applications", ".", "size", "(", ")", ",", "EurekaEntityFunctions", ".", "toApplications", "(", "hashMap", ")", ".", "size", "(", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testToApplicationsIfNotNullReturnApplicationsFromInstances", "(", ")", "{", "InstanceInfo", "instanceInfo1", "=", "createSingleInstanceApp", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "InstanceInfo", ".", "ActionType", ".", "ADDED", ")", ".", "getByInstanceId", "(", "\"", "<STR_LIT>", "\"", ")", ";", "InstanceInfo", "instanceInfo2", "=", "createSingleInstanceApp", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "InstanceInfo", ".", "ActionType", ".", "ADDED", ")", ".", "getByInstanceId", "(", "\"", "<STR_LIT>", "\"", ")", ";", "InstanceInfo", "instanceInfo3", "=", "createSingleInstanceApp", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "InstanceInfo", ".", "ActionType", ".", "ADDED", ")", ".", "getByInstanceId", "(", "\"", "<STR_LIT>", "\"", ")", ";", "Assert", ".", "assertEquals", "(", "<NUM_LIT:3>", ",", "EurekaEntityFunctions", ".", "toApplications", "(", "instanceInfo1", ",", "instanceInfo2", ",", "instanceInfo3", ")", ".", "size", "(", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testCopyApplicationsIfNotNullReturnApplications", "(", ")", "{", "Application", "application1", "=", "createSingleInstanceApp", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "InstanceInfo", ".", "ActionType", ".", "ADDED", ")", ";", "Application", "application2", "=", "createSingleInstanceApp", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "InstanceInfo", ".", "ActionType", ".", "ADDED", ")", ";", "Applications", "applications", "=", "createApplications", "(", ")", ";", "applications", ".", "addApplication", "(", "application1", ")", ";", "applications", ".", "addApplication", "(", "application2", ")", ";", "Assert", ".", "assertEquals", "(", "<NUM_LIT:2>", ",", "EurekaEntityFunctions", ".", "copyApplications", "(", "applications", ")", ".", "size", "(", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testCopyApplicationIfNotNullReturnApplication", "(", ")", "{", "Application", "application", "=", "createSingleInstanceApp", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "InstanceInfo", ".", "ActionType", ".", "ADDED", ")", ";", "Assert", ".", "assertEquals", "(", "1", ",", "EurekaEntityFunctions", ".", "copyApplication", "(", "application", ")", ".", "size", "(", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testCopyInstancesIfNotNullReturnCollectionOfInstanceInfo", "(", ")", "{", "Application", "application", "=", "createSingleInstanceApp", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "InstanceInfo", ".", "ActionType", ".", "ADDED", ")", ";", "Assert", ".", "assertEquals", "(", "1", ",", "EurekaEntityFunctions", ".", "copyInstances", "(", "new", "ArrayList", "<", ">", "(", "Arrays", ".", "asList", "(", "application", ".", "getByInstanceId", "(", "\"", "<STR_LIT>", "\"", ")", ")", ")", ",", "InstanceInfo", ".", "ActionType", ".", "ADDED", ")", ".", "size", "(", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testMergeApplicationsIfNotNullAndHasAppNameReturnApplications", "(", ")", "{", "Application", "application", "=", "createSingleInstanceApp", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "InstanceInfo", ".", "ActionType", ".", "ADDED", ")", ";", "Applications", "applications", "=", "createApplications", "(", "application", ")", ";", "Assert", ".", "assertEquals", "(", "1", ",", "EurekaEntityFunctions", ".", "mergeApplications", "(", "applications", ",", "applications", ")", ".", "size", "(", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testMergeApplicationsIfNotNullAndDoesNotHaveAppNameReturnApplications", "(", ")", "{", "Application", "application1", "=", "createSingleInstanceApp", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "InstanceInfo", ".", "ActionType", ".", "ADDED", ")", ";", "Applications", "applications1", "=", "createApplications", "(", "application1", ")", ";", "Application", "application2", "=", "createSingleInstanceApp", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "InstanceInfo", ".", "ActionType", ".", "ADDED", ")", ";", "Applications", "applications2", "=", "createApplications", "(", "application2", ")", ";", "Assert", ".", "assertEquals", "(", "<NUM_LIT:2>", ",", "EurekaEntityFunctions", ".", "mergeApplications", "(", "applications1", ",", "applications2", ")", ".", "size", "(", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testMergeApplicationIfActionTypeAddedReturnApplication", "(", ")", "{", "Application", "application", "=", "createSingleInstanceApp", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "InstanceInfo", ".", "ActionType", ".", "ADDED", ")", ";", "Assert", ".", "assertEquals", "(", "application", ".", "getInstances", "(", ")", ",", "EurekaEntityFunctions", ".", "mergeApplication", "(", "application", ",", "application", ")", ".", "getInstances", "(", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testMergeApplicationIfActionTypeModifiedReturnApplication", "(", ")", "{", "Application", "application", "=", "createSingleInstanceApp", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "InstanceInfo", ".", "ActionType", ".", "MODIFIED", ")", ";", "Assert", ".", "assertEquals", "(", "application", ".", "getInstances", "(", ")", ",", "EurekaEntityFunctions", ".", "mergeApplication", "(", "application", ",", "application", ")", ".", "getInstances", "(", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testMergeApplicationIfActionTypeDeletedReturnApplication", "(", ")", "{", "Application", "application", "=", "createSingleInstanceApp", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "InstanceInfo", ".", "ActionType", ".", "DELETED", ")", ";", "Assert", ".", "assertNotEquals", "(", "application", ".", "getInstances", "(", ")", ",", "EurekaEntityFunctions", ".", "mergeApplication", "(", "application", ",", "application", ")", ".", "getInstances", "(", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testUpdateMetaIfNotNullReturnApplications", "(", ")", "{", "Application", "application", "=", "createSingleInstanceApp", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "InstanceInfo", ".", "ActionType", ".", "ADDED", ")", ";", "Applications", "applications", "=", "createApplications", "(", "application", ")", ";", "Assert", ".", "assertEquals", "(", "<NUM_LIT>", ",", "(", "long", ")", "EurekaEntityFunctions", ".", "updateMeta", "(", "applications", ")", ".", "getVersion", "(", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testCountInstancesIfApplicationsHasInstancesReturnSize", "(", ")", "{", "Application", "application", "=", "createSingleInstanceApp", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "InstanceInfo", ".", "ActionType", ".", "ADDED", ")", ";", "Applications", "applications", "=", "createApplications", "(", "application", ")", ";", "Assert", ".", "assertEquals", "(", "1", ",", "EurekaEntityFunctions", ".", "countInstances", "(", "applications", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testComparatorByAppNameAndIdIfNotNullReturnInt", "(", ")", "{", "InstanceInfo", "instanceInfo1", "=", "Mockito", ".", "mock", "(", "InstanceInfo", ".", "class", ")", ";", "InstanceInfo", "instanceInfo2", "=", "Mockito", ".", "mock", "(", "InstanceInfo", ".", "class", ")", ";", "InstanceInfo", "instanceInfo3", "=", "createSingleInstanceApp", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "InstanceInfo", ".", "ActionType", ".", "ADDED", ")", ".", "getByInstanceId", "(", "\"", "<STR_LIT>", "\"", ")", ";", "InstanceInfo", "instanceInfo4", "=", "createSingleInstanceApp", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "InstanceInfo", ".", "ActionType", ".", "ADDED", ")", ".", "getByInstanceId", "(", "\"", "<STR_LIT>", "\"", ")", ";", "Assert", ".", "assertTrue", "(", "EurekaEntityFunctions", ".", "comparatorByAppNameAndId", "(", ")", ".", "compare", "(", "instanceInfo1", ",", "instanceInfo2", ")", ">", "0", ")", ";", "Assert", ".", "assertTrue", "(", "EurekaEntityFunctions", ".", "comparatorByAppNameAndId", "(", ")", ".", "compare", "(", "instanceInfo3", ",", "instanceInfo2", ")", ">", "0", ")", ";", "Assert", ".", "assertTrue", "(", "EurekaEntityFunctions", ".", "comparatorByAppNameAndId", "(", ")", ".", "compare", "(", "instanceInfo1", ",", "instanceInfo3", ")", "<", "0", ")", ";", "Assert", ".", "assertTrue", "(", "EurekaEntityFunctions", ".", "comparatorByAppNameAndId", "(", ")", ".", "compare", "(", "instanceInfo3", ",", "instanceInfo4", ")", ">", "0", ")", ";", "Assert", ".", "assertTrue", "(", "EurekaEntityFunctions", ".", "comparatorByAppNameAndId", "(", ")", ".", "compare", "(", "instanceInfo3", ",", "instanceInfo3", ")", "=", "=", "0", ")", ";", "}", "</s>"]
["<s>", "private", "boolean", "isEndOfObjectOrInput", "(", "JsonToken", "token", ")", "{", "return", "token", "=", "=", "null", "|", "|", "token", "=", "=", "JsonToken", ".", "END_OBJECT", ";", "}", "</s>"]
["<s>", "private", "boolean", "skipToMetadata", "(", "JsonParser", "jp", ")", "throws", "IOException", "{", "JsonToken", "token", "=", "jp", ".", "getCurrentToken", "(", ")", ";", "while", "(", "!", "isEndOfObjectOrInput", "(", "token", ")", ")", "{", "if", "(", "token", "=", "=", "JsonToken", ".", "FIELD_NAME", "&", "&", "EnumLookup", ".", "equals", "(", "BUF_METADATA", ",", "jp", ".", "getTextCharacters", "(", ")", ",", "jp", ".", "getTextOffset", "(", ")", ",", "jp", ".", "getTextLength", "(", ")", ")", ")", "{", "return", "true", ";", "}", "token", "=", "jp", ".", "nextToken", "(", ")", ";", "}", "return", "false", ";", "}", "</s>"]
["<s>", "private", "void", "skipToEnd", "(", "JsonParser", "jp", ")", "throws", "IOException", "{", "JsonToken", "token", "=", "jp", ".", "getCurrentToken", "(", ")", ";", "while", "(", "!", "isEndOfObjectOrInput", "(", "token", ")", ")", "{", "token", "=", "jp", ".", "nextToken", "(", ")", ";", "}", "}", "</s>"]
["<s>", "private", "ObjectMapper", "newMapper", "(", ")", "{", "SimpleModule", "module", "=", "new", "SimpleModule", "(", ")", ".", "addDeserializer", "(", "AmazonInfo", ".", "class", ",", "new", "StringInterningAmazonInfoBuilder", "(", ")", ")", ";", "return", "new", "ObjectMapper", "(", ")", ".", "registerModule", "(", "module", ")", ";", "}", "</s>"]
["<s>", "private", "AmazonInfo", "nonCompact", "(", "AmazonInfo", "info", ")", "{", "return", "new", "AmazonInfo", "(", "info", ".", "getName", "(", ")", ".", "name", "(", ")", ",", "new", "HashMap", "<", ">", "(", "info", ".", "getMetadata", "(", ")", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "(", "expected", "=", "InvalidTypeIdException", ".", "class", ")", "public", "void", "payloadThatIsEmpty", "(", ")", "throws", "IOException", "{", "newMapper", "(", ")", ".", "readValue", "(", "\"", "<STR_LIT:{}>", "\"", ",", "AmazonInfo", ".", "class", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "payloadWithJustClass", "(", ")", "throws", "IOException", "{", "String", "json", "=", "\"", "<STR_LIT:{>", "\"", "+", "\"", "<STR_LIT:\\\">", "<STR_LIT>", "<STR_LIT:\\\">", "<STR_LIT>", "<STR_LIT:\\\">", "<STR_LIT>", "<STR_LIT:\\\">", "\"", "+", "\"", "<STR_LIT:}>", "\"", ";", "AmazonInfo", "info", "=", "newMapper", "(", ")", ".", "readValue", "(", "json", ",", "AmazonInfo", ".", "class", ")", ";", "Assert", ".", "assertEquals", "(", "new", "AmazonInfo", "(", ")", ",", "info", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "payloadWithClassAndMetadata", "(", ")", "throws", "IOException", "{", "String", "json", "=", "\"", "<STR_LIT:{>", "\"", "+", "\"", "<STR_LIT:\\\">", "<STR_LIT>", "<STR_LIT:\\\">", "<STR_LIT>", "<STR_LIT:\\\">", "<STR_LIT>", "<STR_LIT:\\\">", "<STR_LIT:U+002C>", "\"", "+", "\"", "<STR_LIT:\\\">", "<STR_LIT>", "<STR_LIT:\\\">", "<STR_LIT>", "\"", "+", "\"", "<STR_LIT:\\\">", "<STR_LIT>", "<STR_LIT:\\\">", "<STR_LIT>", "<STR_LIT:\\\">", "<STR_LIT>", "<STR_LIT:\\\">", "\"", "+", "\"", "<STR_LIT>", "\"", "+", "\"", "<STR_LIT:}>", "\"", ";", "AmazonInfo", "info", "=", "newMapper", "(", ")", ".", "readValue", "(", "json", ",", "AmazonInfo", ".", "class", ")", ";", "AmazonInfo", "expected", "=", "AmazonInfo", ".", "Builder", ".", "newBuilder", "(", ")", ".", "addMetadata", "(", "AmazonInfo", ".", "MetaDataKey", ".", "instanceId", ",", "\"", "<STR_LIT>", "\"", ")", ".", "build", "(", ")", ";", "Assert", ".", "assertEquals", "(", "expected", ",", "nonCompact", "(", "info", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "payloadWithClassAfterMetadata", "(", ")", "throws", "IOException", "{", "String", "json", "=", "\"", "<STR_LIT:{>", "\"", "+", "\"", "<STR_LIT:\\\">", "<STR_LIT>", "<STR_LIT:\\\">", "<STR_LIT>", "\"", "+", "\"", "<STR_LIT:\\\">", "<STR_LIT>", "<STR_LIT:\\\">", "<STR_LIT>", "<STR_LIT:\\\">", "<STR_LIT>", "<STR_LIT:\\\">", "\"", "+", "\"", "<STR_LIT>", "\"", "+", "\"", "<STR_LIT:\\\">", "<STR_LIT>", "<STR_LIT:\\\">", "<STR_LIT>", "<STR_LIT:\\\">", "<STR_LIT>", "<STR_LIT:\\\">", "\"", "+", "\"", "<STR_LIT:}>", "\"", ";", "AmazonInfo", "info", "=", "newMapper", "(", ")", ".", "readValue", "(", "json", ",", "AmazonInfo", ".", "class", ")", ";", "AmazonInfo", "expected", "=", "AmazonInfo", ".", "Builder", ".", "newBuilder", "(", ")", ".", "addMetadata", "(", "AmazonInfo", ".", "MetaDataKey", ".", "instanceId", ",", "\"", "<STR_LIT>", "\"", ")", ".", "build", "(", ")", ";", "Assert", ".", "assertEquals", "(", "expected", ",", "nonCompact", "(", "info", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "payloadWithNameBeforeMetadata", "(", ")", "throws", "IOException", "{", "String", "json", "=", "\"", "<STR_LIT:{}>", "\"", ";", "AmazonInfo", "info", "=", "newMapper", "(", ")", ".", "readValue", "(", "json", ",", "AmazonInfo", ".", "class", ")", ";", "AmazonInfo", "expected", "=", "AmazonInfo", ".", "Builder", ".", "newBuilder", "(", ")", ".", "addMetadata", "(", "AmazonInfo", ".", "MetaDataKey", ".", "instanceId", ",", "\"", "<STR_LIT>", "\"", ")", ".", "build", "(", ")", ";", "Assert", ".", "assertEquals", "(", "expected", ",", "nonCompact", "(", "info", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "payloadWithNameAfterMetadata", "(", ")", "throws", "IOException", "{", "String", "json", "=", "\"", "<STR_LIT:{}>", "\"", ";", "AmazonInfo", "info", "=", "newMapper", "(", ")", ".", "readValue", "(", "json", ",", "AmazonInfo", ".", "class", ")", ";", "AmazonInfo", "expected", "=", "AmazonInfo", ".", "Builder", ".", "newBuilder", "(", ")", ".", "addMetadata", "(", "AmazonInfo", ".", "MetaDataKey", ".", "instanceId", ",", "\"", "<STR_LIT>", "\"", ")", ".", "build", "(", ")", ";", "Assert", ".", "assertEquals", "(", "expected", ",", "nonCompact", "(", "info", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "payloadWithOtherStuffBeforeAndAfterMetadata", "(", ")", "throws", "IOException", "{", "String", "json", "=", "\"", "<STR_LIT:{}>", "\"", ";", "AmazonInfo", "info", "=", "newMapper", "(", ")", ".", "readValue", "(", "json", ",", "AmazonInfo", ".", "class", ")", ";", "AmazonInfo", "expected", "=", "AmazonInfo", ".", "Builder", ".", "newBuilder", "(", ")", ".", "addMetadata", "(", "AmazonInfo", ".", "MetaDataKey", ".", "instanceId", ",", "\"", "<STR_LIT>", "\"", ")", ".", "build", "(", ")", ";", "Assert", ".", "assertEquals", "(", "expected", ",", "nonCompact", "(", "info", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testCircularQueue", "(", ")", "throws", "Exception", "{", "CircularQueue", "<", "Integer", ">", "queue", "=", "new", "CircularQueue", "<", ">", "(", "<NUM_LIT:5>", ")", ";", "Assert", ".", "assertEquals", "(", "0", ",", "queue", ".", "size", "(", ")", ")", ";", "Assert", ".", "assertNull", "(", "queue", ".", "peek", "(", ")", ")", ";", "Assert", ".", "assertEquals", "(", "Collections", ".", "emptyList", "(", ")", ",", "new", "ArrayList", "<", ">", "(", "queue", ")", ")", ";", "queue", ".", "add", "(", "1", ")", ";", "queue", ".", "add", "(", "<NUM_LIT:2>", ")", ";", "queue", ".", "add", "(", "<NUM_LIT:3>", ")", ";", "queue", ".", "add", "(", "<NUM_LIT:4>", ")", ";", "Assert", ".", "assertEquals", "(", "<NUM_LIT:4>", ",", "queue", ".", "size", "(", ")", ")", ";", "Assert", ".", "assertEquals", "(", "Arrays", ".", "asList", "(", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ")", ",", "new", "ArrayList", "<", ">", "(", "queue", ")", ")", ";", "queue", ".", "offer", "(", "<NUM_LIT:5>", ")", ";", "Assert", ".", "assertEquals", "(", "<NUM_LIT:5>", ",", "queue", ".", "size", "(", ")", ")", ";", "Assert", ".", "assertEquals", "(", "Arrays", ".", "asList", "(", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", ")", ",", "new", "ArrayList", "<", ">", "(", "queue", ")", ")", ";", "queue", ".", "offer", "(", "<NUM_LIT:6>", ")", ";", "Assert", ".", "assertEquals", "(", "<NUM_LIT:5>", ",", "queue", ".", "size", "(", ")", ")", ";", "Assert", ".", "assertEquals", "(", "Arrays", ".", "asList", "(", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ")", ",", "new", "ArrayList", "<", ">", "(", "queue", ")", ")", ";", "Integer", "poll", "=", "queue", ".", "poll", "(", ")", ";", "Assert", ".", "assertEquals", "(", "<NUM_LIT:4>", ",", "queue", ".", "size", "(", ")", ")", ";", "Assert", ".", "assertEquals", "(", "(", "Object", ")", "<NUM_LIT:2>", ",", "poll", ")", ";", "Assert", ".", "assertEquals", "(", "Arrays", ".", "asList", "(", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ")", ",", "new", "ArrayList", "<", ">", "(", "queue", ")", ")", ";", "queue", ".", "add", "(", "<NUM_LIT:7>", ")", ";", "Assert", ".", "assertEquals", "(", "<NUM_LIT:5>", ",", "queue", ".", "size", "(", ")", ")", ";", "Assert", ".", "assertEquals", "(", "Arrays", ".", "asList", "(", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:7>", ")", ",", "new", "ArrayList", "<", ">", "(", "queue", ")", ")", ";", "queue", ".", "clear", "(", ")", ";", "Assert", ".", "assertEquals", "(", "0", ",", "queue", ".", "size", "(", ")", ")", ";", "Assert", ".", "assertEquals", "(", "Collections", ".", "emptyList", "(", ")", ",", "new", "ArrayList", "<", ">", "(", "queue", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testUppercaseConversionWithLowercasePreset", "(", ")", "throws", "IOException", "{", "DeserializationContext", "deserializationContext", "=", "mock", "(", "DeserializationContext", ".", "class", ")", ";", "DeserializerStringCache", "deserializerStringCache", "=", "DeserializerStringCache", ".", "from", "(", "deserializationContext", ")", ";", "String", "lowerCaseValue", "=", "deserializerStringCache", ".", "apply", "(", "\"", "<STR_LIT>", "\"", ",", "CacheScope", ".", "APPLICATION_SCOPE", ")", ";", "assertThat", "(", "lowerCaseValue", ",", "is", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "JsonParser", "jsonParser", "=", "mock", "(", "JsonParser", ".", "class", ")", ";", "when", "(", "jsonParser", ".", "getTextCharacters", "(", ")", ")", ".", "thenReturn", "(", "new", "char", "[", "]", "{", "<CHAR_LIT>", ",", "<CHAR_LIT:a>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT:e>", "}", ")", ";", "when", "(", "jsonParser", ".", "getTextLength", "(", ")", ")", ".", "thenReturn", "(", "<NUM_LIT:5>", ")", ";", "String", "upperCaseValue", "=", "deserializerStringCache", ".", "apply", "(", "jsonParser", ",", "CacheScope", ".", "APPLICATION_SCOPE", ",", "(", ")", "-", ">", "\"", "<STR_LIT>", "\"", ")", ";", "assertThat", "(", "upperCaseValue", ",", "is", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testUppercaseConversionWithLongString", "(", ")", "throws", "IOException", "{", "DeserializationContext", "deserializationContext", "=", "mock", "(", "DeserializationContext", ".", "class", ")", ";", "DeserializerStringCache", "deserializerStringCache", "=", "DeserializerStringCache", ".", "from", "(", "deserializationContext", ")", ";", "char", "[", "]", "lowercaseValue", "=", "new", "char", "[", "<NUM_LIT>", "]", ";", "Arrays", ".", "fill", "(", "lowercaseValue", ",", "<CHAR_LIT:a>", ")", ";", "JsonParser", "jsonParser", "=", "mock", "(", "JsonParser", ".", "class", ")", ";", "when", "(", "jsonParser", ".", "getText", "(", ")", ")", ".", "thenReturn", "(", "new", "String", "(", "lowercaseValue", ")", ")", ";", "when", "(", "jsonParser", ".", "getTextCharacters", "(", ")", ")", ".", "thenReturn", "(", "lowercaseValue", ")", ";", "when", "(", "jsonParser", ".", "getTextOffset", "(", ")", ")", ".", "thenReturn", "(", "0", ")", ";", "when", "(", "jsonParser", ".", "getTextLength", "(", ")", ")", ".", "thenReturn", "(", "lowercaseValue", ".", "length", ")", ";", "String", "upperCaseValue", "=", "deserializerStringCache", ".", "apply", "(", "jsonParser", ",", "CacheScope", ".", "APPLICATION_SCOPE", ",", "(", ")", "-", ">", "{", "try", "{", "return", "jsonParser", ".", "getText", "(", ")", ".", "toUpperCase", "(", ")", ";", "}", "catch", "(", "IOException", "ioe", ")", "{", "throw", "new", "IllegalStateException", "(", "\"", "<STR_LIT>", "\"", ",", "ioe", ")", ";", "}", "}", ")", ";", "char", "[", "]", "expectedValueChars", "=", "new", "char", "[", "<NUM_LIT>", "]", ";", "Arrays", ".", "fill", "(", "expectedValueChars", ",", "<CHAR_LIT:A>", ")", ";", "String", "expectedValue", "=", "new", "String", "(", "expectedValueChars", ")", ";", "assertThat", "(", "upperCaseValue", ",", "is", "(", "expectedValue", ")", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "remove", "(", ")", "{", "CURRENT_REQ_VERSION", ".", "remove", "(", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "shutdown", "(", ")", "{", "DEFAULT_EXECUTOR", ".", "shutdown", "(", ")", ";", "}", "</s>"]
["<s>", "@", "Before", "public", "void", "setUp", "(", ")", "throws", "Exception", "{", "TransportClientFactory", "clientFactory", "=", "JerseyEurekaHttpClientFactory", ".", "newBuilder", "(", ")", ".", "withClientName", "(", "CLIENT_APP_NAME", ")", ".", "build", "(", ")", ";", "String", "uri", "=", "String", ".", "format", "(", "\"", "<STR_LIT>", "\"", ",", "wireMockRule", ".", "port", "(", ")", ")", ";", "jerseyHttpClient", "=", "(", "JerseyApplicationClient", ")", "clientFactory", ".", "newClient", "(", "new", "DefaultEndpoint", "(", "uri", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testSendHeartBeatReceivesUnexpectedHtmlResponse", "(", ")", "{", "long", "lastDirtyTimestamp", "=", "System", ".", "currentTimeMillis", "(", ")", ";", "String", "uuid", "=", "UUID", ".", "randomUUID", "(", ")", ".", "toString", "(", ")", ";", "stubFor", "(", "put", "(", "urlPathEqualTo", "(", "\"", "<STR_LIT>", "\"", "+", "CLIENT_APP_NAME", "+", "\"", "<STR_LIT:/>", "\"", "+", "uuid", ")", ")", ".", "withQueryParam", "(", "\"", "<STR_LIT>", "\"", ",", "equalTo", "(", "\"", "<STR_LIT>", "\"", ")", ")", ".", "withQueryParam", "(", "\"", "<STR_LIT>", "\"", ",", "equalTo", "(", "lastDirtyTimestamp", "+", "\"", "\"", ")", ")", ".", "willReturn", "(", "aResponse", "(", ")", ".", "withStatus", "(", "<NUM_LIT>", ")", ".", "withHeader", "(", "\"", "<STR_LIT:Content-Type>", "\"", ",", "\"", "<STR_LIT>", "\"", ")", ".", "withBody", "(", "\"", "<STR_LIT>", "\"", ")", ")", ")", ";", "InstanceInfo", "instanceInfo", "=", "mock", "(", "InstanceInfo", ".", "class", ")", ";", "when", "(", "instanceInfo", ".", "getStatus", "(", ")", ")", ".", "thenReturn", "(", "InstanceInfo", ".", "InstanceStatus", ".", "UP", ")", ";", "when", "(", "instanceInfo", ".", "getLastDirtyTimestamp", "(", ")", ")", ".", "thenReturn", "(", "lastDirtyTimestamp", ")", ";", "EurekaHttpResponse", "<", "InstanceInfo", ">", "response", "=", "jerseyHttpClient", ".", "sendHeartBeat", "(", "CLIENT_APP_NAME", ",", "uuid", ",", "instanceInfo", ",", "null", ")", ";", "verify", "(", "putRequestedFor", "(", "urlPathEqualTo", "(", "\"", "<STR_LIT>", "\"", "+", "CLIENT_APP_NAME", "+", "\"", "<STR_LIT:/>", "\"", "+", "uuid", ")", ")", ".", "withQueryParam", "(", "\"", "<STR_LIT>", "\"", ",", "equalTo", "(", "\"", "<STR_LIT>", "\"", ")", ")", ".", "withQueryParam", "(", "\"", "<STR_LIT>", "\"", ",", "equalTo", "(", "lastDirtyTimestamp", "+", "\"", "\"", ")", ")", ")", ";", "assertThat", "(", "response", ".", "getStatusCode", "(", ")", ")", ".", "as", "(", "\"", "<STR_LIT>", "\"", ")", ".", "isEqualTo", "(", "<NUM_LIT>", ")", ";", "assertThat", "(", "response", ".", "getEntity", "(", ")", ")", ".", "as", "(", "\"", "<STR_LIT>", "\"", ")", ".", "isNull", "(", ")", ";", "}", "</s>"]
["<s>", "@", "After", "public", "void", "tearDown", "(", ")", "throws", "Exception", "{", "if", "(", "jerseyHttpClient", "!", "=", "null", ")", "{", "jerseyHttpClient", ".", "shutdown", "(", ")", ";", "}", "}", "</s>"]
["<s>", "public", "boolean", "shouldBroadcastPublicIpv4Addr", "(", ")", "{", "return", "false", ";", "}", "</s>"]
["<s>", "private", "String", "getPrivateIpv4Addr", "(", ")", "{", "String", "privateIpv4Addr", "=", "amazonInfoHolder", ".", "get", "(", ")", ".", "get", "(", "MetaDataKey", ".", "localIpv4", ")", ";", "return", "privateIpv4Addr", "=", "=", "null", "?", "super", ".", "getIpAddress", "(", ")", ":", "privateIpv4Addr", ";", "}", "</s>"]
["<s>", "private", "String", "getPublicIpv4Addr", "(", ")", "{", "String", "publicIpv4Addr", "=", "amazonInfoHolder", ".", "get", "(", ")", ".", "get", "(", "MetaDataKey", ".", "publicIpv4", ")", ";", "return", "publicIpv4Addr", "=", "=", "null", "?", "super", ".", "getIpAddress", "(", ")", ":", "publicIpv4Addr", ";", "}", "</s>"]
["<s>", "public", "boolean", "shouldBroadcastPublicIpv4Addr", "(", ")", "{", "return", "configInstance", ".", "getBooleanProperty", "(", "namespace", "+", "BROADCAST_PUBLIC_IPV4_ADDR_KEY", ",", "super", ".", "shouldBroadcastPublicIpv4Addr", "(", ")", ")", ".", "get", "(", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testBroadcastPublicIpv4Address", "(", ")", "{", "AmazonInfo", "info", "=", "(", "AmazonInfo", ")", "instanceInfo", ".", "getDataCenterInfo", "(", ")", ";", "config", "=", "createConfig", "(", "info", ")", ";", "assertEquals", "(", "instanceInfo", ".", "getIPAddr", "(", ")", ",", "config", ".", "getIpAddress", "(", ")", ")", ";", "}", "</s>"]
["<s>", "public", "Stats", "getStats", "(", ")", "{", "return", "stats", ";", "}", "</s>"]
["<s>", "public", "int", "initLocalRegistrySize", "(", ")", "{", "return", "initRegistrySize", ";", "}", "</s>"]
["<s>", "public", "long", "initTimestampMs", "(", ")", "{", "return", "initTimestampMs", ";", "}", "</s>"]
["<s>", "public", "int", "localRegistrySize", "(", ")", "{", "return", "registrySize", ";", "}", "</s>"]
["<s>", "public", "long", "lastSuccessfulRegistryFetchTimestampMs", "(", ")", "{", "return", "lastSuccessfulRegistryFetchTimestamp", ";", "}", "</s>"]
["<s>", "public", "long", "lastSuccessfulHeartbeatTimestampMs", "(", ")", "{", "return", "lastSuccessfulHeartbeatTimestamp", ";", "}", "</s>"]
["<s>", "public", "boolean", "initSucceeded", "(", ")", "{", "return", "initLocalRegistrySize", "(", ")", ">", "0", "&", "&", "initTimestampMs", "(", ")", ">", "0", ";", "}", "</s>"]
["<s>", "@", "Before", "public", "void", "setUp", "(", ")", "throws", "Exception", "{", "setupProperties", "(", ")", ";", "populateRemoteRegistryAtStartup", "(", ")", ";", "setupDiscoveryClient", "(", ")", ";", "}", "</s>"]
["<s>", "@", "After", "public", "void", "tearDown", "(", ")", "throws", "Exception", "{", "shutdownDiscoveryClient", "(", ")", ";", "DiscoveryClientResource", ".", "clearDiscoveryClientConfig", "(", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testEmptyInitLocalRegistrySize", "(", ")", "throws", "Exception", "{", "Assert", ".", "assertTrue", "(", "client", "instanceof", "DiscoveryClient", ")", ";", "DiscoveryClient", "clientImpl", "=", "(", "DiscoveryClient", ")", "client", ";", "Assert", ".", "assertEquals", "(", "0", ",", "clientImpl", ".", "getStats", "(", ")", ".", "initLocalRegistrySize", "(", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testInitFailed", "(", ")", "throws", "Exception", "{", "Assert", ".", "assertTrue", "(", "client", "instanceof", "DiscoveryClient", ")", ";", "DiscoveryClient", "clientImpl", "=", "(", "DiscoveryClient", ")", "client", ";", "Assert", ".", "assertFalse", "(", "clientImpl", ".", "getStats", "(", ")", ".", "initSucceeded", "(", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testNonEmptyInitLocalRegistrySize", "(", ")", "throws", "Exception", "{", "Assert", ".", "assertTrue", "(", "client", "instanceof", "DiscoveryClient", ")", ";", "DiscoveryClient", "clientImpl", "=", "(", "DiscoveryClient", ")", "client", ";", "Assert", ".", "assertEquals", "(", "createLocalApps", "(", ")", ".", "size", "(", ")", ",", "clientImpl", ".", "getStats", "(", ")", ".", "initLocalRegistrySize", "(", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testInitSucceeded", "(", ")", "throws", "Exception", "{", "Assert", ".", "assertTrue", "(", "client", "instanceof", "DiscoveryClient", ")", ";", "DiscoveryClient", "clientImpl", "=", "(", "DiscoveryClient", ")", "client", ";", "Assert", ".", "assertTrue", "(", "clientImpl", ".", "getStats", "(", ")", ".", "initSucceeded", "(", ")", ")", ";", "}", "</s>"]
["<s>", "private", "static", "boolean", "classExists", "(", "String", "className", ")", "{", "try", "{", "Class", ".", "forName", "(", "className", ")", ";", "return", "true", ";", "}", "catch", "(", "ClassNotFoundException", "e", ")", "{", "return", "false", ";", "}", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testInstanceInfoToEndpoint", "(", ")", "throws", "Exception", "{", "EurekaClientConfig", "clientConfig", "=", "mock", "(", "EurekaClientConfig", ".", "class", ")", ";", "when", "(", "clientConfig", ".", "getEurekaServerURLContext", "(", ")", ")", ".", "thenReturn", "(", "\"", "<STR_LIT>", "\"", ")", ";", "when", "(", "clientConfig", ".", "getRegion", "(", ")", ")", ".", "thenReturn", "(", "\"", "<STR_LIT>", "\"", ")", ";", "EurekaTransportConfig", "transportConfig", "=", "mock", "(", "EurekaTransportConfig", ".", "class", ")", ";", "when", "(", "transportConfig", ".", "applicationsResolverUseIp", "(", ")", ")", ".", "thenReturn", "(", "false", ")", ";", "AmazonInfo", "amazonInfo", "=", "AmazonInfo", ".", "Builder", ".", "newBuilder", "(", ")", ".", "addMetadata", "(", "AmazonInfo", ".", "MetaDataKey", ".", "availabilityZone", ",", "\"", "<STR_LIT>", "\"", ")", ".", "build", "(", ")", ";", "InstanceInfo", "instanceWithAWSInfo", "=", "InstanceInfo", ".", "Builder", ".", "newBuilder", "(", ")", ".", "setAppName", "(", "\"", "<STR_LIT:Name>", "\"", ")", ".", "setHostName", "(", "\"", "<STR_LIT:Name>", "\"", ")", ".", "setPort", "(", "<NUM_LIT>", ")", ".", "setDataCenterInfo", "(", "amazonInfo", ")", ".", "build", "(", ")", ";", "AwsEndpoint", "awsEndpoint", "=", "ResolverUtils", ".", "instanceInfoToEndpoint", "(", "clientConfig", ",", "transportConfig", ",", "instanceWithAWSInfo", ")", ";", "assertEquals", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "awsEndpoint", ".", "getZone", "(", ")", ")", ";", "MyDataCenterInfo", "myDataCenterInfo", "=", "new", "MyDataCenterInfo", "(", "DataCenterInfo", ".", "Name", ".", "MyOwn", ")", ";", "InstanceInfo", "instanceWithMyDataInfo", "=", "InstanceInfo", ".", "Builder", ".", "newBuilder", "(", ")", ".", "setAppName", "(", "\"", "<STR_LIT:Name>", "\"", ")", ".", "setHostName", "(", "\"", "<STR_LIT:Name>", "\"", ")", ".", "setPort", "(", "<NUM_LIT>", ")", ".", "setDataCenterInfo", "(", "myDataCenterInfo", ")", ".", "add", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ")", ".", "build", "(", ")", ";", "awsEndpoint", "=", "ResolverUtils", ".", "instanceInfoToEndpoint", "(", "clientConfig", ",", "transportConfig", ",", "instanceWithMyDataInfo", ")", ";", "assertEquals", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "awsEndpoint", ".", "getZone", "(", ")", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "shouldEnforceFetchRegistryAtInit", "(", ")", "{", "return", "prefixedConfig", ".", "getBoolean", "(", "SHOULD_ENFORCE_FETCH_REGISTRY_AT_INIT_KEY", ",", "false", ")", ";", "}", "</s>"]
["<s>", "@", "BeforeClass", "public", "static", "void", "setupClass", "(", ")", "throws", "IOException", "{", "eurekaHttpServer", "=", "new", "SimpleEurekaHttpServer", "(", "requestHandler", ")", ";", "when", "(", "requestHandler", ".", "getApplications", "(", ")", ")", ".", "thenReturn", "(", "anEurekaHttpResponse", "(", "<NUM_LIT>", ",", "APPLICATIONS", ")", ".", "type", "(", "MediaType", ".", "APPLICATION_JSON_TYPE", ")", ".", "build", "(", ")", ")", ";", "when", "(", "requestHandler", ".", "getDelta", "(", ")", ")", ".", "thenReturn", "(", "anEurekaHttpResponse", "(", "<NUM_LIT>", ",", "APPLICATIONS_DELTA", ")", ".", "type", "(", "MediaType", ".", "APPLICATION_JSON_TYPE", ")", ".", "build", "(", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "(", "expected", "=", "ProvisionException", ".", "class", ")", "public", "void", "testEnforceFetchRegistryAtInitPrimaryAndBackupFailure", "(", ")", "{", "Injector", "injector", "=", "LifecycleInjector", ".", "builder", "(", ")", ".", "withModules", "(", "new", "AbstractModule", "(", ")", "{", "@", "Override", "protected", "void", "configure", "(", ")", "{", "bind", "(", "EurekaInstanceConfig", ".", "class", ")", ".", "to", "(", "LocalEurekaInstanceConfig", ".", "class", ")", ";", "bind", "(", "EurekaClientConfig", ".", "class", ")", ".", "to", "(", "LocalEurekaClientConfig1", ".", "class", ")", ";", "bind", "(", "AbstractDiscoveryClientOptionalArgs", ".", "class", ")", ".", "to", "(", "Jersey1DiscoveryClientOptionalArgs", ".", "class", ")", ".", "in", "(", "Scopes", ".", "SINGLETON", ")", ";", "bind", "(", "EndpointRandomizer", ".", "class", ")", ".", "toInstance", "(", "ResolverUtils", ":", ":", "randomize", ")", ";", "}", "}", ")", ".", "build", "(", ")", ".", "createInjector", "(", ")", ";", "LifecycleManager", "lifecycleManager", "=", "injector", ".", "getInstance", "(", "LifecycleManager", ".", "class", ")", ";", "try", "{", "lifecycleManager", ".", "start", "(", ")", ";", "}", "catch", "(", "Exception", "e", ")", "{", "throw", "new", "RuntimeException", "(", "e", ")", ";", "}", "injector", ".", "getInstance", "(", "EurekaClient", ".", "class", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testEnforceFetchRegistryAtInitPrimaryFailureAndBackupSuccess", "(", ")", "{", "Injector", "injector", "=", "LifecycleInjector", ".", "builder", "(", ")", ".", "withModules", "(", "new", "AbstractModule", "(", ")", "{", "@", "Override", "protected", "void", "configure", "(", ")", "{", "bind", "(", "EurekaInstanceConfig", ".", "class", ")", ".", "to", "(", "LocalEurekaInstanceConfig", ".", "class", ")", ";", "bind", "(", "EurekaClientConfig", ".", "class", ")", ".", "to", "(", "LocalEurekaClientConfig1", ".", "class", ")", ";", "bind", "(", "AbstractDiscoveryClientOptionalArgs", ".", "class", ")", ".", "to", "(", "Jersey1DiscoveryClientOptionalArgs", ".", "class", ")", ".", "in", "(", "Scopes", ".", "SINGLETON", ")", ";", "bind", "(", "EndpointRandomizer", ".", "class", ")", ".", "toInstance", "(", "ResolverUtils", ":", ":", "randomize", ")", ";", "bind", "(", "BackupRegistry", ".", "class", ")", ".", "toInstance", "(", "new", "MockBackupRegistry", "(", ")", ")", ";", "}", "}", ")", ".", "build", "(", ")", ".", "createInjector", "(", ")", ";", "LifecycleManager", "lifecycleManager", "=", "injector", ".", "getInstance", "(", "LifecycleManager", ".", "class", ")", ";", "try", "{", "lifecycleManager", ".", "start", "(", ")", ";", "}", "catch", "(", "Exception", "e", ")", "{", "throw", "new", "RuntimeException", "(", "e", ")", ";", "}", "EurekaClient", "client", "=", "injector", ".", "getInstance", "(", "EurekaClient", ".", "class", ")", ";", "Assert", ".", "assertNotNull", "(", "client", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testEnforceFetchRegistryAtInitPrimaryFailureNoop", "(", ")", "{", "Injector", "injector", "=", "LifecycleInjector", ".", "builder", "(", ")", ".", "withModules", "(", "new", "AbstractModule", "(", ")", "{", "@", "Override", "protected", "void", "configure", "(", ")", "{", "bind", "(", "EurekaInstanceConfig", ".", "class", ")", ".", "to", "(", "LocalEurekaInstanceConfig", ".", "class", ")", ";", "bind", "(", "EurekaClientConfig", ".", "class", ")", ".", "to", "(", "LocalEurekaClientConfig2", ".", "class", ")", ";", "bind", "(", "AbstractDiscoveryClientOptionalArgs", ".", "class", ")", ".", "to", "(", "Jersey1DiscoveryClientOptionalArgs", ".", "class", ")", ".", "in", "(", "Scopes", ".", "SINGLETON", ")", ";", "bind", "(", "EndpointRandomizer", ".", "class", ")", ".", "toInstance", "(", "ResolverUtils", ":", ":", "randomize", ")", ";", "}", "}", ")", ".", "build", "(", ")", ".", "createInjector", "(", ")", ";", "LifecycleManager", "lifecycleManager", "=", "injector", ".", "getInstance", "(", "LifecycleManager", ".", "class", ")", ";", "try", "{", "lifecycleManager", ".", "start", "(", ")", ";", "}", "catch", "(", "Exception", "e", ")", "{", "throw", "new", "RuntimeException", "(", "e", ")", ";", "}", "EurekaClient", "client", "=", "injector", ".", "getInstance", "(", "EurekaClient", ".", "class", ")", ";", "Assert", ".", "assertNotNull", "(", "client", ")", ";", "}", "</s>"]
["<s>", "@", "com", ".", "netflix", ".", "servo", ".", "annotations", ".", "Monitor", "(", "name", "=", "METRIC_REGISTRY_PREFIX", "+", "\"", "<STR_LIT>", "\"", ",", "type", "=", "DataSourceType", ".", "GAUGE", ")", "public", "long", "getTimeOfLastSuccessfulRemoteFetch", "(", ")", "{", "return", "(", "System", ".", "currentTimeMillis", "(", ")", "-", "timeOfLastSuccessfulRemoteFetch", ")", "/", "<NUM_LIT:1000>", ";", "}", "</s>"]
["<s>", "@", "com", ".", "netflix", ".", "servo", ".", "annotations", ".", "Monitor", "(", "name", "=", "METRIC_REGISTRY_PREFIX", "+", "\"", "<STR_LIT>", "\"", ",", "type", "=", "DataSourceType", ".", "GAUGE", ")", "public", "int", "shouldAllowAccessMetric", "(", ")", "{", "return", "shouldAllowAccess", "(", ")", "?", "1", ":", "0", ";", "}", "</s>"]
["<s>", "@", "com", ".", "netflix", ".", "servo", ".", "annotations", ".", "Monitor", "(", "name", "=", "METRIC_REGISTRY_PREFIX", "+", "\"", "<STR_LIT>", "\"", ",", "type", "=", "DataSourceType", ".", "GAUGE", ")", "public", "int", "isLeaseExpirationEnabledMetric", "(", ")", "{", "return", "isLeaseExpirationEnabled", "(", ")", "?", "1", ":", "0", ";", "}", "</s>"]
["<s>", "@", "com", ".", "netflix", ".", "servo", ".", "annotations", ".", "Monitor", "(", "name", "=", "METRIC_REGISTRY_PREFIX", "+", "\"", "<STR_LIT>", "\"", ",", "type", "=", "DataSourceType", ".", "COUNTER", ")", "public", "long", "getRemoteFetchSuccesses", "(", ")", "{", "return", "deltaSuccesses", ";", "}", "</s>"]
["<s>", "@", "com", ".", "netflix", ".", "servo", ".", "annotations", ".", "Monitor", "(", "name", "=", "METRIC_REGISTRY_PREFIX", "+", "\"", "<STR_LIT>", "\"", ",", "type", "=", "DataSourceType", ".", "COUNTER", ")", "public", "long", "getRemoteFetchMismatches", "(", ")", "{", "return", "deltaMismatches", ";", "}", "</s>"]
["<s>", "@", "com", ".", "netflix", ".", "servo", ".", "annotations", ".", "Monitor", "(", "name", "=", "METRIC_REGISTRY_PREFIX", "+", "\"", "<STR_LIT>", "\"", ",", "type", "=", "DataSourceType", ".", "GAUGE", ")", "public", "int", "isSelfPreservationModeEnabledMetric", "(", ")", "{", "return", "isSelfPreservationModeEnabled", "(", ")", "?", "1", ":", "0", ";", "}", "</s>"]
["<s>", "@", "Before", "public", "void", "setUp", "(", ")", "throws", "Exception", "{", "filter", "=", "new", "GzipEncodingEnforcingFilter", "(", ")", ";", "filterChain", "=", "new", "FilterChain", "(", ")", "{", "@", "Override", "public", "void", "doFilter", "(", "ServletRequest", "req", ",", "ServletResponse", "response", ")", "throws", "IOException", ",", "ServletException", "{", "filteredRequest", "=", "(", "HttpServletRequest", ")", "req", ";", "}", "}", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testAlreadyGzip", "(", ")", "throws", "Exception", "{", "gzipRequest", "(", ")", ";", "filter", ".", "doFilter", "(", "request", ",", "response", ",", "filterChain", ")", ";", "Enumeration", "values", "=", "filteredRequest", ".", "getHeaders", "(", "ACCEPT_ENCODING_HEADER", ")", ";", "assertEquals", "(", "\"", "<STR_LIT>", "\"", ",", "null", ",", "values", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testForceGzip", "(", ")", "throws", "Exception", "{", "noneGzipRequest", "(", ")", ";", "filter", ".", "doFilter", "(", "request", ",", "response", ",", "filterChain", ")", ";", "String", "res", "=", "\"", "\"", ";", "Enumeration", "values", "=", "filteredRequest", ".", "getHeaders", "(", "ACCEPT_ENCODING_HEADER", ")", ";", "while", "(", "values", ".", "hasMoreElements", "(", ")", ")", "{", "res", "=", "res", "+", "values", ".", "nextElement", "(", ")", "+", "\"", "<STR_LIT>", "<STR_LIT>", "\"", ";", "}", "assertEquals", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "<STR_LIT>", "<STR_LIT>", "\"", ",", "res", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testForceGzipOtherHeader", "(", ")", "throws", "Exception", "{", "noneGzipRequest", "(", ")", ";", "when", "(", "request", ".", "getHeader", "(", "\"", "<STR_LIT:Test>", "\"", ")", ")", ".", "thenReturn", "(", "\"", "<STR_LIT>", "\"", ")", ";", "when", "(", "request", ".", "getHeaders", "(", "\"", "<STR_LIT:Test>", "\"", ")", ")", ".", "thenReturn", "(", "new", "Enumeration", "(", ")", "{", "private", "int", "c", "=", "0", ";", "@", "Override", "public", "boolean", "hasMoreElements", "(", ")", "{", "return", "c", "=", "=", "0", ";", "}", "@", "Override", "public", "Object", "nextElement", "(", ")", "{", "c", "+", "+", ";", "return", "\"", "<STR_LIT>", "\"", ";", "}", "}", ")", ";", "filter", ".", "doFilter", "(", "request", ",", "response", ",", "filterChain", ")", ";", "String", "res", "=", "\"", "\"", ";", "Enumeration", "values", "=", "filteredRequest", ".", "getHeaders", "(", "\"", "<STR_LIT:Test>", "\"", ")", ";", "while", "(", "values", ".", "hasMoreElements", "(", ")", ")", "{", "res", "=", "res", "+", "values", ".", "nextElement", "(", ")", "+", "\"", "<STR_LIT>", "<STR_LIT>", "\"", ";", "}", "assertEquals", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "<STR_LIT>", "<STR_LIT>", "\"", ",", "res", ")", ";", "}", "</s>"]
["<s>", "private", "void", "gzipRequest", "(", ")", "{", "when", "(", "request", ".", "getMethod", "(", ")", ")", ".", "thenReturn", "(", "\"", "<STR_LIT:GET>", "\"", ")", ";", "when", "(", "request", ".", "getHeader", "(", "ACCEPT_ENCODING_HEADER", ")", ")", ".", "thenReturn", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "</s>"]
["<s>", "private", "void", "noneGzipRequest", "(", ")", "{", "when", "(", "request", ".", "getMethod", "(", ")", ")", ".", "thenReturn", "(", "\"", "<STR_LIT:GET>", "\"", ")", ";", "when", "(", "request", ".", "getHeader", "(", "ACCEPT_ENCODING_HEADER", ")", ")", ".", "thenReturn", "(", "null", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testRandomizeProperlyRandomizesList", "(", ")", "throws", "Exception", "{", "boolean", "success", "=", "false", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "<NUM_LIT:100>", ";", "i", "+", "+", ")", "{", "List", "<", "AwsEndpoint", ">", "firstList", "=", "SampleCluster", ".", "UsEast1a", ".", "builder", "(", ")", ".", "withServerPool", "(", "<NUM_LIT:100>", ")", ".", "build", "(", ")", ";", "List", "<", "AwsEndpoint", ">", "secondList", "=", "ResolverUtils", ".", "randomize", "(", "firstList", ")", ";", "try", "{", "assertThat", "(", "firstList", ",", "is", "(", "not", "(", "equalTo", "(", "secondList", ")", ")", ")", ")", ";", "success", "=", "true", ";", "break", ";", "}", "catch", "(", "AssertionError", "e", ")", "{", "}", "}", "if", "(", "!", "success", ")", "{", "throw", "new", "AssertionError", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testRandomizeReturnsACopyOfTheMethodParameter", "(", ")", "throws", "Exception", "{", "List", "<", "AwsEndpoint", ">", "firstList", "=", "SampleCluster", ".", "UsEast1a", ".", "builder", "(", ")", ".", "withServerPool", "(", "1", ")", ".", "build", "(", ")", ";", "List", "<", "AwsEndpoint", ">", "secondList", "=", "ResolverUtils", ".", "randomize", "(", "firstList", ")", ";", "assertThat", "(", "firstList", ",", "is", "(", "not", "(", "sameInstance", "(", "secondList", ")", ")", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testNullUrlEntries", "(", ")", "throws", "Exception", "{", "Builder", "builder", "=", "newBuilder", "(", ")", ".", "setAppName", "(", "\"", "<STR_LIT>", "\"", ")", ".", "setNamespace", "(", "\"", "<STR_LIT:.>", "\"", ")", ".", "setHostName", "(", "\"", "<STR_LIT>", "\"", ")", ".", "setPort", "(", "<NUM_LIT>", ")", ".", "setSecurePort", "(", "<NUM_LIT>", ")", ".", "setHealthCheckUrls", "(", "null", ",", "null", ",", "null", ")", ".", "setStatusPageUrl", "(", "null", ",", "null", ")", ".", "setHomePageUrl", "(", "null", ",", "null", ")", ".", "enablePort", "(", "PortType", ".", "SECURE", ",", "true", ")", ";", "InstanceInfo", "noHealtcheckInstanceInfo", "=", "builder", ".", "build", "(", ")", ";", "assertThat", "(", "noHealtcheckInstanceInfo", ".", "getHealthCheckUrls", "(", ")", ".", "size", "(", ")", ",", "is", "(", "equalTo", "(", "0", ")", ")", ")", ";", "assertThat", "(", "noHealtcheckInstanceInfo", ".", "getStatusPageUrl", "(", ")", ",", "nullValue", "(", ")", ")", ";", "assertThat", "(", "noHealtcheckInstanceInfo", ".", "getHomePageUrl", "(", ")", ",", "nullValue", "(", ")", ")", ";", "}", "</s>"]
["<s>", "public", "void", "setClientOverride", "(", "EurekaClient", "eurekaClient", ")", "{", "this", ".", "clientOverride", "=", "eurekaClient", ";", "}", "</s>"]
