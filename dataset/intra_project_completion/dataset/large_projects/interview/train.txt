["<s>", "public", "double", "convert", "(", "String", "input", ")", "{", "boolean", "isNeg", "=", "false", ";", "if", "(", "input", ".", "startsWith", "(", "\"", "<STR_LIT:->", "\"", ")", ")", "{", "isNeg", "=", "true", ";", "input", "=", "input", ".", "substring", "(", "1", ")", ";", "}", "StringTokenizer", "strtk", "=", "new", "StringTokenizer", "(", "input", ",", "\"", "<STR_LIT:E>", "\"", ")", ";", "String", "number", "=", "strtk", ".", "nextToken", "(", ")", ";", "String", "power", "=", "strtk", ".", "nextToken", "(", ")", ";", "double", "dNumber", "=", "toDouble", "(", "number", ")", ";", "double", "dPower", "=", "toDouble", "(", "power", ")", ";", "double", "pow", "=", "Math", ".", "pow", "(", "<NUM_LIT:10>", ",", "dPower", ")", ";", "double", "result", "=", "dNumber", "*", "pow", ";", "return", "isNeg", "?", "result", "*", "-", "1", ":", "result", ";", "}", "</s>"]
["<s>", "private", "double", "toDouble", "(", "String", "number", ")", "{", "boolean", "isNeg", "=", "false", ";", "if", "(", "number", ".", "startsWith", "(", "\"", "<STR_LIT:->", "\"", ")", ")", "{", "isNeg", "=", "true", ";", "number", "=", "number", ".", "substring", "(", "1", ")", ";", "}", "int", "result", "=", "0", ";", "int", "pow", "=", "1", ";", "boolean", "foundDot", "=", "false", ";", "for", "(", "char", "ch", ":", "number", ".", "toCharArray", "(", ")", ")", "{", "if", "(", "ch", "=", "=", "<CHAR_LIT:.>", ")", "{", "foundDot", "=", "true", ";", "continue", ";", "}", "if", "(", "foundDot", ")", "{", "pow", "=", "pow", "*", "<NUM_LIT:10>", ";", "}", "result", "*", "=", "<NUM_LIT:10>", ";", "result", "+", "=", "(", "ch", "-", "<CHAR_LIT:0>", ")", ";", "}", "double", "doubleResult", "=", "(", "result", "*", "<NUM_LIT:1.0>", ")", "/", "pow", ";", "return", "isNeg", "?", "doubleResult", "*", "-", "1", ":", "doubleResult", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "FloatPointConversion", "fpc", "=", "new", "FloatPointConversion", "(", ")", ";", "System", ".", "out", ".", "println", "(", "fpc", ".", "convert", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "System", ".", "out", ".", "println", "(", "fpc", ".", "convert", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "System", ".", "out", ".", "println", "(", "fpc", ".", "convert", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "}", "</s>"]
["<s>", "public", "String", "toWord", "(", "int", "number", ")", "{", "StringBuffer", "buffer", "=", "new", "StringBuffer", "(", ")", ";", "if", "(", "number", "=", "=", "0", ")", "{", "return", "toString", "(", "number", ")", ";", "}", "if", "(", "number", "<", "0", ")", "{", "buffer", ".", "append", "(", "\"", "<STR_LIT>", "\"", ")", ";", "number", "=", "number", "*", "-", "1", ";", "}", "if", "(", "number", ">", "=", "MILLION", ")", "{", "int", "first", "=", "number", "/", "MILLION", ";", "number", "=", "number", "%", "MILLION", ";", "buffer", ".", "append", "(", "hundredsPart", "(", "first", ")", ")", ".", "append", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "if", "(", "number", ">", "=", "THOUSAND", ")", "{", "int", "first", "=", "number", "/", "THOUSAND", ";", "number", "=", "number", "%", "THOUSAND", ";", "buffer", ".", "append", "(", "hundredsPart", "(", "first", ")", ")", ".", "append", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "buffer", ".", "append", "(", "hundredsPart", "(", "number", ")", ")", ";", "return", "buffer", ".", "toString", "(", ")", ";", "}", "</s>"]
["<s>", "private", "String", "hundredsPart", "(", "int", "number", ")", "{", "StringBuffer", "buffer", "=", "new", "StringBuffer", "(", ")", ";", "if", "(", "number", "!", "=", "0", ")", "{", "if", "(", "number", "<", "=", "<NUM_LIT>", ")", "{", "buffer", ".", "append", "(", "tenthPart", "(", "number", ")", ")", ";", "}", "else", "{", "int", "first", "=", "(", "number", "/", "<NUM_LIT:100>", ")", ";", "int", "second", "=", "number", "%", "<NUM_LIT:100>", ";", "buffer", ".", "append", "(", "toString", "(", "first", ")", "+", "\"", "<STR_LIT>", "\"", ")", ";", "if", "(", "second", "!", "=", "0", ")", "{", "buffer", ".", "append", "(", "\"", "\"", ")", ".", "append", "(", "tenthPart", "(", "second", ")", ")", ";", "}", "}", "return", "buffer", ".", "toString", "(", ")", ";", "}", "else", "{", "return", "\"", "\"", ";", "}", "}", "</s>"]
["<s>", "private", "String", "tenthPart", "(", "int", "number", ")", "{", "StringBuffer", "buffer", "=", "new", "StringBuffer", "(", ")", ";", "if", "(", "number", "!", "=", "0", ")", "{", "if", "(", "number", "<", "=", "<NUM_LIT>", ")", "{", "buffer", ".", "append", "(", "toString", "(", "number", ")", ")", ";", "}", "else", "{", "int", "first", "=", "(", "number", "/", "<NUM_LIT:10>", ")", "*", "<NUM_LIT:10>", ";", "int", "second", "=", "number", "%", "<NUM_LIT:10>", ";", "buffer", ".", "append", "(", "toString", "(", "first", ")", ")", ";", "if", "(", "second", "!", "=", "0", ")", "{", "buffer", ".", "append", "(", "\"", "\"", ")", ".", "append", "(", "toString", "(", "second", ")", ")", ";", "}", "}", "return", "buffer", ".", "toString", "(", ")", ";", "}", "else", "{", "return", "\"", "\"", ";", "}", "}", "</s>"]
["<s>", "private", "String", "toString", "(", "int", "number", ")", "{", "switch", "(", "number", ")", "{", "case", "0", ":", "return", "\"", "<STR_LIT>", "\"", ";", "case", "1", ":", "return", "\"", "<STR_LIT>", "\"", ";", "case", "<NUM_LIT:2>", ":", "return", "\"", "<STR_LIT>", "\"", ";", "case", "<NUM_LIT:3>", ":", "return", "\"", "<STR_LIT>", "\"", ";", "case", "<NUM_LIT:4>", ":", "return", "\"", "<STR_LIT>", "\"", ";", "case", "<NUM_LIT:5>", ":", "return", "\"", "<STR_LIT>", "\"", ";", "case", "<NUM_LIT:6>", ":", "return", "\"", "<STR_LIT>", "\"", ";", "case", "<NUM_LIT:7>", ":", "return", "\"", "<STR_LIT>", "\"", ";", "case", "<NUM_LIT:8>", ":", "return", "\"", "<STR_LIT>", "\"", ";", "case", "<NUM_LIT:9>", ":", "return", "\"", "<STR_LIT>", "\"", ";", "case", "<NUM_LIT:10>", ":", "return", "\"", "<STR_LIT>", "\"", ";", "case", "<NUM_LIT:11>", ":", "return", "\"", "<STR_LIT>", "\"", ";", "case", "<NUM_LIT:12>", ":", "return", "\"", "<STR_LIT>", "\"", ";", "case", "<NUM_LIT>", ":", "return", "\"", "<STR_LIT>", "\"", ";", "case", "<NUM_LIT>", ":", "return", "\"", "<STR_LIT>", "\"", ";", "case", "<NUM_LIT:15>", ":", "return", "\"", "<STR_LIT>", "\"", ";", "case", "<NUM_LIT:16>", ":", "return", "\"", "<STR_LIT>", "\"", ";", "case", "<NUM_LIT>", ":", "return", "\"", "<STR_LIT>", "\"", ";", "case", "<NUM_LIT>", ":", "return", "\"", "<STR_LIT>", "\"", ";", "case", "<NUM_LIT>", ":", "return", "\"", "<STR_LIT>", "\"", ";", "case", "<NUM_LIT:20>", ":", "return", "\"", "<STR_LIT>", "\"", ";", "case", "<NUM_LIT:30>", ":", "return", "\"", "<STR_LIT>", "\"", ";", "case", "<NUM_LIT>", ":", "return", "\"", "<STR_LIT>", "\"", ";", "case", "<NUM_LIT>", ":", "return", "\"", "<STR_LIT>", "\"", ";", "case", "<NUM_LIT>", ":", "return", "\"", "<STR_LIT>", "\"", ";", "case", "<NUM_LIT>", ":", "return", "\"", "<STR_LIT>", "\"", ";", "case", "<NUM_LIT>", ":", "return", "\"", "<STR_LIT>", "\"", ";", "case", "<NUM_LIT>", ":", "return", "\"", "<STR_LIT>", "\"", ";", "case", "<NUM_LIT:100>", ":", "return", "\"", "<STR_LIT>", "\"", ";", "case", "<NUM_LIT:1000>", ":", "return", "\"", "<STR_LIT>", "\"", ";", "case", "<NUM_LIT>", ":", "return", "\"", "<STR_LIT>", "\"", ";", "default", ":", "throw", "new", "IllegalArgumentException", "(", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "NumberToWord", "ntw", "=", "new", "NumberToWord", "(", ")", ";", "System", ".", "out", ".", "println", "(", "ntw", ".", "toWord", "(", "<NUM_LIT>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "ntw", ".", "toWord", "(", "<NUM_LIT>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "ntw", ".", "toWord", "(", "<NUM_LIT>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "ntw", ".", "toWord", "(", "<NUM_LIT>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "ntw", ".", "toWord", "(", "<NUM_LIT>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "ntw", ".", "toWord", "(", "<NUM_LIT>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "ntw", ".", "toWord", "(", "-", "<NUM_LIT>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "ntw", ".", "toWord", "(", "<NUM_LIT>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "ntw", ".", "toWord", "(", "-", "<NUM_LIT>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "ntw", ".", "toWord", "(", "0", ")", ")", ";", "}", "</s>"]
["<s>", "public", "String", "numberToBase26", "(", "int", "num", ")", "{", "StringBuffer", "buff", "=", "new", "StringBuffer", "(", ")", ";", "while", "(", "num", ">", "0", ")", "{", "char", "r", "=", "convert", "(", "num", "%", "<NUM_LIT>", ")", ";", "buff", ".", "append", "(", "r", ")", ";", "num", "=", "(", "int", ")", "(", "Math", ".", "ceil", "(", "num", "*", "<NUM_LIT:1.0>", "/", "<NUM_LIT>", ")", ")", ";", "num", "-", "-", ";", "}", "return", "buff", ".", "reverse", "(", ")", ".", "toString", "(", ")", ";", "}", "</s>"]
["<s>", "public", "int", "base26ToNumber", "(", "String", "str", ")", "{", "int", "result", "=", "0", ";", "int", "pow", "=", "1", ";", "for", "(", "int", "i", "=", "str", ".", "length", "(", ")", "-", "1", ";", "i", ">", "=", "0", ";", "i", "-", "-", ")", "{", "char", "s", "=", "str", ".", "charAt", "(", "i", ")", ";", "s", "=", "(", "char", ")", "(", "s", "-", "<CHAR_LIT:A>", "+", "1", ")", ";", "result", "+", "=", "s", "*", "pow", ";", "pow", "*", "=", "<NUM_LIT>", ";", "}", "return", "result", ";", "}", "</s>"]
["<s>", "private", "char", "convert", "(", "int", "r", ")", "{", "if", "(", "r", "=", "=", "0", ")", "{", "return", "<CHAR_LIT:Z>", ";", "}", "else", "{", "return", "(", "char", ")", "(", "r", "+", "<CHAR_LIT:A>", "-", "1", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "ConvertNumberIntoBase26", "cni", "=", "new", "ConvertNumberIntoBase26", "(", ")", ";", "System", ".", "out", ".", "println", "(", "cni", ".", "numberToBase26", "(", "<NUM_LIT>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "cni", ".", "base26ToNumber", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "System", ".", "out", ".", "println", "(", "cni", ".", "numberToBase26", "(", "<NUM_LIT>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "cni", ".", "base26ToNumber", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "System", ".", "out", ".", "println", "(", "cni", ".", "numberToBase26", "(", "<NUM_LIT>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "cni", ".", "base26ToNumber", "(", "\"", "<STR_LIT:M>", "\"", ")", ")", ";", "System", ".", "out", ".", "println", "(", "cni", ".", "numberToBase26", "(", "<NUM_LIT>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "cni", ".", "base26ToNumber", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "minCandies", "(", "int", "ratings", "[", "]", ")", "{", "int", "pointOfChange", "=", "0", ";", "int", "totalCandies", "=", "1", ";", "int", "currentCandy", "=", "1", ";", "boolean", "isIndependent", "=", "true", ";", "int", "maxHeight", "=", "0", ";", "int", "diff", "=", "0", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "ratings", ".", "length", ";", "i", "+", "+", ")", "{", "diff", "=", "0", ";", "if", "(", "ratings", "[", "i", "]", ">", "ratings", "[", "i", "-", "1", "]", ")", "{", "currentCandy", "+", "=", "1", ";", "}", "else", "if", "(", "ratings", "[", "i", "]", "=", "=", "ratings", "[", "i", "-", "1", "]", ")", "{", "isIndependent", "=", "true", ";", "pointOfChange", "=", "i", ";", "currentCandy", "=", "1", ";", "}", "else", "{", "if", "(", "currentCandy", "=", "=", "1", ")", "{", "if", "(", "!", "isIndependent", ")", "{", "if", "(", "i", "-", "pointOfChange", "=", "=", "maxHeight", "-", "1", ")", "{", "pointOfChange", "-", "-", ";", "}", "}", "}", "else", "{", "maxHeight", "=", "currentCandy", ";", "currentCandy", "=", "1", ";", "isIndependent", "=", "false", ";", "pointOfChange", "=", "i", ";", "}", "diff", "=", "i", "-", "pointOfChange", ";", "}", "totalCandies", "+", "=", "(", "diff", "+", "currentCandy", ")", ";", "}", "return", "totalCandies", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input", "[", "]", "=", "{", "1", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:2>", ",", "1", "}", ";", "CandiesProblem", "cp", "=", "new", "CandiesProblem", "(", ")", ";", "System", ".", "out", ".", "println", "(", "cp", ".", "minCandies", "(", "input", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "diff", "(", "int", "time1", ",", "int", "time2", ")", "{", "if", "(", "time2", "<", "time1", ")", "{", "throw", "new", "IllegalArgumentException", "(", ")", ";", "}", "int", "hourDiff", "=", "time2", "/", "<NUM_LIT:100>", "-", "time1", "/", "<NUM_LIT:100>", "-", "1", ";", "int", "minDiff", "=", "time2", "%", "<NUM_LIT:100>", "+", "(", "<NUM_LIT>", "-", "time1", "%", "<NUM_LIT:100>", ")", ";", "if", "(", "minDiff", ">", "=", "<NUM_LIT>", ")", "{", "hourDiff", "+", "+", ";", "minDiff", "=", "minDiff", "-", "<NUM_LIT>", ";", "}", "return", "hourDiff", "*", "<NUM_LIT:100>", "+", "minDiff", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "DifferenceBetweenTwoTime", "dbtt", "=", "new", "DifferenceBetweenTwoTime", "(", ")", ";", "int", "time", "=", "dbtt", ".", "diff", "(", "<NUM_LIT>", ",", "<NUM_LIT>", ")", ";", "System", ".", "out", ".", "println", "(", "time", ")", ";", "time", "=", "dbtt", ".", "diff", "(", "<NUM_LIT>", ",", "<NUM_LIT>", ")", ";", "System", ".", "out", ".", "println", "(", "time", ")", ";", "time", "=", "dbtt", ".", "diff", "(", "<NUM_LIT>", ",", "<NUM_LIT>", ")", ";", "System", ".", "out", ".", "println", "(", "time", ")", ";", "time", "=", "dbtt", ".", "diff", "(", "<NUM_LIT>", ",", "<NUM_LIT>", ")", ";", "System", ".", "out", ".", "println", "(", "time", ")", ";", "time", "=", "dbtt", ".", "diff", "(", "<NUM_LIT:1000>", ",", "<NUM_LIT>", ")", ";", "System", ".", "out", ".", "println", "(", "time", ")", ";", "}", "</s>"]
["<s>", "public", "int", "diff", "(", "int", "year1", ",", "int", "month1", ",", "int", "day1", ",", "int", "year2", ",", "int", "month2", ",", "int", "day2", ")", "{", "int", "days1", "=", "year1", "*", "<NUM_LIT>", "+", "day1", ";", "int", "days2", "=", "year2", "*", "<NUM_LIT>", "+", "day2", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "month1", "-", "1", ";", "i", "+", "+", ")", "{", "days1", "=", "days1", "+", "days", "[", "i", "]", ";", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "month2", "-", "1", ";", "i", "+", "+", ")", "{", "days2", "=", "days2", "+", "days", "[", "i", "]", ";", "}", "days1", "=", "days1", "+", "(", "year1", "-", "1", ")", "/", "<NUM_LIT:4>", "-", "(", "year1", "-", "1", ")", "/", "<NUM_LIT:100>", "+", "(", "year1", "-", "1", ")", "/", "<NUM_LIT>", ";", "days2", "=", "days2", "+", "(", "year2", "-", "1", ")", "/", "<NUM_LIT:4>", "-", "(", "year2", "-", "1", ")", "/", "<NUM_LIT:100>", "+", "(", "year2", "-", "1", ")", "/", "<NUM_LIT>", ";", "if", "(", "isLeapYear", "(", "year1", ")", "&", "&", "month1", ">", "<NUM_LIT:2>", ")", "{", "days1", "+", "+", ";", "}", "if", "(", "isLeapYear", "(", "year2", ")", "&", "&", "month2", ">", "<NUM_LIT:2>", ")", "{", "days2", "+", "+", ";", "}", "return", "days2", "-", "days1", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "DayDifferenceBetweenTwoDates", "dd", "=", "new", "DayDifferenceBetweenTwoDates", "(", ")", ";", "System", ".", "out", ".", "println", "(", "dd", ".", "diff", "(", "<NUM_LIT>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:31>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "isLeapYear", "(", "int", "year", ")", "{", "if", "(", "year", "%", "<NUM_LIT>", "=", "=", "0", ")", "{", "return", "true", ";", "}", "if", "(", "year", "%", "<NUM_LIT:4>", "=", "=", "0", "&", "&", "year", "%", "<NUM_LIT:100>", "!", "=", "0", ")", "{", "return", "true", ";", "}", "return", "false", ";", "}", "</s>"]
["<s>", "public", "int", "kthLargest", "(", "int", "input", "[", "]", "[", "]", ",", "int", "k", ")", "{", "BinaryMinHeap", "<", "Integer", ">", "minHeap", "=", "new", "BinaryMinHeap", "<", "Integer", ">", "(", ")", ";", "int", "c", "=", "input", "[", "0", "]", ".", "length", ";", "int", "total", "=", "input", ".", "length", "*", "c", ";", "minHeap", ".", "add", "(", "input", "[", "0", "]", "[", "0", "]", ",", "0", ")", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "k", ";", "i", "+", "+", ")", "{", "int", "minIndex", "=", "minHeap", ".", "extractMin", "(", ")", ";", "int", "minRow", "=", "minIndex", "/", "c", ";", "int", "minCol", "=", "minIndex", "%", "c", ";", "int", "downNeighbor", "=", "(", "minRow", "+", "1", ")", "*", "c", "+", "minCol", ";", "int", "rightNeighbor", ";", "if", "(", "minCol", "=", "=", "(", "c", "-", "1", ")", ")", "{", "rightNeighbor", "=", "total", ";", "}", "else", "{", "rightNeighbor", "=", "minRow", "*", "c", "+", "(", "minCol", "+", "1", ")", ";", "}", "if", "(", "downNeighbor", "<", "total", "&", "&", "!", "minHeap", ".", "containsData", "(", "downNeighbor", ")", ")", "{", "minHeap", ".", "add", "(", "input", "[", "minRow", "+", "1", "]", "[", "minCol", "]", ",", "downNeighbor", ")", ";", "}", "if", "(", "rightNeighbor", "<", "total", "&", "&", "!", "minHeap", ".", "containsData", "(", "rightNeighbor", ")", ")", "{", "minHeap", ".", "add", "(", "input", "[", "minRow", "]", "[", "minCol", "+", "1", "]", ",", "rightNeighbor", ")", ";", "}", "}", "int", "minIndex", "=", "minHeap", ".", "extractMin", "(", ")", ";", "return", "input", "[", "minIndex", "/", "c", "]", "[", "minIndex", "%", "c", "]", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input", "[", "]", "[", "]", "=", "{", "{", "1", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT>", "}", ",", "{", "<NUM_LIT:6>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:12>", ",", "<NUM_LIT>", "}", ",", "{", "<NUM_LIT:7>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:15>", ",", "<NUM_LIT>", "}", ",", "{", "<NUM_LIT:11>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", "}", "}", ";", "KthLargestInRowiseColumnWiseSorted2DArray", "kl", "=", "new", "KthLargestInRowiseColumnWiseSorted2DArray", "(", ")", ";", "System", ".", "out", ".", "println", "(", "kl", ".", "kthLargest", "(", "input", ",", "<NUM_LIT:10>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "String", "converToRoman", "(", "int", "decimal", ")", "{", "StringBuffer", "buffer", "=", "new", "StringBuffer", "(", ")", ";", "while", "(", "decimal", ">", "0", ")", "{", "decimal", "=", "literal", "(", "decimal", ",", "buffer", ")", ";", "}", "return", "buffer", ".", "toString", "(", ")", ";", "}", "</s>"]
["<s>", "public", "int", "convertToDecimal", "(", "char", "[", "]", "roman", ")", "{", "int", "decimal", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "roman", ".", "length", ";", ")", "{", "if", "(", "i", "<", "roman", ".", "length", "-", "1", "&", "&", "literal", "(", "roman", "[", "i", "]", ")", "<", "literal", "(", "roman", "[", "i", "+", "1", "]", ")", ")", "{", "decimal", "+", "=", "literal", "(", "roman", "[", "i", "+", "1", "]", ")", "-", "literal", "(", "roman", "[", "i", "]", ")", ";", "i", "+", "=", "<NUM_LIT:2>", ";", "}", "else", "{", "decimal", "+", "=", "literal", "(", "roman", "[", "i", "]", ")", ";", "i", "+", "+", ";", "}", "}", "return", "decimal", ";", "}", "</s>"]
["<s>", "private", "int", "literal", "(", "int", "decimal", ",", "StringBuffer", "buffer", ")", "{", "if", "(", "decimal", ">", "=", "<NUM_LIT:1000>", ")", "{", "buffer", ".", "append", "(", "\"", "<STR_LIT:M>", "\"", ")", ";", "decimal", "-", "=", "<NUM_LIT:1000>", ";", "return", "decimal", ";", "}", "else", "if", "(", "decimal", ">", "=", "<NUM_LIT>", ")", "{", "buffer", ".", "append", "(", "\"", "<STR_LIT>", "\"", ")", ";", "decimal", "-", "=", "<NUM_LIT>", ";", "return", "decimal", ";", "}", "else", "if", "(", "decimal", ">", "=", "<NUM_LIT>", ")", "{", "buffer", ".", "append", "(", "\"", "<STR_LIT:D>", "\"", ")", ";", "decimal", "-", "=", "<NUM_LIT>", ";", "return", "decimal", ";", "}", "else", "if", "(", "decimal", ">", "=", "<NUM_LIT>", ")", "{", "buffer", ".", "append", "(", "\"", "<STR_LIT>", "\"", ")", ";", "decimal", "-", "=", "<NUM_LIT>", ";", "return", "decimal", ";", "}", "else", "if", "(", "decimal", ">", "=", "<NUM_LIT:100>", ")", "{", "buffer", ".", "append", "(", "\"", "<STR_LIT:C>", "\"", ")", ";", "decimal", "-", "=", "<NUM_LIT:100>", ";", "return", "decimal", ";", "}", "else", "if", "(", "decimal", ">", "=", "<NUM_LIT>", ")", "{", "buffer", ".", "append", "(", "\"", "<STR_LIT>", "\"", ")", ";", "decimal", "-", "=", "<NUM_LIT>", ";", "return", "decimal", ";", "}", "else", "if", "(", "decimal", ">", "=", "<NUM_LIT>", ")", "{", "buffer", ".", "append", "(", "\"", "<STR_LIT>", "\"", ")", ";", "decimal", "-", "=", "<NUM_LIT>", ";", "return", "decimal", ";", "}", "else", "if", "(", "decimal", ">", "=", "<NUM_LIT>", ")", "{", "buffer", ".", "append", "(", "\"", "<STR_LIT>", "\"", ")", ";", "decimal", "-", "=", "<NUM_LIT>", ";", "return", "decimal", ";", "}", "else", "if", "(", "decimal", ">", "=", "<NUM_LIT:10>", ")", "{", "buffer", ".", "append", "(", "\"", "<STR_LIT:X>", "\"", ")", ";", "decimal", "-", "=", "<NUM_LIT:10>", ";", "return", "decimal", ";", "}", "else", "if", "(", "decimal", ">", "=", "<NUM_LIT:9>", ")", "{", "buffer", ".", "append", "(", "\"", "<STR_LIT>", "\"", ")", ";", "decimal", "-", "=", "<NUM_LIT:9>", ";", "return", "decimal", ";", "}", "else", "if", "(", "decimal", ">", "=", "<NUM_LIT:5>", ")", "{", "buffer", ".", "append", "(", "\"", "<STR_LIT>", "\"", ")", ";", "decimal", "-", "=", "<NUM_LIT:5>", ";", "return", "decimal", ";", "}", "else", "if", "(", "decimal", ">", "=", "<NUM_LIT:4>", ")", "{", "buffer", ".", "append", "(", "\"", "<STR_LIT>", "\"", ")", ";", "decimal", "-", "=", "<NUM_LIT:4>", ";", "return", "decimal", ";", "}", "else", "{", "buffer", ".", "append", "(", "\"", "<STR_LIT:I>", "\"", ")", ";", "decimal", "-", "=", "1", ";", "return", "decimal", ";", "}", "}", "</s>"]
["<s>", "private", "int", "literal", "(", "char", "ch", ")", "{", "switch", "(", "ch", ")", "{", "case", "<CHAR_LIT>", ":", "return", "1", ";", "case", "<CHAR_LIT>", ":", "return", "<NUM_LIT:5>", ";", "case", "<CHAR_LIT>", ":", "return", "<NUM_LIT:10>", ";", "case", "<CHAR_LIT>", ":", "return", "<NUM_LIT>", ";", "case", "<CHAR_LIT>", ":", "return", "<NUM_LIT:100>", ";", "case", "<CHAR_LIT>", ":", "return", "<NUM_LIT>", ";", "case", "<CHAR_LIT>", ":", "return", "<NUM_LIT:1000>", ";", "default", ":", "throw", "new", "IllegalArgumentException", "(", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "RomanNumberToDecimal", "rnd", "=", "new", "RomanNumberToDecimal", "(", ")", ";", "System", ".", "out", ".", "println", "(", "rnd", ".", "convertToDecimal", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ")", ";", "System", ".", "out", ".", "println", "(", "rnd", ".", "convertToDecimal", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ")", ";", "System", ".", "out", ".", "println", "(", "rnd", ".", "convertToDecimal", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ")", ";", "System", ".", "out", ".", "println", "(", "rnd", ".", "convertToDecimal", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ")", ";", "System", ".", "out", ".", "println", "(", "rnd", ".", "converToRoman", "(", "<NUM_LIT:20>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "rnd", ".", "converToRoman", "(", "<NUM_LIT>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "rnd", ".", "converToRoman", "(", "<NUM_LIT>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "rnd", ".", "converToRoman", "(", "<NUM_LIT>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "double", "angle", "(", "int", "hour", ",", "int", "min", ")", "{", "double", "hourAngle", "=", "(", "hour", "%", "<NUM_LIT:12>", ")", "*", "<NUM_LIT>", "/", "<NUM_LIT:12>", "+", "(", "(", "double", ")", "min", "/", "<NUM_LIT>", ")", "*", "(", "<NUM_LIT>", "/", "<NUM_LIT:12>", ")", ";", "double", "minAngle", "=", "min", "*", "<NUM_LIT>", "/", "<NUM_LIT>", ";", "double", "angleDiff", "=", "Math", ".", "abs", "(", "hourAngle", "-", "minAngle", ")", ";", "return", "angleDiff", "<", "<NUM_LIT>", "-", "angleDiff", "?", "angleDiff", ":", "<NUM_LIT>", "-", "angleDiff", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "AngleBetweenHourAndMinuteHand", "abm", "=", "new", "AngleBetweenHourAndMinuteHand", "(", ")", ";", "System", ".", "out", ".", "println", "(", "abm", ".", "angle", "(", "<NUM_LIT:10>", ",", "<NUM_LIT:15>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "isSquare", "(", "Cordinate", "[", "]", "cordinates", ")", "{", "Cordinate", "startPoint", "=", "cordinates", "[", "0", "]", ";", "int", "a1", "=", "distanceSquare", "(", "startPoint", ",", "cordinates", "[", "1", "]", ")", ";", "int", "a2", "=", "distanceSquare", "(", "startPoint", ",", "cordinates", "[", "<NUM_LIT:2>", "]", ")", ";", "int", "a3", "=", "distanceSquare", "(", "startPoint", ",", "cordinates", "[", "<NUM_LIT:3>", "]", ")", ";", "if", "(", "a1", "=", "=", "a2", ")", "{", "return", "compare", "(", "cordinates", "[", "<NUM_LIT:3>", "]", ",", "cordinates", "[", "1", "]", ",", "cordinates", "[", "<NUM_LIT:2>", "]", ",", "a1", ",", "a3", ")", ";", "}", "else", "if", "(", "a1", "=", "=", "a3", ")", "{", "return", "compare", "(", "cordinates", "[", "<NUM_LIT:2>", "]", ",", "cordinates", "[", "1", "]", ",", "cordinates", "[", "<NUM_LIT:3>", "]", ",", "a1", ",", "a2", ")", ";", "}", "else", "if", "(", "a2", "=", "=", "a3", ")", "{", "return", "compare", "(", "cordinates", "[", "1", "]", ",", "cordinates", "[", "<NUM_LIT:2>", "]", ",", "cordinates", "[", "<NUM_LIT:3>", "]", ",", "a2", ",", "a1", ")", ";", "}", "else", "{", "return", "false", ";", "}", "}", "</s>"]
["<s>", "private", "boolean", "compare", "(", "Cordinate", "startPoint", ",", "Cordinate", "point1", ",", "Cordinate", "point2", ",", "int", "len", ",", "int", "diag", ")", "{", "if", "(", "<NUM_LIT:2>", "*", "len", "!", "=", "diag", ")", "{", "return", "false", ";", "}", "int", "a1", "=", "distanceSquare", "(", "startPoint", ",", "point1", ")", ";", "int", "a2", "=", "distanceSquare", "(", "startPoint", ",", "point2", ")", ";", "if", "(", "a1", "!", "=", "len", "|", "|", "a2", "!", "=", "len", ")", "{", "return", "false", ";", "}", "return", "true", ";", "}", "</s>"]
["<s>", "private", "int", "distanceSquare", "(", "Cordinate", "c1", ",", "Cordinate", "c2", ")", "{", "return", "(", "int", ")", "(", "Math", ".", "pow", "(", "Math", ".", "abs", "(", "c1", ".", "x", "-", "c2", ".", "x", ")", ",", "<NUM_LIT:2>", ")", "+", "Math", ".", "pow", "(", "Math", ".", "abs", "(", "c1", ".", "y", "-", "c2", ".", "y", ")", ",", "<NUM_LIT:2>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "FourPointsFormSquare", "fpf", "=", "new", "FourPointsFormSquare", "(", ")", ";", "Cordinate", "c1", "=", "new", "Cordinate", "(", ")", ";", "c1", ".", "x", "=", "<NUM_LIT:2>", ";", "c1", ".", "y", "=", "<NUM_LIT:2>", ";", "Cordinate", "c2", "=", "new", "Cordinate", "(", ")", ";", "c2", ".", "x", "=", "<NUM_LIT:6>", ";", "c2", ".", "y", "=", "<NUM_LIT:2>", ";", "Cordinate", "c3", "=", "new", "Cordinate", "(", ")", ";", "c3", ".", "x", "=", "<NUM_LIT:2>", ";", "c3", ".", "y", "=", "-", "<NUM_LIT:2>", ";", "Cordinate", "c4", "=", "new", "Cordinate", "(", ")", ";", "c4", ".", "x", "=", "<NUM_LIT:6>", ";", "c4", ".", "y", "=", "-", "<NUM_LIT:2>", ";", "Cordinate", "[", "]", "c", "=", "new", "Cordinate", "[", "<NUM_LIT:4>", "]", ";", "c", "[", "0", "]", "=", "c1", ";", "c", "[", "1", "]", "=", "c2", ";", "c", "[", "<NUM_LIT:2>", "]", "=", "c3", ";", "c", "[", "<NUM_LIT:3>", "]", "=", "c4", ";", "System", ".", "out", ".", "println", "(", "fpf", ".", "isSquare", "(", "c", ")", ")", ";", "}", "</s>"]
["<s>", "public", "List", "<", "Integer", ">", "primeNumbers", "(", "int", "n", ")", "{", "List", "<", "Integer", ">", "result", "=", "new", "ArrayList", "<", "Integer", ">", "(", ")", ";", "result", ".", "add", "(", "<NUM_LIT:2>", ")", ";", "boolean", "flag", "=", "false", ";", "for", "(", "int", "i", "=", "<NUM_LIT:3>", ";", "i", "<", "n", ";", "i", "+", "=", "<NUM_LIT:2>", ")", "{", "for", "(", "int", "r", ":", "result", ")", "{", "if", "(", "<NUM_LIT:2>", "*", "r", ">", "i", ")", "{", "break", ";", "}", "if", "(", "i", "%", "r", "=", "=", "0", ")", "{", "flag", "=", "true", ";", "break", ";", "}", "}", "if", "(", "!", "flag", ")", "{", "result", ".", "add", "(", "i", ")", ";", "}", "flag", "=", "false", ";", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "PrimeNumbersBeforeN", "pnb", "=", "new", "PrimeNumbersBeforeN", "(", ")", ";", "List", "<", "Integer", ">", "result", "=", "pnb", ".", "primeNumbers", "(", "<NUM_LIT>", ")", ";", "result", ".", "forEach", "(", "i", "-", ">", "System", ".", "out", ".", "print", "(", "i", "+", "\"", "\"", ")", ")", ";", "}", "</s>"]
["<s>", "Pair", "(", "int", "low", ",", "int", "high", ")", "{", "this", ".", "low", "=", "low", ";", "this", ".", "high", "=", "high", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "int", "compareTo", "(", "Pair", "o", ")", "{", "if", "(", "this", ".", "low", "<", "=", "o", ".", "low", ")", "{", "return", "-", "1", ";", "}", "else", "{", "return", "1", ";", "}", "}", "</s>"]
["<s>", "public", "String", "toString", "(", ")", "{", "return", "low", "+", "\"", "\"", "+", "high", ";", "}", "</s>"]
["<s>", "public", "List", "<", "Pair", ">", "combineInterval", "(", "Pair", "[", "]", "arr1", ",", "Pair", "[", "]", "arr2", ")", "{", "Arrays", ".", "sort", "(", "arr1", ")", ";", "Arrays", ".", "sort", "(", "arr2", ")", ";", "List", "<", "Pair", ">", "result", "=", "new", "ArrayList", "<", "Pair", ">", "(", ")", ";", "int", "i", "=", "0", ";", "int", "j", "=", "0", ";", "Pair", "current", "=", "new", "Pair", "(", "Integer", ".", "MIN_VALUE", ",", "Integer", ".", "MIN_VALUE", "+", "1", ")", ";", "while", "(", "i", "<", "arr1", ".", "length", "&", "&", "j", "<", "arr2", ".", "length", ")", "{", "if", "(", "arr1", "[", "i", "]", ".", "low", "<", "=", "arr2", "[", "j", "]", ".", "low", ")", "{", "if", "(", "arr1", "[", "i", "]", ".", "low", "<", "=", "current", ".", "high", ")", "{", "current", ".", "high", "=", "Math", ".", "max", "(", "arr1", "[", "i", "]", ".", "high", ",", "current", ".", "high", ")", ";", "}", "else", "{", "current", "=", "arr1", "[", "i", "]", ";", "result", ".", "add", "(", "current", ")", ";", "}", "i", "+", "+", ";", "}", "else", "{", "if", "(", "arr2", "[", "j", "]", ".", "low", "<", "=", "current", ".", "high", ")", "{", "current", ".", "high", "=", "Math", ".", "max", "(", "arr2", "[", "j", "]", ".", "high", ",", "current", ".", "high", ")", ";", "}", "else", "{", "current", "=", "arr2", "[", "j", "]", ";", "result", ".", "add", "(", "current", ")", ";", "}", "j", "+", "+", ";", "}", "}", "while", "(", "i", "<", "arr1", ".", "length", ")", "{", "if", "(", "arr1", "[", "i", "]", ".", "low", "<", "=", "current", ".", "high", ")", "{", "current", ".", "high", "=", "Math", ".", "max", "(", "current", ".", "high", ",", "arr1", "[", "i", "]", ".", "high", ")", ";", "}", "else", "{", "current", "=", "arr1", "[", "i", "]", ";", "result", ".", "add", "(", "current", ")", ";", "}", "i", "+", "+", ";", "}", "while", "(", "j", "<", "arr2", ".", "length", ")", "{", "if", "(", "arr2", "[", "j", "]", ".", "low", "<", "=", "current", ".", "high", ")", "{", "current", ".", "high", "=", "Math", ".", "max", "(", "current", ".", "high", ",", "arr2", "[", "j", "]", ".", "high", ")", ";", "}", "else", "{", "current", "=", "arr2", "[", "j", "]", ";", "result", ".", "add", "(", "current", ")", ";", "}", "j", "+", "+", ";", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "Pair", "p1", "=", "new", "Pair", "(", "1", ",", "<NUM_LIT:3>", ")", ";", "Pair", "p2", "=", "new", "Pair", "(", "<NUM_LIT:4>", ",", "<NUM_LIT:6>", ")", ";", "Pair", "p3", "=", "new", "Pair", "(", "<NUM_LIT:9>", ",", "<NUM_LIT:15>", ")", ";", "Pair", "p4", "=", "new", "Pair", "(", "<NUM_LIT>", ",", "<NUM_LIT>", ")", ";", "Pair", "[", "]", "arr1", "=", "{", "p1", ",", "p2", ",", "p3", ",", "p4", "}", ";", "Pair", "r1", "=", "new", "Pair", "(", "<NUM_LIT:2>", ",", "<NUM_LIT:4>", ")", ";", "Pair", "r2", "=", "new", "Pair", "(", "<NUM_LIT:7>", ",", "<NUM_LIT:8>", ")", ";", "Pair", "r3", "=", "new", "Pair", "(", "<NUM_LIT:11>", ",", "<NUM_LIT>", ")", ";", "Pair", "[", "]", "arr2", "=", "{", "r1", ",", "r2", ",", "r3", "}", ";", "AddingTwoSetOfIntervals", "ats", "=", "new", "AddingTwoSetOfIntervals", "(", ")", ";", "List", "<", "Pair", ">", "rs", "=", "ats", ".", "combineInterval", "(", "arr1", ",", "arr2", ")", ";", "System", ".", "out", ".", "print", "(", "rs", ")", ";", "}", "</s>"]
["<s>", "public", "int", "hammingDistance", "(", "String", "input", "[", "]", ")", "{", "int", "size", "=", "input", "[", "0", "]", ".", "length", "(", ")", ";", "int", "total", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "size", ";", "i", "+", "+", ")", "{", "int", "count0s", "=", "0", ";", "int", "count1s", "=", "0", ";", "for", "(", "String", "str", ":", "input", ")", "{", "if", "(", "str", ".", "charAt", "(", "i", ")", "=", "=", "<CHAR_LIT:0>", ")", "{", "count0s", "+", "+", ";", "}", "else", "{", "count1s", "+", "+", ";", "}", "}", "total", "+", "=", "count0s", "*", "count1s", ";", "}", "return", "total", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "String", "input", "[", "]", "=", "{", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", "}", ";", "HammingDistanceBetweenPair", "hdb", "=", "new", "HammingDistanceBetweenPair", "(", ")", ";", "System", ".", "out", ".", "println", "(", "hdb", ".", "hammingDistance", "(", "input", ")", ")", ";", "}", "</s>"]
["<s>", "public", "void", "addServer", "(", "String", "name", ")", "{", "servers", ".", "add", "(", "name", ")", ";", "index", ".", "put", "(", "name", ",", "servers", ".", "size", "(", ")", "-", "1", ")", ";", "}", "</s>"]
["<s>", "public", "void", "removeServer", "(", "String", "name", ")", "{", "Integer", "pos", "=", "index", ".", "get", "(", "name", ")", ";", "if", "(", "pos", "=", "=", "null", ")", "{", "throw", "new", "IllegalArgumentException", "(", ")", ";", "}", "servers", ".", "set", "(", "pos", ",", "servers", ".", "get", "(", "servers", ".", "size", "(", ")", "-", "1", ")", ")", ";", "servers", ".", "remove", "(", "servers", ".", "size", "(", ")", "-", "1", ")", ";", "}", "</s>"]
["<s>", "public", "String", "getRandom", "(", ")", "{", "int", "r", "=", "(", "int", ")", "(", "Math", ".", "random", "(", ")", "*", "<NUM_LIT:1000>", ")", ";", "return", "servers", ".", "get", "(", "r", "%", "servers", ".", "size", "(", ")", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "LoadBalancers", "lb", "=", "new", "LoadBalancers", "(", ")", ";", "lb", ".", "addServer", "(", "\"", "<STR_LIT:1>", "\"", ")", ";", "lb", ".", "addServer", "(", "\"", "<STR_LIT:2>", "\"", ")", ";", "lb", ".", "addServer", "(", "\"", "<STR_LIT:3>", "\"", ")", ";", "lb", ".", "addServer", "(", "\"", "<STR_LIT:4>", "\"", ")", ";", "lb", ".", "addServer", "(", "\"", "<STR_LIT:5>", "\"", ")", ";", "System", ".", "out", ".", "print", "(", "lb", ".", "getRandom", "(", ")", ")", ";", "System", ".", "out", ".", "print", "(", "lb", ".", "getRandom", "(", ")", ")", ";", "System", ".", "out", ".", "print", "(", "lb", ".", "getRandom", "(", ")", ")", ";", "System", ".", "out", ".", "print", "(", "lb", ".", "getRandom", "(", ")", ")", ";", "lb", ".", "removeServer", "(", "\"", "<STR_LIT:3>", "\"", ")", ";", "lb", ".", "removeServer", "(", "\"", "<STR_LIT:1>", "\"", ")", ";", "System", ".", "out", ".", "print", "(", "lb", ".", "getRandom", "(", ")", ")", ";", "System", ".", "out", ".", "print", "(", "lb", ".", "getRandom", "(", ")", ")", ";", "System", ".", "out", ".", "print", "(", "lb", ".", "getRandom", "(", ")", ")", ";", "System", ".", "out", ".", "print", "(", "lb", ".", "getRandom", "(", ")", ")", ";", "}", "</s>"]
["<s>", "public", "Result", "encode", "(", "Node", "root", ")", "{", "Result", "r", "=", "new", "Result", "(", ")", ";", "encode", "(", "root", ",", "r", ")", ";", "return", "r", ";", "}", "</s>"]
["<s>", "private", "void", "encode", "(", "Node", "root", ",", "Result", "r", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "r", ".", "binaryRep", ".", "add", "(", "0", ")", ";", "return", ";", "}", "r", ".", "actualData", ".", "add", "(", "root", ".", "data", ")", ";", "r", ".", "binaryRep", ".", "add", "(", "1", ")", ";", "encode", "(", "root", ".", "left", ",", "r", ")", ";", "encode", "(", "root", ".", "right", ",", "r", ")", ";", "}", "</s>"]
["<s>", "public", "Node", "decode", "(", "Result", "r", ")", "{", "AtomicInteger", "x", "=", "new", "AtomicInteger", "(", "0", ")", ";", "AtomicInteger", "y", "=", "new", "AtomicInteger", "(", "0", ")", ";", "return", "decode", "(", "r", ",", "x", ",", "y", ")", ";", "}", "</s>"]
["<s>", "private", "Node", "decode", "(", "Result", "r", ",", "AtomicInteger", "x", ",", "AtomicInteger", "y", ")", "{", "if", "(", "r", ".", "binaryRep", ".", "get", "(", "x", ".", "get", "(", ")", ")", "=", "=", "0", ")", "{", "x", ".", "getAndIncrement", "(", ")", ";", "return", "null", ";", "}", "Node", "root", "=", "new", "Node", "(", ")", ";", "root", ".", "data", "=", "r", ".", "actualData", ".", "get", "(", "y", ".", "getAndIncrement", "(", ")", ")", ";", "x", ".", "getAndIncrement", "(", ")", ";", "root", ".", "left", "=", "decode", "(", "r", ",", "x", ",", "y", ")", ";", "root", ".", "right", "=", "decode", "(", "r", ",", "x", ",", "y", ")", ";", "return", "root", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "Node", "root", "=", "null", ";", "BinaryTree", "bt", "=", "new", "BinaryTree", "(", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:10>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "-", "<NUM_LIT:10>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:20>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:15>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "-", "<NUM_LIT:7>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "-", "<NUM_LIT:4>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:12>", ",", "root", ")", ";", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", ")", ";", "TreeTraversals", "tt", "=", "new", "TreeTraversals", "(", ")", ";", "tt", ".", "inOrder", "(", "root", ")", ";", "System", ".", "out", ".", "println", "(", ")", ";", "tt", ".", "preOrder", "(", "root", ")", ";", "System", ".", "out", ".", "println", "(", ")", ";", "SuccinctTree", "st", "=", "new", "SuccinctTree", "(", ")", ";", "Result", "r", "=", "st", ".", "encode", "(", "root", ")", ";", "root", "=", "st", ".", "decode", "(", "r", ")", ";", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", ")", ";", "tt", ".", "inOrder", "(", "root", ")", ";", "System", ".", "out", ".", "println", "(", ")", ";", "tt", ".", "preOrder", "(", "root", ")", ";", "}", "</s>"]
["<s>", "public", "List", "<", "Node", ">", "construct", "(", "int", "inorder", "[", "]", ")", "{", "return", "construct", "(", "inorder", ",", "0", ",", "inorder", ".", "length", "-", "1", ")", ";", "}", "</s>"]
["<s>", "private", "List", "<", "Node", ">", "construct", "(", "int", "inorder", "[", "]", ",", "int", "start", ",", "int", "end", ")", "{", "if", "(", "start", ">", "end", ")", "{", "return", "Collections", ".", "singletonList", "(", "null", ")", ";", "}", "List", "<", "Node", ">", "allTrees", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "for", "(", "int", "root", "=", "start", ";", "root", "<", "=", "end", ";", "root", "+", "+", ")", "{", "List", "<", "Node", ">", "allLeftSubstrees", "=", "construct", "(", "inorder", ",", "start", ",", "root", "-", "1", ")", ";", "List", "<", "Node", ">", "allRightSubstrees", "=", "construct", "(", "inorder", ",", "root", "+", "1", ",", "end", ")", ";", "for", "(", "Node", "left", ":", "allLeftSubstrees", ")", "{", "for", "(", "Node", "right", ":", "allRightSubstrees", ")", "{", "Node", "node", "=", "Node", ".", "newNode", "(", "inorder", "[", "root", "]", ")", ";", "node", ".", "left", "=", "left", ";", "node", ".", "right", "=", "right", ";", "allTrees", ".", "add", "(", "node", ")", ";", "}", "}", "}", "return", "allTrees", ";", "}", "</s>"]
["<s>", "public", "void", "printAllTrees", "(", "List", "<", "Node", ">", "allTrees", ")", "{", "TreeTraversals", "tt", "=", "new", "TreeTraversals", "(", ")", ";", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", "+", "allTrees", ".", "size", "(", ")", ")", ";", "for", "(", "Node", "node", ":", "allTrees", ")", "{", "tt", ".", "inOrder", "(", "node", ")", ";", "System", ".", "out", ".", "println", "(", ")", ";", "tt", ".", "preOrder", "(", "node", ")", ";", "System", ".", "out", ".", "print", "(", "\"", "<STR_LIT>", "<STR_LIT>", "<STR_LIT>", "<STR_LIT>", "\"", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "inorder", "[", "]", "=", "{", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", "}", ";", "ConstructAllBinaryTreeFromInorderTraversal", "ct", "=", "new", "ConstructAllBinaryTreeFromInorderTraversal", "(", ")", ";", "List", "<", "Node", ">", "allTrees", "=", "ct", ".", "construct", "(", "inorder", ")", ";", "ct", ".", "printAllTrees", "(", "allTrees", ")", ";", "}", "</s>"]
["<s>", "public", "Node", "toBST", "(", "int", "preorder", "[", "]", ")", "{", "Index", "index", "=", "new", "Index", "(", ")", ";", "return", "toBST", "(", "preorder", ",", "Integer", ".", "MIN_VALUE", ",", "Integer", ".", "MAX_VALUE", ",", "index", ")", ";", "}", "</s>"]
["<s>", "public", "Node", "toBSTIterative", "(", "int", "preorder", "[", "]", ")", "{", "return", "null", ";", "}", "</s>"]
["<s>", "private", "Node", "toBST", "(", "int", "preorder", "[", "]", ",", "int", "min", ",", "int", "max", ",", "Index", "index", ")", "{", "if", "(", "index", ".", "index", ">", "=", "preorder", ".", "length", ")", "{", "return", "null", ";", "}", "if", "(", "preorder", "[", "index", ".", "index", "]", "<", "min", "|", "|", "preorder", "[", "index", ".", "index", "]", ">", "=", "max", ")", "{", "return", "null", ";", "}", "Node", "node", "=", "new", "Node", "(", ")", ";", "node", ".", "data", "=", "preorder", "[", "index", ".", "index", "]", ";", "index", ".", "index", "+", "+", ";", "node", ".", "left", "=", "toBST", "(", "preorder", ",", "min", ",", "node", ".", "data", ",", "index", ")", ";", "node", ".", "right", "=", "toBST", "(", "preorder", ",", "node", ".", "data", ",", "max", ",", "index", ")", ";", "return", "node", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "preorder", "[", "]", "=", "{", "<NUM_LIT:10>", ",", "<NUM_LIT:5>", ",", "1", ",", "<NUM_LIT:7>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", "}", ";", "ConstructBSTFromPreOrderArray", "poa", "=", "new", "ConstructBSTFromPreOrderArray", "(", ")", ";", "Node", "root", "=", "poa", ".", "toBST", "(", "preorder", ")", ";", "TreeTraversals", "tt", "=", "new", "TreeTraversals", "(", ")", ";", "tt", ".", "preOrder", "(", "root", ")", ";", "System", ".", "out", ".", "println", "(", ")", ";", "tt", ".", "inOrder", "(", "root", ")", ";", "}", "</s>"]
["<s>", "public", "void", "traversal", "(", "Node", "root", ")", "{", "Node", "current", "=", "root", ";", "while", "(", "current", "!", "=", "null", ")", "{", "if", "(", "current", ".", "right", "!", "=", "null", "&", "&", "current", ".", "left", "!", "=", "null", ")", "{", "current", "=", "current", ".", "right", ";", "break", ";", "}", "current", "=", "current", ".", "left", "!", "=", "null", "?", "current", ".", "left", ":", "current", ".", "right", ";", "}", "printRightSide", "(", "current", ")", ";", "printLeaves", "(", "root", ")", ";", "printLeftSide", "(", "root", ")", ";", "}", "</s>"]
["<s>", "private", "void", "printRightSide", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", "|", "|", "(", "root", ".", "left", "=", "=", "null", "&", "&", "root", ".", "right", "=", "=", "null", ")", ")", "{", "return", ";", "}", "System", ".", "out", ".", "println", "(", "root", ".", "data", ")", ";", "if", "(", "root", ".", "right", "!", "=", "null", ")", "{", "printRightSide", "(", "root", ".", "right", ")", ";", "}", "else", "{", "printRightSide", "(", "root", ".", "left", ")", ";", "}", "}", "</s>"]
["<s>", "private", "void", "printLeftSide", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", "|", "|", "(", "root", ".", "left", "=", "=", "null", "&", "&", "root", ".", "right", "=", "=", "null", ")", ")", "{", "return", ";", "}", "if", "(", "root", ".", "left", "!", "=", "null", ")", "{", "printLeftSide", "(", "root", ".", "left", ")", ";", "}", "else", "{", "printRightSide", "(", "root", ".", "right", ")", ";", "}", "System", ".", "out", ".", "println", "(", "root", ".", "data", ")", ";", "}", "</s>"]
["<s>", "private", "void", "printLeaves", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", ";", "}", "if", "(", "root", ".", "left", "=", "=", "null", "&", "&", "root", ".", "right", "=", "=", "null", ")", "{", "System", ".", "out", ".", "println", "(", "root", ".", "data", ")", ";", "}", "printLeaves", "(", "root", ".", "right", ")", ";", "printLeaves", "(", "root", ".", "left", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "BinaryTree", "bt", "=", "new", "BinaryTree", "(", ")", ";", "Node", "head", "=", "null", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:100>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:10>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:15>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:5>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:7>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "-", "<NUM_LIT:7>", ",", "head", ")", ";", "BoundaryTraversal", "bd", "=", "new", "BoundaryTraversal", "(", ")", ";", "bd", ".", "traversal", "(", "head", ")", ";", "}", "</s>"]
["<s>", "public", "int", "diameter", "(", "Node", "root", ")", "{", "Height", "height", "=", "new", "Height", "(", ")", ";", "return", "diameter", "(", "root", ",", "height", ")", ";", "}", "</s>"]
["<s>", "private", "int", "diameter", "(", "Node", "root", ",", "Height", "height", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", "0", ";", "}", "Height", "leftHeight", "=", "new", "Height", "(", ")", ";", "Height", "rightHeight", "=", "new", "Height", "(", ")", ";", "int", "dial", "=", "diameter", "(", "root", ".", "left", ",", "leftHeight", ")", ";", "int", "diar", "=", "diameter", "(", "root", ".", "right", ",", "rightHeight", ")", ";", "height", ".", "height", "=", "Math", ".", "max", "(", "leftHeight", ".", "height", ",", "rightHeight", ".", "height", ")", "+", "1", ";", "return", "Math", ".", "max", "(", "Math", ".", "max", "(", "dial", ",", "diar", ")", ",", "(", "1", "+", "leftHeight", ".", "height", "+", "rightHeight", ".", "height", ")", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "BinaryTree", "bt", "=", "new", "BinaryTree", "(", ")", ";", "Node", "head", "=", "null", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:10>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:15>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:5>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:7>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:20>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "-", "1", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:11>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:12>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "head", ")", ";", "DiameterOfTree", "dt", "=", "new", "DiameterOfTree", "(", ")", ";", "System", ".", "out", ".", "println", "(", "dt", ".", "diameter", "(", "head", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "int", "compare", "(", "HuffmanNode", "o1", ",", "HuffmanNode", "o2", ")", "{", "if", "(", "o1", ".", "freq", "<", "o2", ".", "freq", ")", "{", "return", "-", "1", ";", "}", "else", "{", "return", "1", ";", "}", "}", "</s>"]
["<s>", "public", "Map", "<", "Character", ",", "String", ">", "huffman", "(", "char", "[", "]", "input", ",", "int", "freq", "[", "]", ")", "{", "HuffmanNodeComparator", "comparator", "=", "new", "HuffmanNodeComparator", "(", ")", ";", "PriorityQueue", "<", "HuffmanNode", ">", "heap", "=", "new", "PriorityQueue", "<", "HuffmanNode", ">", "(", "input", ".", "length", ",", "comparator", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "HuffmanNode", "node", "=", "new", "HuffmanNode", "(", ")", ";", "node", ".", "freq", "=", "freq", "[", "i", "]", ";", "node", ".", "input", "=", "input", "[", "i", "]", ";", "heap", ".", "offer", "(", "node", ")", ";", "}", "while", "(", "heap", ".", "size", "(", ")", ">", "1", ")", "{", "HuffmanNode", "node1", "=", "heap", ".", "poll", "(", ")", ";", "HuffmanNode", "node2", "=", "heap", ".", "poll", "(", ")", ";", "HuffmanNode", "node", "=", "new", "HuffmanNode", "(", ")", ";", "node", ".", "left", "=", "node1", ";", "node", ".", "right", "=", "node2", ";", "node", ".", "freq", "=", "node1", ".", "freq", "+", "node2", ".", "freq", ";", "heap", ".", "offer", "(", "node", ")", ";", "}", "Map", "<", "Character", ",", "String", ">", "map", "=", "new", "HashMap", "<", "Character", ",", "String", ">", "(", ")", ";", "StringBuffer", "buff", "=", "new", "StringBuffer", "(", ")", ";", "createCode", "(", "heap", ".", "poll", "(", ")", ",", "map", ",", "buff", ")", ";", "return", "map", ";", "}", "</s>"]
["<s>", "public", "void", "createCode", "(", "HuffmanNode", "node", ",", "Map", "<", "Character", ",", "String", ">", "map", ",", "StringBuffer", "buff", ")", "{", "if", "(", "node", "=", "=", "null", ")", "{", "return", ";", "}", "if", "(", "node", ".", "left", "=", "=", "null", "&", "&", "node", ".", "right", "=", "=", "null", ")", "{", "map", ".", "put", "(", "node", ".", "input", ",", "buff", ".", "toString", "(", ")", ")", ";", "return", ";", "}", "buff", ".", "append", "(", "\"", "<STR_LIT:0>", "\"", ")", ";", "createCode", "(", "node", ".", "left", ",", "map", ",", "buff", ")", ";", "buff", ".", "deleteCharAt", "(", "buff", ".", "length", "(", ")", "-", "1", ")", ";", "buff", ".", "append", "(", "\"", "<STR_LIT:1>", "\"", ")", ";", "createCode", "(", "node", ".", "right", ",", "map", ",", "buff", ")", ";", "buff", ".", "deleteCharAt", "(", "buff", ".", "length", "(", ")", "-", "1", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "HuffmanEncoding", "he", "=", "new", "HuffmanEncoding", "(", ")", ";", "char", "input", "[", "]", "=", "{", "<CHAR_LIT:a>", ",", "<CHAR_LIT:b>", ",", "<CHAR_LIT:c>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT:e>", ",", "<CHAR_LIT>", "}", ";", "int", "freq", "[", "]", "=", "{", "<NUM_LIT:5>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:12>", ",", "<NUM_LIT>", ",", "<NUM_LIT:16>", ",", "<NUM_LIT>", "}", ";", "Map", "<", "Character", ",", "String", ">", "code", "=", "he", ".", "huffman", "(", "input", ",", "freq", ")", ";", "System", ".", "out", ".", "println", "(", "code", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "areIsomorphicTrees", "(", "Node", "root1", ",", "Node", "root2", ")", "{", "if", "(", "root1", "=", "=", "null", "&", "&", "root2", "=", "=", "null", ")", "{", "return", "true", ";", "}", "if", "(", "root1", "=", "=", "null", "|", "|", "root2", "=", "=", "null", ")", "{", "return", "false", ";", "}", "return", "root1", ".", "data", "=", "=", "root2", ".", "data", "&", "&", "(", "(", "areIsomorphicTrees", "(", "root1", ".", "left", ",", "root2", ".", "left", ")", "&", "&", "areIsomorphicTrees", "(", "root1", ".", "right", ",", "root2", ".", "right", ")", ")", "|", "|", "(", "areIsomorphicTrees", "(", "root1", ".", "left", ",", "root2", ".", "right", ")", "&", "&", "areIsomorphicTrees", "(", "root1", ".", "right", ",", "root2", ".", "left", ")", ")", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "in1", "[", "]", "=", "{", "<NUM_LIT:8>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:12>", "}", ";", "int", "pre1", "[", "]", "=", "{", "<NUM_LIT:10>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT:12>", "}", ";", "int", "in2", "[", "]", "=", "{", "<NUM_LIT:11>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:12>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:15>", "}", ";", "int", "pre2", "[", "]", "=", "{", "<NUM_LIT:10>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT:12>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:15>", "}", ";", "ConstructTreeFromInOrderPreOrder", "ct", "=", "new", "ConstructTreeFromInOrderPreOrder", "(", ")", ";", "Node", "root1", "=", "ct", ".", "createTree", "(", "in1", ",", "pre1", ")", ";", "Node", "root2", "=", "ct", ".", "createTree", "(", "in2", ",", "pre2", ")", ";", "TreeIsomorphism", "ti", "=", "new", "TreeIsomorphism", "(", ")", ";", "System", ".", "out", ".", "println", "(", "ti", ".", "areIsomorphicTrees", "(", "root1", ",", "root2", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "[", "]", "postOrder", "(", "int", "[", "]", "preorder", ",", "int", "[", "]", "inorder", ")", "{", "int", "[", "]", "post", "=", "new", "int", "[", "inorder", ".", "length", "]", ";", "AtomicInteger", "postIndex", "=", "new", "AtomicInteger", "(", "post", ".", "length", "-", "1", ")", ";", "postOrder", "(", "preorder", ",", "inorder", ",", "post", ",", "0", ",", "inorder", ".", "length", "-", "1", ",", "0", ",", "postIndex", ")", ";", "return", "post", ";", "}", "</s>"]
["<s>", "private", "void", "postOrder", "(", "int", "[", "]", "preorder", ",", "int", "[", "]", "inorder", ",", "int", "post", "[", "]", ",", "int", "low", ",", "int", "high", ",", "int", "preIndex", ",", "AtomicInteger", "postIndex", ")", "{", "if", "(", "low", ">", "high", ")", "{", "return", ";", "}", "post", "[", "postIndex", ".", "getAndDecrement", "(", ")", "]", "=", "preorder", "[", "preIndex", "]", ";", "int", "i", ";", "for", "(", "i", "=", "0", ";", "i", "<", "inorder", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "preorder", "[", "preIndex", "]", "=", "=", "inorder", "[", "i", "]", ")", "{", "break", ";", "}", "}", "postOrder", "(", "preorder", ",", "inorder", ",", "post", ",", "i", "+", "1", ",", "high", ",", "preIndex", "+", "(", "i", "-", "low", ")", "+", "1", ",", "postIndex", ")", ";", "postOrder", "(", "preorder", ",", "inorder", ",", "post", ",", "low", ",", "i", "-", "1", ",", "preIndex", "+", "1", ",", "postIndex", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "preorder", "[", "]", "=", "{", "<NUM_LIT:10>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT>", ",", "<NUM_LIT:20>", ",", "<NUM_LIT>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:16>", "}", ";", "int", "inorder", "[", "]", "=", "{", "<NUM_LIT:3>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:20>", ",", "<NUM_LIT:16>", "}", ";", "PrintPostOrderFromPreOrderInOrder", "ppp", "=", "new", "PrintPostOrderFromPreOrderInOrder", "(", ")", ";", "int", "postorder", "[", "]", "=", "ppp", ".", "postOrder", "(", "preorder", ",", "inorder", ")", ";", "for", "(", "int", "i", ":", "postorder", ")", "{", "System", ".", "out", ".", "print", "(", "i", "+", "\"", "\"", ")", ";", "}", "}", "</s>"]
["<s>", "public", "void", "insert", "(", "int", "data", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "root", "=", "BTreeNode", ".", "newNode", "(", "data", ")", ";", "return", ";", "}", "SplitResult", "sr", "=", "insert", "(", "root", ",", "data", ")", ";", "if", "(", "sr", "!", "=", "null", ")", "{", "BTreeNode", "newRoot", "=", "BTreeNode", ".", "newNode", "(", ")", ";", "newRoot", ".", "n", "=", "1", ";", "newRoot", ".", "isLeaf", "=", "false", ";", "newRoot", ".", "keys", "[", "0", "]", "=", "sr", ".", "c", ";", "newRoot", ".", "child", "[", "0", "]", "=", "sr", ".", "r1", ";", "newRoot", ".", "child", "[", "1", "]", "=", "sr", ".", "r2", ";", "root", "=", "newRoot", ";", "}", "}", "</s>"]
["<s>", "public", "boolean", "search", "(", "int", "data", ")", "{", "return", "search", "(", "root", ",", "data", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "search", "(", "BTreeNode", "root", ",", "int", "data", ")", "{", "int", "i", "=", "0", ";", "while", "(", "i", "<", "root", ".", "n", "&", "&", "root", ".", "keys", "[", "i", "]", "<", "data", ")", "{", "i", "+", "+", ";", "}", "if", "(", "i", "<", "root", ".", "n", "&", "&", "root", ".", "keys", "[", "i", "]", "=", "=", "data", ")", "{", "return", "true", ";", "}", "if", "(", "root", ".", "isLeaf", ")", "{", "return", "false", ";", "}", "return", "search", "(", "root", ".", "child", "[", "i", "]", ",", "data", ")", ";", "}", "</s>"]
["<s>", "private", "SplitResult", "insert", "(", "BTreeNode", "root", ",", "int", "data", ")", "{", "if", "(", "root", ".", "isLeaf", ")", "{", "if", "(", "!", "root", ".", "isFull", "(", ")", ")", "{", "root", ".", "insertKey", "(", "data", ",", "null", ",", "null", ")", ";", "return", "null", ";", "}", "else", "{", "SplitResult", "sr", "=", "splitNode", "(", "root", ",", "data", ",", "null", ",", "null", ")", ";", "return", "sr", ";", "}", "}", "else", "{", "int", "i", "=", "0", ";", "for", "(", ";", "i", "<", "root", ".", "n", ";", "i", "+", "+", ")", "{", "if", "(", "data", "<", "=", "root", ".", "keys", "[", "i", "]", ")", "{", "SplitResult", "sr", "=", "insert", "(", "root", ".", "child", "[", "i", "]", ",", "data", ")", ";", "if", "(", "sr", "=", "=", "null", ")", "{", "return", "null", ";", "}", "else", "{", "if", "(", "!", "root", ".", "isFull", "(", ")", ")", "{", "root", ".", "insertKey", "(", "sr", ".", "c", ",", "sr", ".", "r1", ",", "sr", ".", "r2", ")", ";", "return", "null", ";", "}", "else", "{", "SplitResult", "sr1", "=", "splitNode", "(", "root", ",", "sr", ".", "c", ",", "sr", ".", "r1", ",", "sr", ".", "r2", ")", ";", "return", "sr1", ";", "}", "}", "}", "}", "if", "(", "i", "=", "=", "root", ".", "n", ")", "{", "SplitResult", "sr", "=", "insert", "(", "root", ".", "child", "[", "i", "]", ",", "data", ")", ";", "if", "(", "sr", "=", "=", "null", ")", "{", "return", "null", ";", "}", "else", "{", "if", "(", "!", "root", ".", "isFull", "(", ")", ")", "{", "root", ".", "insertKey", "(", "sr", ".", "c", ",", "sr", ".", "r1", ",", "sr", ".", "r2", ")", ";", "return", "null", ";", "}", "else", "{", "SplitResult", "sr1", "=", "splitNode", "(", "root", ",", "sr", ".", "c", ",", "sr", ".", "r1", ",", "sr", ".", "r2", ")", ";", "return", "sr1", ";", "}", "}", "}", "}", "return", "null", ";", "}", "</s>"]
["<s>", "private", "SplitResult", "splitNode", "(", "BTreeNode", "node", ",", "int", "data", ",", "BTreeNode", "nr1", ",", "BTreeNode", "nr2", ")", "{", "int", "c", "=", "node", ".", "keys", "[", "node", ".", "n", "/", "<NUM_LIT:2>", "]", ";", "BTreeNode", "r1", "=", "BTreeNode", ".", "newNode", "(", ")", ";", "BTreeNode", "r2", "=", "BTreeNode", ".", "newNode", "(", ")", ";", "r1", ".", "n", "=", "node", ".", "n", "/", "<NUM_LIT:2>", ";", "r2", ".", "n", "=", "node", ".", "n", "-", "node", ".", "n", "/", "<NUM_LIT:2>", "-", "1", ";", "if", "(", "!", "node", ".", "isLeaf", ")", "{", "r1", ".", "isLeaf", "=", "false", ";", "r2", ".", "isLeaf", "=", "false", ";", "}", "int", "i", "=", "0", ";", "for", "(", ";", "i", "<", "node", ".", "n", "/", "<NUM_LIT:2>", ";", "i", "+", "+", ")", "{", "r1", ".", "keys", "[", "i", "]", "=", "node", ".", "keys", "[", "i", "]", ";", "r1", ".", "child", "[", "i", "]", "=", "node", ".", "child", "[", "i", "]", ";", "}", "r1", ".", "child", "[", "i", "]", "=", "node", ".", "child", "[", "i", "]", ";", "i", "=", "node", ".", "n", "/", "<NUM_LIT:2>", "+", "1", ";", "int", "j", "=", "0", ";", "for", "(", ";", "i", "<", "node", ".", "n", ";", "i", "+", "+", ",", "j", "+", "+", ")", "{", "r2", ".", "keys", "[", "j", "]", "=", "node", ".", "keys", "[", "i", "]", ";", "r2", ".", "child", "[", "j", "]", "=", "node", ".", "child", "[", "i", "]", ";", "}", "r2", ".", "child", "[", "j", "]", "=", "node", ".", "child", "[", "i", "]", ";", "if", "(", "data", "<", "c", ")", "{", "r1", ".", "insertKey", "(", "data", ",", "nr1", ",", "nr2", ")", ";", "}", "else", "{", "r2", ".", "insertKey", "(", "data", ",", "nr1", ",", "nr2", ")", ";", "}", "SplitResult", "sr", "=", "new", "SplitResult", "(", ")", ";", "sr", ".", "c", "=", "c", ";", "sr", ".", "r1", "=", "r1", ";", "sr", ".", "r2", "=", "r2", ";", "return", "sr", ";", "}", "</s>"]
["<s>", "public", "void", "traverse", "(", ")", "{", "traverse", "(", "root", ")", ";", "}", "</s>"]
["<s>", "private", "void", "traverse", "(", "BTreeNode", "root", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "root", ".", "n", ";", "i", "+", "+", ")", "{", "if", "(", "!", "root", ".", "isLeaf", ")", "{", "traverse", "(", "root", ".", "child", "[", "i", "]", ")", ";", "}", "System", ".", "out", ".", "print", "(", "root", ".", "keys", "[", "i", "]", "+", "\"", "\"", ")", ";", "}", "if", "(", "!", "root", ".", "isLeaf", ")", "{", "traverse", "(", "root", ".", "child", "[", "root", ".", "n", "]", ")", ";", "}", "}", "</s>"]
["<s>", "public", "void", "insertKey", "(", "int", "data", ",", "BTreeNode", "r1", ",", "BTreeNode", "r2", ")", "{", "int", "i", "=", "n", "-", "1", ";", "while", "(", "i", ">", "=", "0", "&", "&", "data", "<", "keys", "[", "i", "]", ")", "{", "keys", "[", "i", "+", "1", "]", "=", "keys", "[", "i", "]", ";", "i", "-", "-", ";", "}", "keys", "[", "i", "+", "1", "]", "=", "data", ";", "int", "j", "=", "n", ";", "while", "(", "j", ">", "i", "+", "1", ")", "{", "child", "[", "j", "+", "1", "]", "=", "child", "[", "j", "]", ";", "j", "-", "-", ";", "}", "child", "[", "j", "]", "=", "r1", ";", "child", "[", "j", "+", "1", "]", "=", "r2", ";", "n", "+", "+", ";", "}", "</s>"]
["<s>", "public", "static", "BTreeNode", "newNode", "(", "int", "data", ")", "{", "BTreeNode", "node", "=", "new", "BTreeNode", "(", ")", ";", "node", ".", "keys", "[", "0", "]", "=", "data", ";", "node", ".", "isLeaf", "=", "true", ";", "node", ".", "n", "=", "1", ";", "return", "node", ";", "}", "</s>"]
["<s>", "public", "static", "BTreeNode", "newNode", "(", ")", "{", "BTreeNode", "node", "=", "new", "BTreeNode", "(", ")", ";", "node", ".", "isLeaf", "=", "true", ";", "node", ".", "n", "=", "0", ";", "return", "node", ";", "}", "</s>"]
["<s>", "public", "boolean", "isFull", "(", ")", "{", "return", "<NUM_LIT:2>", "*", "T", "-", "1", "=", "=", "n", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "BTree", "bTree", "=", "new", "BTree", "(", ")", ";", "bTree", ".", "insert", "(", "<NUM_LIT:5>", ")", ";", "bTree", ".", "insert", "(", "<NUM_LIT:4>", ")", ";", "bTree", ".", "insert", "(", "<NUM_LIT:3>", ")", ";", "bTree", ".", "insert", "(", "<NUM_LIT:2>", ")", ";", "bTree", ".", "insert", "(", "1", ")", ";", "bTree", ".", "insert", "(", "<NUM_LIT:6>", ")", ";", "bTree", ".", "insert", "(", "<NUM_LIT:11>", ")", ";", "bTree", ".", "insert", "(", "<NUM_LIT>", ")", ";", "bTree", ".", "insert", "(", "<NUM_LIT:8>", ")", ";", "bTree", ".", "insert", "(", "<NUM_LIT:7>", ")", ";", "bTree", ".", "insert", "(", "<NUM_LIT:10>", ")", ";", "bTree", ".", "insert", "(", "<NUM_LIT:9>", ")", ";", "bTree", ".", "insert", "(", "<NUM_LIT>", ")", ";", "bTree", ".", "insert", "(", "<NUM_LIT>", ")", ";", "bTree", ".", "insert", "(", "<NUM_LIT:12>", ")", ";", "bTree", ".", "insert", "(", "<NUM_LIT>", ")", ";", "bTree", ".", "insert", "(", "<NUM_LIT:16>", ")", ";", "bTree", ".", "traverse", "(", ")", ";", "System", ".", "out", ".", "print", "(", "bTree", ".", "search", "(", "<NUM_LIT>", ")", ")", ";", "System", ".", "out", ".", "print", "(", "bTree", ".", "search", "(", "<NUM_LIT:11>", ")", ")", ";", "System", ".", "out", ".", "print", "(", "bTree", ".", "search", "(", "<NUM_LIT:5>", ")", ")", ";", "System", ".", "out", ".", "print", "(", "bTree", ".", "search", "(", "<NUM_LIT>", ")", ")", ";", "System", ".", "out", ".", "print", "(", "bTree", ".", "search", "(", "<NUM_LIT:3>", ")", ")", ";", "System", ".", "out", ".", "print", "(", "bTree", ".", "search", "(", "<NUM_LIT:4>", ")", ")", ";", "System", ".", "out", ".", "print", "(", "bTree", ".", "search", "(", "<NUM_LIT>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "Node", "convert", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", "null", ";", "}", "if", "(", "root", ".", "left", "=", "=", "null", "&", "&", "root", ".", "right", "=", "=", "null", ")", "{", "root", ".", "left", "=", "root", ";", "root", ".", "right", "=", "root", ";", "return", "root", ";", "}", "Node", "left", "=", "convert", "(", "root", ".", "left", ")", ";", "Node", "right", "=", "convert", "(", "root", ".", "right", ")", ";", "root", ".", "left", "=", "root", ";", "root", ".", "right", "=", "root", ";", "left", "=", "join", "(", "left", ",", "root", ")", ";", "left", "=", "join", "(", "left", ",", "right", ")", ";", "return", "left", ";", "}", "</s>"]
["<s>", "private", "Node", "join", "(", "Node", "r1", ",", "Node", "r2", ")", "{", "if", "(", "r1", "=", "=", "null", ")", "{", "return", "r2", ";", "}", "if", "(", "r2", "=", "=", "null", ")", "{", "return", "r1", ";", "}", "Node", "t1", "=", "r2", ".", "left", ";", "r1", ".", "left", ".", "right", "=", "r2", ";", "r2", ".", "left", "=", "r1", ".", "left", ";", "r1", ".", "left", "=", "t1", ";", "t1", ".", "right", "=", "r1", ";", "return", "r1", ";", "}", "</s>"]
["<s>", "private", "void", "print", "(", "Node", "root", ")", "{", "Node", "temp", "=", "root", ";", "do", "{", "System", ".", "out", ".", "println", "(", "temp", ".", "data", ")", ";", "temp", "=", "temp", ".", "right", ";", "}", "while", "(", "temp", "!", "=", "root", ")", ";", "System", ".", "out", ".", "println", "(", ")", ";", "do", "{", "System", ".", "out", ".", "println", "(", "temp", ".", "data", ")", ";", "temp", "=", "temp", ".", "left", ";", "}", "while", "(", "temp", "!", "=", "root", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "BinaryTreeToCircularLinkList", "btc", "=", "new", "BinaryTreeToCircularLinkList", "(", ")", ";", "BinaryTree", "bt", "=", "new", "BinaryTree", "(", ")", ";", "Node", "root", "=", "null", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:10>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:3>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "-", "1", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:8>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "-", "<NUM_LIT:6>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "root", ")", ";", "root", "=", "btc", ".", "convert", "(", "root", ")", ";", "btc", ".", "print", "(", "root", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "sameTree", "(", "Node", "root1", ",", "Node", "root2", ")", "{", "if", "(", "root1", "=", "=", "null", "&", "&", "root2", "=", "=", "null", ")", "{", "return", "true", ";", "}", "if", "(", "root1", "=", "=", "null", "|", "|", "root2", "=", "=", "null", ")", "{", "return", "false", ";", "}", "return", "root1", ".", "data", "=", "=", "root2", ".", "data", "&", "&", "sameTree", "(", "root1", ".", "left", ",", "root2", ".", "left", ")", "&", "&", "sameTree", "(", "root1", ".", "right", ",", "root2", ".", "right", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "BinaryTree", "bt", "=", "new", "BinaryTree", "(", ")", ";", "Node", "root1", "=", "null", ";", "root1", "=", "bt", ".", "addNode", "(", "<NUM_LIT:10>", ",", "root1", ")", ";", "root1", "=", "bt", ".", "addNode", "(", "<NUM_LIT:20>", ",", "root1", ")", ";", "root1", "=", "bt", ".", "addNode", "(", "<NUM_LIT:15>", ",", "root1", ")", ";", "root1", "=", "bt", ".", "addNode", "(", "<NUM_LIT:2>", ",", "root1", ")", ";", "Node", "root2", "=", "null", ";", "root2", "=", "bt", ".", "addNode", "(", "<NUM_LIT:10>", ",", "root2", ")", ";", "root2", "=", "bt", ".", "addNode", "(", "<NUM_LIT:20>", ",", "root2", ")", ";", "root2", "=", "bt", ".", "addNode", "(", "<NUM_LIT:15>", ",", "root2", ")", ";", "root2", "=", "bt", ".", "addNode", "(", "<NUM_LIT:2>", ",", "root2", ")", ";", "SameTree", "st", "=", "new", "SameTree", "(", ")", ";", "assert", "st", ".", "sameTree", "(", "root1", ",", "root2", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "sameBST", "(", "int", "tree1", "[", "]", ",", "int", "tree2", "[", "]", ")", "{", "return", "sameBST", "(", "tree1", ",", "tree2", ",", "Integer", ".", "MIN_VALUE", ",", "Integer", ".", "MAX_VALUE", ",", "0", ")", ";", "}", "</s>"]
["<s>", "private", "boolean", "sameBST", "(", "int", "tree1", "[", "]", ",", "int", "tree2", "[", "]", ",", "int", "min", ",", "int", "max", ",", "int", "index", ")", "{", "if", "(", "index", "=", "=", "tree1", ".", "length", ")", "{", "return", "true", ";", "}", "int", "i", "=", "0", ";", "for", "(", "i", "=", "0", ";", "i", "<", "tree2", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "tree2", "[", "i", "]", "=", "=", "tree1", "[", "index", "]", ")", "{", "break", ";", "}", "}", "BigSmall", "bs1", "=", "nextBigSmall", "(", "tree1", ",", "index", ",", "min", ",", "max", ")", ";", "BigSmall", "bs2", "=", "nextBigSmall", "(", "tree2", ",", "i", ",", "min", ",", "max", ")", ";", "boolean", "r1", "=", "tree1", "[", "bs1", ".", "big", "]", "=", "=", "tree2", "[", "bs2", ".", "big", "]", "&", "&", "tree1", "[", "bs1", ".", "small", "]", "=", "=", "tree2", "[", "bs2", ".", "small", "]", ";", "if", "(", "r1", "=", "=", "false", ")", "{", "return", "false", ";", "}", "boolean", "r2", "=", "true", ",", "r3", "=", "true", ";", "if", "(", "bs1", ".", "small", "!", "=", "0", ")", "{", "r2", "=", "sameBST", "(", "tree1", ",", "tree2", ",", "min", ",", "tree1", "[", "index", "]", ",", "bs1", ".", "small", ")", ";", "}", "if", "(", "bs1", ".", "big", "!", "=", "0", ")", "{", "r3", "=", "sameBST", "(", "tree1", ",", "tree2", ",", "tree1", "[", "index", "]", ",", "max", ",", "bs1", ".", "big", ")", ";", "}", "return", "r2", "&", "&", "r3", ";", "}", "</s>"]
["<s>", "private", "BigSmall", "nextBigSmall", "(", "int", "[", "]", "tree", ",", "int", "index", ",", "int", "min", ",", "int", "max", ")", "{", "BigSmall", "bs", "=", "new", "BigSmall", "(", ")", ";", "boolean", "seenBig", "=", "false", ",", "seenSmall", "=", "false", ";", "for", "(", "int", "i", "=", "index", "+", "1", ";", "i", "<", "tree", ".", "length", "&", "&", "(", "!", "seenBig", "|", "|", "!", "seenSmall", ")", ";", "i", "+", "+", ")", "{", "if", "(", "tree", "[", "i", "]", ">", "max", "|", "|", "tree", "[", "i", "]", "<", "min", ")", "{", "continue", ";", "}", "if", "(", "!", "seenBig", "&", "&", "tree", "[", "i", "]", ">", "tree", "[", "index", "]", ")", "{", "bs", ".", "big", "=", "i", ";", "seenBig", "=", "true", ";", "}", "if", "(", "!", "seenSmall", "&", "&", "tree", "[", "i", "]", "<", "tree", "[", "index", "]", ")", "{", "bs", ".", "small", "=", "i", ";", "seenSmall", "=", "true", ";", "}", "}", "return", "bs", ";", "}", "</s>"]
["<s>", "public", "boolean", "sameBST1", "(", "int", "arr1", "[", "]", ",", "int", "arr2", "[", "]", ")", "{", "List", "<", "Integer", ">", "list1", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "for", "(", "int", "i", ":", "arr1", ")", "{", "list1", ".", "add", "(", "i", ")", ";", "}", "List", "<", "Integer", ">", "list2", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "for", "(", "int", "i", ":", "arr2", ")", "{", "list2", ".", "add", "(", "i", ")", ";", "}", "return", "sameBST1", "(", "list1", ",", "list2", ")", ";", "}", "</s>"]
["<s>", "private", "boolean", "sameBST1", "(", "List", "<", "Integer", ">", "arr1", ",", "List", "<", "Integer", ">", "arr2", ")", "{", "if", "(", "arr1", ".", "size", "(", ")", "=", "=", "0", "&", "&", "arr2", ".", "size", "(", ")", "=", "=", "0", ")", "{", "return", "true", ";", "}", "if", "(", "arr1", ".", "size", "(", ")", "=", "=", "0", "|", "|", "arr2", ".", "size", "(", ")", "=", "=", "0", ")", "{", "return", "false", ";", "}", "if", "(", "arr1", ".", "get", "(", "0", ")", "!", "=", "arr2", ".", "get", "(", "0", ")", ")", "{", "return", "false", ";", "}", "List", "<", "Integer", ">", "smaller1", "=", "new", "ArrayList", "<", "Integer", ">", "(", ")", ";", "List", "<", "Integer", ">", "larger1", "=", "new", "ArrayList", "<", "Integer", ">", "(", ")", ";", "boolean", "first", "=", "true", ";", "for", "(", "Integer", "i", ":", "arr1", ")", "{", "if", "(", "first", ")", "{", "first", "=", "false", ";", "continue", ";", "}", "if", "(", "i", "<", "=", "arr1", ".", "get", "(", "0", ")", ")", "{", "smaller1", ".", "add", "(", "i", ")", ";", "}", "else", "{", "larger1", ".", "add", "(", "i", ")", ";", "}", "}", "first", "=", "true", ";", "List", "<", "Integer", ">", "smaller2", "=", "new", "ArrayList", "<", "Integer", ">", "(", ")", ";", "List", "<", "Integer", ">", "larger2", "=", "new", "ArrayList", "<", "Integer", ">", "(", ")", ";", "for", "(", "Integer", "i", ":", "arr2", ")", "{", "if", "(", "first", ")", "{", "first", "=", "false", ";", "continue", ";", "}", "if", "(", "i", "<", "=", "arr2", ".", "get", "(", "0", ")", ")", "{", "smaller2", ".", "add", "(", "i", ")", ";", "}", "else", "{", "larger2", ".", "add", "(", "i", ")", ";", "}", "}", "boolean", "r", "=", "compare", "(", "smaller1", ",", "smaller2", ")", "&", "&", "compare", "(", "larger1", ",", "larger2", ")", ";", "if", "(", "!", "r", ")", "{", "return", "false", ";", "}", "return", "sameBST1", "(", "smaller1", ",", "smaller2", ")", "&", "&", "sameBST1", "(", "larger1", ",", "larger2", ")", ";", "}", "</s>"]
["<s>", "private", "boolean", "compare", "(", "List", "<", "Integer", ">", "l1", ",", "List", "<", "Integer", ">", "l2", ")", "{", "Set", "<", "Integer", ">", "s", "=", "new", "HashSet", "<", "Integer", ">", "(", ")", ";", "for", "(", "Integer", "i", ":", "l1", ")", "{", "s", ".", "add", "(", "i", ")", ";", "}", "for", "(", "Integer", "i", ":", "l2", ")", "{", "if", "(", "!", "s", ".", "contains", "(", "i", ")", ")", "{", "return", "false", ";", "}", "}", "return", "true", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "tree1", "[", "]", "=", "{", "<NUM_LIT:3>", ",", "-", "<NUM_LIT:6>", ",", "-", "<NUM_LIT:2>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT:9>", ",", "-", "<NUM_LIT:10>", ",", "-", "1", ",", "<NUM_LIT:15>", ",", "<NUM_LIT:10>", "}", ";", "int", "tree2", "[", "]", "=", "{", "<NUM_LIT:3>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:15>", ",", "-", "<NUM_LIT:6>", ",", "<NUM_LIT:10>", ",", "-", "<NUM_LIT:2>", ",", "-", "1", ",", "-", "<NUM_LIT:10>", "}", ";", "IdenticalTrees", "it", "=", "new", "IdenticalTrees", "(", ")", ";", "System", ".", "out", ".", "println", "(", "it", ".", "sameBST", "(", "tree1", ",", "tree2", ")", ")", ";", "System", ".", "out", ".", "println", "(", "it", ".", "sameBST1", "(", "tree1", ",", "tree2", ")", ")", ";", "}", "</s>"]
["<s>", "public", "static", "Node", "newNode", "(", "int", "data", ")", "{", "Node", "n", "=", "new", "Node", "(", ")", ";", "n", ".", "left", "=", "null", ";", "n", ".", "right", "=", "null", ";", "n", ".", "data", "=", "data", ";", "n", ".", "lis", "=", "-", "1", ";", "n", ".", "height", "=", "1", ";", "n", ".", "size", "=", "1", ";", "n", ".", "color", "=", "Color", ".", "RED", ";", "return", "n", ";", "}", "</s>"]
["<s>", "public", "Node", "addNode", "(", "int", "data", ",", "Node", "head", ")", "{", "Node", "tempHead", "=", "head", ";", "Node", "n", "=", "Node", ".", "newNode", "(", "data", ")", ";", "if", "(", "head", "=", "=", "null", ")", "{", "head", "=", "n", ";", "return", "head", ";", "}", "Node", "prev", "=", "null", ";", "while", "(", "head", "!", "=", "null", ")", "{", "prev", "=", "head", ";", "if", "(", "head", ".", "data", "<", "data", ")", "{", "head", "=", "head", ".", "right", ";", "}", "else", "{", "head", "=", "head", ".", "left", ";", "}", "}", "if", "(", "prev", ".", "data", "<", "data", ")", "{", "prev", ".", "right", "=", "n", ";", "}", "else", "{", "prev", ".", "left", "=", "n", ";", "}", "return", "tempHead", ";", "}", "</s>"]
["<s>", "public", "int", "height", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", "0", ";", "}", "int", "leftHeight", "=", "height", "(", "root", ".", "left", ")", ";", "int", "rightHeight", "=", "height", "(", "root", ".", "right", ")", ";", "return", "Math", ".", "max", "(", "leftHeight", ",", "rightHeight", ")", "+", "1", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "BinaryTree", "bt", "=", "new", "BinaryTree", "(", ")", ";", "Node", "head", "=", "null", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:10>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:15>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:5>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:7>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:20>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "-", "1", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "head", ")", ";", "System", ".", "out", ".", "println", "(", "bt", ".", "height", "(", "head", ")", ")", ";", "}", "</s>"]
["<s>", "public", "Node", "createTree", "(", "int", "inorder", "[", "]", ")", "{", "return", "createTree", "(", "inorder", ",", "0", ",", "inorder", ".", "length", "-", "1", ")", ";", "}", "</s>"]
["<s>", "private", "Node", "createTree", "(", "int", "inorder", "[", "]", ",", "int", "low", ",", "int", "high", ")", "{", "if", "(", "low", ">", "high", ")", "{", "return", "null", ";", "}", "int", "i", ";", "int", "maxIndex", "=", "low", ";", "for", "(", "i", "=", "low", ";", "i", "<", "=", "high", ";", "i", "+", "+", ")", "{", "if", "(", "inorder", "[", "maxIndex", "]", ">", "inorder", "[", "i", "]", ")", "{", "maxIndex", "=", "i", ";", "}", "}", "Node", "root", "=", "Node", ".", "newNode", "(", "inorder", "[", "maxIndex", "]", ")", ";", "root", ".", "left", "=", "createTree", "(", "inorder", ",", "low", ",", "maxIndex", "-", "1", ")", ";", "root", ".", "right", "=", "createTree", "(", "inorder", ",", "maxIndex", "+", "1", ",", "high", ")", ";", "return", "root", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "inorder", "[", "]", "=", "{", "<NUM_LIT:9>", ",", "<NUM_LIT:15>", ",", "<NUM_LIT>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT>", ",", "-", "1", ",", "<NUM_LIT:3>", ",", "-", "<NUM_LIT:3>", "}", ";", "ContructTreeFromInOrderTraversalRootGreaterThanChild", "tf", "=", "new", "ContructTreeFromInOrderTraversalRootGreaterThanChild", "(", ")", ";", "Node", "root", "=", "tf", ".", "createTree", "(", "inorder", ")", ";", "TreeTraversals", "tt", "=", "new", "TreeTraversals", "(", ")", ";", "tt", ".", "inOrder", "(", "root", ")", ";", "}", "</s>"]
["<s>", "private", "void", "findInChild", "(", "Node", "root", ",", "int", "k", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", ";", "}", "if", "(", "k", "=", "=", "0", ")", "{", "System", ".", "out", ".", "println", "(", "root", ".", "data", ")", ";", "}", "findInChild", "(", "root", ".", "left", ",", "k", "-", "1", ")", ";", "findInChild", "(", "root", ".", "right", ",", "k", "-", "1", ")", ";", "}", "</s>"]
["<s>", "public", "int", "printNodes", "(", "Node", "root", ",", "int", "dest", ",", "int", "k", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", "-", "1", ";", "}", "if", "(", "root", ".", "data", "=", "=", "dest", ")", "{", "findInChild", "(", "root", ",", "k", ")", ";", "return", "k", "-", "1", ";", "}", "int", "found", "=", "printNodes", "(", "root", ".", "left", ",", "dest", ",", "k", ")", ";", "if", "(", "found", "!", "=", "-", "1", ")", "{", "if", "(", "found", "=", "=", "0", ")", "{", "System", ".", "out", ".", "println", "(", "root", ".", "data", ")", ";", "}", "else", "{", "findInChild", "(", "root", ".", "right", ",", "found", "-", "1", ")", ";", "}", "return", "found", "-", "1", ";", "}", "found", "=", "printNodes", "(", "root", ".", "right", ",", "dest", ",", "k", ")", ";", "if", "(", "found", "!", "=", "-", "1", ")", "{", "if", "(", "found", "=", "=", "0", ")", "{", "System", ".", "out", ".", "println", "(", "root", ".", "data", ")", ";", "}", "else", "{", "findInChild", "(", "root", ".", "left", ",", "found", "-", "1", ")", ";", "}", "return", "found", "-", "1", ";", "}", "return", "-", "1", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "NodesAtDistanceK", "nad", "=", "new", "NodesAtDistanceK", "(", ")", ";", "Node", "root", "=", "null", ";", "BinaryTree", "bt", "=", "new", "BinaryTree", "(", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:10>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:3>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "-", "1", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:8>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "-", "<NUM_LIT:6>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "-", "<NUM_LIT:11>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:11>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "root", ")", ";", "nad", ".", "printNodes", "(", "root", ",", "<NUM_LIT:11>", ",", "<NUM_LIT:2>", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "areCousins1", "(", "Node", "root", ",", "int", "data1", ",", "int", "data2", ")", "{", "Queue", "<", "Node", ">", "queue", "=", "new", "LinkedList", "<", ">", "(", ")", ";", "queue", ".", "add", "(", "root", ")", ";", "int", "tempLevel", "=", "1", ";", "int", "level", "=", "0", ";", "boolean", "found1", "=", "false", ";", "boolean", "found2", "=", "false", ";", "Node", "parent1", "=", "null", ";", "Node", "parent2", "=", "null", ";", "while", "(", "!", "queue", ".", "isEmpty", "(", ")", ")", "{", "while", "(", "tempLevel", ">", "0", ")", "{", "root", "=", "queue", ".", "poll", "(", ")", ";", "if", "(", "root", ".", "left", "!", "=", "null", ")", "{", "if", "(", "root", ".", "left", ".", "data", "=", "=", "data1", ")", "{", "found1", "=", "true", ";", "parent1", "=", "root", ";", "}", "else", "if", "(", "root", ".", "left", ".", "data", "=", "=", "data2", ")", "{", "found2", "=", "true", ";", "parent2", "=", "root", ";", "}", "else", "{", "queue", ".", "add", "(", "root", ".", "left", ")", ";", "level", "+", "+", ";", "}", "}", "if", "(", "root", ".", "right", "!", "=", "null", ")", "{", "if", "(", "root", ".", "right", ".", "data", "=", "=", "data1", ")", "{", "found1", "=", "true", ";", "parent1", "=", "root", ";", "}", "else", "if", "(", "root", ".", "right", ".", "data", "=", "=", "data2", ")", "{", "found2", "=", "true", ";", "parent2", "=", "root", ";", "}", "else", "{", "queue", ".", "add", "(", "root", ".", "right", ")", ";", "level", "+", "+", ";", "}", "}", "tempLevel", "-", "-", ";", "}", "if", "(", "found1", "&", "&", "found2", "&", "&", "parent1", "!", "=", "parent2", ")", "{", "return", "true", ";", "}", "else", "if", "(", "found1", "|", "|", "found2", ")", "{", "return", "false", ";", "}", "tempLevel", "=", "level", ";", "level", "=", "0", ";", "}", "return", "false", ";", "}", "</s>"]
["<s>", "public", "boolean", "areCousins", "(", "Node", "root", ",", "int", "a", ",", "int", "b", ")", "{", "Deque", "<", "Node", ">", "queue", "=", "new", "LinkedList", "<", "Node", ">", "(", ")", ";", "queue", ".", "offerFirst", "(", "root", ")", ";", "int", "levelSize", "=", "1", ";", "int", "tempLevelSize", "=", "1", ";", "boolean", "foundFirst", "=", "false", ";", "while", "(", "!", "queue", ".", "isEmpty", "(", ")", ")", "{", "levelSize", "=", "0", ";", "while", "(", "tempLevelSize", ">", "0", ")", "{", "Node", "node", "=", "queue", ".", "pollLast", "(", ")", ";", "if", "(", "checkSameParent", "(", "node", ",", "a", ",", "b", ")", ")", "{", "return", "false", ";", "}", "if", "(", "node", ".", "data", "=", "=", "a", "|", "|", "node", ".", "data", "=", "=", "b", ")", "{", "if", "(", "foundFirst", ")", "{", "return", "true", ";", "}", "foundFirst", "=", "true", ";", "}", "if", "(", "node", ".", "left", "!", "=", "null", ")", "{", "queue", ".", "offerFirst", "(", "node", ".", "left", ")", ";", "levelSize", "+", "+", ";", "}", "if", "(", "node", ".", "right", "!", "=", "null", ")", "{", "queue", ".", "offerFirst", "(", "node", ".", "right", ")", ";", "levelSize", "+", "+", ";", "}", "tempLevelSize", "-", "-", ";", "}", "if", "(", "foundFirst", ")", "{", "return", "false", ";", "}", "tempLevelSize", "=", "levelSize", ";", "}", "return", "false", ";", "}", "</s>"]
["<s>", "private", "boolean", "checkSameParent", "(", "Node", "root", ",", "int", "a", ",", "int", "b", ")", "{", "if", "(", "root", ".", "left", "!", "=", "null", "&", "&", "root", ".", "right", "!", "=", "null", ")", "{", "if", "(", "(", "root", ".", "left", ".", "data", "=", "=", "a", "|", "|", "root", ".", "left", ".", "data", "=", "=", "b", ")", "&", "&", "(", "root", ".", "right", ".", "data", "=", "=", "a", "|", "|", "root", ".", "right", ".", "data", "=", "=", "b", ")", ")", "{", "return", "true", ";", "}", "}", "return", "false", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "BinaryTree", "bt", "=", "new", "BinaryTree", "(", ")", ";", "Node", "head", "=", "null", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:10>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:15>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:5>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:7>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:20>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "-", "1", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "-", "<NUM_LIT:6>", ",", "head", ")", ";", "CousinNodes", "cn", "=", "new", "CousinNodes", "(", ")", ";", "System", ".", "out", ".", "println", "(", "cn", ".", "areCousins", "(", "head", ",", "<NUM_LIT:10>", ",", "<NUM_LIT>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "cn", ".", "areCousins", "(", "head", ",", "<NUM_LIT>", ",", "<NUM_LIT:7>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "cn", ".", "areCousins", "(", "head", ",", "<NUM_LIT>", ",", "-", "1", ")", ")", ";", "System", ".", "out", ".", "println", "(", "cn", ".", "areCousins", "(", "head", ",", "<NUM_LIT>", ",", "-", "<NUM_LIT:6>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "cn", ".", "areCousins", "(", "head", ",", "-", "1", ",", "<NUM_LIT:7>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "cn", ".", "areCousins", "(", "head", ",", "<NUM_LIT:7>", ",", "-", "1", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "[", "]", "createTree", "(", "int", "input", "[", "]", ",", "Operation", "operation", ")", "{", "int", "height", "=", "(", "int", ")", "Math", ".", "ceil", "(", "Math", ".", "log", "(", "input", ".", "length", ")", "/", "Math", ".", "log", "(", "<NUM_LIT:2>", ")", ")", ";", "int", "segmentTree", "[", "]", "=", "new", "int", "[", "(", "int", ")", "(", "Math", ".", "pow", "(", "<NUM_LIT:2>", ",", "height", "+", "1", ")", "-", "1", ")", "]", ";", "constructTree", "(", "segmentTree", ",", "input", ",", "0", ",", "input", ".", "length", "-", "1", ",", "0", ",", "operation", ")", ";", "return", "segmentTree", ";", "}", "</s>"]
["<s>", "private", "void", "constructTree", "(", "int", "segmentTree", "[", "]", ",", "int", "input", "[", "]", ",", "int", "low", ",", "int", "high", ",", "int", "pos", ",", "Operation", "operation", ")", "{", "if", "(", "low", "=", "=", "high", ")", "{", "segmentTree", "[", "pos", "]", "=", "input", "[", "low", "]", ";", "return", ";", "}", "int", "mid", "=", "(", "low", "+", "high", ")", "/", "<NUM_LIT:2>", ";", "constructTree", "(", "segmentTree", ",", "input", ",", "low", ",", "mid", ",", "<NUM_LIT:2>", "*", "pos", "+", "1", ",", "operation", ")", ";", "constructTree", "(", "segmentTree", ",", "input", ",", "mid", "+", "1", ",", "high", ",", "<NUM_LIT:2>", "*", "pos", "+", "<NUM_LIT:2>", ",", "operation", ")", ";", "segmentTree", "[", "pos", "]", "=", "operation", ".", "perform", "(", "segmentTree", "[", "<NUM_LIT:2>", "*", "pos", "+", "1", "]", ",", "segmentTree", "[", "<NUM_LIT:2>", "*", "pos", "+", "<NUM_LIT:2>", "]", ")", ";", "}", "</s>"]
["<s>", "public", "int", "rangeQuery", "(", "int", "[", "]", "segmentTree", ",", "int", "qlow", ",", "int", "qhigh", ",", "int", "len", ",", "Operation", "operation", ")", "{", "return", "rangeQuery", "(", "segmentTree", ",", "0", ",", "len", "-", "1", ",", "qlow", ",", "qhigh", ",", "0", ",", "operation", ")", ";", "}", "</s>"]
["<s>", "private", "int", "rangeQuery", "(", "int", "segmentTree", "[", "]", ",", "int", "low", ",", "int", "high", ",", "int", "qlow", ",", "int", "qhigh", ",", "int", "pos", ",", "Operation", "operation", ")", "{", "if", "(", "qlow", "<", "=", "low", "&", "&", "qhigh", ">", "=", "high", ")", "{", "return", "segmentTree", "[", "pos", "]", ";", "}", "if", "(", "qlow", ">", "high", "|", "|", "qhigh", "<", "low", ")", "{", "return", "0", ";", "}", "int", "mid", "=", "(", "low", "+", "high", ")", "/", "<NUM_LIT:2>", ";", "return", "operation", ".", "perform", "(", "rangeQuery", "(", "segmentTree", ",", "low", ",", "mid", ",", "qlow", ",", "qhigh", ",", "<NUM_LIT:2>", "*", "pos", "+", "1", ",", "operation", ")", ",", "rangeQuery", "(", "segmentTree", ",", "mid", "+", "1", ",", "high", ",", "qlow", ",", "qhigh", ",", "<NUM_LIT:2>", "*", "pos", "+", "<NUM_LIT:2>", ",", "operation", ")", ")", ";", "}", "</s>"]
["<s>", "public", "void", "updateValueForSumOperation", "(", "int", "input", "[", "]", ",", "int", "segmentTree", "[", "]", ",", "int", "newVal", ",", "int", "index", ")", "{", "int", "diff", "=", "newVal", "-", "input", "[", "index", "]", ";", "input", "[", "index", "]", "=", "newVal", ";", "updateVal", "(", "segmentTree", ",", "0", ",", "input", ".", "length", "-", "1", ",", "diff", ",", "index", ",", "0", ")", ";", "}", "</s>"]
["<s>", "private", "void", "updateVal", "(", "int", "segmentTree", "[", "]", ",", "int", "low", ",", "int", "high", ",", "int", "diff", ",", "int", "index", ",", "int", "pos", ")", "{", "if", "(", "index", "<", "low", "|", "|", "index", ">", "high", ")", "{", "return", ";", "}", "segmentTree", "[", "pos", "]", "+", "=", "diff", ";", "if", "(", "low", ">", "=", "high", ")", "{", "return", ";", "}", "int", "mid", "=", "(", "low", "+", "high", ")", "/", "<NUM_LIT:2>", ";", "updateVal", "(", "segmentTree", ",", "low", ",", "mid", ",", "diff", ",", "index", ",", "<NUM_LIT:2>", "*", "pos", "+", "1", ")", ";", "updateVal", "(", "segmentTree", ",", "mid", "+", "1", ",", "high", ",", "diff", ",", "index", ",", "<NUM_LIT:2>", "*", "pos", "+", "<NUM_LIT:2>", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input", "[", "]", "=", "{", "1", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:11>", "}", ";", "SegmentTree", "st", "=", "new", "SegmentTree", "(", ")", ";", "Operation", "sumOp", "=", "new", "SumOperation", "(", ")", ";", "Operation", "minOp", "=", "new", "MinOperation", "(", ")", ";", "int", "result", "[", "]", "=", "st", ".", "createTree", "(", "input", ",", "sumOp", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "result", ".", "length", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "result", "[", "i", "]", "+", "\"", "\"", ")", ";", "}", "int", "input1", "[", "]", "=", "{", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:2>", ",", "1", ",", "<NUM_LIT:6>", ",", "-", "1", "}", ";", "int", "result1", "[", "]", "=", "st", ".", "createTree", "(", "input1", ",", "minOp", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "result1", ".", "length", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "result1", "[", "i", "]", "+", "\"", "\"", ")", ";", "}", "st", ".", "updateValueForSumOperation", "(", "input", ",", "result", ",", "0", ",", "0", ")", ";", "System", ".", "out", ".", "println", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "result", ".", "length", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "result", "[", "i", "]", "+", "\"", "\"", ")", ";", "}", "}", "</s>"]
["<s>", "int", "perform", "(", "int", "a", ",", "int", "b", ")", ";", "</s>"]
["<s>", "@", "Override", "public", "int", "perform", "(", "int", "a", ",", "int", "b", ")", "{", "return", "a", "+", "b", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "int", "perform", "(", "int", "a", ",", "int", "b", ")", "{", "return", "Math", ".", "min", "(", "a", ",", "b", ")", ";", "}", "</s>"]
["<s>", "public", "void", "levelOrder", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", ")", ";", "return", ";", "}", "Queue", "<", "Node", ">", "queue", "=", "new", "LinkedList", "<", "Node", ">", "(", ")", ";", "queue", ".", "offer", "(", "root", ")", ";", "System", ".", "out", ".", "println", "(", ")", ";", "while", "(", "queue", ".", "size", "(", ")", ">", "0", ")", "{", "root", "=", "queue", ".", "poll", "(", ")", ";", "System", ".", "out", ".", "print", "(", "root", ".", "data", "+", "\"", "\"", ")", ";", "if", "(", "root", ".", "left", "!", "=", "null", ")", "{", "queue", ".", "add", "(", "root", ".", "left", ")", ";", "}", "if", "(", "root", ".", "right", "!", "=", "null", ")", "{", "queue", ".", "add", "(", "root", ".", "right", ")", ";", "}", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "LevelOrderTraversal", "loi", "=", "new", "LevelOrderTraversal", "(", ")", ";", "BinaryTree", "bt", "=", "new", "BinaryTree", "(", ")", ";", "Node", "head", "=", "null", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:10>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:15>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:5>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:7>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:20>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "-", "1", ",", "head", ")", ";", "loi", ".", "levelOrder", "(", "head", ")", ";", "}", "</s>"]
["<s>", "public", "void", "toDoubleLL", "(", "Node", "root", ")", "{", "NodeRef", "prev", "=", "new", "NodeRef", "(", ")", ";", "toDoubleLL", "(", "root", ",", "prev", ")", ";", "}", "</s>"]
["<s>", "private", "void", "toDoubleLL", "(", "Node", "root", ",", "NodeRef", "prev", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", ";", "}", "toDoubleLL", "(", "root", ".", "left", ",", "prev", ")", ";", "if", "(", "prev", ".", "node", "!", "=", "null", ")", "{", "prev", ".", "node", ".", "right", "=", "root", ";", "root", ".", "left", "=", "prev", ".", "node", ";", "prev", ".", "node", "=", "root", ";", "}", "else", "{", "prev", ".", "node", "=", "root", ";", "}", "toDoubleLL", "(", "root", ".", "right", ",", "prev", ")", ";", "}", "</s>"]
["<s>", "public", "void", "print", "(", "Node", "root", ")", "{", "Node", "curr", "=", "null", ";", "while", "(", "root", "!", "=", "null", ")", "{", "curr", "=", "root", ";", "System", ".", "out", ".", "print", "(", "root", ".", "data", "+", "\"", "\"", ")", ";", "root", "=", "root", ".", "right", ";", "}", "System", ".", "out", ".", "println", "(", ")", ";", "root", "=", "curr", ";", "while", "(", "root", "!", "=", "null", ")", "{", "System", ".", "out", ".", "print", "(", "root", ".", "data", "+", "\"", "\"", ")", ";", "root", "=", "root", ".", "left", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "BinaryTreeToDoubleLinkList", "btd", "=", "new", "BinaryTreeToDoubleLinkList", "(", ")", ";", "BinaryTree", "bt", "=", "new", "BinaryTree", "(", ")", ";", "Node", "head", "=", "null", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:100>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:10>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:15>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:5>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:7>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "-", "<NUM_LIT:7>", ",", "head", ")", ";", "btd", ".", "toDoubleLL", "(", "head", ")", ";", "btd", ".", "print", "(", "head", ")", ";", "}", "</s>"]
["<s>", "public", "Node", "create", "(", "int", "input", "[", "]", ")", "{", "Node", "t", "[", "]", "=", "new", "Node", "[", "input", ".", "length", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "t", "[", "i", "]", "=", "new", "Node", "(", ")", ";", "t", "[", "i", "]", ".", "data", "=", "i", ";", "}", "Node", "root", "=", "null", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "int", "parentIndex", "=", "input", "[", "i", "]", ";", "if", "(", "parentIndex", "=", "=", "-", "1", ")", "{", "root", "=", "t", "[", "i", "]", ";", "continue", ";", "}", "Node", "parent", "=", "t", "[", "parentIndex", "]", ";", "if", "(", "parent", ".", "left", "=", "=", "null", ")", "{", "parent", ".", "left", "=", "t", "[", "i", "]", ";", "}", "else", "{", "parent", ".", "right", "=", "t", "[", "i", "]", ";", "}", "}", "return", "root", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "BinaryTreeFromParentRepresentation", "btpp", "=", "new", "BinaryTreeFromParentRepresentation", "(", ")", ";", "int", "input", "[", "]", "=", "{", "1", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:2>", ",", "-", "1", ",", "<NUM_LIT:3>", "}", ";", "Node", "root", "=", "btpp", ".", "create", "(", "input", ")", ";", "TreeTraversals", "tt", "=", "new", "TreeTraversals", "(", ")", ";", "tt", ".", "inOrder", "(", "root", ")", ";", "System", ".", "out", ".", "println", "(", ")", ";", "tt", ".", "preOrder", "(", "root", ")", ";", "}", "</s>"]
["<s>", "public", "Node", "constructTree", "(", "int", "preorder", "[", "]", ",", "int", "postorder", "[", "]", ")", "{", "return", "constructTree", "(", "preorder", ",", "postorder", ",", "0", ",", "postorder", ".", "length", "-", "<NUM_LIT:2>", ",", "0", ")", ";", "}", "</s>"]
["<s>", "private", "Node", "constructTree", "(", "int", "preorder", "[", "]", ",", "int", "postorder", "[", "]", ",", "int", "low", ",", "int", "high", ",", "int", "index", ")", "{", "if", "(", "low", ">", "high", "|", "|", "index", ">", "=", "preorder", ".", "length", "-", "1", ")", "{", "Node", "node", "=", "new", "Node", "(", ")", ";", "node", ".", "data", "=", "preorder", "[", "index", "]", ";", "return", "node", ";", "}", "Node", "node", "=", "new", "Node", "(", ")", ";", "node", ".", "data", "=", "preorder", "[", "index", "]", ";", "int", "i", "=", "0", ";", "for", "(", "i", "=", "low", ";", "i", "<", "=", "high", ";", "i", "+", "+", ")", "{", "if", "(", "preorder", "[", "index", "+", "1", "]", "=", "=", "postorder", "[", "i", "]", ")", "{", "break", ";", "}", "}", "node", ".", "left", "=", "constructTree", "(", "preorder", ",", "postorder", ",", "low", ",", "i", "-", "1", ",", "index", "+", "1", ")", ";", "node", ".", "right", "=", "constructTree", "(", "preorder", ",", "postorder", ",", "i", "+", "1", ",", "high", "-", "1", ",", "index", "+", "i", "-", "low", "+", "<NUM_LIT:2>", ")", ";", "return", "node", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "ConstructFullTreeFromPreOrderPostOrder", "cft", "=", "new", "ConstructFullTreeFromPreOrderPostOrder", "(", ")", ";", "int", "preorder", "[", "]", "=", "{", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:9>", "}", ";", "int", "postorder", "[", "]", "=", "{", "<NUM_LIT:2>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:3>", ",", "1", "}", ";", "Node", "root", "=", "cft", ".", "constructTree", "(", "preorder", ",", "postorder", ")", ";", "TreeTraversals", "tt", "=", "new", "TreeTraversals", "(", ")", ";", "tt", ".", "inOrder", "(", "root", ")", ";", "tt", ".", "preOrder", "(", "root", ")", ";", "tt", ".", "postOrder", "(", "root", ")", ";", "}", "</s>"]
["<s>", "private", "void", "populate", "(", "Node", "root", ",", "NodeRef", "nodeRef", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", ";", "}", "populate", "(", "root", ".", "right", ",", "nodeRef", ")", ";", "root", ".", "next", "=", "nodeRef", ".", "node", ";", "nodeRef", ".", "node", "=", "root", ";", "populate", "(", "root", ".", "left", ",", "nodeRef", ")", ";", "}", "</s>"]
["<s>", "public", "void", "populate", "(", "Node", "root", ")", "{", "NodeRef", "nodeRef", "=", "new", "NodeRef", "(", ")", ";", "populate", "(", "root", ",", "nodeRef", ")", ";", "}", "</s>"]
["<s>", "public", "void", "print", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", ";", "}", "System", ".", "out", ".", "println", "(", "root", ".", "data", ")", ";", "print", "(", "root", ".", "next", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "BinaryTree", "bt", "=", "new", "BinaryTree", "(", ")", ";", "Node", "head", "=", "null", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:10>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:15>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:5>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:7>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:20>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "-", "1", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "head", ")", ";", "PopulateInOrderSuccessor", "pio", "=", "new", "PopulateInOrderSuccessor", "(", ")", ";", "pio", ".", "populate", "(", "head", ")", ";", "while", "(", "head", ".", "left", "!", "=", "null", ")", "{", "head", "=", "head", ".", "left", ";", "}", "pio", ".", "print", "(", "head", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "isCorrect", "(", "int", "pre", "[", "]", ")", "{", "Deque", "<", "Integer", ">", "deque", "=", "new", "LinkedList", "<", ">", "(", ")", ";", "int", "minAcceptable", "=", "Integer", ".", "MIN_VALUE", ";", "deque", ".", "addFirst", "(", "pre", "[", "0", "]", ")", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "pre", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "pre", "[", "i", "]", "<", "minAcceptable", ")", "{", "return", "false", ";", "}", "while", "(", "!", "deque", ".", "isEmpty", "(", ")", "&", "&", "deque", ".", "peekFirst", "(", ")", "<", "pre", "[", "i", "]", ")", "{", "minAcceptable", "=", "deque", ".", "pollFirst", "(", ")", ";", "}", "deque", ".", "addFirst", "(", "pre", "[", "i", "]", ")", ";", "}", "return", "true", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "IsPreOrderArrayBST", "isb", "=", "new", "IsPreOrderArrayBST", "(", ")", ";", "int", "pre1", "[", "]", "=", "{", "<NUM_LIT:10>", ",", "-", "<NUM_LIT:5>", ",", "-", "<NUM_LIT:20>", "}", ";", "System", ".", "out", ".", "println", "(", "isb", ".", "isCorrect", "(", "pre1", ")", ")", ";", "int", "pre2", "[", "]", "=", "{", "<NUM_LIT:10>", ",", "-", "<NUM_LIT:5>", ",", "-", "<NUM_LIT:20>", ",", "-", "<NUM_LIT:10>", ",", "<NUM_LIT:7>", ",", "-", "<NUM_LIT:6>", "}", ";", "System", ".", "out", ".", "println", "(", "isb", ".", "isCorrect", "(", "pre2", ")", ")", ";", "int", "pre3", "[", "]", "=", "{", "<NUM_LIT>", ",", "<NUM_LIT:30>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT:100>", "}", ";", "System", ".", "out", ".", "println", "(", "isb", ".", "isCorrect", "(", "pre3", ")", ")", ";", "int", "pre4", "[", "]", "=", "{", "<NUM_LIT>", ",", "<NUM_LIT:30>", ",", "<NUM_LIT>", ",", "<NUM_LIT:20>", ",", "<NUM_LIT>", ",", "<NUM_LIT:100>", "}", ";", "System", ".", "out", ".", "println", "(", "isb", ".", "isCorrect", "(", "pre4", ")", ")", ";", "}", "</s>"]
["<s>", "public", "void", "spiralWithTwoStack", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", ";", "}", "Stack", "<", "Node", ">", "s1", "=", "new", "Stack", "<", ">", "(", ")", ";", "Stack", "<", "Node", ">", "s2", "=", "new", "Stack", "<", ">", "(", ")", ";", "s1", ".", "push", "(", "root", ")", ";", "while", "(", "!", "s1", ".", "isEmpty", "(", ")", "|", "|", "!", "s2", ".", "isEmpty", "(", ")", ")", "{", "while", "(", "!", "s1", ".", "isEmpty", "(", ")", ")", "{", "root", "=", "s1", ".", "pop", "(", ")", ";", "System", ".", "out", ".", "print", "(", "root", ".", "data", "+", "\"", "\"", ")", ";", "if", "(", "root", ".", "left", "!", "=", "null", ")", "{", "s2", ".", "push", "(", "root", ".", "left", ")", ";", "}", "if", "(", "root", ".", "right", "!", "=", "null", ")", "{", "s2", ".", "push", "(", "root", ".", "right", ")", ";", "}", "}", "while", "(", "!", "s2", ".", "isEmpty", "(", ")", ")", "{", "root", "=", "s2", ".", "pop", "(", ")", ";", "System", ".", "out", ".", "print", "(", "root", ".", "data", "+", "\"", "\"", ")", ";", "if", "(", "root", ".", "right", "!", "=", "null", ")", "{", "s1", ".", "push", "(", "root", ".", "right", ")", ";", "}", "if", "(", "root", ".", "left", "!", "=", "null", ")", "{", "s1", ".", "push", "(", "root", ".", "left", ")", ";", "}", "}", "}", "}", "</s>"]
["<s>", "public", "void", "spiralWithOneDeque", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", ";", "}", "Deque", "<", "Node", ">", "deque", "=", "new", "LinkedList", "<", "Node", ">", "(", ")", ";", "deque", ".", "offerFirst", "(", "root", ")", ";", "int", "count", "=", "1", ";", "boolean", "flip", "=", "true", ";", "while", "(", "!", "deque", ".", "isEmpty", "(", ")", ")", "{", "int", "currentCount", "=", "0", ";", "while", "(", "count", ">", "0", ")", "{", "if", "(", "flip", ")", "{", "root", "=", "deque", ".", "pollFirst", "(", ")", ";", "System", ".", "out", ".", "print", "(", "root", ".", "data", "+", "\"", "\"", ")", ";", "if", "(", "root", ".", "left", "!", "=", "null", ")", "{", "deque", ".", "offerLast", "(", "root", ".", "left", ")", ";", "currentCount", "+", "+", ";", "}", "if", "(", "root", ".", "right", "!", "=", "null", ")", "{", "deque", ".", "offerLast", "(", "root", ".", "right", ")", ";", "currentCount", "+", "+", ";", "}", "}", "else", "{", "root", "=", "deque", ".", "pollLast", "(", ")", ";", "System", ".", "out", ".", "print", "(", "root", ".", "data", "+", "\"", "\"", ")", ";", "if", "(", "root", ".", "right", "!", "=", "null", ")", "{", "deque", ".", "offerFirst", "(", "root", ".", "right", ")", ";", "currentCount", "+", "+", ";", "}", "if", "(", "root", ".", "left", "!", "=", "null", ")", "{", "deque", ".", "offerFirst", "(", "root", ".", "left", ")", ";", "currentCount", "+", "+", ";", "}", "}", "count", "-", "-", ";", "}", "flip", "=", "!", "flip", ";", "count", "=", "currentCount", ";", "}", "}", "</s>"]
["<s>", "public", "void", "spiralWithOneDequeDelimiter", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", ";", "}", "Deque", "<", "Node", ">", "q", "=", "new", "LinkedList", "<", ">", "(", ")", ";", "q", ".", "offer", "(", "null", ")", ";", "q", ".", "offerFirst", "(", "root", ")", ";", "while", "(", "q", ".", "size", "(", ")", ">", "1", ")", "{", "root", "=", "q", ".", "peekFirst", "(", ")", ";", "while", "(", "root", "!", "=", "null", ")", "{", "root", "=", "q", ".", "pollFirst", "(", ")", ";", "System", ".", "out", ".", "print", "(", "root", ".", "data", "+", "\"", "\"", ")", ";", "if", "(", "root", ".", "left", "!", "=", "null", ")", "{", "q", ".", "offerLast", "(", "root", ".", "left", ")", ";", "}", "if", "(", "root", ".", "right", "!", "=", "null", ")", "{", "q", ".", "offerLast", "(", "root", ".", "right", ")", ";", "}", "root", "=", "q", ".", "peekFirst", "(", ")", ";", "}", "root", "=", "q", ".", "peekLast", "(", ")", ";", "while", "(", "root", "!", "=", "null", ")", "{", "System", ".", "out", ".", "print", "(", "root", ".", "data", "+", "\"", "\"", ")", ";", "root", "=", "q", ".", "pollLast", "(", ")", ";", "if", "(", "root", ".", "right", "!", "=", "null", ")", "{", "q", ".", "offerFirst", "(", "root", ".", "right", ")", ";", "}", "if", "(", "root", ".", "left", "!", "=", "null", ")", "{", "q", ".", "offerFirst", "(", "root", ".", "left", ")", ";", "}", "root", "=", "q", ".", "peekLast", "(", ")", ";", "}", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "BinaryTree", "bt", "=", "new", "BinaryTree", "(", ")", ";", "Node", "root", "=", "null", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:10>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:30>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "-", "<NUM_LIT:10>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "0", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "-", "<NUM_LIT:20>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "-", "<NUM_LIT:15>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "root", ")", ";", "TreeTraversalInSpiralOrder", "tt", "=", "new", "TreeTraversalInSpiralOrder", "(", ")", ";", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", ")", ";", "tt", ".", "spiralWithTwoStack", "(", "root", ")", ";", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "<STR_LIT>", "\"", ")", ";", "tt", ".", "spiralWithOneDeque", "(", "root", ")", ";", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "<STR_LIT>", "\"", ")", ";", "tt", ".", "spiralWithOneDequeDelimiter", "(", "root", ")", ";", "}", "</s>"]
["<s>", "public", "Node", "toSortedLinkList", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", "null", ";", "}", "Node", "left", "=", "toSortedLinkList", "(", "root", ".", "left", ")", ";", "Node", "right", "=", "toSortedLinkList", "(", "root", ".", "right", ")", ";", "root", ".", "left", "=", "null", ";", "root", ".", "right", "=", "null", ";", "root", "=", "merge", "(", "left", ",", "root", ")", ";", "return", "merge", "(", "root", ",", "right", ")", ";", "}", "</s>"]
["<s>", "private", "Node", "merge", "(", "Node", "head1", ",", "Node", "head2", ")", "{", "if", "(", "head1", "=", "=", "null", ")", "{", "return", "head2", ";", "}", "if", "(", "head2", "=", "=", "null", ")", "{", "return", "head1", ";", "}", "if", "(", "head1", ".", "data", "<", "=", "head2", ".", "data", ")", "{", "head1", ".", "next", "=", "merge", "(", "head1", ".", "next", ",", "head2", ")", ";", "return", "head1", ";", "}", "else", "{", "head2", ".", "next", "=", "merge", "(", "head1", ",", "head2", ".", "next", ")", ";", "return", "head2", ";", "}", "}", "</s>"]
["<s>", "private", "void", "print", "(", "Node", "root", ")", "{", "while", "(", "root", "!", "=", "null", ")", "{", "System", ".", "out", ".", "print", "(", "root", ".", "data", "+", "\"", "\"", ")", ";", "root", "=", "root", ".", "next", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "in", "[", "]", "=", "{", "-", "<NUM_LIT:6>", ",", "0", ",", "<NUM_LIT:15>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT>", ",", "<NUM_LIT:2>", "}", ";", "int", "pre", "[", "]", "=", "{", "<NUM_LIT:10>", ",", "<NUM_LIT:15>", ",", "-", "<NUM_LIT:6>", ",", "0", ",", "<NUM_LIT>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:2>", "}", ";", "ConstructTreeFromInOrderPreOrder", "ct", "=", "new", "ConstructTreeFromInOrderPreOrder", "(", ")", ";", "Node", "root", "=", "ct", ".", "createTree", "(", "in", ",", "pre", ")", ";", "BinaryTreeToSortedLinkList", "bt", "=", "new", "BinaryTreeToSortedLinkList", "(", ")", ";", "root", "=", "bt", ".", "toSortedLinkList", "(", "root", ")", ";", "bt", ".", "print", "(", "root", ")", ";", "}", "</s>"]
["<s>", "public", "void", "add", "(", "Node", "root", ",", "IntegerRef", "ref", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", ";", "}", "add", "(", "root", ".", "right", ",", "ref", ")", ";", "root", ".", "data", "+", "=", "ref", ".", "val", ";", "ref", ".", "val", "=", "root", ".", "data", ";", "add", "(", "root", ".", "left", ",", "ref", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "BinaryTree", "bt", "=", "new", "BinaryTree", "(", ")", ";", "Node", "root", "=", "null", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:10>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:5>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:20>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:15>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "root", ")", ";", "AddGreaterValueNodeToEveryNode", "agv", "=", "new", "AddGreaterValueNodeToEveryNode", "(", ")", ";", "IntegerRef", "ir", "=", "new", "IntegerRef", "(", ")", ";", "ir", ".", "val", "=", "0", ";", "agv", ".", "add", "(", "root", ",", "ir", ")", ";", "TreeTraversals", "tt", "=", "new", "TreeTraversals", "(", ")", ";", "tt", ".", "inOrder", "(", "root", ")", ";", "}", "</s>"]
["<s>", "public", "void", "inOrder", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", ";", "}", "inOrder", "(", "root", ".", "left", ")", ";", "System", ".", "out", ".", "print", "(", "root", ".", "data", "+", "\"", "\"", ")", ";", "inOrder", "(", "root", ".", "right", ")", ";", "}", "</s>"]
["<s>", "public", "void", "preOrder", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", ";", "}", "System", ".", "out", ".", "print", "(", "root", ".", "data", "+", "\"", "\"", ")", ";", "preOrder", "(", "root", ".", "left", ")", ";", "preOrder", "(", "root", ".", "right", ")", ";", "}", "</s>"]
["<s>", "public", "void", "postOrder", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", ";", "}", "postOrder", "(", "root", ".", "left", ")", ";", "postOrder", "(", "root", ".", "right", ")", ";", "System", ".", "out", ".", "print", "(", "root", ".", "data", "+", "\"", "\"", ")", ";", "}", "</s>"]
["<s>", "public", "void", "inorderItr", "(", "Node", "root", ")", "{", "Deque", "<", "Node", ">", "stack", "=", "new", "LinkedList", "<", "Node", ">", "(", ")", ";", "Node", "node", "=", "root", ";", "while", "(", "true", ")", "{", "if", "(", "node", "!", "=", "null", ")", "{", "stack", ".", "addFirst", "(", "node", ")", ";", "node", "=", "node", ".", "left", ";", "}", "else", "{", "if", "(", "stack", ".", "isEmpty", "(", ")", ")", "{", "break", ";", "}", "node", "=", "stack", ".", "pollFirst", "(", ")", ";", "System", ".", "out", ".", "println", "(", "node", ".", "data", ")", ";", "node", "=", "node", ".", "right", ";", "}", "}", "}", "</s>"]
["<s>", "public", "void", "morrisTraversalInOrder", "(", "Node", "root", ")", "{", "while", "(", "root", "!", "=", "null", ")", "{", "if", "(", "root", ".", "left", "=", "=", "null", ")", "{", "System", ".", "out", ".", "println", "(", "root", ".", "data", ")", ";", "root", "=", "root", ".", "right", ";", "}", "else", "{", "Node", "pre", "=", "root", ".", "left", ";", "while", "(", "pre", ".", "right", "!", "=", "root", "&", "&", "pre", ".", "right", "!", "=", "null", ")", "{", "pre", "=", "pre", ".", "right", ";", "}", "if", "(", "pre", ".", "right", "=", "=", "root", ")", "{", "pre", ".", "right", "=", "null", ";", "System", ".", "out", ".", "println", "(", "root", ".", "data", ")", ";", "root", "=", "root", ".", "right", ";", "}", "else", "{", "pre", ".", "right", "=", "root", ";", "root", "=", "root", ".", "left", ";", "}", "}", "}", "}", "</s>"]
["<s>", "public", "void", "morrisTraversalPreOrder", "(", "Node", "root", ")", "{", "while", "(", "root", "!", "=", "null", ")", "{", "if", "(", "root", ".", "left", "=", "=", "null", ")", "{", "System", ".", "out", ".", "print", "(", "root", ".", "data", "+", "\"", "\"", ")", ";", "root", "=", "root", ".", "right", ";", "}", "else", "{", "Node", "pre", "=", "root", ".", "left", ";", "while", "(", "pre", ".", "right", "!", "=", "root", "&", "&", "pre", ".", "right", "!", "=", "null", ")", "{", "pre", "=", "pre", ".", "right", ";", "}", "if", "(", "pre", ".", "right", "=", "=", "root", ")", "{", "pre", ".", "right", "=", "null", ";", "root", "=", "root", ".", "right", ";", "}", "else", "{", "System", ".", "out", ".", "print", "(", "root", ".", "data", "+", "\"", "\"", ")", ";", "pre", ".", "right", "=", "root", ";", "root", "=", "root", ".", "left", ";", "}", "}", "}", "}", "</s>"]
["<s>", "public", "void", "preOrderItr", "(", "Node", "root", ")", "{", "Deque", "<", "Node", ">", "stack", "=", "new", "LinkedList", "<", "Node", ">", "(", ")", ";", "stack", ".", "addFirst", "(", "root", ")", ";", "while", "(", "!", "stack", ".", "isEmpty", "(", ")", ")", "{", "root", "=", "stack", ".", "pollFirst", "(", ")", ";", "System", ".", "out", ".", "print", "(", "root", ".", "data", "+", "\"", "\"", ")", ";", "if", "(", "root", ".", "right", "!", "=", "null", ")", "{", "stack", ".", "addFirst", "(", "root", ".", "right", ")", ";", "}", "if", "(", "root", ".", "left", "!", "=", "null", ")", "{", "stack", ".", "addFirst", "(", "root", ".", "left", ")", ";", "}", "}", "}", "</s>"]
["<s>", "public", "void", "postOrderItr", "(", "Node", "root", ")", "{", "Deque", "<", "Node", ">", "stack1", "=", "new", "LinkedList", "<", "Node", ">", "(", ")", ";", "Deque", "<", "Node", ">", "stack2", "=", "new", "LinkedList", "<", "Node", ">", "(", ")", ";", "stack1", ".", "addFirst", "(", "root", ")", ";", "while", "(", "!", "stack1", ".", "isEmpty", "(", ")", ")", "{", "root", "=", "stack1", ".", "pollFirst", "(", ")", ";", "if", "(", "root", ".", "left", "!", "=", "null", ")", "{", "stack1", ".", "addFirst", "(", "root", ".", "left", ")", ";", "}", "if", "(", "root", ".", "right", "!", "=", "null", ")", "{", "stack1", ".", "addFirst", "(", "root", ".", "right", ")", ";", "}", "stack2", ".", "addFirst", "(", "root", ")", ";", "}", "while", "(", "!", "stack2", ".", "isEmpty", "(", ")", ")", "{", "System", ".", "out", ".", "print", "(", "stack2", ".", "pollFirst", "(", ")", ".", "data", "+", "\"", "\"", ")", ";", "}", "}", "</s>"]
["<s>", "public", "void", "postOrderItrOneStack", "(", "Node", "root", ")", "{", "Deque", "<", "Node", ">", "stack", "=", "new", "LinkedList", "<", "Node", ">", "(", ")", ";", "while", "(", "true", ")", "{", "if", "(", "root", "!", "=", "null", ")", "{", "stack", ".", "addFirst", "(", "root", ")", ";", "root", "=", "root", ".", "left", ";", "}", "else", "{", "if", "(", "!", "stack", ".", "isEmpty", "(", ")", ")", "{", "if", "(", "stack", ".", "peekFirst", "(", ")", ".", "right", "!", "=", "null", ")", "{", "root", "=", "stack", ".", "peekFirst", "(", ")", ".", "right", ";", "}", "else", "{", "root", "=", "stack", ".", "pollFirst", "(", ")", ";", "System", ".", "out", ".", "print", "(", "root", ".", "data", "+", "\"", "\"", ")", ";", "while", "(", "!", "stack", ".", "isEmpty", "(", ")", "&", "&", "root", "=", "=", "stack", ".", "peekFirst", "(", ")", ".", "right", ")", "{", "root", "=", "stack", ".", "pollFirst", "(", ")", ";", "System", ".", "out", ".", "print", "(", "root", ".", "data", "+", "\"", "\"", ")", ";", "}", "root", "=", "stack", ".", "isEmpty", "(", ")", "?", "null", ":", "stack", ".", "peekFirst", "(", ")", ".", "right", ";", "}", "}", "else", "{", "break", ";", "}", "}", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "BinaryTree", "bt", "=", "new", "BinaryTree", "(", ")", ";", "Node", "head", "=", "null", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:10>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:15>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:5>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:7>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:20>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "-", "1", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "head", ")", ";", "TreeTraversals", "tt", "=", "new", "TreeTraversals", "(", ")", ";", "tt", ".", "postOrder", "(", "head", ")", ";", "System", ".", "out", ".", "println", "(", ")", ";", "tt", ".", "postOrderItr", "(", "head", ")", ";", "System", ".", "out", ".", "println", "(", ")", ";", "tt", ".", "postOrderItrOneStack", "(", "head", ")", ";", "}", "</s>"]
["<s>", "public", "void", "reverseLevelOrderTraversal", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", ";", "}", "Queue", "<", "Node", ">", "q", "=", "new", "LinkedList", "<", ">", "(", ")", ";", "Stack", "<", "Node", ">", "s", "=", "new", "Stack", "<", ">", "(", ")", ";", "q", ".", "offer", "(", "root", ")", ";", "while", "(", "!", "q", ".", "isEmpty", "(", ")", ")", "{", "root", "=", "q", ".", "poll", "(", ")", ";", "if", "(", "root", ".", "right", "!", "=", "null", ")", "{", "q", ".", "offer", "(", "root", ".", "right", ")", ";", "}", "if", "(", "root", ".", "left", "!", "=", "null", ")", "{", "q", ".", "offer", "(", "root", ".", "left", ")", ";", "}", "s", ".", "push", "(", "root", ")", ";", "}", "while", "(", "!", "s", ".", "isEmpty", "(", ")", ")", "{", "System", ".", "out", ".", "print", "(", "s", ".", "pop", "(", ")", ".", "data", "+", "\"", "\"", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "BinaryTree", "bt", "=", "new", "BinaryTree", "(", ")", ";", "Node", "root", "=", "null", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:10>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:30>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "-", "<NUM_LIT:10>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "0", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "-", "<NUM_LIT:20>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "-", "<NUM_LIT:15>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "root", ")", ";", "LevelOrderTraversalInReverse", "rlo", "=", "new", "LevelOrderTraversalInReverse", "(", ")", ";", "rlo", ".", "reverseLevelOrderTraversal", "(", "root", ")", ";", "}", "</s>"]
["<s>", "public", "Node", "createTree", "(", "int", "pre", "[", "]", ",", "char", "val", "[", "]", ")", "{", "PreIndex", "pi", "=", "new", "PreIndex", "(", ")", ";", "pi", ".", "index", "=", "0", ";", "return", "createTree", "(", "pre", ",", "val", ",", "pi", ")", ";", "}", "</s>"]
["<s>", "private", "Node", "createTree", "(", "int", "pre", "[", "]", ",", "char", "val", "[", "]", ",", "PreIndex", "ind", ")", "{", "if", "(", "ind", ".", "index", ">", "=", "pre", ".", "length", ")", "{", "return", "null", ";", "}", "Node", "root", "=", "Node", ".", "newNode", "(", "pre", "[", "ind", ".", "index", "]", ")", ";", "if", "(", "val", "[", "ind", ".", "index", "]", "=", "=", "<CHAR_LIT>", ")", "{", "ind", ".", "index", "+", "+", ";", "}", "else", "{", "ind", ".", "index", "+", "+", ";", "root", ".", "left", "=", "createTree", "(", "pre", ",", "val", ",", "ind", ")", ";", "root", ".", "right", "=", "createTree", "(", "pre", ",", "val", ",", "ind", ")", ";", "}", "return", "root", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "pre", "[", "]", "=", "{", "<NUM_LIT:10>", ",", "<NUM_LIT:20>", ",", "<NUM_LIT:30>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", "}", ";", "char", "val", "[", "]", "=", "{", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", "}", ";", "ConstructTreeFromPreOrderTraversalWith0or2Child", "tfp", "=", "new", "ConstructTreeFromPreOrderTraversalWith0or2Child", "(", ")", ";", "Node", "root", "=", "tfp", ".", "createTree", "(", "pre", ",", "val", ")", ";", "TreeTraversals", "tt", "=", "new", "TreeTraversals", "(", ")", ";", "tt", ".", "preOrder", "(", "root", ")", ";", "System", ".", "out", ".", "println", "(", ")", ";", "tt", ".", "inOrder", "(", "root", ")", ";", "}", "</s>"]
["<s>", "public", "Node", "createTree", "(", "int", "inorder", "[", "]", ",", "int", "preorder", "[", "]", ")", "{", "Node", "result", "=", "createTree", "(", "inorder", ",", "preorder", ",", "0", ",", "inorder", ".", "length", "-", "1", ")", ";", "index", "=", "0", ";", "return", "result", ";", "}", "</s>"]
["<s>", "private", "Node", "createTree", "(", "int", "inorder", "[", "]", ",", "int", "preorder", "[", "]", ",", "int", "start", ",", "int", "end", ")", "{", "if", "(", "start", ">", "end", ")", "{", "return", "null", ";", "}", "int", "i", ";", "for", "(", "i", "=", "start", ";", "i", "<", "=", "end", ";", "i", "+", "+", ")", "{", "if", "(", "preorder", "[", "index", "]", "=", "=", "inorder", "[", "i", "]", ")", "{", "break", ";", "}", "}", "Node", "node", "=", "Node", ".", "newNode", "(", "preorder", "[", "index", "]", ")", ";", "index", "+", "+", ";", "node", ".", "left", "=", "createTree", "(", "inorder", ",", "preorder", ",", "start", ",", "i", "-", "1", ")", ";", "node", ".", "right", "=", "createTree", "(", "inorder", ",", "preorder", ",", "i", "+", "1", ",", "end", ")", ";", "return", "node", ";", "}", "</s>"]
["<s>", "private", "static", "Node", "createBlackNode", "(", "int", "data", ")", "{", "Node", "node", "=", "new", "Node", "(", ")", ";", "node", ".", "data", "=", "data", ";", "node", ".", "color", "=", "Color", ".", "BLACK", ";", "node", ".", "left", "=", "createNullLeafNode", "(", "node", ")", ";", "node", ".", "right", "=", "createNullLeafNode", "(", "node", ")", ";", "return", "node", ";", "}", "</s>"]
["<s>", "private", "static", "Node", "createNullLeafNode", "(", "Node", "parent", ")", "{", "Node", "leaf", "=", "new", "Node", "(", ")", ";", "leaf", ".", "color", "=", "Color", ".", "BLACK", ";", "leaf", ".", "isNullLeaf", "=", "true", ";", "leaf", ".", "parent", "=", "parent", ";", "return", "leaf", ";", "}", "</s>"]
["<s>", "private", "static", "Node", "createRedNode", "(", "Node", "parent", ",", "int", "data", ")", "{", "Node", "node", "=", "new", "Node", "(", ")", ";", "node", ".", "data", "=", "data", ";", "node", ".", "color", "=", "Color", ".", "RED", ";", "node", ".", "parent", "=", "parent", ";", "node", ".", "left", "=", "createNullLeafNode", "(", "node", ")", ";", "node", ".", "right", "=", "createNullLeafNode", "(", "node", ")", ";", "return", "node", ";", "}", "</s>"]
["<s>", "public", "Node", "insert", "(", "Node", "root", ",", "int", "data", ")", "{", "return", "insert", "(", "null", ",", "root", ",", "data", ")", ";", "}", "</s>"]
["<s>", "public", "Node", "delete", "(", "Node", "root", ",", "int", "data", ")", "{", "AtomicReference", "<", "Node", ">", "rootReference", "=", "new", "AtomicReference", "<", ">", "(", ")", ";", "delete", "(", "root", ",", "data", ",", "rootReference", ")", ";", "if", "(", "rootReference", ".", "get", "(", ")", "=", "=", "null", ")", "{", "return", "root", ";", "}", "else", "{", "return", "rootReference", ".", "get", "(", ")", ";", "}", "}", "</s>"]
["<s>", "public", "void", "printRedBlackTree", "(", "Node", "root", ")", "{", "printRedBlackTree", "(", "root", ",", "0", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "validateRedBlackTree", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", "true", ";", "}", "if", "(", "root", ".", "color", "!", "=", "Color", ".", "BLACK", ")", "{", "System", ".", "out", ".", "print", "(", "\"", "<STR_LIT>", "\"", ")", ";", "return", "false", ";", "}", "AtomicInteger", "blackCount", "=", "new", "AtomicInteger", "(", "0", ")", ";", "return", "checkBlackNodesCount", "(", "root", ",", "blackCount", ",", "0", ")", "&", "&", "noRedRedParentChild", "(", "root", ",", "Color", ".", "BLACK", ")", ";", "}", "</s>"]
["<s>", "private", "void", "rightRotate", "(", "Node", "root", ",", "boolean", "changeColor", ")", "{", "Node", "parent", "=", "root", ".", "parent", ";", "root", ".", "parent", "=", "parent", ".", "parent", ";", "if", "(", "parent", ".", "parent", "!", "=", "null", ")", "{", "if", "(", "parent", ".", "parent", ".", "right", "=", "=", "parent", ")", "{", "parent", ".", "parent", ".", "right", "=", "root", ";", "}", "else", "{", "parent", ".", "parent", ".", "left", "=", "root", ";", "}", "}", "Node", "right", "=", "root", ".", "right", ";", "root", ".", "right", "=", "parent", ";", "parent", ".", "parent", "=", "root", ";", "parent", ".", "left", "=", "right", ";", "if", "(", "right", "!", "=", "null", ")", "{", "right", ".", "parent", "=", "parent", ";", "}", "if", "(", "changeColor", ")", "{", "root", ".", "color", "=", "Color", ".", "BLACK", ";", "parent", ".", "color", "=", "Color", ".", "RED", ";", "}", "}", "</s>"]
["<s>", "private", "void", "leftRotate", "(", "Node", "root", ",", "boolean", "changeColor", ")", "{", "Node", "parent", "=", "root", ".", "parent", ";", "root", ".", "parent", "=", "parent", ".", "parent", ";", "if", "(", "parent", ".", "parent", "!", "=", "null", ")", "{", "if", "(", "parent", ".", "parent", ".", "right", "=", "=", "parent", ")", "{", "parent", ".", "parent", ".", "right", "=", "root", ";", "}", "else", "{", "parent", ".", "parent", ".", "left", "=", "root", ";", "}", "}", "Node", "left", "=", "root", ".", "left", ";", "root", ".", "left", "=", "parent", ";", "parent", ".", "parent", "=", "root", ";", "parent", ".", "right", "=", "left", ";", "if", "(", "left", "!", "=", "null", ")", "{", "left", ".", "parent", "=", "parent", ";", "}", "if", "(", "changeColor", ")", "{", "root", ".", "color", "=", "Color", ".", "BLACK", ";", "parent", ".", "color", "=", "Color", ".", "RED", ";", "}", "}", "</s>"]
["<s>", "private", "Optional", "<", "Node", ">", "findSiblingNode", "(", "Node", "root", ")", "{", "Node", "parent", "=", "root", ".", "parent", ";", "if", "(", "isLeftChild", "(", "root", ")", ")", "{", "return", "Optional", ".", "ofNullable", "(", "parent", ".", "right", ".", "isNullLeaf", "?", "null", ":", "parent", ".", "right", ")", ";", "}", "else", "{", "return", "Optional", ".", "ofNullable", "(", "parent", ".", "left", ".", "isNullLeaf", "?", "null", ":", "parent", ".", "left", ")", ";", "}", "}", "</s>"]
["<s>", "private", "boolean", "isLeftChild", "(", "Node", "root", ")", "{", "Node", "parent", "=", "root", ".", "parent", ";", "if", "(", "parent", ".", "left", "=", "=", "root", ")", "{", "return", "true", ";", "}", "else", "{", "return", "false", ";", "}", "}", "</s>"]
["<s>", "private", "Node", "insert", "(", "Node", "parent", ",", "Node", "root", ",", "int", "data", ")", "{", "if", "(", "root", "=", "=", "null", "|", "|", "root", ".", "isNullLeaf", ")", "{", "if", "(", "parent", "!", "=", "null", ")", "{", "return", "createRedNode", "(", "parent", ",", "data", ")", ";", "}", "else", "{", "return", "createBlackNode", "(", "data", ")", ";", "}", "}", "if", "(", "root", ".", "data", "=", "=", "data", ")", "{", "throw", "new", "IllegalArgumentException", "(", "\"", "<STR_LIT>", "\"", "+", "data", ")", ";", "}", "boolean", "isLeft", ";", "if", "(", "root", ".", "data", ">", "data", ")", "{", "Node", "left", "=", "insert", "(", "root", ",", "root", ".", "left", ",", "data", ")", ";", "if", "(", "left", "=", "=", "root", ".", "parent", ")", "{", "return", "left", ";", "}", "root", ".", "left", "=", "left", ";", "isLeft", "=", "true", ";", "}", "else", "{", "Node", "right", "=", "insert", "(", "root", ",", "root", ".", "right", ",", "data", ")", ";", "if", "(", "right", "=", "=", "root", ".", "parent", ")", "{", "return", "right", ";", "}", "root", ".", "right", "=", "right", ";", "isLeft", "=", "false", ";", "}", "if", "(", "isLeft", ")", "{", "if", "(", "root", ".", "color", "=", "=", "Color", ".", "RED", "&", "&", "root", ".", "left", ".", "color", "=", "=", "Color", ".", "RED", ")", "{", "Optional", "<", "Node", ">", "sibling", "=", "findSiblingNode", "(", "root", ")", ";", "if", "(", "!", "sibling", ".", "isPresent", "(", ")", "|", "|", "sibling", ".", "get", "(", ")", ".", "color", "=", "=", "Color", ".", "BLACK", ")", "{", "if", "(", "isLeftChild", "(", "root", ")", ")", "{", "rightRotate", "(", "root", ",", "true", ")", ";", "}", "else", "{", "rightRotate", "(", "root", ".", "left", ",", "false", ")", ";", "root", "=", "root", ".", "parent", ";", "leftRotate", "(", "root", ",", "true", ")", ";", "}", "}", "else", "{", "root", ".", "color", "=", "Color", ".", "BLACK", ";", "sibling", ".", "get", "(", ")", ".", "color", "=", "Color", ".", "BLACK", ";", "if", "(", "root", ".", "parent", ".", "parent", "!", "=", "null", ")", "{", "root", ".", "parent", ".", "color", "=", "Color", ".", "RED", ";", "}", "}", "}", "}", "else", "{", "if", "(", "root", ".", "color", "=", "=", "Color", ".", "RED", "&", "&", "root", ".", "right", ".", "color", "=", "=", "Color", ".", "RED", ")", "{", "Optional", "<", "Node", ">", "sibling", "=", "findSiblingNode", "(", "root", ")", ";", "if", "(", "!", "sibling", ".", "isPresent", "(", ")", "|", "|", "sibling", ".", "get", "(", ")", ".", "color", "=", "=", "Color", ".", "BLACK", ")", "{", "if", "(", "!", "isLeftChild", "(", "root", ")", ")", "{", "leftRotate", "(", "root", ",", "true", ")", ";", "}", "else", "{", "leftRotate", "(", "root", ".", "right", ",", "false", ")", ";", "root", "=", "root", ".", "parent", ";", "rightRotate", "(", "root", ",", "true", ")", ";", "}", "}", "else", "{", "root", ".", "color", "=", "Color", ".", "BLACK", ";", "sibling", ".", "get", "(", ")", ".", "color", "=", "Color", ".", "BLACK", ";", "if", "(", "root", ".", "parent", ".", "parent", "!", "=", "null", ")", "{", "root", ".", "parent", ".", "color", "=", "Color", ".", "RED", ";", "}", "}", "}", "}", "return", "root", ";", "}", "</s>"]
["<s>", "private", "void", "delete", "(", "Node", "root", ",", "int", "data", ",", "AtomicReference", "<", "Node", ">", "rootReference", ")", "{", "if", "(", "root", "=", "=", "null", "|", "|", "root", ".", "isNullLeaf", ")", "{", "return", ";", "}", "if", "(", "root", ".", "data", "=", "=", "data", ")", "{", "if", "(", "root", ".", "right", ".", "isNullLeaf", "|", "|", "root", ".", "left", ".", "isNullLeaf", ")", "{", "deleteOneChild", "(", "root", ",", "rootReference", ")", ";", "}", "else", "{", "Node", "inorderSuccessor", "=", "findSmallest", "(", "root", ".", "right", ")", ";", "root", ".", "data", "=", "inorderSuccessor", ".", "data", ";", "delete", "(", "root", ".", "right", ",", "inorderSuccessor", ".", "data", ",", "rootReference", ")", ";", "}", "}", "if", "(", "root", ".", "data", "<", "data", ")", "{", "delete", "(", "root", ".", "right", ",", "data", ",", "rootReference", ")", ";", "}", "else", "{", "delete", "(", "root", ".", "left", ",", "data", ",", "rootReference", ")", ";", "}", "}", "</s>"]
["<s>", "private", "Node", "findSmallest", "(", "Node", "root", ")", "{", "Node", "prev", "=", "null", ";", "while", "(", "root", "!", "=", "null", "&", "&", "!", "root", ".", "isNullLeaf", ")", "{", "prev", "=", "root", ";", "root", "=", "root", ".", "left", ";", "}", "return", "prev", "!", "=", "null", "?", "prev", ":", "root", ";", "}", "</s>"]
["<s>", "private", "void", "deleteOneChild", "(", "Node", "nodeToBeDelete", ",", "AtomicReference", "<", "Node", ">", "rootReference", ")", "{", "Node", "child", "=", "nodeToBeDelete", ".", "right", ".", "isNullLeaf", "?", "nodeToBeDelete", ".", "left", ":", "nodeToBeDelete", ".", "right", ";", "replaceNode", "(", "nodeToBeDelete", ",", "child", ",", "rootReference", ")", ";", "if", "(", "nodeToBeDelete", ".", "color", "=", "=", "Color", ".", "BLACK", ")", "{", "if", "(", "child", ".", "color", "=", "=", "Color", ".", "RED", ")", "{", "child", ".", "color", "=", "Color", ".", "BLACK", ";", "}", "else", "{", "deleteCase1", "(", "child", ",", "rootReference", ")", ";", "}", "}", "}", "</s>"]
["<s>", "private", "void", "deleteCase1", "(", "Node", "doubleBlackNode", ",", "AtomicReference", "<", "Node", ">", "rootReference", ")", "{", "if", "(", "doubleBlackNode", ".", "parent", "=", "=", "null", ")", "{", "rootReference", ".", "set", "(", "doubleBlackNode", ")", ";", "return", ";", "}", "deleteCase2", "(", "doubleBlackNode", ",", "rootReference", ")", ";", "}", "</s>"]
["<s>", "private", "void", "deleteCase2", "(", "Node", "doubleBlackNode", ",", "AtomicReference", "<", "Node", ">", "rootReference", ")", "{", "Node", "siblingNode", "=", "findSiblingNode", "(", "doubleBlackNode", ")", ".", "get", "(", ")", ";", "if", "(", "siblingNode", ".", "color", "=", "=", "Color", ".", "RED", ")", "{", "if", "(", "isLeftChild", "(", "siblingNode", ")", ")", "{", "rightRotate", "(", "siblingNode", ",", "true", ")", ";", "}", "else", "{", "leftRotate", "(", "siblingNode", ",", "true", ")", ";", "}", "if", "(", "siblingNode", ".", "parent", "=", "=", "null", ")", "{", "rootReference", ".", "set", "(", "siblingNode", ")", ";", "}", "}", "deleteCase3", "(", "doubleBlackNode", ",", "rootReference", ")", ";", "}", "</s>"]
["<s>", "private", "void", "deleteCase3", "(", "Node", "doubleBlackNode", ",", "AtomicReference", "<", "Node", ">", "rootReference", ")", "{", "Node", "siblingNode", "=", "findSiblingNode", "(", "doubleBlackNode", ")", ".", "get", "(", ")", ";", "if", "(", "doubleBlackNode", ".", "parent", ".", "color", "=", "=", "Color", ".", "BLACK", "&", "&", "siblingNode", ".", "color", "=", "=", "Color", ".", "BLACK", "&", "&", "siblingNode", ".", "left", ".", "color", "=", "=", "Color", ".", "BLACK", "&", "&", "siblingNode", ".", "right", ".", "color", "=", "=", "Color", ".", "BLACK", ")", "{", "siblingNode", ".", "color", "=", "Color", ".", "RED", ";", "deleteCase1", "(", "doubleBlackNode", ".", "parent", ",", "rootReference", ")", ";", "}", "else", "{", "deleteCase4", "(", "doubleBlackNode", ",", "rootReference", ")", ";", "}", "}", "</s>"]
["<s>", "private", "void", "deleteCase4", "(", "Node", "doubleBlackNode", ",", "AtomicReference", "<", "Node", ">", "rootReference", ")", "{", "Node", "siblingNode", "=", "findSiblingNode", "(", "doubleBlackNode", ")", ".", "get", "(", ")", ";", "if", "(", "doubleBlackNode", ".", "parent", ".", "color", "=", "=", "Color", ".", "RED", "&", "&", "siblingNode", ".", "color", "=", "=", "Color", ".", "BLACK", "&", "&", "siblingNode", ".", "left", ".", "color", "=", "=", "Color", ".", "BLACK", "&", "&", "siblingNode", ".", "right", ".", "color", "=", "=", "Color", ".", "BLACK", ")", "{", "siblingNode", ".", "color", "=", "Color", ".", "RED", ";", "doubleBlackNode", ".", "parent", ".", "color", "=", "Color", ".", "BLACK", ";", "return", ";", "}", "else", "{", "deleteCase5", "(", "doubleBlackNode", ",", "rootReference", ")", ";", "}", "}", "</s>"]
["<s>", "private", "void", "deleteCase5", "(", "Node", "doubleBlackNode", ",", "AtomicReference", "<", "Node", ">", "rootReference", ")", "{", "Node", "siblingNode", "=", "findSiblingNode", "(", "doubleBlackNode", ")", ".", "get", "(", ")", ";", "if", "(", "siblingNode", ".", "color", "=", "=", "Color", ".", "BLACK", ")", "{", "if", "(", "isLeftChild", "(", "doubleBlackNode", ")", "&", "&", "siblingNode", ".", "right", ".", "color", "=", "=", "Color", ".", "BLACK", "&", "&", "siblingNode", ".", "left", ".", "color", "=", "=", "Color", ".", "RED", ")", "{", "rightRotate", "(", "siblingNode", ".", "left", ",", "true", ")", ";", "}", "else", "if", "(", "!", "isLeftChild", "(", "doubleBlackNode", ")", "&", "&", "siblingNode", ".", "left", ".", "color", "=", "=", "Color", ".", "BLACK", "&", "&", "siblingNode", ".", "right", ".", "color", "=", "=", "Color", ".", "RED", ")", "{", "leftRotate", "(", "siblingNode", ".", "right", ",", "true", ")", ";", "}", "}", "deleteCase6", "(", "doubleBlackNode", ",", "rootReference", ")", ";", "}", "</s>"]
["<s>", "private", "void", "deleteCase6", "(", "Node", "doubleBlackNode", ",", "AtomicReference", "<", "Node", ">", "rootReference", ")", "{", "Node", "siblingNode", "=", "findSiblingNode", "(", "doubleBlackNode", ")", ".", "get", "(", ")", ";", "siblingNode", ".", "color", "=", "siblingNode", ".", "parent", ".", "color", ";", "siblingNode", ".", "parent", ".", "color", "=", "Color", ".", "BLACK", ";", "if", "(", "isLeftChild", "(", "doubleBlackNode", ")", ")", "{", "siblingNode", ".", "right", ".", "color", "=", "Color", ".", "BLACK", ";", "leftRotate", "(", "siblingNode", ",", "false", ")", ";", "}", "else", "{", "siblingNode", ".", "left", ".", "color", "=", "Color", ".", "BLACK", ";", "rightRotate", "(", "siblingNode", ",", "false", ")", ";", "}", "if", "(", "siblingNode", ".", "parent", "=", "=", "null", ")", "{", "rootReference", ".", "set", "(", "siblingNode", ")", ";", "}", "}", "</s>"]
["<s>", "private", "void", "replaceNode", "(", "Node", "root", ",", "Node", "child", ",", "AtomicReference", "<", "Node", ">", "rootReference", ")", "{", "child", ".", "parent", "=", "root", ".", "parent", ";", "if", "(", "root", ".", "parent", "=", "=", "null", ")", "{", "rootReference", ".", "set", "(", "child", ")", ";", "}", "else", "{", "if", "(", "isLeftChild", "(", "root", ")", ")", "{", "root", ".", "parent", ".", "left", "=", "child", ";", "}", "else", "{", "root", ".", "parent", ".", "right", "=", "child", ";", "}", "}", "}", "</s>"]
["<s>", "private", "void", "printRedBlackTree", "(", "Node", "root", ",", "int", "space", ")", "{", "if", "(", "root", "=", "=", "null", "|", "|", "root", ".", "isNullLeaf", ")", "{", "return", ";", "}", "printRedBlackTree", "(", "root", ".", "right", ",", "space", "+", "<NUM_LIT:5>", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "space", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "\"", "\"", ")", ";", "}", "System", ".", "out", ".", "println", "(", "root", ".", "data", "+", "\"", "\"", "+", "(", "root", ".", "color", "=", "=", "Color", ".", "BLACK", "?", "\"", "<STR_LIT:B>", "\"", ":", "\"", "<STR_LIT>", "\"", ")", ")", ";", "printRedBlackTree", "(", "root", ".", "left", ",", "space", "+", "<NUM_LIT:5>", ")", ";", "}", "</s>"]
["<s>", "private", "boolean", "noRedRedParentChild", "(", "Node", "root", ",", "Color", "parentColor", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", "true", ";", "}", "if", "(", "root", ".", "color", "=", "=", "Color", ".", "RED", "&", "&", "parentColor", "=", "=", "Color", ".", "RED", ")", "{", "return", "false", ";", "}", "return", "noRedRedParentChild", "(", "root", ".", "left", ",", "root", ".", "color", ")", "&", "&", "noRedRedParentChild", "(", "root", ".", "right", ",", "root", ".", "color", ")", ";", "}", "</s>"]
["<s>", "private", "boolean", "checkBlackNodesCount", "(", "Node", "root", ",", "AtomicInteger", "blackCount", ",", "int", "currentCount", ")", "{", "if", "(", "root", ".", "color", "=", "=", "Color", ".", "BLACK", ")", "{", "currentCount", "+", "+", ";", "}", "if", "(", "root", ".", "left", "=", "=", "null", "&", "&", "root", ".", "right", "=", "=", "null", ")", "{", "if", "(", "blackCount", ".", "get", "(", ")", "=", "=", "0", ")", "{", "blackCount", ".", "set", "(", "currentCount", ")", ";", "return", "true", ";", "}", "else", "{", "return", "currentCount", "=", "=", "blackCount", ".", "get", "(", ")", ";", "}", "}", "return", "checkBlackNodesCount", "(", "root", ".", "left", ",", "blackCount", ",", "currentCount", ")", "&", "&", "checkBlackNodesCount", "(", "root", ".", "right", ",", "blackCount", ",", "currentCount", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "Node", "root", "=", "null", ";", "RedBlackTree", "redBlackTree", "=", "new", "RedBlackTree", "(", ")", ";", "root", "=", "redBlackTree", ".", "insert", "(", "root", ",", "<NUM_LIT:10>", ")", ";", "root", "=", "redBlackTree", ".", "insert", "(", "root", ",", "<NUM_LIT:15>", ")", ";", "root", "=", "redBlackTree", ".", "insert", "(", "root", ",", "-", "<NUM_LIT:10>", ")", ";", "root", "=", "redBlackTree", ".", "insert", "(", "root", ",", "<NUM_LIT:20>", ")", ";", "root", "=", "redBlackTree", ".", "insert", "(", "root", ",", "<NUM_LIT:30>", ")", ";", "root", "=", "redBlackTree", ".", "insert", "(", "root", ",", "<NUM_LIT>", ")", ";", "root", "=", "redBlackTree", ".", "insert", "(", "root", ",", "<NUM_LIT>", ")", ";", "root", "=", "redBlackTree", ".", "insert", "(", "root", ",", "-", "<NUM_LIT:15>", ")", ";", "root", "=", "redBlackTree", ".", "insert", "(", "root", ",", "<NUM_LIT>", ")", ";", "root", "=", "redBlackTree", ".", "insert", "(", "root", ",", "<NUM_LIT>", ")", ";", "root", "=", "redBlackTree", ".", "insert", "(", "root", ",", "<NUM_LIT>", ")", ";", "root", "=", "redBlackTree", ".", "insert", "(", "root", ",", "<NUM_LIT:24>", ")", ";", "root", "=", "redBlackTree", ".", "insert", "(", "root", ",", "<NUM_LIT>", ")", ";", "root", "=", "redBlackTree", ".", "insert", "(", "root", ",", "<NUM_LIT>", ")", ";", "root", "=", "redBlackTree", ".", "insert", "(", "root", ",", "<NUM_LIT:32>", ")", ";", "root", "=", "redBlackTree", ".", "insert", "(", "root", ",", "<NUM_LIT>", ")", ";", "root", "=", "redBlackTree", ".", "insert", "(", "root", ",", "<NUM_LIT>", ")", ";", "root", "=", "redBlackTree", ".", "insert", "(", "root", ",", "<NUM_LIT>", ")", ";", "redBlackTree", ".", "printRedBlackTree", "(", "root", ")", ";", "root", "=", "redBlackTree", ".", "delete", "(", "root", ",", "<NUM_LIT>", ")", ";", "System", ".", "out", ".", "println", "(", "redBlackTree", ".", "validateRedBlackTree", "(", "root", ")", ")", ";", "root", "=", "redBlackTree", ".", "delete", "(", "root", ",", "<NUM_LIT>", ")", ";", "System", ".", "out", ".", "println", "(", "redBlackTree", ".", "validateRedBlackTree", "(", "root", ")", ")", ";", "root", "=", "redBlackTree", ".", "delete", "(", "root", ",", "-", "<NUM_LIT:10>", ")", ";", "System", ".", "out", ".", "println", "(", "redBlackTree", ".", "validateRedBlackTree", "(", "root", ")", ")", ";", "root", "=", "redBlackTree", ".", "delete", "(", "root", ",", "<NUM_LIT:15>", ")", ";", "System", ".", "out", ".", "println", "(", "redBlackTree", ".", "validateRedBlackTree", "(", "root", ")", ")", ";", "root", "=", "redBlackTree", ".", "delete", "(", "root", ",", "<NUM_LIT>", ")", ";", "System", ".", "out", ".", "println", "(", "redBlackTree", ".", "validateRedBlackTree", "(", "root", ")", ")", ";", "root", "=", "redBlackTree", ".", "delete", "(", "root", ",", "<NUM_LIT:24>", ")", ";", "System", ".", "out", ".", "println", "(", "redBlackTree", ".", "validateRedBlackTree", "(", "root", ")", ")", ";", "root", "=", "redBlackTree", ".", "delete", "(", "root", ",", "<NUM_LIT>", ")", ";", "System", ".", "out", ".", "println", "(", "redBlackTree", ".", "validateRedBlackTree", "(", "root", ")", ")", ";", "root", "=", "redBlackTree", ".", "delete", "(", "root", ",", "<NUM_LIT:32>", ")", ";", "System", ".", "out", ".", "println", "(", "redBlackTree", ".", "validateRedBlackTree", "(", "root", ")", ")", ";", "root", "=", "redBlackTree", ".", "delete", "(", "root", ",", "<NUM_LIT>", ")", ";", "System", ".", "out", ".", "println", "(", "redBlackTree", ".", "validateRedBlackTree", "(", "root", ")", ")", ";", "root", "=", "redBlackTree", ".", "delete", "(", "root", ",", "<NUM_LIT>", ")", ";", "System", ".", "out", ".", "println", "(", "redBlackTree", ".", "validateRedBlackTree", "(", "root", ")", ")", ";", "root", "=", "redBlackTree", ".", "delete", "(", "root", ",", "<NUM_LIT>", ")", ";", "System", ".", "out", ".", "println", "(", "redBlackTree", ".", "validateRedBlackTree", "(", "root", ")", ")", ";", "root", "=", "redBlackTree", ".", "delete", "(", "root", ",", "<NUM_LIT>", ")", ";", "System", ".", "out", ".", "println", "(", "redBlackTree", ".", "validateRedBlackTree", "(", "root", ")", ")", ";", "root", "=", "redBlackTree", ".", "delete", "(", "root", ",", "-", "<NUM_LIT:15>", ")", ";", "System", ".", "out", ".", "println", "(", "redBlackTree", ".", "validateRedBlackTree", "(", "root", ")", ")", ";", "root", "=", "redBlackTree", ".", "delete", "(", "root", ",", "<NUM_LIT:20>", ")", ";", "System", ".", "out", ".", "println", "(", "redBlackTree", ".", "validateRedBlackTree", "(", "root", ")", ")", ";", "root", "=", "redBlackTree", ".", "delete", "(", "root", ",", "<NUM_LIT>", ")", ";", "System", ".", "out", ".", "println", "(", "redBlackTree", ".", "validateRedBlackTree", "(", "root", ")", ")", ";", "root", "=", "redBlackTree", ".", "delete", "(", "root", ",", "<NUM_LIT>", ")", ";", "System", ".", "out", ".", "println", "(", "redBlackTree", ".", "validateRedBlackTree", "(", "root", ")", ")", ";", "root", "=", "redBlackTree", ".", "delete", "(", "root", ",", "<NUM_LIT:30>", ")", ";", "System", ".", "out", ".", "println", "(", "redBlackTree", ".", "validateRedBlackTree", "(", "root", ")", ")", ";", "root", "=", "redBlackTree", ".", "delete", "(", "root", ",", "<NUM_LIT>", ")", ";", "System", ".", "out", ".", "println", "(", "redBlackTree", ".", "validateRedBlackTree", "(", "root", ")", ")", ";", "root", "=", "redBlackTree", ".", "delete", "(", "root", ",", "<NUM_LIT:10>", ")", ";", "System", ".", "out", ".", "println", "(", "redBlackTree", ".", "validateRedBlackTree", "(", "root", ")", ")", ";", "}", "</s>"]
["<s>", "public", "void", "updateBinaryIndexedTree", "(", "int", "binaryIndexedTree", "[", "]", ",", "int", "val", ",", "int", "index", ")", "{", "while", "(", "index", "<", "binaryIndexedTree", ".", "length", ")", "{", "binaryIndexedTree", "[", "index", "]", "+", "=", "val", ";", "index", "=", "getNext", "(", "index", ")", ";", "}", "}", "</s>"]
["<s>", "public", "int", "getSum", "(", "int", "binaryIndexedTree", "[", "]", ",", "int", "index", ")", "{", "index", "=", "index", "+", "1", ";", "int", "sum", "=", "0", ";", "while", "(", "index", ">", "0", ")", "{", "sum", "+", "=", "binaryIndexedTree", "[", "index", "]", ";", "index", "=", "getParent", "(", "index", ")", ";", "}", "return", "sum", ";", "}", "</s>"]
["<s>", "public", "int", "[", "]", "createTree", "(", "int", "input", "[", "]", ")", "{", "int", "binaryIndexedTree", "[", "]", "=", "new", "int", "[", "input", ".", "length", "+", "1", "]", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "=", "input", ".", "length", ";", "i", "+", "+", ")", "{", "updateBinaryIndexedTree", "(", "binaryIndexedTree", ",", "input", "[", "i", "-", "1", "]", ",", "i", ")", ";", "}", "return", "binaryIndexedTree", ";", "}", "</s>"]
["<s>", "private", "int", "getParent", "(", "int", "index", ")", "{", "return", "index", "-", "(", "index", "&", "-", "index", ")", ";", "}", "</s>"]
["<s>", "private", "int", "getNext", "(", "int", "index", ")", "{", "return", "index", "+", "(", "index", "&", "-", "index", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input", "[", "]", "=", "{", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:7>", "}", ";", "FenwickTree", "ft", "=", "new", "FenwickTree", "(", ")", ";", "int", "binaryIndexedTree", "[", "]", "=", "ft", ".", "createTree", "(", "input", ")", ";", "assert", "1", "=", "=", "ft", ".", "getSum", "(", "binaryIndexedTree", ",", "0", ")", ";", "assert", "<NUM_LIT:3>", "=", "=", "ft", ".", "getSum", "(", "binaryIndexedTree", ",", "1", ")", ";", "assert", "<NUM_LIT:6>", "=", "=", "ft", ".", "getSum", "(", "binaryIndexedTree", ",", "<NUM_LIT:2>", ")", ";", "assert", "<NUM_LIT:10>", "=", "=", "ft", ".", "getSum", "(", "binaryIndexedTree", ",", "<NUM_LIT:3>", ")", ";", "assert", "<NUM_LIT:15>", "=", "=", "ft", ".", "getSum", "(", "binaryIndexedTree", ",", "<NUM_LIT:4>", ")", ";", "assert", "<NUM_LIT>", "=", "=", "ft", ".", "getSum", "(", "binaryIndexedTree", ",", "<NUM_LIT:5>", ")", ";", "assert", "<NUM_LIT>", "=", "=", "ft", ".", "getSum", "(", "binaryIndexedTree", ",", "<NUM_LIT:6>", ")", ";", "}", "</s>"]
["<s>", "public", "Node", "search", "(", "Node", "root", ",", "int", "key", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", "null", ";", "}", "if", "(", "root", ".", "data", "=", "=", "key", ")", "{", "return", "root", ";", "}", "else", "if", "(", "root", ".", "data", "<", "key", ")", "{", "return", "search", "(", "root", ".", "right", ",", "key", ")", ";", "}", "else", "{", "return", "search", "(", "root", ".", "left", ",", "key", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "BinaryTree", "bt", "=", "new", "BinaryTree", "(", ")", ";", "Node", "root", "=", "null", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:10>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:20>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "-", "<NUM_LIT:10>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:15>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "0", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "-", "1", ",", "root", ")", ";", "BSTSearch", "bstSearch", "=", "new", "BSTSearch", "(", ")", ";", "Node", "result", "=", "bstSearch", ".", "search", "(", "root", ",", "<NUM_LIT>", ")", ";", "assert", "result", ".", "data", "=", "=", "<NUM_LIT>", ";", "result", "=", "bstSearch", ".", "search", "(", "root", ",", "-", "1", ")", ";", "assert", "result", ".", "data", "=", "=", "<NUM_LIT>", ";", "result", "=", "bstSearch", ".", "search", "(", "root", ",", "<NUM_LIT:11>", ")", ";", "assert", "result", "=", "=", "null", ";", "}", "</s>"]
["<s>", "public", "int", "cover", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", "0", ";", "}", "if", "(", "root", ".", "left", "=", "=", "null", "&", "&", "root", ".", "right", "=", "=", "null", ")", "{", "return", "0", ";", "}", "if", "(", "root", ".", "lis", "!", "=", "-", "1", ")", "{", "return", "root", ".", "lis", ";", "}", "int", "inclRoot", "=", "1", "+", "cover", "(", "root", ".", "left", ")", "+", "cover", "(", "root", ".", "right", ")", ";", "int", "exclRoot", "=", "0", ";", "if", "(", "root", ".", "left", "!", "=", "null", ")", "{", "exclRoot", "+", "=", "(", "1", "+", "cover", "(", "root", ".", "left", ".", "left", ")", "+", "cover", "(", "root", ".", "left", ".", "right", ")", ")", ";", "}", "if", "(", "root", ".", "right", "!", "=", "null", ")", "{", "exclRoot", "+", "=", "(", "1", "+", "cover", "(", "root", ".", "right", ".", "left", ")", "+", "cover", "(", "root", ".", "right", ".", "right", ")", ")", ";", "}", "root", ".", "lis", "=", "Math", ".", "min", "(", "inclRoot", ",", "exclRoot", ")", ";", "return", "root", ".", "lis", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "BinaryTree", "bt", "=", "new", "BinaryTree", "(", ")", ";", "Node", "root", "=", "null", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:10>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "0", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "-", "<NUM_LIT:5>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:5>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:7>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:3>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:30>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "-", "<NUM_LIT:8>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "-", "<NUM_LIT:2>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "-", "1", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "root", ")", ";", "VertexCoverBinaryTreeDP", "vc", "=", "new", "VertexCoverBinaryTreeDP", "(", ")", ";", "System", ".", "out", ".", "println", "(", "vc", ".", "cover", "(", "root", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "[", "]", "createSegmentTree", "(", "int", "input", "[", "]", ")", "{", "NextPowerOf2", "np2", "=", "new", "NextPowerOf2", "(", ")", ";", "int", "nextPowOfTwo", "=", "np2", ".", "nextPowerOf2", "(", "input", ".", "length", ")", ";", "int", "segmentTree", "[", "]", "=", "new", "int", "[", "nextPowOfTwo", "*", "<NUM_LIT:2>", "-", "1", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "segmentTree", ".", "length", ";", "i", "+", "+", ")", "{", "segmentTree", "[", "i", "]", "=", "Integer", ".", "MAX_VALUE", ";", "}", "constructMinSegmentTree", "(", "segmentTree", ",", "input", ",", "0", ",", "input", ".", "length", "-", "1", ",", "0", ")", ";", "return", "segmentTree", ";", "}", "</s>"]
["<s>", "public", "void", "updateSegmentTree", "(", "int", "input", "[", "]", ",", "int", "segmentTree", "[", "]", ",", "int", "index", ",", "int", "delta", ")", "{", "input", "[", "index", "]", "+", "=", "delta", ";", "updateSegmentTree", "(", "segmentTree", ",", "index", ",", "delta", ",", "0", ",", "input", ".", "length", "-", "1", ",", "0", ")", ";", "}", "</s>"]
["<s>", "public", "void", "updateSegmentTreeRange", "(", "int", "input", "[", "]", ",", "int", "segmentTree", "[", "]", ",", "int", "startRange", ",", "int", "endRange", ",", "int", "delta", ")", "{", "for", "(", "int", "i", "=", "startRange", ";", "i", "<", "=", "endRange", ";", "i", "+", "+", ")", "{", "input", "[", "i", "]", "+", "=", "delta", ";", "}", "updateSegmentTreeRange", "(", "segmentTree", ",", "startRange", ",", "endRange", ",", "delta", ",", "0", ",", "input", ".", "length", "-", "1", ",", "0", ")", ";", "}", "</s>"]
["<s>", "public", "int", "rangeMinimumQuery", "(", "int", "[", "]", "segmentTree", ",", "int", "qlow", ",", "int", "qhigh", ",", "int", "len", ")", "{", "return", "rangeMinimumQuery", "(", "segmentTree", ",", "0", ",", "len", "-", "1", ",", "qlow", ",", "qhigh", ",", "0", ")", ";", "}", "</s>"]
["<s>", "public", "void", "updateSegmentTreeRangeLazy", "(", "int", "input", "[", "]", ",", "int", "segmentTree", "[", "]", ",", "int", "lazy", "[", "]", ",", "int", "startRange", ",", "int", "endRange", ",", "int", "delta", ")", "{", "updateSegmentTreeRangeLazy", "(", "segmentTree", ",", "lazy", ",", "startRange", ",", "endRange", ",", "delta", ",", "0", ",", "input", ".", "length", "-", "1", ",", "0", ")", ";", "}", "</s>"]
["<s>", "public", "int", "rangeMinimumQueryLazy", "(", "int", "segmentTree", "[", "]", ",", "int", "lazy", "[", "]", ",", "int", "qlow", ",", "int", "qhigh", ",", "int", "len", ")", "{", "return", "rangeMinimumQueryLazy", "(", "segmentTree", ",", "lazy", ",", "qlow", ",", "qhigh", ",", "0", ",", "len", "-", "1", ",", "0", ")", ";", "}", "</s>"]
["<s>", "private", "void", "constructMinSegmentTree", "(", "int", "segmentTree", "[", "]", ",", "int", "input", "[", "]", ",", "int", "low", ",", "int", "high", ",", "int", "pos", ")", "{", "if", "(", "low", "=", "=", "high", ")", "{", "segmentTree", "[", "pos", "]", "=", "input", "[", "low", "]", ";", "return", ";", "}", "int", "mid", "=", "(", "low", "+", "high", ")", "/", "<NUM_LIT:2>", ";", "constructMinSegmentTree", "(", "segmentTree", ",", "input", ",", "low", ",", "mid", ",", "<NUM_LIT:2>", "*", "pos", "+", "1", ")", ";", "constructMinSegmentTree", "(", "segmentTree", ",", "input", ",", "mid", "+", "1", ",", "high", ",", "<NUM_LIT:2>", "*", "pos", "+", "<NUM_LIT:2>", ")", ";", "segmentTree", "[", "pos", "]", "=", "Math", ".", "min", "(", "segmentTree", "[", "<NUM_LIT:2>", "*", "pos", "+", "1", "]", ",", "segmentTree", "[", "<NUM_LIT:2>", "*", "pos", "+", "<NUM_LIT:2>", "]", ")", ";", "}", "</s>"]
["<s>", "private", "void", "updateSegmentTree", "(", "int", "segmentTree", "[", "]", ",", "int", "index", ",", "int", "delta", ",", "int", "low", ",", "int", "high", ",", "int", "pos", ")", "{", "if", "(", "index", "<", "low", "|", "|", "index", ">", "high", ")", "{", "return", ";", "}", "if", "(", "low", "=", "=", "high", ")", "{", "segmentTree", "[", "pos", "]", "+", "=", "delta", ";", "return", ";", "}", "int", "mid", "=", "(", "low", "+", "high", ")", "/", "<NUM_LIT:2>", ";", "updateSegmentTree", "(", "segmentTree", ",", "index", ",", "delta", ",", "low", ",", "mid", ",", "<NUM_LIT:2>", "*", "pos", "+", "1", ")", ";", "updateSegmentTree", "(", "segmentTree", ",", "index", ",", "delta", ",", "mid", "+", "1", ",", "high", ",", "<NUM_LIT:2>", "*", "pos", "+", "<NUM_LIT:2>", ")", ";", "segmentTree", "[", "pos", "]", "=", "Math", ".", "min", "(", "segmentTree", "[", "<NUM_LIT:2>", "*", "pos", "+", "1", "]", ",", "segmentTree", "[", "<NUM_LIT:2>", "*", "pos", "+", "<NUM_LIT:2>", "]", ")", ";", "}", "</s>"]
["<s>", "private", "void", "updateSegmentTreeRange", "(", "int", "segmentTree", "[", "]", ",", "int", "startRange", ",", "int", "endRange", ",", "int", "delta", ",", "int", "low", ",", "int", "high", ",", "int", "pos", ")", "{", "if", "(", "low", ">", "high", "|", "|", "startRange", ">", "high", "|", "|", "endRange", "<", "low", ")", "{", "return", ";", "}", "if", "(", "low", "=", "=", "high", ")", "{", "segmentTree", "[", "pos", "]", "+", "=", "delta", ";", "return", ";", "}", "int", "middle", "=", "(", "low", "+", "high", ")", "/", "<NUM_LIT:2>", ";", "updateSegmentTreeRange", "(", "segmentTree", ",", "startRange", ",", "endRange", ",", "delta", ",", "low", ",", "middle", ",", "<NUM_LIT:2>", "*", "pos", "+", "1", ")", ";", "updateSegmentTreeRange", "(", "segmentTree", ",", "startRange", ",", "endRange", ",", "delta", ",", "middle", "+", "1", ",", "high", ",", "<NUM_LIT:2>", "*", "pos", "+", "<NUM_LIT:2>", ")", ";", "segmentTree", "[", "pos", "]", "=", "Math", ".", "min", "(", "segmentTree", "[", "<NUM_LIT:2>", "*", "pos", "+", "1", "]", ",", "segmentTree", "[", "<NUM_LIT:2>", "*", "pos", "+", "<NUM_LIT:2>", "]", ")", ";", "}", "</s>"]
["<s>", "private", "int", "rangeMinimumQuery", "(", "int", "segmentTree", "[", "]", ",", "int", "low", ",", "int", "high", ",", "int", "qlow", ",", "int", "qhigh", ",", "int", "pos", ")", "{", "if", "(", "qlow", "<", "=", "low", "&", "&", "qhigh", ">", "=", "high", ")", "{", "return", "segmentTree", "[", "pos", "]", ";", "}", "if", "(", "qlow", ">", "high", "|", "|", "qhigh", "<", "low", ")", "{", "return", "Integer", ".", "MAX_VALUE", ";", "}", "int", "mid", "=", "(", "low", "+", "high", ")", "/", "<NUM_LIT:2>", ";", "return", "Math", ".", "min", "(", "rangeMinimumQuery", "(", "segmentTree", ",", "low", ",", "mid", ",", "qlow", ",", "qhigh", ",", "<NUM_LIT:2>", "*", "pos", "+", "1", ")", ",", "rangeMinimumQuery", "(", "segmentTree", ",", "mid", "+", "1", ",", "high", ",", "qlow", ",", "qhigh", ",", "<NUM_LIT:2>", "*", "pos", "+", "<NUM_LIT:2>", ")", ")", ";", "}", "</s>"]
["<s>", "private", "void", "updateSegmentTreeRangeLazy", "(", "int", "segmentTree", "[", "]", ",", "int", "lazy", "[", "]", ",", "int", "startRange", ",", "int", "endRange", ",", "int", "delta", ",", "int", "low", ",", "int", "high", ",", "int", "pos", ")", "{", "if", "(", "low", ">", "high", ")", "{", "return", ";", "}", "if", "(", "lazy", "[", "pos", "]", "!", "=", "0", ")", "{", "segmentTree", "[", "pos", "]", "+", "=", "lazy", "[", "pos", "]", ";", "if", "(", "low", "!", "=", "high", ")", "{", "lazy", "[", "<NUM_LIT:2>", "*", "pos", "+", "1", "]", "+", "=", "lazy", "[", "pos", "]", ";", "lazy", "[", "<NUM_LIT:2>", "*", "pos", "+", "<NUM_LIT:2>", "]", "+", "=", "lazy", "[", "pos", "]", ";", "}", "lazy", "[", "pos", "]", "=", "0", ";", "}", "if", "(", "startRange", ">", "high", "|", "|", "endRange", "<", "low", ")", "{", "return", ";", "}", "if", "(", "startRange", "<", "=", "low", "&", "&", "endRange", ">", "=", "high", ")", "{", "segmentTree", "[", "pos", "]", "+", "=", "delta", ";", "if", "(", "low", "!", "=", "high", ")", "{", "lazy", "[", "<NUM_LIT:2>", "*", "pos", "+", "1", "]", "+", "=", "delta", ";", "lazy", "[", "<NUM_LIT:2>", "*", "pos", "+", "<NUM_LIT:2>", "]", "+", "=", "delta", ";", "}", "return", ";", "}", "int", "mid", "=", "(", "low", "+", "high", ")", "/", "<NUM_LIT:2>", ";", "updateSegmentTreeRangeLazy", "(", "segmentTree", ",", "lazy", ",", "startRange", ",", "endRange", ",", "delta", ",", "low", ",", "mid", ",", "<NUM_LIT:2>", "*", "pos", "+", "1", ")", ";", "updateSegmentTreeRangeLazy", "(", "segmentTree", ",", "lazy", ",", "startRange", ",", "endRange", ",", "delta", ",", "mid", "+", "1", ",", "high", ",", "<NUM_LIT:2>", "*", "pos", "+", "<NUM_LIT:2>", ")", ";", "segmentTree", "[", "pos", "]", "=", "Math", ".", "min", "(", "segmentTree", "[", "<NUM_LIT:2>", "*", "pos", "+", "1", "]", ",", "segmentTree", "[", "<NUM_LIT:2>", "*", "pos", "+", "<NUM_LIT:2>", "]", ")", ";", "}", "</s>"]
["<s>", "private", "int", "rangeMinimumQueryLazy", "(", "int", "segmentTree", "[", "]", ",", "int", "lazy", "[", "]", ",", "int", "qlow", ",", "int", "qhigh", ",", "int", "low", ",", "int", "high", ",", "int", "pos", ")", "{", "if", "(", "low", ">", "high", ")", "{", "return", "Integer", ".", "MAX_VALUE", ";", "}", "if", "(", "lazy", "[", "pos", "]", "!", "=", "0", ")", "{", "segmentTree", "[", "pos", "]", "+", "=", "lazy", "[", "pos", "]", ";", "if", "(", "low", "!", "=", "high", ")", "{", "lazy", "[", "<NUM_LIT:2>", "*", "pos", "+", "1", "]", "+", "=", "lazy", "[", "pos", "]", ";", "lazy", "[", "<NUM_LIT:2>", "*", "pos", "+", "<NUM_LIT:2>", "]", "+", "=", "lazy", "[", "pos", "]", ";", "}", "lazy", "[", "pos", "]", "=", "0", ";", "}", "if", "(", "qlow", ">", "high", "|", "|", "qhigh", "<", "low", ")", "{", "return", "Integer", ".", "MAX_VALUE", ";", "}", "if", "(", "qlow", "<", "=", "low", "&", "&", "qhigh", ">", "=", "high", ")", "{", "return", "segmentTree", "[", "pos", "]", ";", "}", "int", "mid", "=", "(", "low", "+", "high", ")", "/", "<NUM_LIT:2>", ";", "return", "Math", ".", "min", "(", "rangeMinimumQueryLazy", "(", "segmentTree", ",", "lazy", ",", "qlow", ",", "qhigh", ",", "low", ",", "mid", ",", "<NUM_LIT:2>", "*", "pos", "+", "1", ")", ",", "rangeMinimumQueryLazy", "(", "segmentTree", ",", "lazy", ",", "qlow", ",", "qhigh", ",", "mid", "+", "1", ",", "high", ",", "<NUM_LIT:2>", "*", "pos", "+", "<NUM_LIT:2>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "SegmentTreeMinimumRangeQuery", "st", "=", "new", "SegmentTreeMinimumRangeQuery", "(", ")", ";", "int", "input", "[", "]", "=", "{", "0", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:2>", ",", "1", ",", "<NUM_LIT:6>", ",", "-", "1", "}", ";", "int", "segTree", "[", "]", "=", "st", ".", "createSegmentTree", "(", "input", ")", ";", "assert", "0", "=", "=", "st", ".", "rangeMinimumQuery", "(", "segTree", ",", "0", ",", "<NUM_LIT:3>", ",", "input", ".", "length", ")", ";", "assert", "1", "=", "=", "st", ".", "rangeMinimumQuery", "(", "segTree", ",", "1", ",", "<NUM_LIT:5>", ",", "input", ".", "length", ")", ";", "assert", "-", "1", "=", "=", "st", ".", "rangeMinimumQuery", "(", "segTree", ",", "1", ",", "<NUM_LIT:6>", ",", "input", ".", "length", ")", ";", "st", ".", "updateSegmentTree", "(", "input", ",", "segTree", ",", "<NUM_LIT:2>", ",", "1", ")", ";", "assert", "<NUM_LIT:2>", "=", "=", "st", ".", "rangeMinimumQuery", "(", "segTree", ",", "1", ",", "<NUM_LIT:3>", ",", "input", ".", "length", ")", ";", "st", ".", "updateSegmentTreeRange", "(", "input", ",", "segTree", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:5>", ",", "-", "<NUM_LIT:2>", ")", ";", "assert", "-", "1", "=", "=", "st", ".", "rangeMinimumQuery", "(", "segTree", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ",", "input", ".", "length", ")", ";", "assert", "0", "=", "=", "st", ".", "rangeMinimumQuery", "(", "segTree", ",", "0", ",", "<NUM_LIT:3>", ",", "input", ".", "length", ")", ";", "int", "input1", "[", "]", "=", "{", "-", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:4>", ",", "1", ",", "<NUM_LIT:7>", ",", "1", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:2>", "}", ";", "int", "segTree1", "[", "]", "=", "st", ".", "createSegmentTree", "(", "input1", ")", ";", "int", "lazy1", "[", "]", "=", "new", "int", "[", "segTree", ".", "length", "]", ";", "st", ".", "updateSegmentTreeRangeLazy", "(", "input1", ",", "segTree1", ",", "lazy1", ",", "0", ",", "<NUM_LIT:3>", ",", "1", ")", ";", "st", ".", "updateSegmentTreeRangeLazy", "(", "input1", ",", "segTree1", ",", "lazy1", ",", "0", ",", "0", ",", "<NUM_LIT:2>", ")", ";", "assert", "1", "=", "=", "st", ".", "rangeMinimumQueryLazy", "(", "segTree1", ",", "lazy1", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:5>", ",", "input1", ".", "length", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "isSumTree", "(", "Node", "root", ")", "{", "Count", "count", "=", "new", "Count", "(", ")", ";", "return", "isSumTree", "(", "root", ",", "count", ")", ";", "}", "</s>"]
["<s>", "private", "boolean", "isSumTree", "(", "Node", "root", ",", "Count", "count", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", "true", ";", "}", "if", "(", "root", ".", "left", "=", "=", "null", "&", "&", "root", ".", "right", "=", "=", "null", ")", "{", "count", ".", "size", "=", "root", ".", "data", ";", "return", "true", ";", "}", "Count", "leftCount", "=", "new", "Count", "(", ")", ";", "Count", "rightCount", "=", "new", "Count", "(", ")", ";", "boolean", "isLeft", "=", "isSumTree", "(", "root", ".", "left", ",", "leftCount", ")", ";", "boolean", "isRight", "=", "isSumTree", "(", "root", ".", "right", ",", "rightCount", ")", ";", "count", ".", "size", "=", "root", ".", "data", "+", "leftCount", ".", "size", "+", "rightCount", ".", "size", ";", "return", "isLeft", "&", "&", "isRight", "&", "&", "root", ".", "data", "=", "=", "(", "leftCount", ".", "size", "+", "rightCount", ".", "size", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "ConstructTreeFromInOrderPreOrder", "ctf", "=", "new", "ConstructTreeFromInOrderPreOrder", "(", ")", ";", "int", "inorder", "[", "]", "=", "{", "<NUM_LIT:4>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT>", ",", "<NUM_LIT:2>", "}", ";", "int", "preorder", "[", "]", "=", "{", "<NUM_LIT>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT:2>", "}", ";", "Node", "root", "=", "ctf", ".", "createTree", "(", "inorder", ",", "preorder", ")", ";", "SumTree", "st", "=", "new", "SumTree", "(", ")", ";", "System", ".", "out", ".", "println", "(", "st", ".", "isSumTree", "(", "root", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "String", "toString", "(", ")", "{", "return", "\"", "<STR_LIT>", "\"", "+", "\"", "<STR_LIT:=>", "\"", "+", "max", "+", "\"", "<STR_LIT>", "\"", "+", "low", "+", "\"", "<STR_LIT>", "\"", "+", "high", "+", "<CHAR_LIT:}>", ";", "}", "</s>"]
["<s>", "public", "InternalNode", "insert", "(", "InternalNode", "root", ",", "int", "low", ",", "int", "high", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "InternalNode", "node", "=", "new", "InternalNode", "(", ")", ";", "node", ".", "low", "=", "low", ";", "node", ".", "high", "=", "high", ";", "node", ".", "max", "=", "high", ";", "return", "node", ";", "}", "if", "(", "low", "<", "root", ".", "low", ")", "{", "root", ".", "left", "=", "insert", "(", "root", ".", "left", ",", "low", ",", "high", ")", ";", "}", "else", "{", "root", ".", "right", "=", "insert", "(", "root", ".", "right", ",", "low", ",", "high", ")", ";", "}", "root", ".", "max", "=", "Math", ".", "max", "(", "root", ".", "high", ",", "high", ")", ";", "return", "root", ";", "}", "</s>"]
["<s>", "public", "InternalNode", "isOverlap", "(", "InternalNode", "root", ",", "int", "low", ",", "int", "high", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", "null", ";", "}", "if", "(", "root", ".", "high", ">", "=", "low", "&", "&", "root", ".", "low", "<", "=", "high", ")", "{", "return", "root", ";", "}", "if", "(", "root", ".", "left", "!", "=", "null", "&", "&", "root", ".", "left", ".", "max", ">", "low", ")", "{", "return", "isOverlap", "(", "root", ".", "left", ",", "low", ",", "high", ")", ";", "}", "else", "{", "return", "isOverlap", "(", "root", ".", "right", ",", "low", ",", "high", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "IntervalTree", "it", "=", "new", "IntervalTree", "(", ")", ";", "InternalNode", "root", "=", "null", ";", "root", "=", "it", ".", "insert", "(", "root", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:15>", ")", ";", "root", "=", "it", ".", "insert", "(", "root", ",", "<NUM_LIT:11>", ",", "<NUM_LIT>", ")", ";", "root", "=", "it", ".", "insert", "(", "root", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ")", ";", "root", "=", "it", ".", "insert", "(", "root", ",", "<NUM_LIT:20>", ",", "<NUM_LIT>", ")", ";", "root", "=", "it", ".", "insert", "(", "root", ",", "0", ",", "<NUM_LIT:7>", ")", ";", "System", ".", "out", ".", "println", "(", "it", ".", "isOverlap", "(", "root", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:9>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "it", ".", "isOverlap", "(", "root", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "it", ".", "isOverlap", "(", "root", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "it", ".", "isOverlap", "(", "root", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "it", ".", "isOverlap", "(", "root", ",", "<NUM_LIT:12>", ",", "<NUM_LIT>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "it", ".", "isOverlap", "(", "root", ",", "<NUM_LIT:24>", ",", "<NUM_LIT>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "isBST", "(", "int", "input", "[", "]", ")", "{", "int", "max", "=", "Integer", ".", "MAX_VALUE", ";", "int", "min", "=", "Integer", ".", "MIN_VALUE", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", "-", "1", ";", "i", "+", "+", ")", "{", "if", "(", "input", "[", "i", "]", ">", "min", "&", "&", "input", "[", "i", "]", "<", "max", ")", "{", "if", "(", "input", "[", "i", "+", "1", "]", "<", "input", "[", "i", "]", ")", "{", "max", "=", "input", "[", "i", "]", ";", "}", "else", "{", "min", "=", "input", "[", "i", "]", ";", "}", "}", "else", "{", "return", "false", ";", "}", "}", "if", "(", "input", "[", "input", ".", "length", "-", "1", "]", "<", "max", "&", "&", "input", "[", "input", ".", "length", "-", "1", "]", ">", "min", ")", "{", "return", "true", ";", "}", "else", "{", "return", "false", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input", "[", "]", "=", "{", "<NUM_LIT:20>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT>", ",", "<NUM_LIT:15>", ",", "<NUM_LIT>", "}", ";", "BSTOneChildPreOrderTraversal", "boc", "=", "new", "BSTOneChildPreOrderTraversal", "(", ")", ";", "System", ".", "out", ".", "println", "(", "boc", ".", "isBST", "(", "input", ")", ")", ";", "}", "</s>"]
["<s>", "private", "Node", "leftRotate", "(", "Node", "root", ")", "{", "Node", "newRoot", "=", "root", ".", "right", ";", "root", ".", "right", "=", "root", ".", "right", ".", "left", ";", "newRoot", ".", "left", "=", "root", ";", "root", ".", "height", "=", "setHeight", "(", "root", ")", ";", "root", ".", "size", "=", "setSize", "(", "root", ")", ";", "newRoot", ".", "height", "=", "setHeight", "(", "newRoot", ")", ";", "newRoot", ".", "size", "=", "setSize", "(", "newRoot", ")", ";", "return", "newRoot", ";", "}", "</s>"]
["<s>", "private", "Node", "rightRotate", "(", "Node", "root", ")", "{", "Node", "newRoot", "=", "root", ".", "left", ";", "root", ".", "left", "=", "root", ".", "left", ".", "right", ";", "newRoot", ".", "right", "=", "root", ";", "root", ".", "height", "=", "setHeight", "(", "root", ")", ";", "root", ".", "size", "=", "setSize", "(", "root", ")", ";", "newRoot", ".", "height", "=", "setHeight", "(", "newRoot", ")", ";", "newRoot", ".", "size", "=", "setSize", "(", "newRoot", ")", ";", "return", "newRoot", ";", "}", "</s>"]
["<s>", "private", "int", "setHeight", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", "0", ";", "}", "return", "1", "+", "Math", ".", "max", "(", "(", "root", ".", "left", "!", "=", "null", "?", "root", ".", "left", ".", "height", ":", "0", ")", ",", "(", "root", ".", "right", "!", "=", "null", "?", "root", ".", "right", ".", "height", ":", "0", ")", ")", ";", "}", "</s>"]
["<s>", "private", "int", "height", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", "0", ";", "}", "else", "{", "return", "root", ".", "height", ";", "}", "}", "</s>"]
["<s>", "private", "int", "setSize", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", "0", ";", "}", "return", "1", "+", "Math", ".", "max", "(", "(", "root", ".", "left", "!", "=", "null", "?", "root", ".", "left", ".", "size", ":", "0", ")", ",", "(", "root", ".", "right", "!", "=", "null", "?", "root", ".", "right", ".", "size", ":", "0", ")", ")", ";", "}", "</s>"]
["<s>", "private", "Node", "insert", "(", "Node", "root", ",", "int", "data", ",", "int", "count", "[", "]", ",", "int", "pos", ",", "int", "val", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "count", "[", "pos", "]", "=", "val", ";", "return", "Node", ".", "newNode", "(", "data", ")", ";", "}", "if", "(", "root", ".", "data", "<", "=", "data", ")", "{", "val", "+", "+", ";", "if", "(", "root", ".", "left", "!", "=", "null", ")", "{", "val", "+", "=", "root", ".", "left", ".", "size", ";", "}", "root", ".", "right", "=", "insert", "(", "root", ".", "right", ",", "data", ",", "count", ",", "pos", ",", "val", ")", ";", "}", "else", "{", "root", ".", "left", "=", "insert", "(", "root", ".", "left", ",", "data", ",", "count", ",", "pos", ",", "val", ")", ";", "}", "if", "(", "height", "(", "root", ".", "left", ")", "-", "height", "(", "root", ".", "right", ")", ">", "1", ")", "{", "if", "(", "height", "(", "root", ".", "left", ".", "left", ")", ">", "=", "height", "(", "root", ".", "left", ".", "right", ")", ")", "{", "root", "=", "rightRotate", "(", "root", ")", ";", "}", "else", "{", "root", ".", "left", "=", "leftRotate", "(", "root", ".", "left", ")", ";", "root", "=", "rightRotate", "(", "root", ")", ";", "}", "}", "else", "if", "(", "height", "(", "root", ".", "right", ")", "-", "height", "(", "root", ".", "left", ")", ">", "1", ")", "{", "if", "(", "height", "(", "root", ".", "right", ".", "right", ")", ">", "=", "height", "(", "root", ".", "right", ".", "left", ")", ")", "{", "root", "=", "leftRotate", "(", "root", ")", ";", "}", "else", "{", "root", ".", "right", "=", "rightRotate", "(", "root", ".", "right", ")", ";", "root", "=", "leftRotate", "(", "root", ")", ";", "}", "}", "else", "{", "root", ".", "height", "=", "setHeight", "(", "root", ")", ";", "root", ".", "size", "=", "setSize", "(", "root", ")", ";", "}", "return", "root", ";", "}", "</s>"]
["<s>", "public", "int", "[", "]", "count", "(", "int", "input", "[", "]", ")", "{", "int", "count", "[", "]", "=", "new", "int", "[", "input", ".", "length", "]", ";", "Node", "root", "=", "null", ";", "for", "(", "int", "i", "=", "input", ".", "length", "-", "1", ";", "i", ">", "=", "0", ";", "i", "-", "-", ")", "{", "root", "=", "insert", "(", "root", ",", "input", "[", "i", "]", ",", "count", ",", "i", ",", "0", ")", ";", "}", "return", "count", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input", "[", "]", "=", "{", "<NUM_LIT:12>", ",", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "0", ",", "<NUM_LIT:11>", ",", "<NUM_LIT:4>", "}", ";", "CountNumberOfSmallerElementOnRight", "cns", "=", "new", "CountNumberOfSmallerElementOnRight", "(", ")", ";", "int", "count", "[", "]", "=", "cns", ".", "count", "(", "input", ")", ";", "for", "(", "int", "c", ":", "count", ")", "{", "System", ".", "out", ".", "print", "(", "c", "+", "\"", "\"", ")", ";", "}", "System", ".", "out", ".", "println", "(", ")", ";", "int", "input1", "[", "]", "=", "{", "<NUM_LIT:5>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:2>", ",", "1", "}", ";", "int", "count1", "[", "]", "=", "cns", ".", "count", "(", "input1", ")", ";", "for", "(", "int", "c", ":", "count1", ")", "{", "System", ".", "out", ".", "print", "(", "c", "+", "\"", "\"", ")", ";", "}", "System", ".", "out", ".", "println", "(", ")", ";", "int", "input2", "[", "]", "=", "{", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", "}", ";", "int", "count2", "[", "]", "=", "cns", ".", "count", "(", "input2", ")", ";", "for", "(", "int", "c", ":", "count2", ")", "{", "System", ".", "out", ".", "print", "(", "c", "+", "\"", "\"", ")", ";", "}", "}", "</s>"]
["<s>", "public", "void", "connect", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", ";", "}", "if", "(", "root", ".", "left", "!", "=", "null", "&", "&", "root", ".", "right", "!", "=", "null", ")", "{", "root", ".", "left", ".", "next", "=", "root", ".", "right", ";", "}", "if", "(", "root", ".", "right", "!", "=", "null", ")", "{", "root", ".", "right", ".", "next", "=", "findRightSibling", "(", "root", ".", "next", ")", ";", "}", "else", "if", "(", "root", ".", "left", "!", "=", "null", ")", "{", "root", ".", "left", ".", "next", "=", "findRightSibling", "(", "root", ".", "next", ")", ";", "}", "connect", "(", "root", ".", "left", ")", ";", "connect", "(", "root", ".", "right", ")", ";", "}", "</s>"]
["<s>", "public", "void", "print", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", ";", "}", "Node", "temp", "=", "root", ";", "while", "(", "temp", "!", "=", "null", ")", "{", "System", ".", "out", ".", "println", "(", "temp", ".", "data", ")", ";", "temp", "=", "temp", ".", "next", ";", "}", "while", "(", "root", "!", "=", "null", ")", "{", "if", "(", "root", ".", "left", "!", "=", "null", ")", "{", "print", "(", "root", ".", "left", ")", ";", "break", ";", "}", "else", "if", "(", "root", ".", "right", "!", "=", "null", ")", "{", "print", "(", "root", ".", "right", ")", ";", "break", ";", "}", "else", "{", "root", "=", "root", ".", "next", ";", "}", "}", "}", "</s>"]
["<s>", "private", "Node", "findRightSibling", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", "null", ";", "}", "if", "(", "root", ".", "left", "!", "=", "null", ")", "{", "return", "root", ".", "left", ";", "}", "else", "if", "(", "root", ".", "right", "!", "=", "null", ")", "{", "return", "root", ".", "right", ";", "}", "return", "findRightSibling", "(", "root", ".", "next", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "BinaryTree", "bt", "=", "new", "BinaryTree", "(", ")", ";", "Node", "head", "=", "null", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:10>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:15>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:5>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:7>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:20>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "-", "1", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "head", ")", ";", "ConnectNodesAtSameLevel", "cns", "=", "new", "ConnectNodesAtSameLevel", "(", ")", ";", "cns", ".", "connect", "(", "head", ")", ";", "cns", ".", "print", "(", "head", ")", ";", "}", "</s>"]
["<s>", "public", "void", "childSumTree", "(", "Node", "root", ")", "{", "toChildSumTree", "(", "root", ")", ";", "}", "</s>"]
["<s>", "private", "void", "incrementChild", "(", "Node", "root", ",", "int", "increment", ")", "{", "if", "(", "root", "=", "=", "null", "|", "|", "(", "root", ".", "left", "=", "=", "null", "&", "&", "root", ".", "right", "=", "=", "null", ")", ")", "{", "return", ";", "}", "if", "(", "root", ".", "left", "!", "=", "null", ")", "{", "root", ".", "left", ".", "data", "=", "root", ".", "left", ".", "data", "+", "increment", ";", "incrementChild", "(", "root", ".", "left", ",", "increment", ")", ";", "}", "else", "{", "root", ".", "right", ".", "data", "=", "root", ".", "right", ".", "data", "+", "increment", ";", "incrementChild", "(", "root", ".", "right", ",", "increment", ")", ";", "}", "}", "</s>"]
["<s>", "private", "int", "toChildSumTree", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", "0", ";", "}", "if", "(", "root", ".", "left", "=", "=", "null", "&", "&", "root", ".", "right", "=", "=", "null", ")", "{", "return", "root", ".", "data", ";", "}", "int", "sum1", "=", "toChildSumTree", "(", "root", ".", "left", ")", ";", "int", "sum2", "=", "toChildSumTree", "(", "root", ".", "right", ")", ";", "if", "(", "root", ".", "data", "<", "sum1", "+", "sum2", ")", "{", "root", ".", "data", "=", "sum1", "+", "sum2", ";", "}", "else", "if", "(", "root", ".", "data", ">", "sum1", "+", "sum2", ")", "{", "incrementChild", "(", "root", ",", "root", ".", "data", "-", "sum1", "-", "sum2", ")", ";", "}", "return", "root", ".", "data", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "ArbitaryTreeToChildSumTree", "att", "=", "new", "ArbitaryTreeToChildSumTree", "(", ")", ";", "BinaryTree", "bt", "=", "new", "BinaryTree", "(", ")", ";", "Node", "head", "=", "null", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:10>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:15>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:5>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:7>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:20>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "-", "1", ",", "head", ")", ";", "att", ".", "childSumTree", "(", "head", ")", ";", "TreeTraversals", "tt", "=", "new", "TreeTraversals", "(", ")", ";", "tt", ".", "inOrder", "(", "head", ")", ";", "}", "</s>"]
["<s>", "private", "void", "print", "(", "int", "arr", "[", "]", ",", "int", "current", ")", "{", "if", "(", "current", ">", "=", "arr", ".", "length", ")", "{", "return", ";", "}", "print", "(", "arr", ",", "<NUM_LIT:2>", "*", "current", "+", "1", ")", ";", "System", ".", "out", ".", "println", "(", "arr", "[", "current", "]", ")", ";", "print", "(", "arr", ",", "<NUM_LIT:2>", "*", "current", "+", "<NUM_LIT:2>", ")", ";", "}", "</s>"]
["<s>", "public", "void", "print", "(", "int", "arr", "[", "]", ")", "{", "print", "(", "arr", ",", "0", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "arr", "[", "]", "=", "{", "<NUM_LIT:4>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:5>", ",", "1", ",", "<NUM_LIT:3>", "}", ";", "SortedOrderPrintCompleteTreeArray", "sop", "=", "new", "SortedOrderPrintCompleteTreeArray", "(", ")", ";", "sop", ".", "print", "(", "arr", ")", ";", "}", "</s>"]
["<s>", "public", "void", "printVertical", "(", "Node", "root", ")", "{", "Map", "<", "Integer", ",", "List", "<", "Node", ">", ">", "map", "=", "new", "TreeMap", "<", "Integer", ",", "List", "<", "Node", ">", ">", "(", ")", ";", "populateMap", "(", "root", ",", "map", ",", "0", ")", ";", "printLevel", "(", "map", ")", ";", "}", "</s>"]
["<s>", "private", "void", "printLevel", "(", "Map", "<", "Integer", ",", "List", "<", "Node", ">", ">", "map", ")", "{", "for", "(", "Integer", "key", ":", "map", ".", "keySet", "(", ")", ")", "{", "List", "<", "Node", ">", "listNodes", "=", "map", ".", "get", "(", "key", ")", ";", "for", "(", "Node", "n", ":", "listNodes", ")", "{", "System", ".", "out", ".", "print", "(", "n", ".", "data", "+", "\"", "\"", ")", ";", "}", "System", ".", "out", ".", "println", "(", ")", ";", "}", "}", "</s>"]
["<s>", "private", "void", "populateMap", "(", "Node", "root", ",", "Map", "<", "Integer", ",", "List", "<", "Node", ">", ">", "map", ",", "int", "level", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", ";", "}", "List", "<", "Node", ">", "listNodes", "=", "null", ";", "if", "(", "map", ".", "containsKey", "(", "level", ")", ")", "{", "listNodes", "=", "map", ".", "get", "(", "level", ")", ";", "}", "else", "{", "listNodes", "=", "new", "ArrayList", "<", "Node", ">", "(", ")", ";", "map", ".", "put", "(", "level", ",", "listNodes", ")", ";", "}", "listNodes", ".", "add", "(", "root", ")", ";", "populateMap", "(", "root", ".", "left", ",", "map", ",", "level", "-", "1", ")", ";", "populateMap", "(", "root", ".", "right", ",", "map", ",", "level", "+", "1", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "BinaryTree", "bt", "=", "new", "BinaryTree", "(", ")", ";", "Node", "head", "=", "null", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:3>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "-", "<NUM_LIT:6>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "-", "<NUM_LIT:7>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:2>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:9>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:6>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:11>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:12>", ",", "head", ")", ";", "VerticalTreePrinting", "vtp", "=", "new", "VerticalTreePrinting", "(", ")", ";", "vtp", ".", "printVertical", "(", "head", ")", ";", "}", "</s>"]
["<s>", "NextInorderSuccessorIterator", "(", "Node", "root", ")", "{", "this", ".", "root", "=", "root", ";", "}", "</s>"]
["<s>", "public", "int", "next", "(", ")", "{", "Node", "node", "=", "null", ";", "while", "(", "root", "!", "=", "null", ")", "{", "stack", ".", "push", "(", "root", ")", ";", "root", "=", "root", ".", "left", ";", "}", "root", "=", "stack", ".", "pop", "(", ")", ";", "node", "=", "root", ";", "root", "=", "root", ".", "right", ";", "return", "node", ".", "data", ";", "}", "</s>"]
["<s>", "public", "boolean", "hasNext", "(", ")", "{", "if", "(", "root", "!", "=", "null", "|", "|", "stack", ".", "size", "(", ")", ">", "0", ")", "{", "return", "true", ";", "}", "return", "false", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "BinaryTree", "bt", "=", "new", "BinaryTree", "(", ")", ";", "Node", "node", "=", "null", ";", "node", "=", "bt", ".", "addNode", "(", "<NUM_LIT:10>", ",", "node", ")", ";", "node", "=", "bt", ".", "addNode", "(", "-", "<NUM_LIT:5>", ",", "node", ")", ";", "node", "=", "bt", ".", "addNode", "(", "<NUM_LIT:7>", ",", "node", ")", ";", "node", "=", "bt", ".", "addNode", "(", "<NUM_LIT:20>", ",", "node", ")", ";", "node", "=", "bt", ".", "addNode", "(", "<NUM_LIT:3>", ",", "node", ")", ";", "node", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "node", ")", ";", "NextInorderSuccessorIterator", "nis", "=", "new", "NextInorderSuccessorIterator", "(", "node", ")", ";", "while", "(", "nis", ".", "hasNext", "(", ")", ")", "{", "System", ".", "out", ".", "println", "(", "nis", ".", "next", "(", ")", ")", ";", "}", "}", "</s>"]
["<s>", "public", "void", "print", "(", "Node", "root1", ",", "Node", "root2", ")", "{", "Deque", "<", "Node", ">", "s1", "=", "new", "LinkedList", "<", "Node", ">", "(", ")", ";", "Deque", "<", "Node", ">", "s2", "=", "new", "LinkedList", "<", "Node", ">", "(", ")", ";", "while", "(", "true", ")", "{", "if", "(", "root1", "!", "=", "null", ")", "{", "s1", ".", "addFirst", "(", "root1", ")", ";", "root1", "=", "root1", ".", "left", ";", "continue", ";", "}", "if", "(", "root2", "!", "=", "null", ")", "{", "s2", ".", "addFirst", "(", "root2", ")", ";", "root2", "=", "root2", ".", "left", ";", "continue", ";", "}", "if", "(", "!", "s1", ".", "isEmpty", "(", ")", ")", "{", "root1", "=", "s1", ".", "peekFirst", "(", ")", ";", "}", "if", "(", "!", "s2", ".", "isEmpty", "(", ")", ")", "{", "root2", "=", "s2", ".", "peekFirst", "(", ")", ";", "}", "if", "(", "root1", "!", "=", "null", "&", "&", "root2", "!", "=", "null", ")", "{", "if", "(", "root1", ".", "data", "<", "=", "root2", ".", "data", ")", "{", "System", ".", "out", ".", "println", "(", "root1", ".", "data", ")", ";", "root1", "=", "s1", ".", "pollFirst", "(", ")", ";", "root1", "=", "root1", ".", "right", ";", "root2", "=", "null", ";", "}", "else", "{", "System", ".", "out", ".", "println", "(", "root2", ".", "data", ")", ";", "root2", "=", "s2", ".", "pollFirst", "(", ")", ";", "root2", "=", "root2", ".", "right", ";", "root1", "=", "null", ";", "}", "}", "else", "if", "(", "root1", "!", "=", "null", ")", "{", "System", ".", "out", ".", "println", "(", "root1", ".", "data", ")", ";", "root1", "=", "s1", ".", "pollFirst", "(", ")", ";", "root1", "=", "root1", ".", "right", ";", "}", "else", "if", "(", "root2", "!", "=", "null", ")", "{", "System", ".", "out", ".", "println", "(", "root2", ".", "data", ")", ";", "root2", "=", "s2", ".", "pollFirst", "(", ")", ";", "root2", "=", "root2", ".", "right", ";", "}", "if", "(", "root1", "=", "=", "null", "&", "&", "root2", "=", "=", "null", "&", "&", "s1", ".", "isEmpty", "(", ")", "&", "&", "s2", ".", "isEmpty", "(", ")", ")", "{", "break", ";", "}", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "PrintTwoBSTInSortedForm", "ptb", "=", "new", "PrintTwoBSTInSortedForm", "(", ")", ";", "BinaryTree", "bt", "=", "new", "BinaryTree", "(", ")", ";", "Node", "head", "=", "null", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:10>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:15>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:5>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:7>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:20>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "-", "1", ",", "head", ")", ";", "Node", "head1", "=", "null", ";", "head1", "=", "bt", ".", "addNode", "(", "-", "<NUM_LIT:4>", ",", "head1", ")", ";", "head1", "=", "bt", ".", "addNode", "(", "-", "<NUM_LIT:3>", ",", "head1", ")", ";", "head1", "=", "bt", ".", "addNode", "(", "<NUM_LIT:6>", ",", "head1", ")", ";", "head1", "=", "bt", ".", "addNode", "(", "<NUM_LIT:11>", ",", "head1", ")", ";", "head1", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "head1", ")", ";", "head1", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "head1", ")", ";", "ptb", ".", "print", "(", "head", ",", "head1", ")", ";", "}", "</s>"]
["<s>", "public", "Node", "constructTree", "(", "int", "inOrder", "[", "]", ",", "int", "levelOrder", "[", "]", ")", "{", "return", "constructTree", "(", "inOrder", ",", "levelOrder", ",", "0", ",", "inOrder", ".", "length", "-", "1", ")", ";", "}", "</s>"]
["<s>", "private", "int", "[", "]", "extractArray", "(", "int", "inOrder", "[", "]", ",", "int", "levelOrder", "[", "]", ",", "int", "low", ",", "int", "high", ")", "{", "int", "result", "[", "]", "=", "new", "int", "[", "high", "-", "low", "+", "1", "]", ";", "int", "p", "=", "0", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "levelOrder", ".", "length", ";", "i", "+", "+", ")", "{", "int", "index", "=", "search", "(", "inOrder", ",", "levelOrder", "[", "i", "]", ",", "low", ",", "high", ")", ";", "if", "(", "index", "!", "=", "-", "1", ")", "{", "result", "[", "p", "+", "+", "]", "=", "inOrder", "[", "index", "]", ";", "}", "}", "return", "result", ";", "}", "</s>"]
["<s>", "private", "Node", "constructTree", "(", "int", "inOrder", "[", "]", ",", "int", "levelOrder", "[", "]", ",", "int", "low", ",", "int", "high", ")", "{", "if", "(", "low", ">", "high", ")", "{", "return", "null", ";", "}", "int", "lowElement", "=", "levelOrder", "[", "0", "]", ";", "Node", "n", "=", "Node", ".", "newNode", "(", "lowElement", ")", ";", "int", "index", "=", "search", "(", "inOrder", ",", "lowElement", ",", "low", ",", "high", ")", ";", "int", "left", "[", "]", "=", "extractArray", "(", "inOrder", ",", "levelOrder", ",", "low", ",", "index", "-", "1", ")", ";", "int", "right", "[", "]", "=", "extractArray", "(", "inOrder", ",", "levelOrder", ",", "index", "+", "1", ",", "high", ")", ";", "n", ".", "left", "=", "constructTree", "(", "inOrder", ",", "left", ",", "low", ",", "index", "-", "1", ")", ";", "n", ".", "right", "=", "constructTree", "(", "inOrder", ",", "right", ",", "index", "+", "1", ",", "high", ")", ";", "return", "n", ";", "}", "</s>"]
["<s>", "private", "int", "search", "(", "int", "input", "[", "]", ",", "int", "key", ",", "int", "low", ",", "int", "high", ")", "{", "if", "(", "low", ">", "high", ")", "{", "return", "-", "1", ";", "}", "int", "middle", "=", "(", "low", "+", "high", ")", "/", "<NUM_LIT:2>", ";", "if", "(", "input", "[", "middle", "]", "=", "=", "key", ")", "{", "return", "middle", ";", "}", "else", "if", "(", "input", "[", "middle", "]", ">", "key", ")", "{", "return", "search", "(", "input", ",", "key", ",", "low", ",", "middle", "-", "1", ")", ";", "}", "else", "{", "return", "search", "(", "input", ",", "key", ",", "middle", "+", "1", ",", "high", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "inOrder", "[", "]", "=", "{", "<NUM_LIT:4>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:12>", ",", "<NUM_LIT>", ",", "<NUM_LIT:20>", ",", "<NUM_LIT>", "}", ";", "int", "levelOrder", "[", "]", "=", "{", "<NUM_LIT:20>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:12>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT>", "}", ";", "ConstructTreeFromLevelOrderInOrder", "ctf", "=", "new", "ConstructTreeFromLevelOrderInOrder", "(", ")", ";", "Node", "root", "=", "ctf", ".", "constructTree", "(", "inOrder", ",", "levelOrder", ")", ";", "LevelOrderTraversal", "lot", "=", "new", "LevelOrderTraversal", "(", ")", ";", "TreeTraversals", "tt", "=", "new", "TreeTraversals", "(", ")", ";", "tt", ".", "inOrder", "(", "root", ")", ";", "lot", ".", "levelOrder", "(", "root", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "isComplete", "(", "Node", "root", ")", "{", "Queue", "<", "Node", ">", "queue", "=", "new", "LinkedList", "<", "Node", ">", "(", ")", ";", "queue", ".", "offer", "(", "root", ")", ";", "boolean", "foundFirstNonFull", "=", "false", ";", "while", "(", "!", "queue", ".", "isEmpty", "(", ")", ")", "{", "root", "=", "queue", ".", "poll", "(", ")", ";", "if", "(", "foundFirstNonFull", ")", "{", "if", "(", "root", ".", "left", "!", "=", "null", "|", "|", "root", ".", "right", "!", "=", "null", ")", "{", "return", "false", ";", "}", "continue", ";", "}", "if", "(", "root", ".", "left", "!", "=", "null", "&", "&", "root", ".", "right", "!", "=", "null", ")", "{", "queue", ".", "offer", "(", "root", ".", "left", ")", ";", "queue", ".", "offer", "(", "root", ".", "right", ")", ";", "}", "else", "if", "(", "root", ".", "left", "!", "=", "null", ")", "{", "queue", ".", "offer", "(", "root", ".", "left", ")", ";", "foundFirstNonFull", "=", "true", ";", "}", "else", "if", "(", "root", ".", "right", "!", "=", "null", ")", "{", "return", "false", ";", "}", "else", "{", "foundFirstNonFull", "=", "true", ";", "}", "}", "return", "true", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "BinaryTree", "bt", "=", "new", "BinaryTree", "(", ")", ";", "Node", "head", "=", "null", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:3>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "-", "<NUM_LIT:6>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:7>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "-", "<NUM_LIT:10>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "-", "<NUM_LIT:15>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "-", "<NUM_LIT:4>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:4>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:11>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "-", "<NUM_LIT:9>", ",", "head", ")", ";", "IsCompleteBinaryTree", "icbt", "=", "new", "IsCompleteBinaryTree", "(", ")", ";", "System", ".", "out", ".", "println", "(", "icbt", ".", "isComplete", "(", "head", ")", ")", ";", "}", "</s>"]
["<s>", "public", "Node", "degenerate", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", "null", ";", "}", "Node", "left", "=", "root", ".", "left", ";", "Node", "right", "=", "root", ".", "right", ";", "root", ".", "left", "=", "null", ";", "root", ".", "right", "=", "null", ";", "left", "=", "degenerate", "(", "left", ")", ";", "right", "=", "degenerate", "(", "right", ")", ";", "left", "=", "merge", "(", "left", ",", "root", ")", ";", "return", "merge", "(", "left", ",", "right", ")", ";", "}", "</s>"]
["<s>", "private", "Node", "merge", "(", "Node", "root1", ",", "Node", "root2", ")", "{", "if", "(", "root1", "=", "=", "null", ")", "{", "return", "root2", ";", "}", "if", "(", "root2", "=", "=", "null", ")", "{", "return", "root1", ";", "}", "if", "(", "root1", ".", "data", "<", "=", "root2", ".", "data", ")", "{", "root1", ".", "right", "=", "merge", "(", "root1", ".", "right", ",", "root2", ")", ";", "return", "root1", ";", "}", "else", "{", "root2", ".", "right", "=", "merge", "(", "root1", ",", "root2", ".", "right", ")", ";", "return", "root2", ";", "}", "}", "</s>"]
["<s>", "private", "void", "printList", "(", "Node", "root", ")", "{", "while", "(", "root", "!", "=", "null", ")", "{", "System", ".", "out", ".", "print", "(", "root", ".", "data", "+", "\"", "\"", ")", ";", "root", "=", "root", ".", "right", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "ConstructTreeFromInOrderPreOrder", "ctf", "=", "new", "ConstructTreeFromInOrderPreOrder", "(", ")", ";", "int", "inorder", "[", "]", "=", "{", "<NUM_LIT:8>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:16>", ",", "<NUM_LIT:15>", ",", "<NUM_LIT>", ",", "<NUM_LIT:7>", "}", ";", "int", "preorder", "[", "]", "=", "{", "<NUM_LIT:10>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:15>", ",", "<NUM_LIT:16>", ",", "<NUM_LIT>", ",", "<NUM_LIT:7>", "}", ";", "Node", "root", "=", "ctf", ".", "createTree", "(", "inorder", ",", "preorder", ")", ";", "DegenerateBinaryTreeToSortedLL", "dbt", "=", "new", "DegenerateBinaryTreeToSortedLL", "(", ")", ";", "root", "=", "dbt", ".", "degenerate", "(", "root", ")", ";", "dbt", ".", "printList", "(", "root", ")", ";", "}", "</s>"]
["<s>", "public", "void", "printNodes", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", ";", "}", "if", "(", "root", ".", "left", "=", "=", "null", "|", "|", "root", ".", "right", "=", "=", "null", ")", "{", "if", "(", "root", ".", "left", "!", "=", "null", ")", "{", "System", ".", "out", ".", "print", "(", "root", ".", "left", ".", "data", "+", "\"", "\"", ")", ";", "}", "if", "(", "root", ".", "right", "!", "=", "null", ")", "{", "System", ".", "out", ".", "print", "(", "root", ".", "right", ".", "data", "+", "\"", "\"", ")", ";", "}", "}", "printNodes", "(", "root", ".", "left", ")", ";", "printNodes", "(", "root", ".", "right", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "BinaryTree", "bt", "=", "new", "BinaryTree", "(", ")", ";", "Node", "root", "=", "null", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:10>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:5>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "-", "1", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "-", "<NUM_LIT:5>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:20>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "root", ")", ";", "NodesWithNoSibling", "nws", "=", "new", "NodesWithNoSibling", "(", ")", ";", "nws", ".", "printNodes", "(", "root", ")", ";", "}", "</s>"]
["<s>", "NextInorderSuccessorOfTwoTree", "(", "Node", "root1", ",", "Node", "root2", ")", "{", "this", ".", "root1", "=", "root1", ";", "this", ".", "root2", "=", "root2", ";", "}", "</s>"]
["<s>", "public", "boolean", "hasNext", "(", ")", "{", "if", "(", "root1", "!", "=", "null", "|", "|", "stack1", ".", "size", "(", ")", ">", "0", "|", "|", "root2", "!", "=", "null", "|", "|", "stack2", ".", "size", "(", ")", ">", "0", ")", "{", "return", "true", ";", "}", "return", "false", ";", "}", "</s>"]
["<s>", "public", "Node", "next", "(", ")", "{", "Node", "node", "=", "null", ";", "while", "(", "root1", "!", "=", "null", ")", "{", "stack1", ".", "push", "(", "root1", ")", ";", "root1", "=", "root1", ".", "left", ";", "}", "while", "(", "root2", "!", "=", "null", ")", "{", "stack2", ".", "push", "(", "root2", ")", ";", "root2", "=", "root2", ".", "left", ";", "}", "if", "(", "!", "stack1", ".", "isEmpty", "(", ")", "&", "&", "!", "stack2", ".", "isEmpty", "(", ")", ")", "{", "if", "(", "stack1", ".", "peek", "(", ")", ".", "data", "<", "=", "stack2", ".", "peek", "(", ")", ".", "data", ")", "{", "node", "=", "stack1", ".", "pop", "(", ")", ";", "root1", "=", "node", ".", "right", ";", "}", "else", "{", "node", "=", "stack2", ".", "pop", "(", ")", ";", "root2", "=", "node", ".", "right", ";", "}", "}", "else", "if", "(", "stack1", ".", "isEmpty", "(", ")", ")", "{", "node", "=", "stack2", ".", "pop", "(", ")", ";", "root2", "=", "node", ".", "right", ";", "}", "else", "{", "node", "=", "stack1", ".", "pop", "(", ")", ";", "root1", "=", "node", ".", "right", ";", "}", "return", "node", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "BinaryTree", "bt", "=", "new", "BinaryTree", "(", ")", ";", "Node", "node", "=", "null", ";", "node", "=", "bt", ".", "addNode", "(", "<NUM_LIT:10>", ",", "node", ")", ";", "node", "=", "bt", ".", "addNode", "(", "-", "<NUM_LIT:5>", ",", "node", ")", ";", "node", "=", "bt", ".", "addNode", "(", "<NUM_LIT:7>", ",", "node", ")", ";", "node", "=", "bt", ".", "addNode", "(", "<NUM_LIT:20>", ",", "node", ")", ";", "node", "=", "bt", ".", "addNode", "(", "<NUM_LIT:3>", ",", "node", ")", ";", "node", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "node", ")", ";", "Node", "node1", "=", "null", ";", "node1", "=", "bt", ".", "addNode", "(", "<NUM_LIT:8>", ",", "node1", ")", ";", "node1", "=", "bt", ".", "addNode", "(", "-", "<NUM_LIT:10>", ",", "node1", ")", ";", "node1", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "node1", ")", ";", "node1", "=", "bt", ".", "addNode", "(", "<NUM_LIT:2>", ",", "node1", ")", ";", "node1", "=", "bt", ".", "addNode", "(", "<NUM_LIT:11>", ",", "node1", ")", ";", "NextInorderSuccessorOfTwoTree", "nis", "=", "new", "NextInorderSuccessorOfTwoTree", "(", "node", ",", "node1", ")", ";", "while", "(", "nis", ".", "hasNext", "(", ")", ")", "{", "System", ".", "out", ".", "println", "(", "nis", ".", "next", "(", ")", ".", "data", ")", ";", "}", "}", "</s>"]
["<s>", "public", "int", "largestSet", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", "0", ";", "}", "if", "(", "root", ".", "lis", "!", "=", "-", "1", ")", "{", "return", "root", ".", "lis", ";", "}", "int", "excl", "=", "0", ";", "int", "left_excl", "=", "0", ";", "if", "(", "root", ".", "left", "!", "=", "null", ")", "{", "left_excl", "=", "largestSet", "(", "root", ".", "left", ".", "left", ")", "+", "largestSet", "(", "root", ".", "left", ".", "right", ")", ";", "excl", "+", "=", "largestSet", "(", "root", ".", "left", ")", ";", "}", "int", "right_excl", "=", "0", ";", "if", "(", "root", ".", "right", "!", "=", "null", ")", "{", "right_excl", "=", "largestSet", "(", "root", ".", "right", ".", "left", ")", "+", "largestSet", "(", "root", ".", "right", ".", "right", ")", ";", "excl", "+", "=", "largestSet", "(", "root", ".", "right", ")", ";", "}", "int", "incl", "=", "left_excl", "+", "right_excl", "+", "root", ".", "data", ";", "root", ".", "lis", "=", "incl", ";", "return", "incl", ">", "excl", "?", "incl", ":", "excl", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "inorder", "[", "]", "=", "{", "<NUM_LIT:4>", ",", "<NUM_LIT>", ",", "1", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT>", "}", ";", "int", "preorder", "[", "]", "=", "{", "<NUM_LIT>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:7>", ",", "1", ",", "<NUM_LIT:3>", ",", "<NUM_LIT>", "}", ";", "ConstructTreeFromInOrderPreOrder", "ctf", "=", "new", "ConstructTreeFromInOrderPreOrder", "(", ")", ";", "Node", "root", "=", "ctf", ".", "createTree", "(", "inorder", ",", "preorder", ")", ";", "LargestIndependentSetInTree", "lis", "=", "new", "LargestIndependentSetInTree", "(", ")", ";", "System", ".", "out", ".", "println", "(", "lis", ".", "largestSet", "(", "root", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "size", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", "0", ";", "}", "return", "size", "(", "root", ".", "left", ")", "+", "size", "(", "root", ".", "right", ")", "+", "1", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "BinaryTree", "bt", "=", "new", "BinaryTree", "(", ")", ";", "Node", "head", "=", "null", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:10>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:15>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:5>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:7>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:20>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "-", "1", ",", "head", ")", ";", "SizeOfBinaryTree", "sbt", "=", "new", "SizeOfBinaryTree", "(", ")", ";", "System", ".", "out", ".", "println", "(", "sbt", ".", "size", "(", "head", ")", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "isBST", "(", "Node", "root", ")", "{", "return", "isBST", "(", "root", ",", "Integer", ".", "MIN_VALUE", ",", "Integer", ".", "MAX_VALUE", ")", ";", "}", "</s>"]
["<s>", "private", "boolean", "isBST", "(", "Node", "root", ",", "int", "min", ",", "int", "max", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", "true", ";", "}", "if", "(", "root", ".", "data", "<", "=", "min", "|", "|", "root", ".", "data", ">", "max", ")", "{", "return", "false", ";", "}", "return", "isBST", "(", "root", ".", "left", ",", "min", ",", "root", ".", "data", ")", "&", "&", "isBST", "(", "root", ".", "right", ",", "root", ".", "data", ",", "max", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "isBSTIterative", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", "true", ";", "}", "Deque", "<", "Node", ">", "stack", "=", "new", "LinkedList", "<", ">", "(", ")", ";", "Node", "node", "=", "root", ";", "int", "prev", "=", "Integer", ".", "MIN_VALUE", ";", "int", "current", ";", "while", "(", "true", ")", "{", "if", "(", "node", "!", "=", "null", ")", "{", "stack", ".", "addFirst", "(", "node", ")", ";", "node", "=", "node", ".", "left", ";", "}", "else", "{", "if", "(", "stack", ".", "isEmpty", "(", ")", ")", "{", "break", ";", "}", "node", "=", "stack", ".", "pollFirst", "(", ")", ";", "current", "=", "node", ".", "data", ";", "if", "(", "current", "<", "prev", ")", "{", "return", "false", ";", "}", "prev", "=", "current", ";", "node", "=", "node", ".", "right", ";", "}", "}", "return", "true", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "BinaryTree", "bt", "=", "new", "BinaryTree", "(", ")", ";", "Node", "root", "=", "null", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:10>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:15>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "-", "<NUM_LIT:10>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:20>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "0", ",", "root", ")", ";", "IsBST", "isBST", "=", "new", "IsBST", "(", ")", ";", "assert", "isBST", ".", "isBST", "(", "root", ")", ";", "assert", "isBST", ".", "isBSTIterative", "(", "root", ")", ";", "}", "</s>"]
["<s>", "public", "void", "sinkZero", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", ";", "}", "sinkZero", "(", "root", ".", "left", ")", ";", "sinkZero", "(", "root", ".", "right", ")", ";", "if", "(", "root", ".", "data", "<", "0", ")", "{", "pushDown", "(", "root", ")", ";", "}", "}", "</s>"]
["<s>", "private", "void", "pushDown", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", ";", "}", "if", "(", "root", ".", "left", "=", "=", "null", "&", "&", "root", ".", "right", "=", "=", "null", ")", "{", "return", ";", "}", "if", "(", "root", ".", "left", "!", "=", "null", "&", "&", "root", ".", "left", ".", "data", ">", "=", "0", ")", "{", "int", "temp", "=", "root", ".", "data", ";", "root", ".", "data", "=", "root", ".", "left", ".", "data", ";", "root", ".", "left", ".", "data", "=", "temp", ";", "pushDown", "(", "root", ".", "left", ")", ";", "}", "else", "if", "(", "root", ".", "right", "!", "=", "null", "&", "&", "root", ".", "right", ".", "data", ">", "=", "0", ")", "{", "int", "temp", "=", "root", ".", "data", ";", "root", ".", "data", "=", "root", ".", "right", ".", "data", ";", "root", ".", "right", ".", "data", "=", "temp", ";", "pushDown", "(", "root", ".", "right", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "preorder", "[", "]", "=", "{", "-", "1", ",", "1", ",", "<NUM_LIT:6>", ",", "-", "<NUM_LIT:2>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:2>", ",", "-", "<NUM_LIT:3>", ",", "<NUM_LIT:31>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", "}", ";", "int", "inorder", "[", "]", "=", "{", "-", "<NUM_LIT:2>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:11>", ",", "1", ",", "<NUM_LIT:3>", ",", "-", "1", ",", "<NUM_LIT:31>", ",", "-", "<NUM_LIT:3>", ",", "<NUM_LIT>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT>", "}", ";", "ConstructTreeFromInOrderPreOrder", "ctf", "=", "new", "ConstructTreeFromInOrderPreOrder", "(", ")", ";", "Node", "root", "=", "ctf", ".", "createTree", "(", "inorder", ",", "preorder", ")", ";", "SinkNegativeToBottom", "szb", "=", "new", "SinkNegativeToBottom", "(", ")", ";", "szb", ".", "sinkZero", "(", "root", ")", ";", "LevelOrderTraversal", "lot", "=", "new", "LevelOrderTraversal", "(", ")", ";", "TreeTraversals", "tt", "=", "new", "TreeTraversals", "(", ")", ";", "tt", ".", "inOrder", "(", "root", ")", ";", "lot", ".", "levelOrder", "(", "root", ")", ";", "}", "</s>"]
["<s>", "private", "Node", "leftRotate", "(", "Node", "root", ")", "{", "Node", "newRoot", "=", "root", ".", "right", ";", "root", ".", "right", "=", "root", ".", "right", ".", "left", ";", "newRoot", ".", "left", "=", "root", ";", "root", ".", "height", "=", "setHeight", "(", "root", ")", ";", "root", ".", "size", "=", "setSize", "(", "root", ")", ";", "newRoot", ".", "height", "=", "setHeight", "(", "newRoot", ")", ";", "newRoot", ".", "size", "=", "setSize", "(", "newRoot", ")", ";", "return", "newRoot", ";", "}", "</s>"]
["<s>", "private", "Node", "rightRotate", "(", "Node", "root", ")", "{", "Node", "newRoot", "=", "root", ".", "left", ";", "root", ".", "left", "=", "root", ".", "left", ".", "right", ";", "newRoot", ".", "right", "=", "root", ";", "root", ".", "height", "=", "setHeight", "(", "root", ")", ";", "root", ".", "size", "=", "setSize", "(", "root", ")", ";", "newRoot", ".", "height", "=", "setHeight", "(", "newRoot", ")", ";", "newRoot", ".", "size", "=", "setSize", "(", "newRoot", ")", ";", "return", "newRoot", ";", "}", "</s>"]
["<s>", "private", "int", "setHeight", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", "0", ";", "}", "return", "1", "+", "Math", ".", "max", "(", "(", "root", ".", "left", "!", "=", "null", "?", "root", ".", "left", ".", "height", ":", "0", ")", ",", "(", "root", ".", "right", "!", "=", "null", "?", "root", ".", "right", ".", "height", ":", "0", ")", ")", ";", "}", "</s>"]
["<s>", "private", "int", "height", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", "0", ";", "}", "else", "{", "return", "root", ".", "height", ";", "}", "}", "</s>"]
["<s>", "private", "int", "setSize", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", "0", ";", "}", "return", "1", "+", "Math", ".", "max", "(", "(", "root", ".", "left", "!", "=", "null", "?", "root", ".", "left", ".", "size", ":", "0", ")", ",", "(", "root", ".", "right", "!", "=", "null", "?", "root", ".", "right", ".", "size", ":", "0", ")", ")", ";", "}", "</s>"]
["<s>", "public", "Node", "insert", "(", "Node", "root", ",", "int", "data", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", "Node", ".", "newNode", "(", "data", ")", ";", "}", "if", "(", "root", ".", "data", "<", "=", "data", ")", "{", "root", ".", "right", "=", "insert", "(", "root", ".", "right", ",", "data", ")", ";", "}", "else", "{", "root", ".", "left", "=", "insert", "(", "root", ".", "left", ",", "data", ")", ";", "}", "int", "balance", "=", "balance", "(", "root", ".", "left", ",", "root", ".", "right", ")", ";", "if", "(", "balance", ">", "1", ")", "{", "if", "(", "height", "(", "root", ".", "left", ".", "left", ")", ">", "=", "height", "(", "root", ".", "left", ".", "right", ")", ")", "{", "root", "=", "rightRotate", "(", "root", ")", ";", "}", "else", "{", "root", ".", "left", "=", "leftRotate", "(", "root", ".", "left", ")", ";", "root", "=", "rightRotate", "(", "root", ")", ";", "}", "}", "else", "if", "(", "balance", "<", "-", "1", ")", "{", "if", "(", "height", "(", "root", ".", "right", ".", "right", ")", ">", "=", "height", "(", "root", ".", "right", ".", "left", ")", ")", "{", "root", "=", "leftRotate", "(", "root", ")", ";", "}", "else", "{", "root", ".", "right", "=", "rightRotate", "(", "root", ".", "right", ")", ";", "root", "=", "leftRotate", "(", "root", ")", ";", "}", "}", "else", "{", "root", ".", "height", "=", "setHeight", "(", "root", ")", ";", "root", ".", "size", "=", "setSize", "(", "root", ")", ";", "}", "return", "root", ";", "}", "</s>"]
["<s>", "private", "int", "balance", "(", "Node", "rootLeft", ",", "Node", "rootRight", ")", "{", "return", "height", "(", "rootLeft", ")", "-", "height", "(", "rootRight", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "AVLTree", "avlTree", "=", "new", "AVLTree", "(", ")", ";", "Node", "root", "=", "null", ";", "root", "=", "avlTree", ".", "insert", "(", "root", ",", "-", "<NUM_LIT:10>", ")", ";", "root", "=", "avlTree", ".", "insert", "(", "root", ",", "<NUM_LIT:2>", ")", ";", "root", "=", "avlTree", ".", "insert", "(", "root", ",", "<NUM_LIT>", ")", ";", "root", "=", "avlTree", ".", "insert", "(", "root", ",", "-", "<NUM_LIT>", ")", ";", "root", "=", "avlTree", ".", "insert", "(", "root", ",", "-", "<NUM_LIT:15>", ")", ";", "root", "=", "avlTree", ".", "insert", "(", "root", ",", "<NUM_LIT:15>", ")", ";", "root", "=", "avlTree", ".", "insert", "(", "root", ",", "<NUM_LIT>", ")", ";", "root", "=", "avlTree", ".", "insert", "(", "root", ",", "<NUM_LIT:20>", ")", ";", "TreeTraversals", "tt", "=", "new", "TreeTraversals", "(", ")", ";", "tt", ".", "inOrder", "(", "root", ")", ";", "System", ".", "out", ".", "println", "(", ")", ";", "tt", ".", "preOrder", "(", "root", ")", ";", "}", "</s>"]
["<s>", "public", "int", "largestBST", "(", "Node", "root", ")", "{", "MinMax", "m", "=", "largest", "(", "root", ")", ";", "return", "m", ".", "size", ";", "}", "</s>"]
["<s>", "private", "MinMax", "largest", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", "new", "MinMax", "(", ")", ";", "}", "MinMax", "leftMinMax", "=", "largest", "(", "root", ".", "left", ")", ";", "MinMax", "rightMinMax", "=", "largest", "(", "root", ".", "right", ")", ";", "MinMax", "m", "=", "new", "MinMax", "(", ")", ";", "if", "(", "leftMinMax", ".", "isBST", "=", "=", "false", "|", "|", "rightMinMax", ".", "isBST", "=", "=", "false", "|", "|", "(", "leftMinMax", ".", "max", ">", "root", ".", "data", "|", "|", "rightMinMax", ".", "min", "<", "=", "root", ".", "data", ")", ")", "{", "m", ".", "isBST", "=", "false", ";", "m", ".", "size", "=", "Math", ".", "max", "(", "leftMinMax", ".", "size", ",", "rightMinMax", ".", "size", ")", ";", "return", "m", ";", "}", "m", ".", "isBST", "=", "true", ";", "m", ".", "size", "=", "leftMinMax", ".", "size", "+", "rightMinMax", ".", "size", "+", "1", ";", "m", ".", "min", "=", "root", ".", "left", "!", "=", "null", "?", "leftMinMax", ".", "min", ":", "root", ".", "data", ";", "m", ".", "max", "=", "root", ".", "right", "!", "=", "null", "?", "rightMinMax", ".", "max", ":", "root", ".", "data", ";", "return", "m", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "LargestBSTInBinaryTree", "lbi", "=", "new", "LargestBSTInBinaryTree", "(", ")", ";", "ConstructTreeFromInOrderPreOrder", "ctf", "=", "new", "ConstructTreeFromInOrderPreOrder", "(", ")", ";", "int", "inorder", "[", "]", "=", "{", "-", "<NUM_LIT:7>", ",", "-", "<NUM_LIT:6>", ",", "-", "<NUM_LIT:5>", ",", "-", "<NUM_LIT:4>", ",", "-", "<NUM_LIT:3>", ",", "-", "<NUM_LIT:2>", ",", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:16>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT:12>", ",", "<NUM_LIT>", "}", ";", "int", "preorder", "[", "]", "=", "{", "<NUM_LIT:3>", ",", "-", "<NUM_LIT:2>", ",", "-", "<NUM_LIT:3>", ",", "-", "<NUM_LIT:4>", ",", "-", "<NUM_LIT:5>", ",", "-", "<NUM_LIT:6>", ",", "-", "<NUM_LIT:7>", ",", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:16>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:12>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT>", "}", ";", "Node", "root", "=", "ctf", ".", "createTree", "(", "inorder", ",", "preorder", ")", ";", "int", "largestBSTSize", "=", "lbi", ".", "largestBST", "(", "root", ")", ";", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", "+", "largestBSTSize", ")", ";", "assert", "largestBSTSize", "=", "=", "<NUM_LIT:8>", ";", "}", "</s>"]
["<s>", "MinMax", "(", ")", "{", "min", "=", "Integer", ".", "MAX_VALUE", ";", "max", "=", "Integer", ".", "MIN_VALUE", ";", "isBST", "=", "true", ";", "size", "=", "0", ";", "}", "</s>"]
["<s>", "public", "void", "levelByLevelTwoQueue", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", ";", "}", "Queue", "<", "Node", ">", "q1", "=", "new", "LinkedList", "<", ">", "(", ")", ";", "Queue", "<", "Node", ">", "q2", "=", "new", "LinkedList", "<", ">", "(", ")", ";", "q1", ".", "add", "(", "root", ")", ";", "while", "(", "!", "q1", ".", "isEmpty", "(", ")", "|", "|", "!", "q2", ".", "isEmpty", "(", ")", ")", "{", "while", "(", "!", "q1", ".", "isEmpty", "(", ")", ")", "{", "root", "=", "q1", ".", "poll", "(", ")", ";", "System", ".", "out", ".", "print", "(", "root", ".", "data", "+", "\"", "\"", ")", ";", "if", "(", "root", ".", "left", "!", "=", "null", ")", "{", "q2", ".", "offer", "(", "root", ".", "left", ")", ";", "}", "if", "(", "root", ".", "right", "!", "=", "null", ")", "{", "q2", ".", "offer", "(", "root", ".", "right", ")", ";", "}", "}", "System", ".", "out", ".", "println", "(", ")", ";", "while", "(", "!", "q2", ".", "isEmpty", "(", ")", ")", "{", "root", "=", "q2", ".", "poll", "(", ")", ";", "System", ".", "out", ".", "print", "(", "root", ".", "data", "+", "\"", "\"", ")", ";", "if", "(", "root", ".", "left", "!", "=", "null", ")", "{", "q1", ".", "offer", "(", "root", ".", "left", ")", ";", "}", "if", "(", "root", ".", "right", "!", "=", "null", ")", "{", "q1", ".", "offer", "(", "root", ".", "right", ")", ";", "}", "}", "System", ".", "out", ".", "println", "(", ")", ";", "}", "}", "</s>"]
["<s>", "public", "void", "levelByLevelOneQueueUsingDelimiter", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", ";", "}", "Queue", "<", "Node", ">", "q", "=", "new", "LinkedList", "<", "Node", ">", "(", ")", ";", "q", ".", "offer", "(", "root", ")", ";", "q", ".", "offer", "(", "null", ")", ";", "while", "(", "!", "q", ".", "isEmpty", "(", ")", ")", "{", "root", "=", "q", ".", "poll", "(", ")", ";", "if", "(", "root", "!", "=", "null", ")", "{", "System", ".", "out", ".", "print", "(", "root", ".", "data", "+", "\"", "\"", ")", ";", "if", "(", "root", ".", "left", "!", "=", "null", ")", "{", "q", ".", "offer", "(", "root", ".", "left", ")", ";", "}", "if", "(", "root", ".", "right", "!", "=", "null", ")", "{", "q", ".", "offer", "(", "root", ".", "right", ")", ";", "}", "}", "else", "{", "if", "(", "!", "q", ".", "isEmpty", "(", ")", ")", "{", "System", ".", "out", ".", "println", "(", ")", ";", "q", ".", "offer", "(", "null", ")", ";", "}", "}", "}", "}", "</s>"]
["<s>", "public", "void", "levelByLevelOneQueueUsingCount", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", ";", "}", "Queue", "<", "Node", ">", "q", "=", "new", "LinkedList", "<", "Node", ">", "(", ")", ";", "int", "levelCount", "=", "1", ";", "int", "currentCount", "=", "0", ";", "q", ".", "offer", "(", "root", ")", ";", "while", "(", "!", "q", ".", "isEmpty", "(", ")", ")", "{", "while", "(", "levelCount", ">", "0", ")", "{", "root", "=", "q", ".", "poll", "(", ")", ";", "System", ".", "out", ".", "print", "(", "root", ".", "data", "+", "\"", "\"", ")", ";", "if", "(", "root", ".", "left", "!", "=", "null", ")", "{", "currentCount", "+", "+", ";", "q", ".", "offer", "(", "root", ".", "left", ")", ";", "}", "if", "(", "root", ".", "right", "!", "=", "null", ")", "{", "currentCount", "+", "+", ";", "q", ".", "offer", "(", "root", ".", "right", ")", ";", "}", "levelCount", "-", "-", ";", "}", "System", ".", "out", ".", "println", "(", ")", ";", "levelCount", "=", "currentCount", ";", "currentCount", "=", "0", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "TreeTraversalLevelByLevel", "tt", "=", "new", "TreeTraversalLevelByLevel", "(", ")", ";", "BinaryTree", "bt", "=", "new", "BinaryTree", "(", ")", ";", "Node", "root", "=", "null", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:10>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:20>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:30>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:15>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "-", "<NUM_LIT:10>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "0", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:5>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "-", "<NUM_LIT:5>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "-", "<NUM_LIT:15>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "root", ")", ";", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", ")", ";", "tt", ".", "levelByLevelTwoQueue", "(", "root", ")", ";", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "<STR_LIT>", "\"", ")", ";", "tt", ".", "levelByLevelOneQueueUsingDelimiter", "(", "root", ")", ";", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "<STR_LIT>", "<STR_LIT>", "<STR_LIT>", "\"", ")", ";", "tt", ".", "levelByLevelOneQueueUsingCount", "(", "root", ")", ";", "}", "</s>"]
["<s>", "public", "Node", "lowestCommonAncestor", "(", "int", "val1", ",", "int", "val2", ",", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", "null", ";", "}", "if", "(", "root", ".", "data", "=", "=", "val1", "|", "|", "root", ".", "data", "=", "=", "val2", ")", "{", "return", "root", ";", "}", "Node", "left", "=", "lowestCommonAncestor", "(", "val1", ",", "val2", ",", "root", ".", "left", ")", ";", "Node", "right", "=", "lowestCommonAncestor", "(", "val1", ",", "val2", ",", "root", ".", "right", ")", ";", "if", "(", "left", "!", "=", "null", "&", "&", "right", "!", "=", "null", ")", "{", "return", "root", ";", "}", "return", "left", "!", "=", "null", "?", "left", ":", "right", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "BinaryTree", "bt", "=", "new", "BinaryTree", "(", ")", ";", "Node", "root", "=", "null", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:10>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "-", "<NUM_LIT:10>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "0", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "-", "<NUM_LIT:20>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:15>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "root", ")", ";", "LowestCommonAncestorInBinaryTree", "lca", "=", "new", "LowestCommonAncestorInBinaryTree", "(", ")", ";", "Node", "result", "=", "lca", ".", "lowestCommonAncestor", "(", "0", ",", "-", "<NUM_LIT:20>", ",", "root", ")", ";", "System", ".", "out", ".", "print", "(", "result", ".", "data", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "printPath", "(", "Node", "root", ",", "int", "sum", ",", "List", "<", "Node", ">", "path", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", "false", ";", "}", "if", "(", "root", ".", "left", "=", "=", "null", "&", "&", "root", ".", "right", "=", "=", "null", ")", "{", "if", "(", "root", ".", "data", "=", "=", "sum", ")", "{", "path", ".", "add", "(", "root", ")", ";", "return", "true", ";", "}", "else", "{", "return", "false", ";", "}", "}", "if", "(", "printPath", "(", "root", ".", "left", ",", "sum", "-", "root", ".", "data", ",", "path", ")", "|", "|", "printPath", "(", "root", ".", "right", ",", "sum", "-", "root", ".", "data", ",", "path", ")", ")", "{", "path", ".", "add", "(", "root", ")", ";", "return", "true", ";", "}", "return", "false", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "RootToLeafToSum", "rtl", "=", "new", "RootToLeafToSum", "(", ")", ";", "BinaryTree", "bt", "=", "new", "BinaryTree", "(", ")", ";", "Node", "head", "=", "null", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:10>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:15>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:5>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:7>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:20>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:4>", ",", "head", ")", ";", "head", "=", "bt", ".", "addNode", "(", "<NUM_LIT:3>", ",", "head", ")", ";", "List", "<", "Node", ">", "result", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "boolean", "r", "=", "rtl", ".", "printPath", "(", "head", ",", "<NUM_LIT>", ",", "result", ")", ";", "if", "(", "r", ")", "{", "result", ".", "forEach", "(", "node", "-", ">", "System", ".", "out", ".", "print", "(", "node", ".", "data", "+", "\"", "\"", ")", ")", ";", "}", "else", "{", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", "+", "<NUM_LIT>", ")", ";", "}", "}", "</s>"]
["<s>", "public", "FillupMatrix", "(", "int", "size", ")", "{", "matrix", "=", "new", "boolean", "[", "size", "]", "[", "size", "]", ";", "this", ".", "size", "=", "size", ";", "pos", "=", "new", "AtomicLong", "(", "-", "1", ")", ";", "}", "</s>"]
["<s>", "public", "void", "updateMatrix", "(", ")", "{", "long", "pos", "=", "next", "(", ")", ";", "updateMatrix", "(", "pos", ")", ";", "}", "</s>"]
["<s>", "private", "void", "updateMatrix", "(", "long", "pos", ")", "{", "if", "(", "pos", ">", "=", "size", "*", "size", ")", "{", "throw", "new", "IllegalArgumentException", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "matrix", "[", "(", "int", ")", "(", "pos", "/", "size", ")", "]", "[", "(", "int", ")", "(", "pos", "%", "size", ")", "]", "=", "true", ";", "}", "</s>"]
["<s>", "private", "long", "next", "(", ")", "{", "long", "val", "=", "pos", ".", "incrementAndGet", "(", ")", ";", "return", "val", ";", "}", "</s>"]
["<s>", "public", "boolean", "getVal", "(", "int", "x", ",", "int", "y", ")", "{", "return", "matrix", "[", "x", "]", "[", "y", "]", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "throws", "InterruptedException", "{", "int", "size", "=", "<NUM_LIT>", ";", "FillupMatrix", "fum", "=", "new", "FillupMatrix", "(", "size", ")", ";", "ExecutorService", "executor", "=", "Executors", ".", "newFixedThreadPool", "(", "<NUM_LIT:10>", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "size", "*", "size", ";", "i", "+", "+", ")", "{", "executor", ".", "execute", "(", "(", ")", "-", ">", "fum", ".", "updateMatrix", "(", ")", ")", ";", "}", "executor", ".", "shutdown", "(", ")", ";", "executor", ".", "awaitTermination", "(", "<NUM_LIT:10>", ",", "TimeUnit", ".", "SECONDS", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "size", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "size", ";", "j", "+", "+", ")", "{", "assert", "fum", ".", "getVal", "(", "i", ",", "j", ")", ";", "}", "}", "}", "</s>"]
["<s>", "public", "void", "updateMinMax", "(", "int", "value", ")", "{", "while", "(", "true", ")", "{", "int", "minVal", "=", "min", ".", "get", "(", ")", ";", "if", "(", "value", ">", "=", "minVal", ")", "{", "break", ";", "}", "boolean", "isSetSuccesful", "=", "min", ".", "compareAndSet", "(", "minVal", ",", "value", ")", ";", "if", "(", "isSetSuccesful", ")", "{", "break", ";", "}", "}", "while", "(", "true", ")", "{", "int", "maxVal", "=", "max", ".", "get", "(", ")", ";", "if", "(", "value", "<", "=", "maxVal", ")", "{", "break", ";", "}", "boolean", "isSetSuccesful", "=", "max", ".", "compareAndSet", "(", "maxVal", ",", "value", ")", ";", "if", "(", "isSetSuccesful", ")", "{", "break", ";", "}", "}", "}", "</s>"]
["<s>", "public", "int", "getMin", "(", ")", "{", "return", "min", ".", "get", "(", ")", ";", "}", "</s>"]
["<s>", "public", "int", "getMax", "(", ")", "{", "return", "max", ".", "get", "(", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "throws", "InterruptedException", "{", "ExecutorService", "executors", "=", "Executors", ".", "newFixedThreadPool", "(", "<NUM_LIT:100>", ")", ";", "MinMaxKeeper", "mmKeeper", "=", "new", "MinMaxKeeper", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "<NUM_LIT>", ";", "i", "+", "+", ")", "{", "GenerateRand", "rand", "=", "new", "GenerateRand", "(", "mmKeeper", ",", "i", ")", ";", "executors", ".", "execute", "(", "rand", ")", ";", "}", "executors", ".", "shutdown", "(", ")", ";", "executors", ".", "awaitTermination", "(", "<NUM_LIT:10>", ",", "TimeUnit", ".", "SECONDS", ")", ";", "assert", "mmKeeper", ".", "getMin", "(", ")", "=", "=", "-", "1", ";", "assert", "mmKeeper", ".", "getMax", "(", ")", "=", "=", "<NUM_LIT>", ";", "}", "</s>"]
["<s>", "public", "GenerateRand", "(", "MinMaxKeeper", "mmKeeper", ",", "int", "index", ")", "{", "this", ".", "index", "=", "index", ";", "this", ".", "mmKeeper", "=", "mmKeeper", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "void", "run", "(", ")", "{", "int", "rand", "=", "ThreadLocalRandom", ".", "current", "(", ")", ".", "nextInt", "(", "<NUM_LIT>", ")", ";", "if", "(", "index", "=", "=", "<NUM_LIT>", ")", "{", "rand", "=", "-", "1", ";", "}", "if", "(", "index", "=", "=", "<NUM_LIT>", ")", "{", "rand", "=", "<NUM_LIT>", ";", "}", "mmKeeper", ".", "updateMinMax", "(", "rand", ")", ";", "}", "</s>"]
["<s>", "public", "Thread", "run", "(", "Runnable", "runnable", ")", "{", "Thread", "t", "=", "new", "Thread", "(", "runnable", ")", ";", "t", ".", "start", "(", ")", ";", "return", "t", ";", "}", "</s>"]
["<s>", "public", "ThreadPoolImpl", "(", "int", "size", ",", "ThreadPool", "threadPool", ")", "{", "maxSize", "=", "size", ";", "this", ".", "threadPool", "=", "threadPool", ";", "}", "</s>"]
["<s>", "public", "void", "setMax", "(", "int", "size", ")", "{", "System", ".", "out", ".", "print", "(", "\"", "<STR_LIT>", "\"", "+", "size", ")", ";", "if", "(", "maxSize", "=", "=", "0", ")", "{", "maxSize", "=", "size", ";", "execute", "(", ")", ";", "}", "else", "{", "maxSize", "=", "size", ";", "}", "}", "</s>"]
["<s>", "public", "void", "run", "(", "Runnable", "thread", ")", "{", "synchronized", "(", "monitor", ")", "{", "waitingThreads", ".", "offer", "(", "thread", ")", ";", "execute", "(", ")", ";", "}", "}", "</s>"]
["<s>", "private", "void", "execute", "(", ")", "{", "if", "(", "!", "isExecuting", ")", "{", "isExecuting", "=", "true", ";", "ExecutingRunnable", "runnable", "=", "new", "ExecutingRunnable", "(", ")", ";", "threadPool", ".", "run", "(", "runnable", ")", ";", "}", "}", "</s>"]
["<s>", "@", "Override", "public", "void", "run", "(", ")", "{", "while", "(", "true", ")", "{", "synchronized", "(", "monitor", ")", "{", "if", "(", "maxSize", "=", "=", "0", ")", "{", "isExecuting", "=", "false", ";", "break", ";", "}", "}", "while", "(", "waitingThreads", ".", "size", "(", ")", ">", "0", ")", "{", "synchronized", "(", "monitor", ")", "{", "if", "(", "maxSize", "=", "=", "0", ")", "{", "isExecuting", "=", "false", ";", "break", ";", "}", "}", "if", "(", "currentSize", "<", "maxSize", ")", "{", "currentSize", "+", "+", ";", "Runnable", "run", "=", "waitingThreads", ".", "poll", "(", ")", ";", "RunnableThreads", "r", "=", "new", "RunnableThreads", "(", "run", ")", ";", "threadPool", ".", "run", "(", "r", ")", ";", "}", "}", "synchronized", "(", "monitor", ")", "{", "if", "(", "waitingThreads", ".", "size", "(", ")", "=", "=", "0", ")", "{", "isExecuting", "=", "false", ";", "break", ";", "}", "}", "}", "}", "</s>"]
["<s>", "RunnableThreads", "(", "Runnable", "r", ")", "{", "this", ".", "r", "=", "r", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "void", "run", "(", ")", "{", "r", ".", "run", "(", ")", ";", "currentSize", "-", "-", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "throws", "InterruptedException", "{", "ThreadPool", "threadPool", "=", "new", "ThreadPool", "(", ")", ";", "ThreadPoolImpl", "impl", "=", "new", "ThreadPoolImpl", "(", "<NUM_LIT:4>", ",", "threadPool", ")", ";", "int", "i", ";", "for", "(", "i", "=", "0", ";", "i", "<", "<NUM_LIT:10>", ";", "i", "+", "+", ")", "{", "MyRunnable", "runnable", "=", "new", "MyRunnable", "(", "i", ")", ";", "impl", ".", "run", "(", "runnable", ")", ";", "}", "Thread", ".", "sleep", "(", "<NUM_LIT>", ")", ";", "impl", ".", "setMax", "(", "0", ")", ";", "Thread", ".", "sleep", "(", "<NUM_LIT>", ")", ";", "impl", ".", "setMax", "(", "<NUM_LIT:6>", ")", ";", "for", "(", ";", "i", "<", "<NUM_LIT:15>", ";", "i", "+", "+", ")", "{", "MyRunnable", "runnable", "=", "new", "MyRunnable", "(", "i", ")", ";", "impl", ".", "run", "(", "runnable", ")", ";", "}", "}", "</s>"]
["<s>", "MyRunnable", "(", "int", "index", ")", "{", "this", ".", "index", "=", "index", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "void", "run", "(", ")", "{", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", "+", "index", ")", ";", "try", "{", "Thread", ".", "sleep", "(", "<NUM_LIT>", ")", ";", "}", "catch", "(", "InterruptedException", "e", ")", "{", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", "+", "index", "+", "\"", "\"", "+", "e", ")", ";", "}", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", "+", "index", ")", ";", "}", "</s>"]
["<s>", "public", "void", "doWork", "(", ")", "throws", "Exception", "{", "CompletionService", "<", "String", ">", "completionService", "=", "new", "ExecutorCompletionService", "<", "String", ">", "(", "threadPool", ")", ";", "Count10", "count1", "=", "new", "Count10", "(", "1", ")", ";", "Count10", "count2", "=", "new", "Count10", "(", "<NUM_LIT:2>", ")", ";", "Count10", "count3", "=", "new", "Count10", "(", "<NUM_LIT:3>", ")", ";", "List", "<", "Future", "<", "String", ">", ">", "futureList", "=", "new", "ArrayList", "<", "Future", "<", "String", ">", ">", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "<NUM_LIT:20>", ";", "i", "+", "+", ")", "{", "futureList", ".", "add", "(", "completionService", ".", "submit", "(", "new", "Count10", "(", "i", ")", ")", ")", ";", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "<NUM_LIT:20>", ";", "i", "+", "+", ")", "{", "Future", "<", "String", ">", "future", "=", "completionService", ".", "take", "(", ")", ";", "System", ".", "out", ".", "println", "(", "future", ".", "get", "(", ")", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "throws", "Exception", "{", "ThreadPoolExample", "tpe", "=", "new", "ThreadPoolExample", "(", ")", ";", "tpe", ".", "doWork", "(", ")", ";", "}", "</s>"]
["<s>", "Count10", "(", "int", "i", ")", "{", "index", "=", "i", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "String", "call", "(", ")", "throws", "Exception", "{", "int", "sleepTime", "=", "<NUM_LIT>", "+", "1", ";", "try", "{", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", "+", "index", ")", ";", "Thread", ".", "sleep", "(", "sleepTime", ")", ";", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", "+", "index", ")", ";", "}", "catch", "(", "InterruptedException", "e", ")", "{", "e", ".", "printStackTrace", "(", ")", ";", "}", "return", "\"", "<STR_LIT>", "\"", "+", "index", ";", "}", "</s>"]
["<s>", "public", "String", "getUpdate", "(", ")", "{", "return", "update", ";", "}", "</s>"]
["<s>", "public", "String", "getDomain", "(", ")", "{", "return", "domain", ";", "}", "</s>"]
["<s>", "boolean", "acquireLock", "(", "String", "domain", ")", ";", "</s>"]
["<s>", "boolean", "releaseLock", "(", "String", "domain", ")", ";", "</s>"]
["<s>", "boolean", "isLocked", "(", "String", "domain", ")", ";", "</s>"]
["<s>", "public", "ThreadPoolManager", "(", "int", "numOfThreads", ")", "{", "}", "</s>"]
["<s>", "public", "void", "applyUpdates", "(", "String", "domain", ",", "String", "update", ")", ";", "</s>"]
["<s>", "public", "ThreadWorker", "(", "QueueManager", "mgr", ")", "{", "this", ".", "mgr", "=", "mgr", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "void", "run", "(", ")", "{", "while", "(", "true", ")", "{", "Pair", "p", "=", "mgr", ".", "getDataFromFrontOfQueue", "(", "domainLock", ")", ";", "if", "(", "p", ".", "yourLock", ")", "{", "Queue", "<", "Data", ">", "queue", "=", "domainQueueMap", ".", "get", "(", "p", ".", "data", ".", "getDomain", "(", ")", ")", ";", "if", "(", "queue", "!", "=", "null", ")", "{", "while", "(", "queue", ".", "size", "(", ")", ">", "0", ")", "{", "Data", "data", "=", "queue", ".", "poll", "(", ")", ";", "databaseLayer", ".", "applyUpdates", "(", "data", ".", "getDomain", "(", ")", ",", "data", ".", "getUpdate", "(", ")", ")", ";", "}", "}", "databaseLayer", ".", "applyUpdates", "(", "p", ".", "data", ".", "getDomain", "(", ")", ",", "p", ".", "data", ".", "getUpdate", "(", ")", ")", ";", "queue", "=", "domainQueueMap", ".", "get", "(", "p", ".", "data", ".", "getDomain", "(", ")", ")", ";", "if", "(", "queue", "!", "=", "null", ")", "{", "while", "(", "queue", ".", "size", "(", ")", ">", "0", ")", "{", "Data", "data", "=", "queue", ".", "poll", "(", ")", ";", "databaseLayer", ".", "applyUpdates", "(", "data", ".", "getDomain", "(", ")", ",", "data", ".", "getUpdate", "(", ")", ")", ";", "}", "}", "domainLock", ".", "releaseLock", "(", "p", ".", "data", ".", "getDomain", "(", ")", ")", ";", "}", "else", "{", "if", "(", "domainQueueMap", ".", "containsKey", "(", "p", ".", "data", ".", "getDomain", "(", ")", ")", ")", "{", "Queue", "<", "Data", ">", "queue", "=", "domainQueueMap", ".", "get", "(", "p", ".", "data", ".", "getDomain", "(", ")", ")", ";", "queue", ".", "offer", "(", "p", ".", "data", ")", ";", "}", "}", "}", "}", "</s>"]
["<s>", "public", "Data", "getNextData", "(", ")", ";", "</s>"]
["<s>", "public", "QueueManager", "(", "QueueHandle", "queueHandle", ")", "{", "this", ".", "queueHandle", "=", "queueHandle", ";", "}", "</s>"]
["<s>", "public", "synchronized", "Pair", "getDataFromFrontOfQueue", "(", "DomainLock", "domainLock", ")", "{", "Data", "data", "=", "queueHandle", ".", "getNextData", "(", ")", ";", "boolean", "yourLock", "=", "false", ";", "if", "(", "!", "domainLock", ".", "isLocked", "(", "data", ".", "getDomain", "(", ")", ")", ")", "{", "domainLock", ".", "acquireLock", "(", "data", ".", "getDomain", "(", ")", ")", ";", "yourLock", "=", "true", ";", "}", "Pair", "p", "=", "new", "Pair", "(", ")", ";", "p", ".", "data", "=", "data", ";", "p", ".", "yourLock", "=", "yourLock", ";", "return", "p", ";", "}", "</s>"]
["<s>", "private", "synchronized", "int", "ice", "(", "int", "oldValue", ",", "int", "newValue", ")", "{", "if", "(", "oldValue", "=", "=", "val", ")", "{", "val", "=", "newValue", ";", "return", "oldValue", ";", "}", "else", "{", "return", "val", ";", "}", "}", "</s>"]
["<s>", "void", "acquireLock", "(", ")", "{", "while", "(", "ice", "(", "0", ",", "1", ")", "!", "=", "0", ")", ";", "}", "</s>"]
["<s>", "void", "releaseLock", "(", ")", "{", "ice", "(", "1", ",", "0", ")", ";", "}", "</s>"]
["<s>", "public", "void", "changeBuffer", "(", "String", "str", ")", "{", "buff", ".", "append", "(", "str", ")", ";", "}", "</s>"]
["<s>", "public", "String", "getBuffer", "(", ")", "{", "return", "buff", ".", "toString", "(", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "throws", "Exception", "{", "SpinLockMutex", "slm", "=", "new", "SpinLockMutex", "(", ")", ";", "Mutex", "m", "=", "new", "Mutex", "(", ")", ";", "Thread", "t1", "=", "new", "Thread", "(", "(", ")", "-", ">", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "<NUM_LIT:10>", ";", "i", "+", "+", ")", "{", "m", ".", "acquireLock", "(", ")", ";", "slm", ".", "changeBuffer", "(", "\"", "<STR_LIT>", "\"", "+", "i", ")", ";", "m", ".", "releaseLock", "(", ")", ";", "}", "}", ")", ";", "Thread", "t2", "=", "new", "Thread", "(", "(", ")", "-", ">", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "<NUM_LIT:10>", ";", "i", "+", "+", ")", "{", "m", ".", "acquireLock", "(", ")", ";", "slm", ".", "changeBuffer", "(", "\"", "<STR_LIT>", "\"", "+", "i", ")", ";", "m", ".", "releaseLock", "(", ")", ";", "}", "}", ")", ";", "t1", ".", "start", "(", ")", ";", "t2", ".", "start", "(", ")", ";", "try", "{", "t1", ".", "join", "(", ")", ";", "t2", ".", "join", "(", ")", ";", "}", "catch", "(", "InterruptedException", "e", ")", "{", "throw", "e", ";", "}", "System", ".", "out", ".", "println", "(", "slm", ".", "getBuffer", "(", ")", ")", ";", "}", "</s>"]
["<s>", "public", "BoundedBlockingQueue", "(", "int", "size", ")", "{", "items", "=", "new", "Object", "[", "size", "]", ";", "lock", "=", "new", "ReentrantLock", "(", ")", ";", "notEmpty", "=", "lock", ".", "newCondition", "(", ")", ";", "notFull", "=", "lock", ".", "newCondition", "(", ")", ";", "}", "</s>"]
["<s>", "public", "Optional", "<", "T", ">", "poll", "(", "long", "timeout", ",", "TimeUnit", "timeUnit", ")", "throws", "InterruptedException", "{", "long", "left", "=", "timeUnit", ".", "toNanos", "(", "timeout", ")", ";", "lock", ".", "lockInterruptibly", "(", ")", ";", "T", "t", ";", "try", "{", "while", "(", "count", "=", "=", "0", ")", "{", "if", "(", "left", "<", "=", "0", ")", "{", "return", "Optional", ".", "empty", "(", ")", ";", "}", "left", "=", "notEmpty", ".", "awaitNanos", "(", "timeUnit", ".", "toNanos", "(", "left", ")", ")", ";", "}", "t", "=", "dequeue", "(", ")", ";", "notFull", ".", "signal", "(", ")", ";", "}", "finally", "{", "lock", ".", "unlock", "(", ")", ";", "}", "return", "Optional", ".", "of", "(", "t", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "offer", "(", "T", "t", ",", "long", "timeout", ",", "TimeUnit", "timeUnit", ")", "throws", "InterruptedException", "{", "if", "(", "t", "=", "=", "null", ")", "{", "throw", "new", "IllegalArgumentException", "(", ")", ";", "}", "long", "left", "=", "timeUnit", ".", "toNanos", "(", "timeout", ")", ";", "lock", ".", "lockInterruptibly", "(", ")", ";", "try", "{", "while", "(", "count", "=", "=", "items", ".", "length", ")", "{", "if", "(", "left", "<", "=", "0", ")", "{", "return", "false", ";", "}", "left", "=", "notFull", ".", "awaitNanos", "(", "timeUnit", ".", "toNanos", "(", "left", ")", ")", ";", "}", "enqueue", "(", "t", ")", ";", "notEmpty", ".", "signal", "(", ")", ";", "}", "finally", "{", "lock", ".", "unlock", "(", ")", ";", "}", "return", "true", ";", "}", "</s>"]
["<s>", "private", "void", "enqueue", "(", "T", "t", ")", "{", "items", "[", "putIndex", "]", "=", "t", ";", "if", "(", "+", "+", "putIndex", "=", "=", "items", ".", "length", ")", "{", "putIndex", "=", "0", ";", "}", "count", "+", "+", ";", "}", "</s>"]
["<s>", "@", "SuppressWarnings", "(", "\"", "<STR_LIT>", "\"", ")", "private", "T", "dequeue", "(", ")", "{", "T", "t", "=", "(", "T", ")", "items", "[", "takeIndex", "]", ";", "items", "[", "takeIndex", "]", "=", "null", ";", "if", "(", "+", "+", "takeIndex", "=", "=", "items", ".", "length", ")", "{", "takeIndex", "=", "0", ";", "}", "count", "-", "-", ";", "return", "t", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "throws", "Exception", "{", "verifyQueueWorks", "(", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "verifyQueueWorks", "(", ")", "throws", "Exception", "{", "BoundedBlockingQueue", "<", "Integer", ">", "queue", "=", "new", "BoundedBlockingQueue", "<", ">", "(", "<NUM_LIT:30>", ")", ";", "ExecutorService", "writeExecutors", "=", "Executors", ".", "newFixedThreadPool", "(", "<NUM_LIT:10>", ")", ";", "int", "TOTAL", "=", "<NUM_LIT>", ";", "AtomicInteger", "result", "[", "]", "=", "new", "AtomicInteger", "[", "TOTAL", "]", ";", "AtomicInteger", "test", "=", "new", "AtomicInteger", "(", "0", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "TOTAL", ";", "i", "+", "+", ")", "{", "writeExecutors", ".", "execute", "(", "(", ")", "-", ">", "{", "try", "{", "int", "val", "=", "test", ".", "getAndIncrement", "(", ")", ";", "result", "[", "val", "]", "=", "new", "AtomicInteger", "(", "1", ")", ";", "while", "(", "true", ")", "{", "if", "(", "queue", ".", "offer", "(", "val", ",", "(", "long", ")", "(", "Math", ".", "random", "(", ")", "*", "<NUM_LIT:100>", "+", "1", ")", ",", "TimeUnit", ".", "MILLISECONDS", ")", ")", "{", "break", ";", "}", "}", "}", "catch", "(", "InterruptedException", "e", ")", "{", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "}", ")", ";", "}", "ExecutorService", "readExecutors", "=", "Executors", ".", "newFixedThreadPool", "(", "<NUM_LIT:10>", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "TOTAL", ";", "i", "+", "+", ")", "{", "readExecutors", ".", "execute", "(", "(", ")", "-", ">", "{", "try", "{", "while", "(", "true", ")", "{", "Optional", "<", "Integer", ">", "r", "=", "queue", ".", "poll", "(", "(", "long", ")", "(", "Math", ".", "random", "(", ")", "*", "<NUM_LIT:1000>", "+", "1", ")", ",", "TimeUnit", ".", "MILLISECONDS", ")", ";", "if", "(", "r", ".", "isPresent", "(", ")", ")", "{", "result", "[", "r", ".", "get", "(", ")", "]", ".", "incrementAndGet", "(", ")", ";", "}", "}", "}", "catch", "(", "InterruptedException", "e", ")", "{", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "}", ")", ";", "}", "Thread", ".", "sleep", "(", "<NUM_LIT>", ")", ";", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "result", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "result", "[", "i", "]", ".", "get", "(", ")", "!", "=", "<NUM_LIT:2>", ")", "{", "throw", "new", "RuntimeException", "(", "String", ".", "valueOf", "(", "i", ")", ")", ";", "}", "}", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", ")", ";", "readExecutors", ".", "shutdownNow", "(", ")", ";", "writeExecutors", ".", "shutdownNow", "(", ")", ";", "}", "</s>"]
["<s>", "private", "RealTimeCounter", "(", ")", "{", "PositionUpdater", "positionUpdater", "=", "new", "PositionUpdater", "(", "this", ")", ";", "positionUpdater", ".", "start", "(", ")", ";", "}", "</s>"]
["<s>", "public", "static", "RealTimeCounter", "getInstance", "(", ")", "{", "if", "(", "INSTANCE", "=", "=", "null", ")", "{", "synchronized", "(", "RealTimeCounter", ".", "class", ")", "{", "if", "(", "INSTANCE", "=", "=", "null", ")", "{", "INSTANCE", "=", "new", "RealTimeCounter", "(", ")", ";", "}", "}", "}", "return", "INSTANCE", ";", "}", "</s>"]
["<s>", "public", "long", "getTotalEvents", "(", ")", "{", "int", "total", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "GRANULARITY", ";", "i", "+", "+", ")", "{", "total", "+", "=", "counter", ".", "get", "(", "i", ")", ";", "}", "return", "total", ";", "}", "</s>"]
["<s>", "public", "void", "addEvent", "(", ")", "{", "counter", ".", "getAndIncrement", "(", "pos", ")", ";", "}", "</s>"]
["<s>", "void", "incrementPosition", "(", ")", "{", "counter", ".", "set", "(", "(", "pos", "+", "1", ")", "%", "GRANULARITY", ",", "0", ")", ";", "pos", "=", "(", "pos", "+", "1", ")", "%", "GRANULARITY", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "ExecutorService", "executor", "=", "Executors", ".", "newFixedThreadPool", "(", "<NUM_LIT:10>", ")", ";", "RealTimeCounter", "realTimeCounter", "=", "new", "RealTimeCounter", "(", ")", ";", "final", "Random", "random", "=", "new", "Random", "(", ")", ";", "final", "int", "TOTAL_EVENTS", "=", "<NUM_LIT>", ";", "CountDownLatch", "countDownLatch", "=", "new", "CountDownLatch", "(", "TOTAL_EVENTS", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "TOTAL_EVENTS", ";", "i", "+", "+", ")", "{", "executor", ".", "execute", "(", "(", ")", "-", ">", "{", "realTimeCounter", ".", "addEvent", "(", ")", ";", "try", "{", "Thread", ".", "sleep", "(", "random", ".", "nextInt", "(", "<NUM_LIT:10>", ")", ")", ";", "}", "catch", "(", "Exception", "e", ")", "{", "e", ".", "printStackTrace", "(", ")", ";", "}", "countDownLatch", ".", "countDown", "(", ")", ";", "}", ")", ";", "}", "try", "{", "countDownLatch", ".", "await", "(", ")", ";", "}", "catch", "(", "Exception", "e", ")", "{", "}", "System", ".", "out", ".", "println", "(", "realTimeCounter", ".", "getTotalEvents", "(", ")", ")", ";", "executor", ".", "shutdownNow", "(", ")", ";", "}", "</s>"]
["<s>", "PositionUpdater", "(", "RealTimeCounter", "realTimeCounter", ")", "{", "this", ".", "realTimeCounter", "=", "realTimeCounter", ";", "}", "</s>"]
["<s>", "public", "void", "start", "(", ")", "{", "timer", ".", "schedule", "(", "this", ",", "DELAY", ")", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "void", "run", "(", ")", "{", "realTimeCounter", ".", "incrementPosition", "(", ")", ";", "}", "</s>"]
["<s>", "public", "void", "addWord", "(", "String", "word", ")", "{", "AtomicLong", "l", "=", "map", ".", "get", "(", "word", ")", ";", "if", "(", "l", "=", "=", "null", ")", "{", "l", "=", "new", "AtomicLong", "(", "1", ")", ";", "l", "=", "map", ".", "putIfAbsent", "(", "word", ",", "l", ")", ";", "if", "(", "l", "!", "=", "null", ")", "{", "l", ".", "incrementAndGet", "(", ")", ";", "}", "}", "else", "{", "l", ".", "incrementAndGet", "(", ")", ";", "}", "}", "</s>"]
["<s>", "public", "long", "getCount", "(", "String", "word", ")", "{", "AtomicLong", "l", "=", "map", ".", "get", "(", "word", ")", ";", "if", "(", "l", "!", "=", "null", ")", "{", "return", "l", ".", "longValue", "(", ")", ";", "}", "return", "0", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "throws", "InterruptedException", "{", "ExecutorService", "executor1", "=", "Executors", ".", "newFixedThreadPool", "(", "<NUM_LIT:20>", ")", ";", "ExecutorService", "executor2", "=", "Executors", ".", "newFixedThreadPool", "(", "<NUM_LIT:20>", ")", ";", "ExecutorService", "executor3", "=", "Executors", ".", "newFixedThreadPool", "(", "<NUM_LIT:20>", ")", ";", "int", "total", "=", "<NUM_LIT>", ";", "CountDownLatch", "countDownLatch", "=", "new", "CountDownLatch", "(", "<NUM_LIT:3>", "*", "total", ")", ";", "CountingWord", "cw", "=", "new", "CountingWord", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "total", ";", "i", "+", "+", ")", "{", "executor1", ".", "execute", "(", "(", ")", "-", ">", "cw", ".", "addWord", "(", "\"", "<STR_LIT:1>", "\"", ")", ")", ";", "countDownLatch", ".", "countDown", "(", ")", ";", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "total", ";", "i", "+", "+", ")", "{", "executor2", ".", "execute", "(", "(", ")", "-", ">", "cw", ".", "addWord", "(", "\"", "<STR_LIT:2>", "\"", ")", ")", ";", "countDownLatch", ".", "countDown", "(", ")", ";", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "total", ";", "i", "+", "+", ")", "{", "executor3", ".", "execute", "(", "(", ")", "-", ">", "cw", ".", "addWord", "(", "\"", "<STR_LIT:3>", "\"", ")", ")", ";", "countDownLatch", ".", "countDown", "(", ")", ";", "}", "try", "{", "countDownLatch", ".", "await", "(", ")", ";", "}", "catch", "(", "InterruptedException", "e", ")", "{", "throw", "e", ";", "}", "executor1", ".", "shutdownNow", "(", ")", ";", "executor2", ".", "shutdownNow", "(", ")", ";", "executor3", ".", "shutdownNow", "(", ")", ";", "long", "count1", "=", "cw", ".", "getCount", "(", "\"", "<STR_LIT:1>", "\"", ")", ";", "long", "count2", "=", "cw", ".", "getCount", "(", "\"", "<STR_LIT:2>", "\"", ")", ";", "long", "count3", "=", "cw", ".", "getCount", "(", "\"", "<STR_LIT:3>", "\"", ")", ";", "assert", "count1", "=", "=", "total", ";", "assert", "count2", "=", "=", "total", ";", "assert", "count3", "=", "=", "total", ";", "}", "</s>"]
["<s>", "public", "int", "minimumCoinTopDown", "(", "int", "total", ",", "int", "coins", "[", "]", ",", "Map", "<", "Integer", ",", "Integer", ">", "map", ")", "{", "if", "(", "total", "=", "=", "0", ")", "{", "return", "0", ";", "}", "if", "(", "map", ".", "containsKey", "(", "total", ")", ")", "{", "return", "map", ".", "get", "(", "total", ")", ";", "}", "int", "min", "=", "Integer", ".", "MAX_VALUE", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "coins", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "coins", "[", "i", "]", ">", "total", ")", "{", "continue", ";", "}", "int", "val", "=", "minimumCoinTopDown", "(", "total", "-", "coins", "[", "i", "]", ",", "coins", ",", "map", ")", ";", "if", "(", "val", "<", "min", ")", "{", "min", "=", "val", ";", "}", "}", "min", "=", "(", "min", "=", "=", "Integer", ".", "MAX_VALUE", "?", "min", ":", "min", "+", "1", ")", ";", "map", ".", "put", "(", "total", ",", "min", ")", ";", "return", "min", ";", "}", "</s>"]
["<s>", "public", "int", "minimumCoinBottomUp", "(", "int", "total", ",", "int", "coins", "[", "]", ")", "{", "int", "T", "[", "]", "=", "new", "int", "[", "total", "+", "1", "]", ";", "int", "R", "[", "]", "=", "new", "int", "[", "total", "+", "1", "]", ";", "T", "[", "0", "]", "=", "0", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "=", "total", ";", "i", "+", "+", ")", "{", "T", "[", "i", "]", "=", "Integer", ".", "MAX_VALUE", "-", "1", ";", "R", "[", "i", "]", "=", "-", "1", ";", "}", "for", "(", "int", "j", "=", "0", ";", "j", "<", "coins", ".", "length", ";", "j", "+", "+", ")", "{", "for", "(", "int", "i", "=", "1", ";", "i", "<", "=", "total", ";", "i", "+", "+", ")", "{", "if", "(", "i", ">", "=", "coins", "[", "j", "]", ")", "{", "if", "(", "T", "[", "i", "-", "coins", "[", "j", "]", "]", "+", "1", "<", "T", "[", "i", "]", ")", "{", "T", "[", "i", "]", "=", "1", "+", "T", "[", "i", "-", "coins", "[", "j", "]", "]", ";", "R", "[", "i", "]", "=", "j", ";", "}", "}", "}", "}", "printCoinCombination", "(", "R", ",", "coins", ")", ";", "return", "T", "[", "total", "]", ";", "}", "</s>"]
["<s>", "private", "void", "printCoinCombination", "(", "int", "R", "[", "]", ",", "int", "coins", "[", "]", ")", "{", "if", "(", "R", "[", "R", ".", "length", "-", "1", "]", "=", "=", "-", "1", ")", "{", "System", ".", "out", ".", "print", "(", "\"", "<STR_LIT>", "\"", ")", ";", "return", ";", "}", "int", "start", "=", "R", ".", "length", "-", "1", ";", "System", ".", "out", ".", "print", "(", "\"", "<STR_LIT>", "\"", ")", ";", "while", "(", "start", "!", "=", "0", ")", "{", "int", "j", "=", "R", "[", "start", "]", ";", "System", ".", "out", ".", "print", "(", "coins", "[", "j", "]", "+", "\"", "\"", ")", ";", "start", "=", "start", "-", "coins", "[", "j", "]", ";", "}", "System", ".", "out", ".", "print", "(", "\"", "<STR_LIT>", "<STR_LIT>", "\"", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "total", "=", "<NUM_LIT>", ";", "int", "coins", "[", "]", "=", "{", "<NUM_LIT:7>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:6>", "}", ";", "CoinChangingMinimumCoin", "cc", "=", "new", "CoinChangingMinimumCoin", "(", ")", ";", "Map", "<", "Integer", ",", "Integer", ">", "map", "=", "new", "HashMap", "<", ">", "(", ")", ";", "int", "topDownValue", "=", "cc", ".", "minimumCoinTopDown", "(", "total", ",", "coins", ",", "map", ")", ";", "int", "bottomUpValue", "=", "cc", ".", "minimumCoinBottomUp", "(", "total", ",", "coins", ")", ";", "System", ".", "out", ".", "print", "(", "String", ".", "format", "(", "\"", "<STR_LIT>", "\"", ",", "bottomUpValue", ",", "topDownValue", ")", ")", ";", "}", "</s>"]
["<s>", "public", "String", "breakWord", "(", "char", "[", "]", "str", ",", "int", "low", ",", "Set", "<", "String", ">", "dictionary", ")", "{", "StringBuffer", "buff", "=", "new", "StringBuffer", "(", ")", ";", "for", "(", "int", "i", "=", "low", ";", "i", "<", "str", ".", "length", ";", "i", "+", "+", ")", "{", "buff", ".", "append", "(", "str", "[", "i", "]", ")", ";", "if", "(", "dictionary", ".", "contains", "(", "buff", ".", "toString", "(", ")", ")", ")", "{", "String", "result", "=", "breakWord", "(", "str", ",", "i", "+", "1", ",", "dictionary", ")", ";", "if", "(", "result", "!", "=", "null", ")", "{", "return", "buff", ".", "toString", "(", ")", "+", "\"", "\"", "+", "result", ";", "}", "}", "}", "if", "(", "dictionary", ".", "contains", "(", "buff", ".", "toString", "(", ")", ")", ")", "{", "return", "buff", ".", "toString", "(", ")", ";", "}", "return", "null", ";", "}", "</s>"]
["<s>", "public", "String", "breakWordDP", "(", "String", "word", ",", "Set", "<", "String", ">", "dict", ")", "{", "int", "T", "[", "]", "[", "]", "=", "new", "int", "[", "word", ".", "length", "(", ")", "]", "[", "word", ".", "length", "(", ")", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "T", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "T", "[", "i", "]", ".", "length", ";", "j", "+", "+", ")", "{", "T", "[", "i", "]", "[", "j", "]", "=", "-", "1", ";", "}", "}", "for", "(", "int", "l", "=", "1", ";", "l", "<", "=", "word", ".", "length", "(", ")", ";", "l", "+", "+", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "word", ".", "length", "(", ")", "-", "l", "+", "1", ";", "i", "+", "+", ")", "{", "int", "j", "=", "i", "+", "l", "-", "1", ";", "String", "str", "=", "word", ".", "substring", "(", "i", ",", "j", "+", "1", ")", ";", "if", "(", "dict", ".", "contains", "(", "str", ")", ")", "{", "T", "[", "i", "]", "[", "j", "]", "=", "i", ";", "continue", ";", "}", "for", "(", "int", "k", "=", "i", "+", "1", ";", "k", "<", "=", "j", ";", "k", "+", "+", ")", "{", "if", "(", "T", "[", "i", "]", "[", "k", "-", "1", "]", "!", "=", "-", "1", "&", "&", "T", "[", "k", "]", "[", "j", "]", "!", "=", "-", "1", ")", "{", "T", "[", "i", "]", "[", "j", "]", "=", "k", ";", "break", ";", "}", "}", "}", "}", "if", "(", "T", "[", "0", "]", "[", "word", ".", "length", "(", ")", "-", "1", "]", "=", "=", "-", "1", ")", "{", "return", "null", ";", "}", "StringBuffer", "buffer", "=", "new", "StringBuffer", "(", ")", ";", "int", "i", "=", "0", ";", "int", "j", "=", "word", ".", "length", "(", ")", "-", "1", ";", "while", "(", "i", "<", "j", ")", "{", "int", "k", "=", "T", "[", "i", "]", "[", "j", "]", ";", "if", "(", "i", "=", "=", "k", ")", "{", "buffer", ".", "append", "(", "word", ".", "substring", "(", "i", ",", "j", "+", "1", ")", ")", ";", "break", ";", "}", "buffer", ".", "append", "(", "word", ".", "substring", "(", "i", ",", "k", ")", "+", "\"", "\"", ")", ";", "i", "=", "k", ";", "}", "return", "buffer", ".", "toString", "(", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "Set", "<", "String", ">", "dictionary", "=", "new", "HashSet", "<", "String", ">", "(", ")", ";", "dictionary", ".", "add", "(", "\"", "<STR_LIT:I>", "\"", ")", ";", "dictionary", ".", "add", "(", "\"", "<STR_LIT>", "\"", ")", ";", "dictionary", ".", "add", "(", "\"", "<STR_LIT>", "\"", ")", ";", "dictionary", ".", "add", "(", "\"", "<STR_LIT>", "\"", ")", ";", "dictionary", ".", "add", "(", "\"", "<STR_LIT>", "\"", ")", ";", "String", "str", "=", "\"", "<STR_LIT>", "\"", ";", "BreakMultipleWordsWithNoSpaceIntoSpace", "bmw", "=", "new", "BreakMultipleWordsWithNoSpaceIntoSpace", "(", ")", ";", "String", "result1", "=", "bmw", ".", "breakWordDP", "(", "str", ",", "dictionary", ")", ";", "System", ".", "out", ".", "print", "(", "result1", ")", ";", "}", "</s>"]
["<s>", "public", "int", "maxCoins", "(", "int", "[", "]", "nums", ")", "{", "int", "T", "[", "]", "[", "]", "=", "new", "int", "[", "nums", ".", "length", "]", "[", "nums", ".", "length", "]", ";", "for", "(", "int", "l", "=", "1", ";", "l", "<", "=", "nums", ".", "length", ";", "l", "+", "+", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "=", "nums", ".", "length", "-", "l", ";", "i", "+", "+", ")", "{", "int", "j", "=", "i", "+", "l", "-", "1", ";", "int", "val", "=", "0", ";", "for", "(", "int", "k", "=", "i", ";", "k", "<", "=", "j", ";", "k", "+", "+", ")", "{", "int", "left", "=", "1", ";", "int", "right", "=", "1", ";", "int", "before", "=", "0", ";", "if", "(", "i", "!", "=", "k", ")", "{", "before", "=", "T", "[", "i", "]", "[", "k", "-", "1", "]", ";", "}", "int", "after", "=", "0", ";", "if", "(", "j", "!", "=", "k", ")", "{", "after", "=", "T", "[", "k", "+", "1", "]", "[", "j", "]", ";", "}", "if", "(", "i", "!", "=", "0", ")", "{", "left", "=", "nums", "[", "i", "-", "1", "]", ";", "}", "if", "(", "j", "!", "=", "nums", ".", "length", "-", "1", ")", "{", "right", "=", "nums", "[", "j", "+", "1", "]", ";", "}", "T", "[", "i", "]", "[", "j", "]", "=", "Math", ".", "max", "(", "left", "*", "nums", "[", "k", "]", "*", "right", "+", "before", "+", "after", ",", "T", "[", "i", "]", "[", "j", "]", ")", ";", "}", "}", "}", "return", "T", "[", "0", "]", "[", "nums", ".", "length", "-", "1", "]", ";", "}", "</s>"]
["<s>", "public", "int", "maxCoinsRec", "(", "int", "nums", "[", "]", ")", "{", "int", "[", "]", "nums1", "=", "new", "int", "[", "nums", ".", "length", "+", "<NUM_LIT:2>", "]", ";", "nums1", "[", "0", "]", "=", "1", ";", "nums1", "[", "nums1", ".", "length", "-", "1", "]", "=", "1", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "nums", ".", "length", ";", "i", "+", "+", ")", "{", "nums1", "[", "i", "+", "1", "]", "=", "nums", "[", "i", "]", ";", "}", "return", "maxCoinsRecUtil", "(", "nums1", ")", ";", "}", "</s>"]
["<s>", "private", "int", "maxCoinsRecUtil", "(", "int", "[", "]", "nums", ")", "{", "if", "(", "nums", ".", "length", "=", "=", "<NUM_LIT:2>", ")", "{", "return", "0", ";", "}", "int", "max", "=", "0", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "nums", ".", "length", "-", "1", ";", "i", "+", "+", ")", "{", "int", "val", "=", "nums", "[", "i", "-", "1", "]", "*", "nums", "[", "i", "]", "*", "nums", "[", "i", "+", "1", "]", "+", "maxCoinsRecUtil", "(", "formNewArray", "(", "nums", ",", "i", ")", ")", ";", "if", "(", "val", ">", "max", ")", "{", "max", "=", "val", ";", "}", "}", "return", "max", ";", "}", "</s>"]
["<s>", "private", "int", "[", "]", "formNewArray", "(", "int", "[", "]", "input", ",", "int", "doNotIncludeIndex", ")", "{", "int", "[", "]", "newArray", "=", "new", "int", "[", "input", ".", "length", "-", "1", "]", ";", "int", "index", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "i", "=", "=", "doNotIncludeIndex", ")", "{", "continue", ";", "}", "newArray", "[", "index", "+", "+", "]", "=", "input", "[", "i", "]", ";", "}", "return", "newArray", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "BurstBalloons", "bb", "=", "new", "BurstBalloons", "(", ")", ";", "int", "input", "[", "]", "=", "{", "<NUM_LIT:3>", ",", "1", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:8>", "}", ";", "System", ".", "out", ".", "print", "(", "bb", ".", "maxCoins", "(", "input", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "longestCommonSubstring", "(", "char", "str1", "[", "]", ",", "char", "str2", "[", "]", ")", "{", "int", "T", "[", "]", "[", "]", "=", "new", "int", "[", "str1", ".", "length", "+", "1", "]", "[", "str2", ".", "length", "+", "1", "]", ";", "int", "max", "=", "0", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "=", "str1", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "1", ";", "j", "<", "=", "str2", ".", "length", ";", "j", "+", "+", ")", "{", "if", "(", "str1", "[", "i", "-", "1", "]", "=", "=", "str2", "[", "j", "-", "1", "]", ")", "{", "T", "[", "i", "]", "[", "j", "]", "=", "T", "[", "i", "-", "1", "]", "[", "j", "-", "1", "]", "+", "1", ";", "if", "(", "max", "<", "T", "[", "i", "]", "[", "j", "]", ")", "{", "max", "=", "T", "[", "i", "]", "[", "j", "]", ";", "}", "}", "}", "}", "return", "max", ";", "}", "</s>"]
["<s>", "public", "int", "longestCommonSubstringRec", "(", "char", "str1", "[", "]", ",", "char", "str2", "[", "]", ",", "int", "pos1", ",", "int", "pos2", ",", "boolean", "checkEqual", ")", "{", "if", "(", "pos1", "=", "=", "-", "1", "|", "|", "pos2", "=", "=", "-", "1", ")", "{", "return", "0", ";", "}", "if", "(", "checkEqual", ")", "{", "if", "(", "str1", "[", "pos1", "]", "=", "=", "str2", "[", "pos2", "]", ")", "{", "return", "1", "+", "longestCommonSubstringRec", "(", "str1", ",", "str2", ",", "pos1", "-", "1", ",", "pos2", "-", "1", ",", "true", ")", ";", "}", "else", "{", "return", "0", ";", "}", "}", "int", "r1", "=", "0", ";", "if", "(", "str1", "[", "pos1", "]", "=", "=", "str2", "[", "pos2", "]", ")", "{", "r1", "=", "1", "+", "longestCommonSubstringRec", "(", "str1", ",", "str2", ",", "pos1", "-", "1", ",", "pos2", "-", "1", ",", "true", ")", ";", "}", "return", "Math", ".", "max", "(", "r1", ",", "Math", ".", "max", "(", "longestCommonSubstringRec", "(", "str1", ",", "str2", ",", "pos1", "-", "1", ",", "pos2", ",", "false", ")", ",", "longestCommonSubstringRec", "(", "str1", ",", "str2", ",", "pos1", ",", "pos2", "-", "1", ",", "false", ")", ")", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "LongestCommonSubstring", "lcs", "=", "new", "LongestCommonSubstring", "(", ")", ";", "char", "str1", "[", "]", "=", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ";", "char", "str2", "[", "]", "=", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ";", "System", ".", "out", ".", "println", "(", "lcs", ".", "longestCommonSubstring", "(", "str1", ",", "str2", ")", ")", ";", "System", ".", "out", ".", "println", "(", "lcs", ".", "longestCommonSubstringRec", "(", "str1", ",", "str2", ",", "str1", ".", "length", "-", "1", ",", "str2", ".", "length", "-", "1", ",", "false", ")", ")", ";", "}", "</s>"]
["<s>", "public", "Pair", "(", "int", "a", ",", "int", "b", ")", "{", "this", ".", "a", "=", "a", ";", "this", ".", "b", "=", "b", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "int", "compareTo", "(", "Pair", "o", ")", "{", "if", "(", "this", ".", "a", "<", "=", "o", ".", "a", ")", "{", "return", "-", "1", ";", "}", "else", "{", "return", "1", ";", "}", "}", "</s>"]
["<s>", "public", "int", "maxLength", "(", "Pair", "[", "]", "arr", ")", "{", "Arrays", ".", "sort", "(", "arr", ")", ";", "int", "T", "[", "]", "=", "new", "int", "[", "arr", ".", "length", "+", "1", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "T", ".", "length", ";", "i", "+", "+", ")", "{", "T", "[", "i", "]", "=", "1", ";", "}", "for", "(", "int", "i", "=", "<NUM_LIT:2>", ";", "i", "<", "T", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "1", ";", "j", "<", "i", ";", "j", "+", "+", ")", "{", "if", "(", "arr", "[", "j", "-", "1", "]", ".", "b", "<", "arr", "[", "i", "-", "1", "]", ".", "a", ")", "{", "T", "[", "i", "]", "=", "Math", ".", "max", "(", "T", "[", "j", "]", "+", "1", ",", "T", "[", "i", "]", ")", ";", "}", "}", "}", "int", "max", "=", "0", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "T", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "max", "<", "T", "[", "i", "]", ")", "{", "max", "=", "T", "[", "i", "]", ";", "}", "}", "return", "max", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "Pair", "p", "=", "new", "Pair", "(", "<NUM_LIT:5>", ",", "<NUM_LIT:7>", ")", ";", "Pair", "p1", "=", "new", "Pair", "(", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ")", ";", "Pair", "p2", "=", "new", "Pair", "(", "<NUM_LIT:2>", ",", "<NUM_LIT:6>", ")", ";", "Pair", "p3", "=", "new", "Pair", "(", "<NUM_LIT:9>", ",", "<NUM_LIT:11>", ")", ";", "Pair", "p4", "=", "new", "Pair", "(", "<NUM_LIT:8>", ",", "<NUM_LIT:10>", ")", ";", "Pair", "p5", "=", "new", "Pair", "(", "<NUM_LIT:11>", ",", "<NUM_LIT>", ")", ";", "Pair", "[", "]", "arr", "=", "{", "p", ",", "p1", ",", "p2", ",", "p3", ",", "p4", ",", "p5", "}", ";", "MaximumLengthChainPair", "mlcp", "=", "new", "MaximumLengthChainPair", "(", ")", ";", "int", "r", "=", "mlcp", ".", "maxLength", "(", "arr", ")", ";", "System", ".", "out", ".", "print", "(", "r", ")", ";", "}", "</s>"]
["<s>", "public", "int", "findSubSquare", "(", "char", "input", "[", "]", "[", "]", ")", "{", "Cell", "T", "[", "]", "[", "]", "=", "new", "Cell", "[", "input", ".", "length", "]", "[", "input", "[", "0", "]", ".", "length", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "T", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "T", "[", "0", "]", ".", "length", ";", "j", "+", "+", ")", "{", "T", "[", "i", "]", "[", "j", "]", "=", "new", "Cell", "(", ")", ";", "}", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "input", "[", "0", "]", ".", "length", ";", "j", "+", "+", ")", "{", "if", "(", "input", "[", "i", "]", "[", "j", "]", "=", "=", "<CHAR_LIT>", ")", "{", "if", "(", "i", "=", "=", "0", "&", "&", "j", "=", "=", "0", ")", "{", "T", "[", "i", "]", "[", "j", "]", ".", "hori", "=", "1", ";", "T", "[", "i", "]", "[", "j", "]", ".", "ver", "=", "1", ";", "}", "else", "if", "(", "i", "=", "=", "0", ")", "{", "T", "[", "i", "]", "[", "j", "]", ".", "hori", "=", "T", "[", "i", "]", "[", "j", "-", "1", "]", ".", "hori", "+", "1", ";", "T", "[", "i", "]", "[", "j", "]", ".", "ver", "=", "1", ";", "}", "else", "if", "(", "j", "=", "=", "0", ")", "{", "T", "[", "i", "]", "[", "j", "]", ".", "ver", "=", "T", "[", "i", "-", "1", "]", "[", "j", "]", ".", "ver", "+", "1", ";", "T", "[", "i", "]", "[", "j", "]", ".", "hori", "=", "1", ";", "}", "else", "{", "T", "[", "i", "]", "[", "j", "]", ".", "hori", "=", "T", "[", "i", "]", "[", "j", "-", "1", "]", ".", "hori", "+", "1", ";", "T", "[", "i", "]", "[", "j", "]", ".", "ver", "=", "T", "[", "i", "-", "1", "]", "[", "j", "]", ".", "ver", "+", "1", ";", "}", "}", "}", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "T", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "T", "[", "0", "]", ".", "length", ";", "j", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "T", "[", "i", "]", "[", "j", "]", ".", "ver", "+", "\"", "<STR_LIT:U+002C>", "\"", "+", "T", "[", "i", "]", "[", "j", "]", ".", "hori", "+", "\"", "\"", ")", ";", "}", "System", ".", "out", ".", "println", "(", ")", ";", "}", "int", "max", "=", "1", ";", "for", "(", "int", "i", "=", "T", ".", "length", "-", "1", ";", "i", ">", "=", "0", ";", "i", "-", "-", ")", "{", "for", "(", "int", "j", "=", "T", "[", "0", "]", ".", "length", "-", "1", ";", "j", ">", "=", "0", ";", "j", "-", "-", ")", "{", "if", "(", "T", "[", "i", "]", "[", "j", "]", ".", "ver", "=", "=", "0", "|", "|", "T", "[", "i", "]", "[", "j", "]", ".", "ver", "=", "=", "1", "|", "|", "T", "[", "i", "]", "[", "j", "]", ".", "hori", "=", "=", "1", ")", "{", "continue", ";", "}", "int", "min", "=", "Math", ".", "min", "(", "T", "[", "i", "]", "[", "j", "]", ".", "ver", ",", "T", "[", "i", "]", "[", "j", "]", ".", "hori", ")", ";", "int", "k", "=", "0", ";", "for", "(", "k", "=", "min", ";", "k", ">", "1", ";", "k", "-", "-", ")", "{", "if", "(", "T", "[", "i", "]", "[", "j", "-", "k", "+", "1", "]", ".", "ver", ">", "=", "k", "&", "&", "T", "[", "i", "-", "k", "+", "1", "]", "[", "j", "]", ".", "hori", ">", "=", "k", ")", "{", "break", ";", "}", "}", "if", "(", "max", "<", "k", ")", "{", "max", "=", "k", ";", "}", "}", "}", "return", "max", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "char", "[", "]", "[", "]", "input", "=", "{", "{", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", "}", ",", "{", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", "}", ",", "{", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", "}", ",", "{", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", "}", ",", "{", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", "}", ",", "{", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", "}", "}", ";", "char", "[", "]", "[", "]", "input1", "=", "{", "{", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", "}", ",", "{", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", "}", ",", "{", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", "}", ",", "{", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", "}", ",", "{", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", "}", ",", "}", ";", "char", "[", "]", "[", "]", "input2", "=", "{", "{", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", "}", ",", "{", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", "}", ",", "{", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", "}", ",", "{", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", "}", ",", "{", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", "}", ",", "}", ";", "SubsquareSurrounedByXs", "ss", "=", "new", "SubsquareSurrounedByXs", "(", ")", ";", "System", ".", "out", ".", "println", "(", "ss", ".", "findSubSquare", "(", "input", ")", ")", ";", "System", ".", "out", ".", "println", "(", "ss", ".", "findSubSquare", "(", "input1", ")", ")", ";", "System", ".", "out", ".", "println", "(", "ss", ".", "findSubSquare", "(", "input2", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "minJump", "(", "int", "arr", "[", "]", ",", "int", "result", "[", "]", ")", "{", "int", "[", "]", "jump", "=", "new", "int", "[", "arr", ".", "length", "]", ";", "jump", "[", "0", "]", "=", "0", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "jump", "[", "i", "]", "=", "Integer", ".", "MAX_VALUE", "-", "1", ";", "}", "for", "(", "int", "i", "=", "1", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "i", ";", "j", "+", "+", ")", "{", "if", "(", "arr", "[", "j", "]", "+", "j", ">", "=", "i", ")", "{", "if", "(", "jump", "[", "i", "]", ">", "jump", "[", "j", "]", "+", "1", ")", "{", "result", "[", "i", "]", "=", "j", ";", "jump", "[", "i", "]", "=", "jump", "[", "j", "]", "+", "1", ";", "}", "}", "}", "}", "return", "jump", "[", "jump", ".", "length", "-", "1", "]", ";", "}", "</s>"]
["<s>", "public", "int", "jump", "(", "int", "[", "]", "nums", ")", "{", "if", "(", "nums", ".", "length", "=", "=", "1", ")", "{", "return", "0", ";", "}", "int", "count", "=", "0", ";", "int", "i", "=", "0", ";", "while", "(", "i", "+", "nums", "[", "i", "]", "<", "nums", ".", "length", "-", "1", ")", "{", "int", "maxVal", "=", "0", ";", "int", "maxValIndex", "=", "0", ";", "for", "(", "int", "j", "=", "1", ";", "j", "<", "=", "nums", "[", "i", "]", ";", "j", "+", "+", ")", "{", "if", "(", "nums", "[", "j", "+", "i", "]", "+", "j", ">", "maxVal", ")", "{", "maxVal", "=", "nums", "[", "j", "+", "i", "]", "+", "j", ";", "maxValIndex", "=", "i", "+", "j", ";", "}", "}", "i", "=", "maxValIndex", ";", "count", "+", "+", ";", "}", "return", "count", "+", "1", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "MinJumpToReachEnd", "mj", "=", "new", "MinJumpToReachEnd", "(", ")", ";", "int", "arr", "[", "]", "=", "{", "1", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:6>", ",", "1", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:9>", "}", ";", "int", "r", "[", "]", "=", "new", "int", "[", "arr", ".", "length", "]", ";", "int", "result", "=", "mj", ".", "minJump", "(", "arr", ",", "r", ")", ";", "System", ".", "out", ".", "println", "(", "result", ")", ";", "int", "i", "=", "arr", ".", "length", "-", "1", ";", "Arrays", ".", "toString", "(", "r", ")", ";", "int", "arr1", "[", "]", "=", "{", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "1", ",", "1", ",", "<NUM_LIT:4>", "}", ";", "System", ".", "out", ".", "print", "(", "mj", ".", "jump", "(", "arr", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "numberOfWays", "(", "int", "n", ",", "int", "f", ",", "int", "k", ")", "{", "int", "T", "[", "]", "[", "]", "=", "new", "int", "[", "n", "+", "1", "]", "[", "k", "+", "1", "]", ";", "T", "[", "0", "]", "[", "0", "]", "=", "1", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "=", "n", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "1", ";", "j", "<", "=", "i", "*", "f", "&", "&", "j", "<", "=", "k", ";", "j", "+", "+", ")", "{", "if", "(", "j", "=", "=", "i", ")", "{", "T", "[", "i", "]", "[", "j", "]", "=", "1", ";", "continue", ";", "}", "if", "(", "j", "<", "i", ")", "{", "continue", ";", "}", "for", "(", "int", "l", "=", "1", ";", "l", "<", "=", "f", ";", "l", "+", "+", ")", "{", "if", "(", "j", ">", "=", "l", ")", "{", "T", "[", "i", "]", "[", "j", "]", "+", "=", "T", "[", "i", "-", "1", "]", "[", "j", "-", "l", "]", ";", "}", "}", "}", "}", "return", "T", "[", "n", "]", "[", "k", "]", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "DiceThrowWays", "dtw", "=", "new", "DiceThrowWays", "(", ")", ";", "System", ".", "out", ".", "println", "(", "dtw", ".", "numberOfWays", "(", "<NUM_LIT:3>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:6>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "evaluateExpression", "(", "char", "input", "[", "]", "[", "]", ",", "Map", "<", "Character", ",", "Integer", ">", "index", ",", "char", "[", "]", "expression", ",", "char", "result", ")", "{", "Holder", "[", "]", "[", "]", "T", "=", "new", "Holder", "[", "expression", ".", "length", "]", "[", "expression", ".", "length", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "T", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "T", ".", "length", ";", "j", "+", "+", ")", "{", "T", "[", "i", "]", "[", "j", "]", "=", "new", "Holder", "(", ")", ";", "}", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "expression", ".", "length", ";", "i", "+", "+", ")", "{", "T", "[", "i", "]", "[", "i", "]", ".", "add", "(", "expression", "[", "i", "]", ")", ";", "}", "for", "(", "int", "l", "=", "<NUM_LIT:2>", ";", "l", "<", "=", "T", ".", "length", ";", "l", "+", "+", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "=", "T", ".", "length", "-", "l", ";", "i", "+", "+", ")", "{", "int", "j", "=", "i", "+", "l", "-", "1", ";", "for", "(", "int", "k", "=", "i", ";", "k", "<", "j", ";", "k", "+", "+", ")", "{", "for", "(", "char", "ch", ":", "T", "[", "i", "]", "[", "k", "]", ".", "values", "(", ")", ")", "{", "for", "(", "char", "ch1", ":", "T", "[", "k", "+", "1", "]", "[", "j", "]", ".", "values", "(", ")", ")", "{", "T", "[", "i", "]", "[", "j", "]", ".", "add", "(", "input", "[", "index", ".", "get", "(", "ch", ")", "]", "[", "index", ".", "get", "(", "ch1", ")", "]", ")", ";", "}", "}", "}", "}", "}", "for", "(", "char", "ch", ":", "T", "[", "0", "]", "[", "T", ".", "length", "-", "1", "]", ".", "values", "(", ")", ")", "{", "if", "(", "result", "=", "=", "ch", ")", "{", "return", "true", ";", "}", "}", "return", "false", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "Map", "<", "Character", ",", "Integer", ">", "index", "=", "new", "HashMap", "<", ">", "(", ")", ";", "index", ".", "put", "(", "<CHAR_LIT:a>", ",", "0", ")", ";", "index", ".", "put", "(", "<CHAR_LIT:b>", ",", "1", ")", ";", "index", ".", "put", "(", "<CHAR_LIT:c>", ",", "<NUM_LIT:2>", ")", ";", "char", "input", "[", "]", "[", "]", "=", "{", "{", "<CHAR_LIT:b>", ",", "<CHAR_LIT:b>", ",", "<CHAR_LIT:a>", "}", ",", "{", "<CHAR_LIT:c>", ",", "<CHAR_LIT:b>", ",", "<CHAR_LIT:a>", "}", ",", "{", "<CHAR_LIT:a>", ",", "<CHAR_LIT:c>", ",", "<CHAR_LIT:c>", "}", "}", ";", "SymbolExpressionEvaluation", "sbe", "=", "new", "SymbolExpressionEvaluation", "(", ")", ";", "System", ".", "out", ".", "println", "(", "sbe", ".", "evaluateExpression", "(", "input", ",", "index", ",", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ",", "<CHAR_LIT:a>", ")", ")", ";", "}", "</s>"]
["<s>", "void", "add", "(", "Character", "ch", ")", "{", "valueHolder", ".", "add", "(", "ch", ")", ";", "}", "</s>"]
["<s>", "Set", "<", "Character", ">", "values", "(", ")", "{", "return", "valueHolder", ";", "}", "</s>"]
["<s>", "public", "int", "findCost", "(", "int", "arr", "[", "]", ")", "{", "int", "temp", "[", "]", "[", "]", "=", "new", "int", "[", "arr", ".", "length", "]", "[", "arr", ".", "length", "]", ";", "int", "q", "=", "0", ";", "for", "(", "int", "l", "=", "<NUM_LIT:2>", ";", "l", "<", "arr", ".", "length", ";", "l", "+", "+", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", "-", "l", ";", "i", "+", "+", ")", "{", "int", "j", "=", "i", "+", "l", ";", "temp", "[", "i", "]", "[", "j", "]", "=", "<NUM_LIT>", ";", "for", "(", "int", "k", "=", "i", "+", "1", ";", "k", "<", "j", ";", "k", "+", "+", ")", "{", "q", "=", "temp", "[", "i", "]", "[", "k", "]", "+", "temp", "[", "k", "]", "[", "j", "]", "+", "arr", "[", "i", "]", "*", "arr", "[", "k", "]", "*", "arr", "[", "j", "]", ";", "if", "(", "q", "<", "temp", "[", "i", "]", "[", "j", "]", ")", "{", "temp", "[", "i", "]", "[", "j", "]", "=", "q", ";", "}", "}", "}", "}", "return", "temp", "[", "0", "]", "[", "arr", ".", "length", "-", "1", "]", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "MatrixMultiplicationCost", "mmc", "=", "new", "MatrixMultiplicationCost", "(", ")", ";", "int", "arr", "[", "]", "=", "{", "<NUM_LIT:4>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:3>", "}", ";", "int", "cost", "=", "mmc", ".", "findCost", "(", "arr", ")", ";", "System", ".", "out", ".", "print", "(", "cost", ")", ";", "}", "</s>"]
["<s>", "public", "int", "calculate", "(", "int", "eggs", ",", "int", "floors", ")", "{", "int", "T", "[", "]", "[", "]", "=", "new", "int", "[", "eggs", "+", "1", "]", "[", "floors", "+", "1", "]", ";", "int", "c", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "=", "floors", ";", "i", "+", "+", ")", "{", "T", "[", "1", "]", "[", "i", "]", "=", "i", ";", "}", "for", "(", "int", "e", "=", "<NUM_LIT:2>", ";", "e", "<", "=", "eggs", ";", "e", "+", "+", ")", "{", "for", "(", "int", "f", "=", "1", ";", "f", "<", "=", "floors", ";", "f", "+", "+", ")", "{", "T", "[", "e", "]", "[", "f", "]", "=", "Integer", ".", "MAX_VALUE", ";", "for", "(", "int", "k", "=", "1", ";", "k", "<", "=", "f", ";", "k", "+", "+", ")", "{", "c", "=", "1", "+", "Math", ".", "max", "(", "T", "[", "e", "-", "1", "]", "[", "k", "-", "1", "]", ",", "T", "[", "e", "]", "[", "f", "-", "k", "]", ")", ";", "if", "(", "c", "<", "T", "[", "e", "]", "[", "f", "]", ")", "{", "T", "[", "e", "]", "[", "f", "]", "=", "c", ";", "}", "}", "}", "}", "return", "T", "[", "eggs", "]", "[", "floors", "]", ";", "}", "</s>"]
["<s>", "public", "int", "calculateRecursive", "(", "int", "eggs", ",", "int", "floors", ")", "{", "if", "(", "eggs", "=", "=", "1", ")", "{", "return", "floors", ";", "}", "if", "(", "floors", "=", "=", "0", ")", "{", "return", "0", ";", "}", "int", "min", "=", "<NUM_LIT:1000>", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "=", "floors", ";", "i", "+", "+", ")", "{", "int", "val", "=", "1", "+", "Math", ".", "max", "(", "calculateRecursive", "(", "eggs", "-", "1", ",", "i", "-", "1", ")", ",", "calculateRecursive", "(", "eggs", ",", "floors", "-", "i", ")", ")", ";", "if", "(", "val", "<", "min", ")", "{", "min", "=", "val", ";", "}", "}", "return", "min", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "EggDropping", "ed", "=", "new", "EggDropping", "(", ")", ";", "int", "r", "=", "ed", ".", "calculate", "(", "<NUM_LIT:3>", ",", "<NUM_LIT:100>", ")", ";", "System", ".", "out", ".", "println", "(", "r", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "isMatch", "(", "String", "s", ",", "String", "p", ")", "{", "char", "[", "]", "str", "=", "s", ".", "toCharArray", "(", ")", ";", "char", "[", "]", "pattern", "=", "p", ".", "toCharArray", "(", ")", ";", "int", "writeIndex", "=", "0", ";", "boolean", "isFirst", "=", "true", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "pattern", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "pattern", "[", "i", "]", "=", "=", "<CHAR_LIT>", ")", "{", "if", "(", "isFirst", ")", "{", "pattern", "[", "writeIndex", "+", "+", "]", "=", "pattern", "[", "i", "]", ";", "isFirst", "=", "false", ";", "}", "}", "else", "{", "pattern", "[", "writeIndex", "+", "+", "]", "=", "pattern", "[", "i", "]", ";", "isFirst", "=", "true", ";", "}", "}", "boolean", "T", "[", "]", "[", "]", "=", "new", "boolean", "[", "str", ".", "length", "+", "1", "]", "[", "writeIndex", "+", "1", "]", ";", "if", "(", "writeIndex", ">", "0", "&", "&", "pattern", "[", "0", "]", "=", "=", "<CHAR_LIT>", ")", "{", "T", "[", "0", "]", "[", "1", "]", "=", "true", ";", "}", "T", "[", "0", "]", "[", "0", "]", "=", "true", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "T", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "1", ";", "j", "<", "T", "[", "0", "]", ".", "length", ";", "j", "+", "+", ")", "{", "if", "(", "pattern", "[", "j", "-", "1", "]", "=", "=", "<CHAR_LIT>", "|", "|", "str", "[", "i", "-", "1", "]", "=", "=", "pattern", "[", "j", "-", "1", "]", ")", "{", "T", "[", "i", "]", "[", "j", "]", "=", "T", "[", "i", "-", "1", "]", "[", "j", "-", "1", "]", ";", "}", "else", "if", "(", "pattern", "[", "j", "-", "1", "]", "=", "=", "<CHAR_LIT>", ")", "{", "T", "[", "i", "]", "[", "j", "]", "=", "T", "[", "i", "-", "1", "]", "[", "j", "]", "|", "|", "T", "[", "i", "]", "[", "j", "-", "1", "]", ";", "}", "}", "}", "return", "T", "[", "str", ".", "length", "]", "[", "writeIndex", "]", ";", "}", "</s>"]
["<s>", "public", "boolean", "isMatchRecursive", "(", "String", "s", ",", "String", "p", ")", "{", "return", "isMatchRecursiveUtil", "(", "s", ".", "toCharArray", "(", ")", ",", "p", ".", "toCharArray", "(", ")", ",", "0", ",", "0", ")", ";", "}", "</s>"]
["<s>", "private", "boolean", "isMatchRecursiveUtil", "(", "char", "[", "]", "text", ",", "char", "[", "]", "pattern", ",", "int", "pos1", ",", "int", "pos2", ")", "{", "if", "(", "pos2", "=", "=", "pattern", ".", "length", ")", "{", "return", "text", ".", "length", "=", "=", "pos1", ";", "}", "if", "(", "pattern", "[", "pos2", "]", "!", "=", "<CHAR_LIT>", ")", "{", "if", "(", "pos1", "<", "text", ".", "length", "&", "&", "(", "text", "[", "pos1", "]", "=", "=", "pattern", "[", "pos2", "]", ")", "|", "|", "pattern", "[", "pos2", "]", "=", "=", "<CHAR_LIT>", ")", "{", "return", "isMatchRecursiveUtil", "(", "text", ",", "pattern", ",", "pos1", "+", "1", ",", "pos2", "+", "1", ")", ";", "}", "else", "{", "return", "false", ";", "}", "}", "else", "{", "while", "(", "pos2", "<", "pattern", ".", "length", "-", "1", "&", "&", "pattern", "[", "pos2", "+", "1", "]", "=", "=", "<CHAR_LIT>", ")", "{", "pos2", "+", "+", ";", "}", "pos1", "-", "-", ";", "while", "(", "pos1", "<", "text", ".", "length", ")", "{", "if", "(", "isMatchRecursiveUtil", "(", "text", ",", "pattern", ",", "pos1", "+", "1", ",", "pos2", "+", "1", ")", ")", "{", "return", "true", ";", "}", "pos1", "+", "+", ";", "}", "return", "false", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "WildCardMatching", "wcm", "=", "new", "WildCardMatching", "(", ")", ";", "System", ".", "out", ".", "println", "(", "wcm", ".", "isMatch", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "fibonacciSeries", "(", "int", "n", ")", "{", "int", "n1", "=", "0", ",", "n2", "=", "1", ";", "int", "sum", ";", "if", "(", "n", "=", "=", "n1", "|", "|", "n", "=", "=", "n2", ")", "{", "return", "n", ";", "}", "for", "(", "int", "i", "=", "<NUM_LIT:2>", ";", "i", "<", "=", "n", ";", "i", "+", "+", ")", "{", "sum", "=", "n1", "+", "n2", ";", "n1", "=", "n2", ";", "n2", "=", "sum", ";", "}", "return", "n2", ";", "}", "</s>"]
["<s>", "public", "int", "fibonacciSeriesRecursive", "(", "int", "n", ")", "{", "if", "(", "n", "=", "=", "1", "|", "|", "n", "=", "=", "0", ")", "{", "return", "n", ";", "}", "return", "fibonacciSeriesRecursive", "(", "n", "-", "1", ")", "+", "fibonacciSeriesRecursive", "(", "n", "-", "<NUM_LIT:2>", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "FibonacciSeries", "fs", "=", "new", "FibonacciSeries", "(", ")", ";", "System", ".", "out", ".", "println", "(", "fs", ".", "fibonacciSeries", "(", "<NUM_LIT:15>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "fs", ".", "fibonacciSeriesRecursive", "(", "<NUM_LIT:15>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "count", "(", "int", "n", ")", "{", "int", "a", "[", "]", "=", "new", "int", "[", "n", "]", ";", "int", "b", "[", "]", "=", "new", "int", "[", "n", "]", ";", "a", "[", "0", "]", "=", "1", ";", "b", "[", "0", "]", "=", "1", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "n", ";", "i", "+", "+", ")", "{", "a", "[", "i", "]", "=", "a", "[", "i", "-", "1", "]", "+", "b", "[", "i", "-", "1", "]", ";", "b", "[", "i", "]", "=", "a", "[", "i", "-", "1", "]", ";", "}", "return", "a", "[", "n", "-", "1", "]", "+", "b", "[", "n", "-", "1", "]", ";", "}", "</s>"]
["<s>", "public", "int", "countSimple", "(", "int", "n", ")", "{", "int", "a", "=", "1", ";", "int", "b", "=", "1", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "n", ";", "i", "+", "+", ")", "{", "int", "tmp", "=", "a", ";", "a", "=", "a", "+", "b", ";", "b", "=", "tmp", ";", "}", "return", "a", "+", "b", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "CountNumberOfBinaryWithoutConsecutive1s", "cnb", "=", "new", "CountNumberOfBinaryWithoutConsecutive1s", "(", ")", ";", "System", ".", "out", ".", "println", "(", "cnb", ".", "count", "(", "<NUM_LIT:5>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "numberOfCombination", "(", "int", "k", ",", "int", "input", "[", "]", "[", "]", ")", "{", "if", "(", "input", "=", "=", "null", "|", "|", "input", ".", "length", "=", "=", "0", ")", "{", "throw", "new", "IllegalArgumentException", "(", ")", ";", "}", "Map", "<", "Integer", ",", "Integer", ">", "t", "=", "new", "HashMap", "<", "Integer", ",", "Integer", ">", "(", ")", ";", "Map", "<", "Integer", ",", "Integer", ">", "t1", "=", "new", "HashMap", "<", "Integer", ",", "Integer", ">", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "input", "[", "i", "]", ".", "length", ";", "j", "+", "+", ")", "{", "if", "(", "input", "[", "i", "]", "[", "j", "]", "<", "0", ")", "{", "continue", ";", "}", "t1", ".", "put", "(", "input", "[", "i", "]", "[", "j", "]", ",", "1", ")", ";", "}", "}", "for", "(", "int", "x", "=", "1", ";", "x", "<", "k", ";", "x", "+", "+", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "input", "[", "i", "]", ".", "length", ";", "j", "+", "+", ")", "{", "if", "(", "input", "[", "i", "]", "[", "j", "]", "<", "0", ")", "{", "continue", ";", "}", "findNeighborsAndPopulateMap", "(", "i", ",", "j", ",", "input", ",", "t", ",", "t1", ")", ";", "}", "}", "copyMap", "(", "t", ",", "t1", ")", ";", "t", ".", "clear", "(", ")", ";", "}", "int", "count", "=", "0", ";", "for", "(", "int", "i", ":", "t1", ".", "keySet", "(", ")", ")", "{", "count", "+", "=", "t1", ".", "get", "(", "i", ")", ";", "}", "return", "count", ";", "}", "</s>"]
["<s>", "private", "void", "copyMap", "(", "Map", "<", "Integer", ",", "Integer", ">", "t", ",", "Map", "<", "Integer", ",", "Integer", ">", "t1", ")", "{", "for", "(", "Integer", "i", ":", "t", ".", "keySet", "(", ")", ")", "{", "int", "c", "=", "t", ".", "get", "(", "i", ")", ";", "t1", ".", "put", "(", "i", ",", "c", ")", ";", "}", "}", "</s>"]
["<s>", "private", "void", "findNeighborsAndPopulateMap", "(", "int", "x", ",", "int", "y", ",", "int", "input", "[", "]", "[", "]", ",", "Map", "<", "Integer", ",", "Integer", ">", "t", ",", "Map", "<", "Integer", ",", "Integer", ">", "t1", ")", "{", "updateMap", "(", "input", ",", "x", ",", "y", ",", "x", "-", "1", ",", "y", ",", "t", ",", "t1", ")", ";", "updateMap", "(", "input", ",", "x", ",", "y", ",", "x", ",", "y", "-", "1", ",", "t", ",", "t1", ")", ";", "updateMap", "(", "input", ",", "x", ",", "y", ",", "x", ",", "y", ",", "t", ",", "t1", ")", ";", "updateMap", "(", "input", ",", "x", ",", "y", ",", "x", ",", "y", "+", "1", ",", "t", ",", "t1", ")", ";", "updateMap", "(", "input", ",", "x", ",", "y", ",", "x", "+", "1", ",", "y", ",", "t", ",", "t1", ")", ";", "}", "</s>"]
["<s>", "private", "void", "updateMap", "(", "int", "input", "[", "]", "[", "]", ",", "int", "x", ",", "int", "y", ",", "int", "i", ",", "int", "j", ",", "Map", "<", "Integer", ",", "Integer", ">", "t", ",", "Map", "<", "Integer", ",", "Integer", ">", "t1", ")", "{", "if", "(", "i", "<", "0", "|", "|", "i", ">", "=", "input", ".", "length", "|", "|", "j", "<", "0", "|", "|", "j", ">", "=", "input", "[", "x", "]", ".", "length", "|", "|", "input", "[", "i", "]", "[", "j", "]", "<", "0", ")", "{", "return", ";", "}", "Integer", "c", "=", "t", ".", "get", "(", "input", "[", "x", "]", "[", "y", "]", ")", ";", "if", "(", "c", "=", "=", "null", ")", "{", "c", "=", "0", ";", "}", "c", "+", "=", "t1", ".", "get", "(", "input", "[", "i", "]", "[", "j", "]", ")", ";", "t", ".", "put", "(", "input", "[", "x", "]", "[", "y", "]", ",", "c", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input", "[", "]", "[", "]", "=", "{", "{", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", "}", ",", "{", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", "}", ",", "{", "<NUM_LIT:7>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:9>", "}", ",", "{", "-", "1", ",", "0", ",", "-", "1", "}", "}", ";", "PhoneDialNumberOfCombinationOfSizeK", "pdn", "=", "new", "PhoneDialNumberOfCombinationOfSizeK", "(", ")", ";", "System", ".", "out", ".", "println", "(", "pdn", ".", "numberOfCombination", "(", "<NUM_LIT:3>", ",", "input", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "cutRodToMinimizeCost", "(", "int", "[", "]", "markings", ",", "int", "total", ")", "{", "int", "T", "[", "]", "[", "]", "=", "new", "int", "[", "total", "+", "1", "]", "[", "total", "+", "1", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "T", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "T", "[", "i", "]", ".", "length", ";", "j", "+", "+", ")", "{", "T", "[", "i", "]", "[", "j", "]", "=", "-", "1", ";", "}", "}", "return", "cutRodToMinimizeCost", "(", "markings", ",", "0", ",", "total", ",", "T", ")", ";", "}", "</s>"]
["<s>", "private", "int", "cutRodToMinimizeCost", "(", "int", "[", "]", "markings", ",", "int", "start", ",", "int", "end", ",", "int", "T", "[", "]", "[", "]", ")", "{", "if", "(", "T", "[", "start", "]", "[", "end", "]", "!", "=", "-", "1", ")", "{", "return", "T", "[", "start", "]", "[", "end", "]", ";", "}", "int", "i", ";", "for", "(", "i", "=", "0", ";", "i", "<", "markings", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "start", "<", "markings", "[", "i", "]", ")", "{", "break", ";", "}", "}", "if", "(", "i", "=", "=", "markings", ".", "length", ")", "{", "T", "[", "start", "]", "[", "end", "]", "=", "0", ";", "return", "0", ";", "}", "int", "j", ";", "for", "(", "j", "=", "markings", ".", "length", "-", "1", ";", "j", ">", "=", "0", ";", "j", "-", "-", ")", "{", "if", "(", "end", ">", "markings", "[", "j", "]", ")", "{", "break", ";", "}", "}", "if", "(", "j", "=", "=", "-", "1", ")", "{", "T", "[", "start", "]", "[", "end", "]", "=", "0", ";", "return", "0", ";", "}", "if", "(", "i", "=", "=", "j", ")", "{", "T", "[", "start", "]", "[", "end", "]", "=", "end", "-", "start", ";", "return", "end", "-", "start", ";", "}", "int", "cost", "=", "end", "-", "start", ";", "int", "minCost", "=", "Integer", ".", "MAX_VALUE", ";", "for", "(", "int", "k", "=", "i", ";", "k", "<", "=", "j", ";", "k", "+", "+", ")", "{", "int", "c1", "=", "cutRodToMinimizeCost", "(", "markings", ",", "start", ",", "markings", "[", "k", "]", ",", "T", ")", ";", "int", "c2", "=", "cutRodToMinimizeCost", "(", "markings", ",", "markings", "[", "k", "]", ",", "end", ",", "T", ")", ";", "if", "(", "c1", "=", "=", "Integer", ".", "MAX_VALUE", "|", "|", "c2", "=", "=", "Integer", ".", "MAX_VALUE", ")", "{", "continue", ";", "}", "if", "(", "minCost", ">", "c1", "+", "c2", ")", "{", "minCost", "=", "c1", "+", "c2", ";", "}", "}", "if", "(", "minCost", "=", "=", "Integer", ".", "MAX_VALUE", ")", "{", "T", "[", "start", "]", "[", "end", "]", "=", "Integer", ".", "MAX_VALUE", ";", "return", "Integer", ".", "MAX_VALUE", ";", "}", "T", "[", "start", "]", "[", "end", "]", "=", "cost", "+", "minCost", ";", "return", "cost", "+", "minCost", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "markings", "[", "]", "=", "{", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:7>", "}", ";", "CutRodToMinimizeCost", "cr", "=", "new", "CutRodToMinimizeCost", "(", ")", ";", "int", "cost", "=", "cr", ".", "cutRodToMinimizeCost", "(", "markings", ",", "<NUM_LIT:8>", ")", ";", "System", ".", "out", ".", "println", "(", "cost", ")", ";", "}", "</s>"]
["<s>", "public", "int", "longestSequence", "(", "int", "arr", "[", "]", ")", "{", "int", "lis", "[", "]", "=", "new", "int", "[", "arr", ".", "length", "]", ";", "int", "lds", "[", "]", "=", "new", "int", "[", "arr", ".", "length", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "lis", "[", "i", "]", "=", "1", ";", "lds", "[", "i", "]", "=", "1", ";", "}", "for", "(", "int", "i", "=", "1", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "i", ";", "j", "+", "+", ")", "{", "if", "(", "arr", "[", "i", "]", ">", "arr", "[", "j", "]", ")", "{", "lis", "[", "i", "]", "=", "Math", ".", "max", "(", "lis", "[", "i", "]", ",", "lis", "[", "j", "]", "+", "1", ")", ";", "}", "}", "}", "for", "(", "int", "i", "=", "arr", ".", "length", "-", "<NUM_LIT:2>", ";", "i", ">", "=", "0", ";", "i", "-", "-", ")", "{", "for", "(", "int", "j", "=", "arr", ".", "length", "-", "1", ";", "j", ">", "i", ";", "j", "-", "-", ")", "{", "if", "(", "arr", "[", "i", "]", ">", "arr", "[", "j", "]", ")", "{", "lds", "[", "i", "]", "=", "Math", ".", "max", "(", "lds", "[", "i", "]", ",", "lds", "[", "j", "]", "+", "1", ")", ";", "}", "}", "}", "int", "max", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "max", "<", "lis", "[", "i", "]", "+", "lds", "[", "i", "]", "-", "1", ")", "{", "max", "=", "lis", "[", "i", "]", "+", "lds", "[", "i", "]", "-", "1", ";", "}", "}", "return", "max", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "BitonicSequence", "bs", "=", "new", "BitonicSequence", "(", ")", ";", "int", "[", "]", "arr", "=", "{", "1", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:2>", ",", "1", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT>", ",", "0", "}", ";", "int", "r", "=", "bs", ".", "longestSequence", "(", "arr", ")", ";", "System", ".", "out", ".", "print", "(", "r", ")", ";", "}", "</s>"]
["<s>", "public", "int", "minCost", "(", "int", "[", "]", "[", "]", "cost", ",", "int", "m", ",", "int", "n", ")", "{", "int", "temp", "[", "]", "[", "]", "=", "new", "int", "[", "m", "+", "1", "]", "[", "n", "+", "1", "]", ";", "int", "sum", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "=", "n", ";", "i", "+", "+", ")", "{", "temp", "[", "0", "]", "[", "i", "]", "=", "sum", "+", "cost", "[", "0", "]", "[", "i", "]", ";", "sum", "=", "temp", "[", "0", "]", "[", "i", "]", ";", "}", "sum", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "=", "m", ";", "i", "+", "+", ")", "{", "temp", "[", "i", "]", "[", "0", "]", "=", "sum", "+", "cost", "[", "i", "]", "[", "0", "]", ";", "sum", "=", "temp", "[", "i", "]", "[", "0", "]", ";", "}", "for", "(", "int", "i", "=", "1", ";", "i", "<", "=", "m", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "1", ";", "j", "<", "=", "n", ";", "j", "+", "+", ")", "{", "temp", "[", "i", "]", "[", "j", "]", "=", "cost", "[", "i", "]", "[", "j", "]", "+", "min", "(", "temp", "[", "i", "-", "1", "]", "[", "j", "-", "1", "]", ",", "temp", "[", "i", "-", "1", "]", "[", "j", "]", ",", "temp", "[", "i", "]", "[", "j", "-", "1", "]", ")", ";", "}", "}", "return", "temp", "[", "m", "]", "[", "n", "]", ";", "}", "</s>"]
["<s>", "public", "int", "minCostRec", "(", "int", "cost", "[", "]", "[", "]", ",", "int", "m", ",", "int", "n", ")", "{", "return", "minCostRec", "(", "cost", ",", "m", ",", "n", ",", "0", ",", "0", ")", ";", "}", "</s>"]
["<s>", "public", "int", "minCostRec", "(", "int", "cost", "[", "]", "[", "]", ",", "int", "m", ",", "int", "n", ",", "int", "x", ",", "int", "y", ")", "{", "if", "(", "x", ">", "m", "|", "|", "y", ">", "n", ")", "{", "return", "Integer", ".", "MAX_VALUE", ";", "}", "if", "(", "x", "=", "=", "m", "&", "&", "y", "=", "=", "n", ")", "{", "return", "cost", "[", "m", "]", "[", "n", "]", ";", "}", "int", "t1", "=", "minCostRec", "(", "cost", ",", "m", ",", "n", ",", "x", "+", "1", ",", "y", ")", ";", "int", "t2", "=", "minCostRec", "(", "cost", ",", "m", ",", "n", ",", "x", "+", "1", ",", "y", "+", "1", ")", ";", "int", "t3", "=", "minCostRec", "(", "cost", ",", "m", ",", "n", ",", "x", ",", "y", "+", "1", ")", ";", "return", "cost", "[", "x", "]", "[", "y", "]", "+", "min", "(", "t1", ",", "t2", ",", "t3", ")", ";", "}", "</s>"]
["<s>", "private", "int", "min", "(", "int", "a", ",", "int", "b", ",", "int", "c", ")", "{", "int", "l", "=", "Math", ".", "min", "(", "a", ",", "b", ")", ";", "return", "Math", ".", "min", "(", "l", ",", "c", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "MinCostPath", "mcp", "=", "new", "MinCostPath", "(", ")", ";", "int", "cost", "[", "]", "[", "]", "=", "{", "{", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", "}", ",", "{", "<NUM_LIT:4>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:2>", "}", ",", "{", "1", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:3>", "}", ",", "{", "<NUM_LIT:6>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:9>", "}", "}", ";", "int", "result", "=", "mcp", ".", "minCost", "(", "cost", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:2>", ")", ";", "int", "result1", "=", "mcp", ".", "minCostRec", "(", "cost", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:2>", ")", ";", "System", ".", "out", ".", "println", "(", "result", ")", ";", "System", ".", "out", ".", "println", "(", "result1", ")", ";", "}", "</s>"]
["<s>", "Index", "(", "int", "remainingChanges", ",", "int", "current", ",", "boolean", "isRight", ",", "int", "prevItem", ")", "{", "this", ".", "remainingChanges", "=", "remainingChanges", ";", "this", ".", "current", "=", "current", ";", "this", ".", "isRight", "=", "isRight", ";", "this", ".", "prevItem", "=", "prevItem", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "boolean", "equals", "(", "Object", "o", ")", "{", "if", "(", "this", "=", "=", "o", ")", "return", "true", ";", "if", "(", "o", "=", "=", "null", "|", "|", "getClass", "(", ")", "!", "=", "o", ".", "getClass", "(", ")", ")", "return", "false", ";", "Index", "index", "=", "(", "Index", ")", "o", ";", "if", "(", "remainingChanges", "!", "=", "index", ".", "remainingChanges", ")", "return", "false", ";", "if", "(", "current", "!", "=", "index", ".", "current", ")", "return", "false", ";", "if", "(", "isRight", "!", "=", "index", ".", "isRight", ")", "return", "false", ";", "return", "prevItem", "=", "=", "index", ".", "prevItem", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "int", "hashCode", "(", ")", "{", "int", "result", "=", "remainingChanges", ";", "result", "=", "<NUM_LIT:31>", "*", "result", "+", "current", ";", "result", "=", "<NUM_LIT:31>", "*", "result", "+", "(", "isRight", "?", "1", ":", "0", ")", ";", "result", "=", "<NUM_LIT:31>", "*", "result", "+", "prevItem", ";", "return", "result", ";", "}", "</s>"]
["<s>", "public", "int", "solution", "(", "int", "gates", "[", "]", ",", "int", "totalDirectionChanges", ")", "{", "Map", "<", "Index", ",", "Integer", ">", "dpMap", "=", "new", "HashMap", "<", ">", "(", ")", ";", "return", "solution", "(", "gates", ",", "totalDirectionChanges", ",", "0", ",", "false", ",", "-", "1", ",", "dpMap", ")", ";", "}", "</s>"]
["<s>", "public", "int", "solution", "(", "int", "gates", "[", "]", ",", "int", "remainingDirectionChanges", ",", "int", "current", ",", "boolean", "isRight", ",", "int", "prevItem", ",", "Map", "<", "Index", ",", "Integer", ">", "dpMap", ")", "{", "if", "(", "current", ">", "=", "gates", ".", "length", ")", "{", "return", "0", ";", "}", "Index", "index", "=", "new", "Index", "(", "remainingDirectionChanges", ",", "current", ",", "isRight", ",", "prevItem", ")", ";", "if", "(", "dpMap", ".", "containsKey", "(", "index", ")", ")", "{", "return", "dpMap", ".", "get", "(", "index", ")", ";", "}", "int", "val1", "=", "0", ",", "val2", "=", "0", ";", "if", "(", "(", "isRight", "&", "&", "gates", "[", "current", "]", "<", "prevItem", ")", "|", "|", "(", "!", "isRight", "&", "&", "gates", "[", "current", "]", ">", "prevItem", ")", ")", "{", "val1", "=", "1", "+", "solution", "(", "gates", ",", "remainingDirectionChanges", ",", "current", "+", "1", ",", "isRight", ",", "gates", "[", "current", "]", ",", "dpMap", ")", ";", "if", "(", "remainingDirectionChanges", ">", "0", ")", "{", "val2", "=", "1", "+", "solution", "(", "gates", ",", "remainingDirectionChanges", "-", "1", ",", "current", "+", "1", ",", "!", "isRight", ",", "gates", "[", "current", "]", ",", "dpMap", ")", ";", "}", "}", "int", "val3", "=", "solution", "(", "gates", ",", "remainingDirectionChanges", ",", "current", "+", "1", ",", "isRight", ",", "prevItem", ",", "dpMap", ")", ";", "int", "max", "=", "Math", ".", "max", "(", "Math", ".", "max", "(", "val1", ",", "val2", ")", ",", "val3", ")", ";", "dpMap", ".", "put", "(", "index", ",", "max", ")", ";", "return", "max", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input", "[", "]", "=", "{", "<NUM_LIT:15>", ",", "<NUM_LIT>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:12>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:3>", "}", ";", "MaximizeSkiGates", "sg", "=", "new", "MaximizeSkiGates", "(", ")", ";", "System", ".", "out", ".", "println", "(", "sg", ".", "solution", "(", "input", ",", "<NUM_LIT:2>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "removeFromEnd", "(", "int", "input", "[", "]", ")", "{", "return", "removeFromEnd", "(", "input", ",", "0", ",", "input", ".", "length", "-", "1", ")", ";", "}", "</s>"]
["<s>", "private", "int", "removeFromEnd", "(", "int", "input", "[", "]", ",", "int", "low", ",", "int", "high", ")", "{", "if", "(", "low", ">", "high", ")", "{", "return", "input", ".", "length", ";", "}", "int", "min", "=", "min", "(", "input", ",", "low", ",", "high", ")", ";", "int", "max", "=", "max", "(", "input", ",", "low", ",", "high", ")", ";", "if", "(", "<NUM_LIT:2>", "*", "min", ">", "max", ")", "{", "return", "0", ";", "}", "return", "Math", ".", "min", "(", "removeFromEnd", "(", "input", ",", "low", ",", "high", "-", "1", ")", ",", "removeFromEnd", "(", "input", ",", "low", "+", "1", ",", "high", ")", ")", "+", "1", ";", "}", "</s>"]
["<s>", "private", "int", "min", "(", "int", "input", "[", "]", ",", "int", "low", ",", "int", "high", ")", "{", "int", "min", "=", "Integer", ".", "MAX_VALUE", ";", "for", "(", "int", "i", "=", "low", ";", "i", "<", "=", "high", ";", "i", "+", "+", ")", "{", "if", "(", "min", ">", "input", "[", "i", "]", ")", "{", "min", "=", "input", "[", "i", "]", ";", "}", "}", "return", "min", ";", "}", "</s>"]
["<s>", "private", "int", "max", "(", "int", "input", "[", "]", ",", "int", "low", ",", "int", "high", ")", "{", "int", "max", "=", "Integer", ".", "MIN_VALUE", ";", "for", "(", "int", "i", "=", "low", ";", "i", "<", "=", "high", ";", "i", "+", "+", ")", "{", "if", "(", "max", "<", "input", "[", "i", "]", ")", "{", "max", "=", "input", "[", "i", "]", ";", "}", "}", "return", "max", ";", "}", "</s>"]
["<s>", "public", "int", "removeFromEndDynamic", "(", "int", "input", "[", "]", ")", "{", "int", "T", "[", "]", "[", "]", "=", "new", "int", "[", "input", ".", "length", "]", "[", "input", ".", "length", "]", ";", "for", "(", "int", "l", "=", "1", ";", "l", "<", "=", "input", ".", "length", ";", "l", "+", "+", ")", "{", "for", "(", "int", "i", "=", "0", ",", "j", "=", "i", "+", "l", "-", "1", ";", "i", "<", "input", ".", "length", "-", "l", "+", "1", ";", "i", "+", "+", ",", "j", "+", "+", ")", "{", "int", "min", "=", "min", "(", "input", ",", "i", ",", "j", ")", ";", "int", "max", "=", "max", "(", "input", ",", "i", ",", "j", ")", ";", "if", "(", "<NUM_LIT:2>", "*", "min", ">", "max", ")", "{", "T", "[", "i", "]", "[", "j", "]", "=", "0", ";", "}", "else", "{", "T", "[", "i", "]", "[", "j", "]", "=", "Math", ".", "min", "(", "T", "[", "i", "+", "1", "]", "[", "j", "]", ",", "T", "[", "i", "]", "[", "j", "-", "1", "]", ")", "+", "1", ";", "}", "}", "}", "return", "T", "[", "0", "]", "[", "input", ".", "length", "-", "1", "]", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input", "[", "]", "=", "{", "<NUM_LIT:5>", ",", "1", ",", "<NUM_LIT:3>", ",", "1", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:3>", "}", ";", "RemoveFromEndToMake2IntoMinGreaterThanMax", "rme", "=", "new", "RemoveFromEndToMake2IntoMinGreaterThanMax", "(", ")", ";", "System", ".", "out", ".", "println", "(", "rme", ".", "removeFromEnd", "(", "input", ")", ")", ";", "System", ".", "out", ".", "println", "(", "rme", ".", "removeFromEndDynamic", "(", "input", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "findMaxLength", "(", "int", "input", "[", "]", ")", "{", "assert", "input", "!", "=", "null", ";", "int", "T", "[", "]", "[", "]", "=", "new", "int", "[", "input", ".", "length", "]", "[", "input", ".", "length", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "T", ".", "length", ";", "i", "+", "+", ")", "{", "T", "[", "i", "]", "[", "i", "]", "=", "input", "[", "i", "]", ";", "}", "int", "max", "=", "0", ";", "for", "(", "int", "len", "=", "<NUM_LIT:2>", ";", "len", "<", "=", "input", ".", "length", ";", "len", "+", "+", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", "-", "len", "+", "1", ";", "i", "+", "+", ")", "{", "int", "j", "=", "i", "+", "len", "-", "1", ";", "T", "[", "i", "]", "[", "j", "]", "=", "T", "[", "i", "]", "[", "j", "-", "1", "]", "+", "input", "[", "j", "]", ";", "if", "(", "len", "%", "<NUM_LIT:2>", "=", "=", "0", ")", "{", "int", "k", "=", "(", "i", "+", "j", ")", "/", "<NUM_LIT:2>", ";", "if", "(", "T", "[", "i", "]", "[", "k", "]", "=", "=", "T", "[", "k", "+", "1", "]", "[", "j", "]", ")", "{", "if", "(", "max", "<", "len", ")", "{", "max", "=", "len", ";", "}", "}", "}", "}", "}", "return", "max", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input", "[", "]", "=", "{", "1", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:8>", ",", "0", ",", "<NUM_LIT:2>", ",", "<NUM_LIT>", ",", "<NUM_LIT:9>", "}", ";", "LongestEvenLengthSubstringOfEqualHalf", "lel", "=", "new", "LongestEvenLengthSubstringOfEqualHalf", "(", ")", ";", "System", ".", "out", ".", "println", "(", "lel", ".", "findMaxLength", "(", "input", ")", ")", ";", "}", "</s>"]
["<s>", "public", "String", "toString", "(", ")", "{", "return", "first", "+", "\"", "\"", "+", "second", "+", "\"", "\"", "+", "pick", ";", "}", "</s>"]
["<s>", "public", "Pair", "[", "]", "[", "]", "findMoves", "(", "int", "pots", "[", "]", ")", "{", "Pair", "[", "]", "[", "]", "moves", "=", "new", "Pair", "[", "pots", ".", "length", "]", "[", "pots", ".", "length", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "moves", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "moves", "[", "i", "]", ".", "length", ";", "j", "+", "+", ")", "{", "moves", "[", "i", "]", "[", "j", "]", "=", "new", "Pair", "(", ")", ";", "}", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "pots", ".", "length", ";", "i", "+", "+", ")", "{", "moves", "[", "i", "]", "[", "i", "]", ".", "first", "=", "pots", "[", "i", "]", ";", "moves", "[", "i", "]", "[", "i", "]", ".", "pick", "=", "i", ";", "}", "for", "(", "int", "l", "=", "<NUM_LIT:2>", ";", "l", "<", "=", "pots", ".", "length", ";", "l", "+", "+", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "=", "pots", ".", "length", "-", "l", ";", "i", "+", "+", ")", "{", "int", "j", "=", "i", "+", "l", "-", "1", ";", "if", "(", "pots", "[", "i", "]", "+", "moves", "[", "i", "+", "1", "]", "[", "j", "]", ".", "second", ">", "moves", "[", "i", "]", "[", "j", "-", "1", "]", ".", "second", "+", "pots", "[", "j", "]", ")", "{", "moves", "[", "i", "]", "[", "j", "]", ".", "first", "=", "pots", "[", "i", "]", "+", "moves", "[", "i", "+", "1", "]", "[", "j", "]", ".", "second", ";", "moves", "[", "i", "]", "[", "j", "]", ".", "second", "=", "moves", "[", "i", "+", "1", "]", "[", "j", "]", ".", "first", ";", "moves", "[", "i", "]", "[", "j", "]", ".", "pick", "=", "i", ";", "}", "else", "{", "moves", "[", "i", "]", "[", "j", "]", ".", "first", "=", "pots", "[", "j", "]", "+", "moves", "[", "i", "]", "[", "j", "-", "1", "]", ".", "second", ";", "moves", "[", "i", "]", "[", "j", "]", ".", "second", "=", "moves", "[", "i", "]", "[", "j", "-", "1", "]", ".", "first", ";", "moves", "[", "i", "]", "[", "j", "]", ".", "pick", "=", "j", ";", "}", "}", "}", "return", "moves", ";", "}", "</s>"]
["<s>", "public", "void", "printSequence", "(", "int", "pots", "[", "]", ",", "Pair", "moves", "[", "]", "[", "]", ")", "{", "int", "i", "=", "0", ";", "int", "j", "=", "pots", ".", "length", "-", "1", ";", "int", "step", ";", "for", "(", "int", "k", "=", "0", ";", "k", "<", "pots", ".", "length", ";", "k", "+", "+", ")", "{", "step", "=", "moves", "[", "i", "]", "[", "j", "]", ".", "pick", ";", "System", ".", "out", ".", "print", "(", "\"", "<STR_LIT>", "\"", "+", "pots", "[", "step", "]", "+", "\"", "\"", "+", "\"", "<STR_LIT>", "\"", "+", "step", "+", "\"", "\"", ")", ";", "if", "(", "step", "<", "=", "i", ")", "{", "i", "=", "i", "+", "1", ";", "}", "else", "{", "j", "=", "j", "-", "1", ";", "}", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "NPotGold", "npg", "=", "new", "NPotGold", "(", ")", ";", "int", "pots", "[", "]", "=", "{", "<NUM_LIT:3>", ",", "1", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:3>", "}", ";", "Pair", "[", "]", "[", "]", "moves", "=", "npg", ".", "findMoves", "(", "pots", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "moves", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "moves", "[", "i", "]", ".", "length", ";", "j", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "moves", "[", "i", "]", "[", "j", "]", "+", "\"", "\"", ")", ";", "}", "System", ".", "out", ".", "print", "(", "\"", "<STR_LIT>", "<STR_LIT>", "\"", ")", ";", "}", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", ")", ";", "npg", ".", "printSequence", "(", "pots", ",", "moves", ")", ";", "}", "</s>"]
["<s>", "public", "int", "calculate1", "(", "char", "[", "]", "str", ")", "{", "int", "T", "[", "]", "[", "]", "=", "new", "int", "[", "str", ".", "length", "]", "[", "str", ".", "length", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "str", ".", "length", ";", "i", "+", "+", ")", "{", "T", "[", "i", "]", "[", "i", "]", "=", "1", ";", "}", "for", "(", "int", "l", "=", "<NUM_LIT:2>", ";", "l", "<", "=", "str", ".", "length", ";", "l", "+", "+", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "str", ".", "length", "-", "l", "+", "1", ";", "i", "+", "+", ")", "{", "int", "j", "=", "i", "+", "l", "-", "1", ";", "if", "(", "l", "=", "=", "<NUM_LIT:2>", "&", "&", "str", "[", "i", "]", "=", "=", "str", "[", "j", "]", ")", "{", "T", "[", "i", "]", "[", "j", "]", "=", "<NUM_LIT:2>", ";", "}", "else", "if", "(", "str", "[", "i", "]", "=", "=", "str", "[", "j", "]", ")", "{", "T", "[", "i", "]", "[", "j", "]", "=", "T", "[", "i", "+", "1", "]", "[", "j", "-", "1", "]", "+", "<NUM_LIT:2>", ";", "}", "else", "{", "T", "[", "i", "]", "[", "j", "]", "=", "Math", ".", "max", "(", "T", "[", "i", "+", "1", "]", "[", "j", "]", ",", "T", "[", "i", "]", "[", "j", "-", "1", "]", ")", ";", "}", "}", "}", "return", "T", "[", "0", "]", "[", "str", ".", "length", "-", "1", "]", ";", "}", "</s>"]
["<s>", "public", "int", "calculateRecursive", "(", "char", "str", "[", "]", ",", "int", "start", ",", "int", "len", ")", "{", "if", "(", "len", "=", "=", "1", ")", "{", "return", "1", ";", "}", "if", "(", "len", "=", "=", "0", ")", "{", "return", "0", ";", "}", "if", "(", "str", "[", "start", "]", "=", "=", "str", "[", "start", "+", "len", "-", "1", "]", ")", "{", "return", "<NUM_LIT:2>", "+", "calculateRecursive", "(", "str", ",", "start", "+", "1", ",", "len", "-", "<NUM_LIT:2>", ")", ";", "}", "else", "{", "return", "Math", ".", "max", "(", "calculateRecursive", "(", "str", ",", "start", "+", "1", ",", "len", "-", "1", ")", ",", "calculateRecursive", "(", "str", ",", "start", ",", "len", "-", "1", ")", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "LongestPalindromicSubsequence", "lps", "=", "new", "LongestPalindromicSubsequence", "(", ")", ";", "String", "str", "=", "\"", "<STR_LIT>", "\"", ";", "int", "r1", "=", "lps", ".", "calculateRecursive", "(", "str", ".", "toCharArray", "(", ")", ",", "0", ",", "str", ".", "length", "(", ")", ")", ";", "int", "r2", "=", "lps", ".", "calculate1", "(", "str", ".", "toCharArray", "(", ")", ")", ";", "System", ".", "out", ".", "print", "(", "r1", "+", "\"", "\"", "+", "r2", ")", ";", "}", "</s>"]
["<s>", "public", "int", "minCostRec", "(", "int", "input", "[", "]", ",", "int", "freq", "[", "]", ")", "{", "return", "minCostRec", "(", "input", ",", "freq", ",", "0", ",", "input", ".", "length", "-", "1", ",", "1", ")", ";", "}", "</s>"]
["<s>", "private", "int", "minCostRec", "(", "int", "input", "[", "]", ",", "int", "freq", "[", "]", ",", "int", "low", ",", "int", "high", ",", "int", "level", ")", "{", "if", "(", "low", ">", "high", ")", "{", "return", "0", ";", "}", "int", "min", "=", "Integer", ".", "MIN_VALUE", ";", "for", "(", "int", "i", "=", "low", ";", "i", "<", "=", "high", ";", "i", "+", "+", ")", "{", "int", "val", "=", "minCostRec", "(", "input", ",", "freq", ",", "low", ",", "i", "-", "1", ",", "level", "+", "1", ")", "+", "minCostRec", "(", "input", ",", "freq", ",", "i", "+", "1", ",", "high", ",", "level", "+", "1", ")", "+", "level", "*", "freq", "[", "i", "]", ";", "if", "(", "val", "<", "min", ")", "{", "min", "=", "val", ";", "}", "}", "return", "min", ";", "}", "</s>"]
["<s>", "public", "int", "minCost", "(", "int", "input", "[", "]", ",", "int", "freq", "[", "]", ")", "{", "int", "T", "[", "]", "[", "]", "=", "new", "int", "[", "input", ".", "length", "]", "[", "input", ".", "length", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "T", ".", "length", ";", "i", "+", "+", ")", "{", "T", "[", "i", "]", "[", "i", "]", "=", "freq", "[", "i", "]", ";", "}", "for", "(", "int", "l", "=", "<NUM_LIT:2>", ";", "l", "<", "=", "input", ".", "length", ";", "l", "+", "+", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "=", "input", ".", "length", "-", "l", ";", "i", "+", "+", ")", "{", "int", "j", "=", "i", "+", "l", "-", "1", ";", "T", "[", "i", "]", "[", "j", "]", "=", "Integer", ".", "MAX_VALUE", ";", "int", "sum", "=", "getSum", "(", "freq", ",", "i", ",", "j", ")", ";", "for", "(", "int", "k", "=", "i", ";", "k", "<", "=", "j", ";", "k", "+", "+", ")", "{", "int", "val", "=", "sum", "+", "(", "k", "-", "1", "<", "i", "?", "0", ":", "T", "[", "i", "]", "[", "k", "-", "1", "]", ")", "+", "(", "k", "+", "1", ">", "j", "?", "0", ":", "T", "[", "k", "+", "1", "]", "[", "j", "]", ")", ";", "if", "(", "val", "<", "T", "[", "i", "]", "[", "j", "]", ")", "{", "T", "[", "i", "]", "[", "j", "]", "=", "val", ";", "}", "}", "}", "}", "return", "T", "[", "0", "]", "[", "input", ".", "length", "-", "1", "]", ";", "}", "</s>"]
["<s>", "private", "int", "getSum", "(", "int", "freq", "[", "]", ",", "int", "i", ",", "int", "j", ")", "{", "int", "sum", "=", "0", ";", "for", "(", "int", "x", "=", "i", ";", "x", "<", "=", "j", ";", "x", "+", "+", ")", "{", "sum", "+", "=", "freq", "[", "x", "]", ";", "}", "return", "sum", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input", "[", "]", "=", "{", "<NUM_LIT:10>", ",", "<NUM_LIT:12>", ",", "<NUM_LIT:20>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", "}", ";", "int", "freq", "[", "]", "=", "{", "<NUM_LIT>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT:16>", "}", ";", "OptimalTreeSearch", "ots", "=", "new", "OptimalTreeSearch", "(", ")", ";", "System", ".", "out", ".", "println", "(", "ots", ".", "minCost", "(", "input", ",", "freq", ")", ")", ";", "System", ".", "out", ".", "println", "(", "ots", ".", "minCostRec", "(", "input", ",", "freq", ")", ")", ";", "}", "</s>"]
["<s>", "private", "int", "min", "(", "int", "a", ",", "int", "b", ",", "int", "c", ")", "{", "int", "l", "=", "Math", ".", "min", "(", "a", ",", "b", ")", ";", "return", "Math", ".", "min", "(", "l", ",", "c", ")", ";", "}", "</s>"]
["<s>", "public", "int", "maxSize", "(", "int", "arr", "[", "]", "[", "]", ")", "{", "int", "result", "[", "]", "[", "]", "=", "new", "int", "[", "arr", ".", "length", "]", "[", "arr", "[", "0", "]", ".", "length", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "result", "[", "i", "]", "[", "0", "]", "=", "arr", "[", "i", "]", "[", "0", "]", ";", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", "[", "0", "]", ".", "length", ";", "i", "+", "+", ")", "{", "result", "[", "0", "]", "[", "i", "]", "=", "arr", "[", "0", "]", "[", "i", "]", ";", "}", "int", "max", "=", "1", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "1", ";", "j", "<", "arr", "[", "i", "]", ".", "length", ";", "j", "+", "+", ")", "{", "if", "(", "arr", "[", "i", "]", "[", "j", "]", "=", "=", "0", ")", "{", "continue", ";", "}", "int", "t", "=", "min", "(", "result", "[", "i", "-", "1", "]", "[", "j", "]", ",", "result", "[", "i", "-", "1", "]", "[", "j", "-", "1", "]", ",", "result", "[", "i", "]", "[", "j", "-", "1", "]", ")", ";", "result", "[", "i", "]", "[", "j", "]", "=", "t", "+", "1", ";", "if", "(", "result", "[", "i", "]", "[", "j", "]", ">", "max", ")", "{", "max", "=", "result", "[", "i", "]", "[", "j", "]", ";", "}", "}", "}", "return", "max", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "arr", "[", "]", "[", "]", "=", "{", "{", "0", ",", "1", ",", "1", ",", "0", ",", "1", "}", ",", "{", "1", ",", "1", ",", "1", ",", "0", ",", "0", "}", ",", "{", "1", ",", "1", ",", "1", ",", "1", ",", "0", "}", ",", "{", "1", ",", "1", ",", "1", ",", "0", ",", "1", "}", "}", ";", "MaximumSizeSubMatrix", "mssm", "=", "new", "MaximumSizeSubMatrix", "(", ")", ";", "int", "result", "=", "mssm", ".", "maxSize", "(", "arr", ")", ";", "System", ".", "out", ".", "print", "(", "result", ")", ";", "}", "</s>"]
["<s>", "public", "int", "minCuts", "(", "char", "[", "]", "str", ")", "{", "int", "T", "[", "]", "[", "]", "=", "new", "int", "[", "str", ".", "length", "]", "[", "str", ".", "length", "]", ";", "boolean", "P", "[", "]", "[", "]", "=", "new", "boolean", "[", "str", ".", "length", "]", "[", "str", ".", "length", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "P", ".", "length", ";", "i", "+", "+", ")", "{", "P", "[", "i", "]", "[", "i", "]", "=", "true", ";", "}", "for", "(", "int", "l", "=", "<NUM_LIT:2>", ";", "l", "<", "=", "str", ".", "length", ";", "l", "+", "+", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "=", "str", ".", "length", "-", "l", ";", "i", "+", "+", ")", "{", "int", "j", "=", "i", "+", "l", "-", "1", ";", "if", "(", "l", "=", "=", "<NUM_LIT:2>", ")", "{", "P", "[", "i", "]", "[", "j", "]", "=", "str", "[", "i", "]", "=", "=", "str", "[", "j", "]", ";", "}", "else", "{", "P", "[", "i", "]", "[", "j", "]", "=", "(", "str", "[", "i", "]", "=", "=", "str", "[", "j", "]", ")", "&", "&", "P", "[", "i", "+", "1", "]", "[", "j", "-", "1", "]", ";", "}", "if", "(", "P", "[", "i", "]", "[", "j", "]", ")", "{", "T", "[", "i", "]", "[", "j", "]", "=", "0", ";", "}", "else", "{", "T", "[", "i", "]", "[", "j", "]", "=", "<NUM_LIT>", ";", "int", "r", "=", "0", ";", "for", "(", "int", "k", "=", "i", ";", "k", "<", "j", ";", "k", "+", "+", ")", "{", "r", "=", "T", "[", "i", "]", "[", "k", "]", "+", "T", "[", "k", "+", "1", "]", "[", "j", "]", "+", "1", ";", "if", "(", "r", "<", "T", "[", "i", "]", "[", "j", "]", ")", "{", "T", "[", "i", "]", "[", "j", "]", "=", "r", ";", "}", "}", "}", "}", "}", "return", "T", "[", "0", "]", "[", "T", ".", "length", "-", "1", "]", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "String", "str", "=", "\"", "<STR_LIT>", "\"", ";", "PalindromePartition", "pp", "=", "new", "PalindromePartition", "(", ")", ";", "int", "r", "=", "pp", ".", "minCuts", "(", "str", ".", "toCharArray", "(", ")", ")", ";", "System", ".", "out", ".", "print", "(", "r", ")", ";", "}", "</s>"]
["<s>", "Job", "(", "int", "start", ",", "int", "end", ",", "int", "profit", ")", "{", "this", ".", "start", "=", "start", ";", "this", ".", "end", "=", "end", ";", "this", ".", "profit", "=", "profit", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "int", "compare", "(", "Job", "arg0", ",", "Job", "arg1", ")", "{", "if", "(", "arg0", ".", "end", "<", "=", "arg1", ".", "end", ")", "{", "return", "-", "1", ";", "}", "else", "{", "return", "1", ";", "}", "}", "</s>"]
["<s>", "public", "int", "maximum", "(", "Job", "[", "]", "jobs", ")", "{", "int", "T", "[", "]", "=", "new", "int", "[", "jobs", ".", "length", "]", ";", "FinishTimeComparator", "comparator", "=", "new", "FinishTimeComparator", "(", ")", ";", "Arrays", ".", "sort", "(", "jobs", ",", "comparator", ")", ";", "T", "[", "0", "]", "=", "jobs", "[", "0", "]", ".", "profit", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "jobs", ".", "length", ";", "i", "+", "+", ")", "{", "T", "[", "i", "]", "=", "Math", ".", "max", "(", "jobs", "[", "i", "]", ".", "profit", ",", "T", "[", "i", "-", "1", "]", ")", ";", "for", "(", "int", "j", "=", "i", "-", "1", ";", "j", ">", "=", "0", ";", "j", "-", "-", ")", "{", "if", "(", "jobs", "[", "j", "]", ".", "end", "<", "=", "jobs", "[", "i", "]", ".", "start", ")", "{", "T", "[", "i", "]", "=", "Math", ".", "max", "(", "T", "[", "i", "]", ",", "jobs", "[", "i", "]", ".", "profit", "+", "T", "[", "j", "]", ")", ";", "break", ";", "}", "}", "}", "int", "maxVal", "=", "Integer", ".", "MIN_VALUE", ";", "for", "(", "int", "val", ":", "T", ")", "{", "if", "(", "maxVal", "<", "val", ")", "{", "maxVal", "=", "val", ";", "}", "}", "return", "maxVal", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "Job", "jobs", "[", "]", "=", "new", "Job", "[", "<NUM_LIT:6>", "]", ";", "jobs", "[", "0", "]", "=", "new", "Job", "(", "1", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:5>", ")", ";", "jobs", "[", "1", "]", "=", "new", "Job", "(", "<NUM_LIT:2>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ")", ";", "jobs", "[", "<NUM_LIT:2>", "]", "=", "new", "Job", "(", "<NUM_LIT:4>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:5>", ")", ";", "jobs", "[", "<NUM_LIT:3>", "]", "=", "new", "Job", "(", "<NUM_LIT:6>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:4>", ")", ";", "jobs", "[", "<NUM_LIT:4>", "]", "=", "new", "Job", "(", "<NUM_LIT:5>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:11>", ")", ";", "jobs", "[", "<NUM_LIT:5>", "]", "=", "new", "Job", "(", "<NUM_LIT:7>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:2>", ")", ";", "WeightedJobSchedulingMaximumProfit", "mp", "=", "new", "WeightedJobSchedulingMaximumProfit", "(", ")", ";", "System", ".", "out", ".", "println", "(", "mp", ".", "maximum", "(", "jobs", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "countAsRec", "(", "int", "n", ")", "{", "if", "(", "n", "<", "<NUM_LIT:7>", ")", "{", "return", "n", ";", "}", "int", "max", "=", "Integer", ".", "MIN_VALUE", ";", "int", "result", "=", "0", ";", "for", "(", "int", "b", "=", "n", "-", "<NUM_LIT:3>", ";", "b", ">", "0", ";", "b", "-", "-", ")", "{", "result", "=", "(", "n", "-", "b", "-", "1", ")", "*", "countAs", "(", "b", ")", ";", "if", "(", "max", "<", "result", ")", "{", "max", "=", "result", ";", "}", "}", "return", "max", ";", "}", "</s>"]
["<s>", "public", "int", "countAs", "(", "int", "n", ")", "{", "if", "(", "n", "<", "<NUM_LIT:7>", ")", "{", "return", "n", ";", "}", "int", "T", "[", "]", "=", "new", "int", "[", "n", "+", "1", "]", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "<NUM_LIT:7>", ";", "i", "+", "+", ")", "{", "T", "[", "i", "]", "=", "i", ";", "}", "for", "(", "int", "i", "=", "<NUM_LIT:7>", ";", "i", "<", "=", "n", ";", "i", "+", "+", ")", "{", "for", "(", "int", "b", "=", "i", "-", "<NUM_LIT:3>", ";", "b", ">", "0", ";", "b", "-", "-", ")", "{", "T", "[", "i", "]", "=", "Math", ".", "max", "(", "T", "[", "i", "]", ",", "T", "[", "b", "]", "*", "(", "i", "-", "b", "-", "1", ")", ")", ";", "}", "}", "return", "T", "[", "n", "]", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "CountAs", "ca", "=", "new", "CountAs", "(", ")", ";", "System", ".", "out", ".", "println", "(", "ca", ".", "countAsRec", "(", "<NUM_LIT>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "ca", ".", "countAs", "(", "<NUM_LIT>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "recEditDistance", "(", "char", "[", "]", "str1", ",", "char", "str2", "[", "]", ",", "int", "len1", ",", "int", "len2", ")", "{", "if", "(", "len1", "=", "=", "str1", ".", "length", ")", "{", "return", "str2", ".", "length", "-", "len2", ";", "}", "if", "(", "len2", "=", "=", "str2", ".", "length", ")", "{", "return", "str1", ".", "length", "-", "len1", ";", "}", "return", "min", "(", "recEditDistance", "(", "str1", ",", "str2", ",", "len1", "+", "1", ",", "len2", "+", "1", ")", "+", "str1", "[", "len1", "]", "=", "=", "str2", "[", "len2", "]", "?", "0", ":", "1", ",", "recEditDistance", "(", "str1", ",", "str2", ",", "len1", ",", "len2", "+", "1", ")", "+", "1", ",", "recEditDistance", "(", "str1", ",", "str2", ",", "len1", "+", "1", ",", "len2", ")", "+", "1", ")", ";", "}", "</s>"]
["<s>", "public", "int", "dynamicEditDistance", "(", "char", "[", "]", "str1", ",", "char", "[", "]", "str2", ")", "{", "int", "temp", "[", "]", "[", "]", "=", "new", "int", "[", "str1", ".", "length", "+", "1", "]", "[", "str2", ".", "length", "+", "1", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "temp", "[", "0", "]", ".", "length", ";", "i", "+", "+", ")", "{", "temp", "[", "0", "]", "[", "i", "]", "=", "i", ";", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "temp", ".", "length", ";", "i", "+", "+", ")", "{", "temp", "[", "i", "]", "[", "0", "]", "=", "i", ";", "}", "for", "(", "int", "i", "=", "1", ";", "i", "<", "=", "str1", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "1", ";", "j", "<", "=", "str2", ".", "length", ";", "j", "+", "+", ")", "{", "if", "(", "str1", "[", "i", "-", "1", "]", "=", "=", "str2", "[", "j", "-", "1", "]", ")", "{", "temp", "[", "i", "]", "[", "j", "]", "=", "temp", "[", "i", "-", "1", "]", "[", "j", "-", "1", "]", ";", "}", "else", "{", "temp", "[", "i", "]", "[", "j", "]", "=", "1", "+", "min", "(", "temp", "[", "i", "-", "1", "]", "[", "j", "-", "1", "]", ",", "temp", "[", "i", "-", "1", "]", "[", "j", "]", ",", "temp", "[", "i", "]", "[", "j", "-", "1", "]", ")", ";", "}", "}", "}", "printActualEdits", "(", "temp", ",", "str1", ",", "str2", ")", ";", "return", "temp", "[", "str1", ".", "length", "]", "[", "str2", ".", "length", "]", ";", "}", "</s>"]
["<s>", "public", "void", "printActualEdits", "(", "int", "T", "[", "]", "[", "]", ",", "char", "[", "]", "str1", ",", "char", "[", "]", "str2", ")", "{", "int", "i", "=", "T", ".", "length", "-", "1", ";", "int", "j", "=", "T", "[", "0", "]", ".", "length", "-", "1", ";", "while", "(", "true", ")", "{", "if", "(", "i", "=", "=", "0", "|", "|", "j", "=", "=", "0", ")", "{", "break", ";", "}", "if", "(", "str1", "[", "i", "-", "1", "]", "=", "=", "str2", "[", "j", "-", "1", "]", ")", "{", "i", "=", "i", "-", "1", ";", "j", "=", "j", "-", "1", ";", "}", "else", "if", "(", "T", "[", "i", "]", "[", "j", "]", "=", "=", "T", "[", "i", "-", "1", "]", "[", "j", "-", "1", "]", "+", "1", ")", "{", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", "+", "str2", "[", "j", "-", "1", "]", "+", "\"", "<STR_LIT>", "\"", "+", "str1", "[", "i", "-", "1", "]", "+", "\"", "<STR_LIT>", "\"", ")", ";", "i", "=", "i", "-", "1", ";", "j", "=", "j", "-", "1", ";", "}", "else", "if", "(", "T", "[", "i", "]", "[", "j", "]", "=", "=", "T", "[", "i", "-", "1", "]", "[", "j", "]", "+", "1", ")", "{", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", "+", "str1", "[", "i", "-", "1", "]", ")", ";", "i", "=", "i", "-", "1", ";", "}", "else", "if", "(", "T", "[", "i", "]", "[", "j", "]", "=", "=", "T", "[", "i", "]", "[", "j", "-", "1", "]", "+", "1", ")", "{", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", "+", "str2", "[", "j", "-", "1", "]", ")", ";", "j", "=", "j", "-", "1", ";", "}", "else", "{", "throw", "new", "IllegalArgumentException", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "}", "}", "</s>"]
["<s>", "private", "int", "min", "(", "int", "a", ",", "int", "b", ",", "int", "c", ")", "{", "int", "l", "=", "Math", ".", "min", "(", "a", ",", "b", ")", ";", "return", "Math", ".", "min", "(", "l", ",", "c", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "String", "str1", "=", "\"", "<STR_LIT>", "\"", ";", "String", "str2", "=", "\"", "<STR_LIT>", "\"", ";", "EditDistance", "editDistance", "=", "new", "EditDistance", "(", ")", ";", "int", "result", "=", "editDistance", ".", "dynamicEditDistance", "(", "str1", ".", "toCharArray", "(", ")", ",", "str2", ".", "toCharArray", "(", ")", ")", ";", "System", ".", "out", ".", "print", "(", "result", ")", ";", "}", "</s>"]
["<s>", "public", "int", "maxValue", "(", "int", "price", "[", "]", ")", "{", "int", "max", "[", "]", "=", "new", "int", "[", "price", ".", "length", "+", "1", "]", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "=", "price", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "i", ";", "j", "<", "=", "price", ".", "length", ";", "j", "+", "+", ")", "{", "max", "[", "j", "]", "=", "Math", ".", "max", "(", "max", "[", "j", "]", ",", "max", "[", "j", "-", "i", "]", "+", "price", "[", "i", "-", "1", "]", ")", ";", "}", "}", "return", "max", "[", "price", ".", "length", "]", ";", "}", "</s>"]
["<s>", "public", "int", "maxValue1", "(", "int", "price", "[", "]", ")", "{", "int", "max", "[", "]", "=", "new", "int", "[", "price", ".", "length", "+", "1", "]", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "=", "price", ".", "length", ";", "i", "+", "+", ")", "{", "max", "[", "i", "]", "=", "price", "[", "i", "-", "1", "]", ";", "}", "for", "(", "int", "i", "=", "1", ";", "i", "<", "=", "price", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "1", ";", "j", "<", "i", ";", "j", "+", "+", ")", "{", "max", "[", "i", "]", "=", "Math", ".", "max", "(", "max", "[", "i", "]", ",", "max", "[", "i", "-", "j", "]", "+", "max", "[", "j", "]", ")", ";", "}", "}", "return", "max", "[", "price", ".", "length", "]", ";", "}", "</s>"]
["<s>", "public", "int", "recursiveMaxValue", "(", "int", "price", "[", "]", ",", "int", "len", ")", "{", "if", "(", "len", "<", "=", "0", ")", "{", "return", "0", ";", "}", "int", "maxValue", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "len", ";", "i", "+", "+", ")", "{", "int", "val", "=", "price", "[", "i", "]", "+", "recursiveMaxValue", "(", "price", ",", "len", "-", "i", "-", "1", ")", ";", "if", "(", "maxValue", "<", "val", ")", "{", "maxValue", "=", "val", ";", "}", "}", "return", "maxValue", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "CuttingRod", "cr", "=", "new", "CuttingRod", "(", ")", ";", "int", "[", "]", "price", "=", "{", "<NUM_LIT:3>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:20>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", "}", ";", "long", "t1", "=", "System", ".", "currentTimeMillis", "(", ")", ";", "int", "r", "=", "cr", ".", "recursiveMaxValue", "(", "price", ",", "<NUM_LIT:8>", ")", ";", "long", "t2", "=", "System", ".", "currentTimeMillis", "(", ")", ";", "System", ".", "out", ".", "println", "(", "r", ")", ";", "System", ".", "out", ".", "println", "(", "t2", "-", "t1", ")", ";", "}", "</s>"]
["<s>", "public", "int", "minCost", "(", "int", "ticket", "[", "]", "[", "]", ")", "{", "assert", "ticket", "!", "=", "null", "&", "&", "ticket", ".", "length", ">", "0", "&", "&", "ticket", ".", "length", "=", "=", "ticket", "[", "0", "]", ".", "length", ";", "int", "T", "[", "]", "=", "new", "int", "[", "ticket", ".", "length", "]", ";", "int", "T1", "[", "]", "=", "new", "int", "[", "ticket", ".", "length", "]", ";", "T1", "[", "0", "]", "=", "-", "1", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "T", ".", "length", ";", "i", "+", "+", ")", "{", "T", "[", "i", "]", "=", "ticket", "[", "0", "]", "[", "i", "]", ";", "T1", "[", "i", "]", "=", "i", "-", "1", ";", "}", "for", "(", "int", "i", "=", "1", ";", "i", "<", "T", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "i", "+", "1", ";", "j", "<", "T", ".", "length", ";", "j", "+", "+", ")", "{", "if", "(", "T", "[", "j", "]", ">", "T", "[", "i", "]", "+", "ticket", "[", "i", "]", "[", "j", "]", ")", "{", "T", "[", "j", "]", "=", "T", "[", "i", "]", "+", "ticket", "[", "i", "]", "[", "j", "]", ";", "T1", "[", "j", "]", "=", "i", ";", "}", "}", "}", "int", "i", "=", "ticket", ".", "length", "-", "1", ";", "while", "(", "i", "!", "=", "-", "1", ")", "{", "System", ".", "out", ".", "print", "(", "i", "+", "\"", "\"", ")", ";", "i", "=", "T1", "[", "i", "]", ";", "}", "System", ".", "out", ".", "println", "(", ")", ";", "return", "T", "[", "ticket", ".", "length", "-", "1", "]", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input", "[", "]", "[", "]", "=", "{", "{", "0", ",", "<NUM_LIT:15>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", "}", ",", "{", "-", "1", ",", "0", ",", "<NUM_LIT>", ",", "<NUM_LIT>", "}", ",", "{", "-", "1", ",", "-", "1", ",", "0", ",", "<NUM_LIT>", "}", ",", "{", "-", "1", ",", "-", "1", ",", "-", "1", ",", "0", "}", "}", ";", "MinimumCostTrainTicket", "mctt", "=", "new", "MinimumCostTrainTicket", "(", ")", ";", "System", ".", "out", ".", "println", "(", "mctt", ".", "minCost", "(", "input", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "String", "toString", "(", ")", "{", "return", "\"", "<STR_LIT>", "\"", "+", "maxSum", "+", "\"", "<STR_LIT>", "\"", "+", "leftBound", "+", "\"", "<STR_LIT>", "\"", "+", "rightBound", "+", "\"", "<STR_LIT>", "\"", "+", "upBound", "+", "\"", "<STR_LIT>", "\"", "+", "lowBound", "+", "\"", "<STR_LIT:]>", "\"", ";", "}", "</s>"]
["<s>", "public", "Result", "maxSum", "(", "int", "input", "[", "]", "[", "]", ")", "{", "int", "rows", "=", "input", ".", "length", ";", "int", "cols", "=", "input", "[", "0", "]", ".", "length", ";", "int", "temp", "[", "]", "=", "new", "int", "[", "rows", "]", ";", "Result", "result", "=", "new", "Result", "(", ")", ";", "for", "(", "int", "left", "=", "0", ";", "left", "<", "cols", ";", "left", "+", "+", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "rows", ";", "i", "+", "+", ")", "{", "temp", "[", "i", "]", "=", "0", ";", "}", "for", "(", "int", "right", "=", "left", ";", "right", "<", "cols", ";", "right", "+", "+", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "rows", ";", "i", "+", "+", ")", "{", "temp", "[", "i", "]", "+", "=", "input", "[", "i", "]", "[", "right", "]", ";", "}", "KadaneResult", "kadaneResult", "=", "kadane", "(", "temp", ")", ";", "if", "(", "kadaneResult", ".", "maxSum", ">", "result", ".", "maxSum", ")", "{", "result", ".", "maxSum", "=", "kadaneResult", ".", "maxSum", ";", "result", ".", "leftBound", "=", "left", ";", "result", ".", "rightBound", "=", "right", ";", "result", ".", "upBound", "=", "kadaneResult", ".", "start", ";", "result", ".", "lowBound", "=", "kadaneResult", ".", "end", ";", "}", "}", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "KadaneResult", "(", "int", "maxSum", ",", "int", "start", ",", "int", "end", ")", "{", "this", ".", "maxSum", "=", "maxSum", ";", "this", ".", "start", "=", "start", ";", "this", ".", "end", "=", "end", ";", "}", "</s>"]
["<s>", "private", "KadaneResult", "kadane", "(", "int", "arr", "[", "]", ")", "{", "int", "max", "=", "0", ";", "int", "maxStart", "=", "-", "1", ";", "int", "maxEnd", "=", "-", "1", ";", "int", "currentStart", "=", "0", ";", "int", "maxSoFar", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "maxSoFar", "+", "=", "arr", "[", "i", "]", ";", "if", "(", "maxSoFar", "<", "0", ")", "{", "maxSoFar", "=", "0", ";", "currentStart", "=", "i", "+", "1", ";", "}", "if", "(", "max", "<", "maxSoFar", ")", "{", "maxStart", "=", "currentStart", ";", "maxEnd", "=", "i", ";", "max", "=", "maxSoFar", ";", "}", "}", "return", "new", "KadaneResult", "(", "max", ",", "maxStart", ",", "maxEnd", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input", "[", "]", "[", "]", "=", "{", "{", "<NUM_LIT:2>", ",", "1", ",", "-", "<NUM_LIT:3>", ",", "-", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", "}", ",", "{", "0", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ",", "1", "}", ",", "{", "<NUM_LIT:2>", ",", "-", "<NUM_LIT:2>", ",", "-", "1", ",", "<NUM_LIT:4>", ",", "-", "<NUM_LIT:5>", "}", ",", "{", "-", "<NUM_LIT:3>", ",", "<NUM_LIT:3>", ",", "1", ",", "0", ",", "<NUM_LIT:3>", "}", "}", ";", "SubRectangularMatrixWithMaximumSum", "saw", "=", "new", "SubRectangularMatrixWithMaximumSum", "(", ")", ";", "System", ".", "out", ".", "println", "(", "saw", ".", "maxSum", "(", "input", ")", ")", ";", "}", "</s>"]
["<s>", "int", "countTreesRec", "(", "int", "numKeys", ")", "{", "if", "(", "numKeys", "<", "=", "1", ")", "{", "return", "(", "1", ")", ";", "}", "else", "{", "int", "sum", "=", "0", ";", "int", "left", ",", "right", ",", "root", ";", "for", "(", "root", "=", "1", ";", "root", "<", "=", "numKeys", ";", "root", "+", "+", ")", "{", "left", "=", "countTreesRec", "(", "root", "-", "1", ")", ";", "right", "=", "countTreesRec", "(", "numKeys", "-", "root", ")", ";", "sum", "+", "=", "left", "*", "right", ";", "}", "return", "(", "sum", ")", ";", "}", "}", "</s>"]
["<s>", "public", "int", "countTrees", "(", "int", "n", ")", "{", "int", "T", "[", "]", "=", "new", "int", "[", "n", "+", "1", "]", ";", "T", "[", "0", "]", "=", "1", ";", "T", "[", "1", "]", "=", "1", ";", "for", "(", "int", "i", "=", "<NUM_LIT:2>", ";", "i", "<", "=", "n", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "i", ";", "j", "+", "+", ")", "{", "T", "[", "i", "]", "+", "=", "T", "[", "j", "]", "*", "T", "[", "i", "-", "j", "-", "1", "]", ";", "}", "}", "return", "T", "[", "n", "]", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "CountNumberOfTreesInBST", "cnt", "=", "new", "CountNumberOfTreesInBST", "(", ")", ";", "System", ".", "out", ".", "println", "(", "cnt", ".", "countTrees", "(", "<NUM_LIT:3>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "cnt", ".", "countTrees", "(", "<NUM_LIT:4>", ")", ")", ";", "}", "</s>"]
["<s>", "int", "ugly", "(", "int", "n", ")", "{", "int", "arr", "[", "]", "=", "new", "int", "[", "n", "]", ";", "int", "count", "=", "1", ";", "arr", "[", "0", "]", "=", "1", ";", "int", "i2", "=", "0", ";", "int", "i3", "=", "0", ";", "int", "i5", "=", "0", ";", "while", "(", "count", "<", "n", ")", "{", "int", "minNumber", "=", "min", "(", "arr", "[", "i2", "]", "*", "<NUM_LIT:2>", ",", "arr", "[", "i3", "]", "*", "<NUM_LIT:3>", ",", "arr", "[", "i5", "]", "*", "<NUM_LIT:5>", ")", ";", "if", "(", "minNumber", "=", "=", "arr", "[", "i2", "]", "*", "<NUM_LIT:2>", ")", "{", "i2", "+", "+", ";", "}", "if", "(", "minNumber", "=", "=", "arr", "[", "i3", "]", "*", "<NUM_LIT:3>", ")", "{", "i3", "+", "+", ";", "}", "if", "(", "minNumber", "=", "=", "arr", "[", "i5", "]", "*", "<NUM_LIT:5>", ")", "{", "i5", "+", "+", ";", "}", "arr", "[", "count", "+", "+", "]", "=", "minNumber", ";", "}", "return", "arr", "[", "n", "-", "1", "]", ";", "}", "</s>"]
["<s>", "private", "int", "min", "(", "int", "a", ",", "int", "b", ",", "int", "c", ")", "{", "int", "l", "=", "Math", ".", "min", "(", "a", ",", "b", ")", ";", "return", "Math", ".", "min", "(", "l", ",", "c", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "UglyNumbers", "ugly", "=", "new", "UglyNumbers", "(", ")", ";", "int", "result", "=", "ugly", ".", "ugly", "(", "<NUM_LIT>", ")", ";", "System", ".", "out", ".", "println", "(", "result", ")", ";", "}", "</s>"]
["<s>", "public", "int", "numberOfSolutions", "(", "int", "total", ",", "int", "coins", "[", "]", ")", "{", "int", "temp", "[", "]", "[", "]", "=", "new", "int", "[", "coins", ".", "length", "+", "1", "]", "[", "total", "+", "1", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "=", "coins", ".", "length", ";", "i", "+", "+", ")", "{", "temp", "[", "i", "]", "[", "0", "]", "=", "1", ";", "}", "for", "(", "int", "i", "=", "1", ";", "i", "<", "=", "coins", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "1", ";", "j", "<", "=", "total", ";", "j", "+", "+", ")", "{", "if", "(", "coins", "[", "i", "-", "1", "]", ">", "j", ")", "{", "temp", "[", "i", "]", "[", "j", "]", "=", "temp", "[", "i", "-", "1", "]", "[", "j", "]", ";", "}", "else", "{", "temp", "[", "i", "]", "[", "j", "]", "=", "temp", "[", "i", "]", "[", "j", "-", "coins", "[", "i", "-", "1", "]", "]", "+", "temp", "[", "i", "-", "1", "]", "[", "j", "]", ";", "}", "}", "}", "return", "temp", "[", "coins", ".", "length", "]", "[", "total", "]", ";", "}", "</s>"]
["<s>", "public", "int", "numberOfSolutionsOnSpace", "(", "int", "total", ",", "int", "arr", "[", "]", ")", "{", "int", "temp", "[", "]", "=", "new", "int", "[", "total", "+", "1", "]", ";", "temp", "[", "0", "]", "=", "1", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "1", ";", "j", "<", "=", "total", ";", "j", "+", "+", ")", "{", "if", "(", "j", ">", "=", "arr", "[", "i", "]", ")", "{", "temp", "[", "j", "]", "+", "=", "temp", "[", "j", "-", "arr", "[", "i", "]", "]", ";", "}", "}", "}", "return", "temp", "[", "total", "]", ";", "}", "</s>"]
["<s>", "public", "void", "printCoinChangingSolution", "(", "int", "total", ",", "int", "coins", "[", "]", ")", "{", "List", "<", "Integer", ">", "result", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "printActualSolution", "(", "result", ",", "total", ",", "coins", ",", "0", ")", ";", "}", "</s>"]
["<s>", "private", "void", "printActualSolution", "(", "List", "<", "Integer", ">", "result", ",", "int", "total", ",", "int", "coins", "[", "]", ",", "int", "pos", ")", "{", "if", "(", "total", "=", "=", "0", ")", "{", "for", "(", "int", "r", ":", "result", ")", "{", "System", ".", "out", ".", "print", "(", "r", "+", "\"", "\"", ")", ";", "}", "System", ".", "out", ".", "print", "(", "\"", "<STR_LIT>", "<STR_LIT>", "\"", ")", ";", "}", "for", "(", "int", "i", "=", "pos", ";", "i", "<", "coins", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "total", ">", "=", "coins", "[", "i", "]", ")", "{", "result", ".", "add", "(", "coins", "[", "i", "]", ")", ";", "printActualSolution", "(", "result", ",", "total", "-", "coins", "[", "i", "]", ",", "coins", ",", "i", ")", ";", "result", ".", "remove", "(", "result", ".", "size", "(", ")", "-", "1", ")", ";", "}", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "CoinChanging", "cc", "=", "new", "CoinChanging", "(", ")", ";", "int", "total", "=", "<NUM_LIT:15>", ";", "int", "coins", "[", "]", "=", "{", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:9>", "}", ";", "System", ".", "out", ".", "println", "(", "cc", ".", "numberOfSolutions", "(", "total", ",", "coins", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "count", "(", "int", "num", ")", "{", "if", "(", "num", "=", "=", "0", ")", "{", "return", "0", ";", "}", "int", "T", "[", "]", "=", "new", "int", "[", "num", "+", "1", "]", ";", "T", "[", "0", "]", "=", "1", ";", "T", "[", "1", "]", "=", "1", ";", "for", "(", "int", "i", "=", "<NUM_LIT:2>", ";", "i", "<", "=", "num", ";", "i", "+", "+", ")", "{", "int", "sum", "=", "0", ";", "for", "(", "int", "k", "=", "0", ";", "k", "<", "i", ";", "k", "+", "+", ")", "{", "sum", "+", "=", "T", "[", "k", "]", "*", "T", "[", "i", "-", "k", "-", "1", "]", ";", "}", "T", "[", "i", "]", "=", "sum", ";", "}", "return", "T", "[", "num", "]", ";", "}", "</s>"]
["<s>", "public", "int", "countRec", "(", "int", "num", ")", "{", "if", "(", "num", "=", "=", "0", "|", "|", "num", "=", "=", "1", ")", "{", "return", "1", ";", "}", "int", "sum", "=", "0", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "=", "num", ";", "i", "+", "+", ")", "{", "sum", "+", "=", "countRec", "(", "i", "-", "1", ")", "*", "countRec", "(", "num", "-", "i", ")", ";", "}", "return", "sum", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "CountNumberOfTreePreorder", "cn", "=", "new", "CountNumberOfTreePreorder", "(", ")", ";", "System", ".", "out", ".", "println", "(", "cn", ".", "count", "(", "<NUM_LIT:3>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "cn", ".", "count", "(", "<NUM_LIT:4>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "cn", ".", "count", "(", "<NUM_LIT:5>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "cn", ".", "countRec", "(", "<NUM_LIT:3>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "cn", ".", "countRec", "(", "<NUM_LIT:4>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "cn", ".", "countRec", "(", "<NUM_LIT:5>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "lcs", "(", "char", "str1", "[", "]", ",", "char", "str2", "[", "]", ",", "int", "len1", ",", "int", "len2", ")", "{", "if", "(", "len1", "=", "=", "str1", ".", "length", "|", "|", "len2", "=", "=", "str2", ".", "length", ")", "{", "return", "0", ";", "}", "if", "(", "str1", "[", "len1", "]", "=", "=", "str2", "[", "len2", "]", ")", "{", "return", "1", "+", "lcs", "(", "str1", ",", "str2", ",", "len1", "+", "1", ",", "len2", "+", "1", ")", ";", "}", "else", "{", "return", "Math", ".", "max", "(", "lcs", "(", "str1", ",", "str2", ",", "len1", "+", "1", ",", "len2", ")", ",", "lcs", "(", "str1", ",", "str2", ",", "len1", ",", "len2", "+", "1", ")", ")", ";", "}", "}", "</s>"]
["<s>", "public", "int", "lcsDynamic", "(", "char", "str1", "[", "]", ",", "char", "str2", "[", "]", ")", "{", "int", "temp", "[", "]", "[", "]", "=", "new", "int", "[", "str1", ".", "length", "+", "1", "]", "[", "str2", ".", "length", "+", "1", "]", ";", "int", "max", "=", "0", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "temp", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "1", ";", "j", "<", "temp", "[", "i", "]", ".", "length", ";", "j", "+", "+", ")", "{", "if", "(", "str1", "[", "i", "-", "1", "]", "=", "=", "str2", "[", "j", "-", "1", "]", ")", "{", "temp", "[", "i", "]", "[", "j", "]", "=", "temp", "[", "i", "-", "1", "]", "[", "j", "-", "1", "]", "+", "1", ";", "}", "else", "{", "temp", "[", "i", "]", "[", "j", "]", "=", "Math", ".", "max", "(", "temp", "[", "i", "]", "[", "j", "-", "1", "]", ",", "temp", "[", "i", "-", "1", "]", "[", "j", "]", ")", ";", "}", "if", "(", "temp", "[", "i", "]", "[", "j", "]", ">", "max", ")", "{", "max", "=", "temp", "[", "i", "]", "[", "j", "]", ";", "}", "}", "}", "return", "max", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "LongestCommonSubsequence", "lcs", "=", "new", "LongestCommonSubsequence", "(", ")", ";", "String", "str1", "=", "\"", "<STR_LIT>", "\"", ";", "String", "str2", "=", "\"", "<STR_LIT>", "\"", ";", "int", "result", "=", "lcs", ".", "lcsDynamic", "(", "str1", ".", "toCharArray", "(", ")", ",", "str2", ".", "toCharArray", "(", ")", ")", ";", "System", ".", "out", ".", "print", "(", "result", ")", ";", "}", "</s>"]
["<s>", "public", "int", "countPathsRecursive", "(", "int", "n", ",", "int", "m", ")", "{", "if", "(", "n", "=", "=", "1", "|", "|", "m", "=", "=", "1", ")", "{", "return", "1", ";", "}", "return", "countPathsRecursive", "(", "n", "-", "1", ",", "m", ")", "+", "countPathsRecursive", "(", "n", ",", "m", "-", "1", ")", ";", "}", "</s>"]
["<s>", "public", "int", "countPaths", "(", "int", "n", ",", "int", "m", ")", "{", "int", "T", "[", "]", "[", "]", "=", "new", "int", "[", "n", "]", "[", "m", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "n", ";", "i", "+", "+", ")", "{", "T", "[", "i", "]", "[", "0", "]", "=", "1", ";", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "m", ";", "i", "+", "+", ")", "{", "T", "[", "0", "]", "[", "i", "]", "=", "1", ";", "}", "for", "(", "int", "i", "=", "1", ";", "i", "<", "n", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "1", ";", "j", "<", "m", ";", "j", "+", "+", ")", "{", "T", "[", "i", "]", "[", "j", "]", "=", "T", "[", "i", "-", "1", "]", "[", "j", "]", "+", "T", "[", "i", "]", "[", "j", "-", "1", "]", ";", "}", "}", "return", "T", "[", "n", "-", "1", "]", "[", "m", "-", "1", "]", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "NumberOfPathsInMxNMatrix", "nop", "=", "new", "NumberOfPathsInMxNMatrix", "(", ")", ";", "System", ".", "out", ".", "print", "(", "nop", ".", "countPathsRecursive", "(", "<NUM_LIT:3>", ",", "<NUM_LIT:3>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "version1", "(", "int", "score", "[", "]", ",", "int", "total", ")", "{", "int", "T", "[", "]", "=", "new", "int", "[", "total", "+", "1", "]", ";", "T", "[", "0", "]", "=", "1", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "score", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "1", ";", "j", "<", "=", "total", ";", "j", "+", "+", ")", "{", "if", "(", "score", "[", "i", "]", "<", "=", "j", ")", "{", "T", "[", "j", "]", "+", "=", "T", "[", "j", "-", "score", "[", "i", "]", "]", ";", "}", "}", "}", "return", "T", "[", "total", "]", ";", "}", "</s>"]
["<s>", "public", "int", "version2", "(", "int", "score", "[", "]", ",", "int", "total", ")", "{", "int", "T", "[", "]", "=", "new", "int", "[", "total", "+", "1", "]", ";", "T", "[", "0", "]", "=", "1", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "=", "total", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "score", ".", "length", ";", "j", "+", "+", ")", "{", "if", "(", "score", "[", "j", "]", "<", "=", "i", ")", "{", "T", "[", "i", "]", "+", "=", "T", "[", "i", "-", "score", "[", "j", "]", "]", ";", "}", "}", "}", "return", "T", "[", "total", "]", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "score", "[", "]", "=", "{", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", "}", ";", "NumberOfWaysToScorePoints", "now", "=", "new", "NumberOfWaysToScorePoints", "(", ")", ";", "System", ".", "out", ".", "println", "(", "now", ".", "version1", "(", "score", ",", "<NUM_LIT:4>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "now", ".", "version2", "(", "score", ",", "<NUM_LIT:4>", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "boolean", "equals", "(", "Object", "o", ")", "{", "if", "(", "this", "=", "=", "o", ")", "return", "true", ";", "if", "(", "o", "=", "=", "null", "|", "|", "getClass", "(", ")", "!", "=", "o", ".", "getClass", "(", ")", ")", "return", "false", ";", "Index", "index", "=", "(", "Index", ")", "o", ";", "if", "(", "start1", "!", "=", "index", ".", "start1", ")", "return", "false", ";", "if", "(", "end1", "!", "=", "index", ".", "end1", ")", "return", "false", ";", "if", "(", "start2", "!", "=", "index", ".", "start2", ")", "return", "false", ";", "return", "end2", "=", "=", "index", ".", "end2", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "int", "hashCode", "(", ")", "{", "int", "result", "=", "start1", ";", "result", "=", "<NUM_LIT:31>", "*", "result", "+", "end1", ";", "result", "=", "<NUM_LIT:31>", "*", "result", "+", "start2", ";", "result", "=", "<NUM_LIT:31>", "*", "result", "+", "end2", ";", "return", "result", ";", "}", "</s>"]
["<s>", "boolean", "isScrambled", "(", "char", "input1", "[", "]", ",", "char", "input2", "[", "]", ",", "int", "start1", ",", "int", "end1", ",", "int", "start2", ",", "int", "end2", ",", "Map", "<", "Index", ",", "Boolean", ">", "memMap", ")", "{", "if", "(", "start1", ">", "end1", "|", "|", "start2", ">", "end2", ")", "{", "return", "false", ";", "}", "if", "(", "end1", "-", "start1", "!", "=", "end2", "-", "start2", ")", "{", "return", "false", ";", "}", "Index", "index", "=", "new", "Index", "(", ")", ";", "index", ".", "start1", "=", "start1", ";", "index", ".", "end1", "=", "end1", ";", "index", ".", "start2", "=", "start2", ";", "index", ".", "end2", "=", "end2", ";", "if", "(", "memMap", ".", "containsKey", "(", "index", ")", ")", "{", "return", "memMap", ".", "get", "(", "index", ")", ";", "}", "boolean", "isSame", "=", "true", ";", "for", "(", "int", "i", "=", "start1", ",", "j", "=", "start2", ";", "i", "<", "=", "end1", "&", "&", "j", "<", "=", "end2", ";", "i", "+", "+", ",", "j", "+", "+", ")", "{", "if", "(", "input1", "[", "i", "]", "!", "=", "input2", "[", "j", "]", ")", "{", "isSame", "=", "false", ";", "break", ";", "}", "}", "if", "(", "isSame", ")", "{", "memMap", ".", "put", "(", "index", ",", "true", ")", ";", "return", "true", ";", "}", "Map", "<", "Character", ",", "Integer", ">", "countMap", "=", "new", "HashMap", "<", ">", "(", ")", ";", "for", "(", "int", "i", "=", "start1", ";", "i", "<", "=", "end1", ";", "i", "+", "+", ")", "{", "countMap", ".", "compute", "(", "input1", "[", "i", "]", ",", "(", "ch", ",", "val", ")", "-", ">", "{", "if", "(", "val", "=", "=", "null", ")", "{", "return", "1", ";", "}", "else", "{", "return", "val", "+", "1", ";", "}", "}", ")", ";", "}", "for", "(", "int", "i", "=", "start2", ";", "i", "<", "=", "end2", ";", "i", "+", "+", ")", "{", "countMap", ".", "compute", "(", "input2", "[", "i", "]", ",", "(", "ch", ",", "val", ")", "-", ">", "{", "if", "(", "val", "=", "=", "null", ")", "{", "return", "-", "1", ";", "}", "else", "{", "return", "val", "-", "1", ";", "}", "}", ")", ";", "}", "long", "nonZeroCount", "=", "countMap", ".", "values", "(", ")", ".", "stream", "(", ")", ".", "filter", "(", "val", "-", ">", "val", "!", "=", "0", ")", ".", "count", "(", ")", ";", "if", "(", "nonZeroCount", ">", "0", ")", "{", "memMap", ".", "put", "(", "index", ",", "false", ")", ";", "return", "false", ";", "}", "for", "(", "int", "len", "=", "0", ";", "len", "<", "end1", "-", "start1", ";", "len", "+", "+", ")", "{", "if", "(", "isScrambled", "(", "input1", ",", "input2", ",", "start1", ",", "start1", "+", "len", ",", "start2", ",", "start2", "+", "len", ",", "memMap", ")", "&", "&", "isScrambled", "(", "input1", ",", "input2", ",", "start1", "+", "len", "+", "1", ",", "end1", ",", "start2", "+", "len", "+", "1", ",", "end2", ",", "memMap", ")", ")", "{", "memMap", ".", "put", "(", "index", ",", "true", ")", ";", "return", "true", ";", "}", "if", "(", "isScrambled", "(", "input1", ",", "input2", ",", "start1", ",", "start1", "+", "len", ",", "end2", "-", "len", ",", "end2", ",", "memMap", ")", "&", "&", "isScrambled", "(", "input1", ",", "input2", ",", "start1", "+", "len", "+", "1", ",", "end1", ",", "start2", ",", "end2", "-", "len", "-", "1", ",", "memMap", ")", ")", "{", "memMap", ".", "put", "(", "index", ",", "true", ")", ";", "return", "true", ";", "}", "}", "memMap", ".", "put", "(", "index", ",", "false", ")", ";", "return", "false", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "ScrambledString", "ss", "=", "new", "ScrambledString", "(", ")", ";", "String", "str1", "=", "\"", "<STR_LIT>", "\"", ";", "String", "str2", "=", "\"", "<STR_LIT>", "\"", ";", "Map", "<", "Index", ",", "Boolean", ">", "memMap", "=", "new", "HashMap", "<", ">", "(", ")", ";", "boolean", "result", "=", "ss", ".", "isScrambled", "(", "str1", ".", "toCharArray", "(", ")", ",", "str2", ".", "toCharArray", "(", ")", ",", "0", ",", "str1", ".", "length", "(", ")", "-", "1", ",", "0", ",", "str2", ".", "length", "(", ")", "-", "1", ",", "memMap", ")", ";", "System", ".", "out", ".", "println", "(", "result", ")", ";", "}", "</s>"]
["<s>", "public", "int", "bottomUpDP", "(", "int", "val", "[", "]", ",", "int", "wt", "[", "]", ",", "int", "W", ")", "{", "int", "K", "[", "]", "[", "]", "=", "new", "int", "[", "val", ".", "length", "+", "1", "]", "[", "W", "+", "1", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "=", "val", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "=", "W", ";", "j", "+", "+", ")", "{", "if", "(", "i", "=", "=", "0", "|", "|", "j", "=", "=", "0", ")", "{", "K", "[", "i", "]", "[", "j", "]", "=", "0", ";", "continue", ";", "}", "if", "(", "j", "-", "wt", "[", "i", "-", "1", "]", ">", "=", "0", ")", "{", "K", "[", "i", "]", "[", "j", "]", "=", "Math", ".", "max", "(", "K", "[", "i", "-", "1", "]", "[", "j", "]", ",", "K", "[", "i", "-", "1", "]", "[", "j", "-", "wt", "[", "i", "-", "1", "]", "]", "+", "val", "[", "i", "-", "1", "]", ")", ";", "}", "else", "{", "K", "[", "i", "]", "[", "j", "]", "=", "K", "[", "i", "-", "1", "]", "[", "j", "]", ";", "}", "}", "}", "return", "K", "[", "val", ".", "length", "]", "[", "W", "]", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "boolean", "equals", "(", "Object", "o", ")", "{", "if", "(", "this", "=", "=", "o", ")", "return", "true", ";", "if", "(", "o", "=", "=", "null", "|", "|", "getClass", "(", ")", "!", "=", "o", ".", "getClass", "(", ")", ")", "return", "false", ";", "Index", "index", "=", "(", "Index", ")", "o", ";", "if", "(", "remainingWeight", "!", "=", "index", ".", "remainingWeight", ")", "return", "false", ";", "return", "remainingItems", "=", "=", "index", ".", "remainingItems", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "int", "hashCode", "(", ")", "{", "int", "result", "=", "remainingWeight", ";", "result", "=", "<NUM_LIT:31>", "*", "result", "+", "remainingItems", ";", "return", "result", ";", "}", "</s>"]
["<s>", "public", "int", "topDownRecursive", "(", "int", "values", "[", "]", ",", "int", "weights", "[", "]", ",", "int", "W", ")", "{", "Map", "<", "Index", ",", "Integer", ">", "map", "=", "new", "HashMap", "<", ">", "(", ")", ";", "return", "topDownRecursiveUtil", "(", "values", ",", "weights", ",", "W", ",", "values", ".", "length", ",", "0", ",", "map", ")", ";", "}", "</s>"]
["<s>", "public", "int", "topDownRecursiveUtil", "(", "int", "values", "[", "]", ",", "int", "weights", "[", "]", ",", "int", "remainingWeight", ",", "int", "totalItems", ",", "int", "currentItem", ",", "Map", "<", "Index", ",", "Integer", ">", "map", ")", "{", "if", "(", "currentItem", ">", "=", "totalItems", "|", "|", "remainingWeight", "<", "=", "0", ")", "{", "return", "0", ";", "}", "Index", "key", "=", "new", "Index", "(", ")", ";", "key", ".", "remainingItems", "=", "totalItems", "-", "currentItem", "-", "1", ";", "key", ".", "remainingWeight", "=", "remainingWeight", ";", "if", "(", "map", ".", "containsKey", "(", "key", ")", ")", "{", "return", "map", ".", "get", "(", "key", ")", ";", "}", "int", "maxValue", ";", "if", "(", "remainingWeight", "<", "weights", "[", "currentItem", "]", ")", "{", "maxValue", "=", "topDownRecursiveUtil", "(", "values", ",", "weights", ",", "remainingWeight", ",", "totalItems", ",", "currentItem", "+", "1", ",", "map", ")", ";", "}", "else", "{", "maxValue", "=", "Math", ".", "max", "(", "values", "[", "currentItem", "]", "+", "topDownRecursiveUtil", "(", "values", ",", "weights", ",", "remainingWeight", "-", "weights", "[", "currentItem", "]", ",", "totalItems", ",", "currentItem", "+", "1", ",", "map", ")", ",", "topDownRecursiveUtil", "(", "values", ",", "weights", ",", "remainingWeight", ",", "totalItems", ",", "currentItem", "+", "1", ",", "map", ")", ")", ";", "}", "map", ".", "put", "(", "key", ",", "maxValue", ")", ";", "return", "maxValue", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "Knapsack01", "k", "=", "new", "Knapsack01", "(", ")", ";", "int", "val", "[", "]", "=", "{", "<NUM_LIT>", ",", "<NUM_LIT:20>", ",", "<NUM_LIT:15>", ",", "<NUM_LIT:30>", ",", "<NUM_LIT:24>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT:32>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", "}", ";", "int", "wt", "[", "]", "=", "{", "<NUM_LIT:4>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:10>", "}", ";", "int", "r", "=", "k", ".", "bottomUpDP", "(", "val", ",", "wt", ",", "<NUM_LIT:30>", ")", ";", "int", "r1", "=", "k", ".", "topDownRecursive", "(", "val", ",", "wt", ",", "<NUM_LIT:30>", ")", ";", "System", ".", "out", ".", "println", "(", "r", ")", ";", "System", ".", "out", ".", "println", "(", "r1", ")", ";", "}", "</s>"]
["<s>", "public", "int", "maxSum", "(", "int", "arr", "[", "]", ")", "{", "int", "excl", "=", "0", ";", "int", "incl", "=", "arr", "[", "0", "]", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "int", "temp", "=", "incl", ";", "incl", "=", "Math", ".", "max", "(", "excl", "+", "arr", "[", "i", "]", ",", "incl", ")", ";", "excl", "=", "temp", ";", "}", "return", "incl", ";", "}", "</s>"]
["<s>", "public", "int", "maxSum", "(", "int", "arr", "[", "]", ",", "int", "index", ")", "{", "if", "(", "index", "=", "=", "0", ")", "{", "return", "arr", "[", "0", "]", ";", "}", "else", "if", "(", "index", "=", "=", "1", ")", "{", "return", "Math", ".", "max", "(", "arr", "[", "0", "]", ",", "arr", "[", "1", "]", ")", ";", "}", "return", "Math", ".", "max", "(", "this", ".", "maxSum", "(", "arr", ",", "index", "-", "<NUM_LIT:2>", ")", "+", "arr", "[", "index", "]", ",", "this", ".", "maxSum", "(", "arr", ",", "index", "-", "1", ")", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "MaxSumForNonAdjacentElements", "msn", "=", "new", "MaxSumForNonAdjacentElements", "(", ")", ";", "int", "arr", "[", "]", "=", "{", "<NUM_LIT:2>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:15>", ",", "<NUM_LIT:10>", "}", ";", "System", ".", "out", ".", "println", "(", "msn", ".", "maxSum", "(", "arr", ")", ")", ";", "System", ".", "out", ".", "println", "(", "msn", ".", "maxSum", "(", "arr", ",", "arr", ".", "length", "-", "1", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "maxProfit", "(", "int", "prices", "[", "]", ",", "int", "K", ")", "{", "if", "(", "K", "=", "=", "0", "|", "|", "prices", ".", "length", "=", "=", "0", ")", "{", "return", "0", ";", "}", "int", "T", "[", "]", "[", "]", "=", "new", "int", "[", "K", "+", "1", "]", "[", "prices", ".", "length", "]", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "T", ".", "length", ";", "i", "+", "+", ")", "{", "int", "maxDiff", "=", "-", "prices", "[", "0", "]", ";", "for", "(", "int", "j", "=", "1", ";", "j", "<", "T", "[", "0", "]", ".", "length", ";", "j", "+", "+", ")", "{", "T", "[", "i", "]", "[", "j", "]", "=", "Math", ".", "max", "(", "T", "[", "i", "]", "[", "j", "-", "1", "]", ",", "prices", "[", "j", "]", "+", "maxDiff", ")", ";", "maxDiff", "=", "Math", ".", "max", "(", "maxDiff", ",", "T", "[", "i", "-", "1", "]", "[", "j", "]", "-", "prices", "[", "j", "]", ")", ";", "}", "}", "printActualSolution", "(", "T", ",", "prices", ")", ";", "return", "T", "[", "K", "]", "[", "prices", ".", "length", "-", "1", "]", ";", "}", "</s>"]
["<s>", "public", "int", "maxProfitSlowSolution", "(", "int", "prices", "[", "]", ",", "int", "K", ")", "{", "if", "(", "K", "=", "=", "0", "|", "|", "prices", ".", "length", "=", "=", "0", ")", "{", "return", "0", ";", "}", "int", "T", "[", "]", "[", "]", "=", "new", "int", "[", "K", "+", "1", "]", "[", "prices", ".", "length", "]", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "T", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "1", ";", "j", "<", "T", "[", "0", "]", ".", "length", ";", "j", "+", "+", ")", "{", "int", "maxVal", "=", "0", ";", "for", "(", "int", "m", "=", "0", ";", "m", "<", "j", ";", "m", "+", "+", ")", "{", "maxVal", "=", "Math", ".", "max", "(", "maxVal", ",", "prices", "[", "j", "]", "-", "prices", "[", "m", "]", "+", "T", "[", "i", "-", "1", "]", "[", "m", "]", ")", ";", "}", "T", "[", "i", "]", "[", "j", "]", "=", "Math", ".", "max", "(", "T", "[", "i", "]", "[", "j", "-", "1", "]", ",", "maxVal", ")", ";", "}", "}", "printActualSolution", "(", "T", ",", "prices", ")", ";", "return", "T", "[", "K", "]", "[", "prices", ".", "length", "-", "1", "]", ";", "}", "</s>"]
["<s>", "public", "void", "printActualSolution", "(", "int", "T", "[", "]", "[", "]", ",", "int", "prices", "[", "]", ")", "{", "int", "i", "=", "T", ".", "length", "-", "1", ";", "int", "j", "=", "T", "[", "0", "]", ".", "length", "-", "1", ";", "Deque", "<", "Integer", ">", "stack", "=", "new", "LinkedList", "<", ">", "(", ")", ";", "while", "(", "true", ")", "{", "if", "(", "i", "=", "=", "0", "|", "|", "j", "=", "=", "0", ")", "{", "break", ";", "}", "if", "(", "T", "[", "i", "]", "[", "j", "]", "=", "=", "T", "[", "i", "]", "[", "j", "-", "1", "]", ")", "{", "j", "=", "j", "-", "1", ";", "}", "else", "{", "stack", ".", "addFirst", "(", "j", ")", ";", "int", "maxDiff", "=", "T", "[", "i", "]", "[", "j", "]", "-", "prices", "[", "j", "]", ";", "for", "(", "int", "k", "=", "j", "-", "1", ";", "k", ">", "=", "0", ";", "k", "-", "-", ")", "{", "if", "(", "T", "[", "i", "-", "1", "]", "[", "k", "]", "-", "prices", "[", "k", "]", "=", "=", "maxDiff", ")", "{", "i", "=", "i", "-", "1", ";", "j", "=", "k", ";", "stack", ".", "addFirst", "(", "j", ")", ";", "break", ";", "}", "}", "}", "}", "while", "(", "!", "stack", ".", "isEmpty", "(", ")", ")", "{", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", "+", "prices", "[", "stack", ".", "pollFirst", "(", ")", "]", ")", ";", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", "+", "prices", "[", "stack", ".", "pollFirst", "(", ")", "]", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "StockBuySellKTransactions", "sbt", "=", "new", "StockBuySellKTransactions", "(", ")", ";", "int", "prices", "[", "]", "=", "{", "<NUM_LIT:2>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:7>", ",", "1", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:3>", ",", "1", ",", "<NUM_LIT:3>", "}", ";", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", "+", "sbt", ".", "maxProfit", "(", "prices", ",", "<NUM_LIT:3>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", "+", "sbt", ".", "maxProfitSlowSolution", "(", "prices", ",", "<NUM_LIT:3>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "maxProduct", "(", "int", "num", ")", "{", "int", "T", "[", "]", "=", "new", "int", "[", "num", "+", "1", "]", ";", "T", "[", "0", "]", "=", "1", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "=", "num", ";", "i", "+", "+", ")", "{", "T", "[", "i", "]", "=", "i", ";", "}", "for", "(", "int", "i", "=", "<NUM_LIT:2>", ";", "i", "<", "=", "num", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "1", ";", "j", "<", "=", "i", ";", "j", "+", "+", ")", "{", "T", "[", "i", "]", "=", "Math", ".", "max", "(", "T", "[", "i", "]", ",", "T", "[", "j", "]", "*", "T", "[", "i", "-", "j", "]", ")", ";", "}", "}", "return", "T", "[", "num", "]", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "MaximumProductCutting", "mpc", "=", "new", "MaximumProductCutting", "(", ")", ";", "System", ".", "out", ".", "println", "(", "mpc", ".", "maxProduct", "(", "<NUM_LIT>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "maximum", "(", "int", "input", "[", "]", "[", "]", ")", "{", "int", "temp", "[", "]", "=", "new", "int", "[", "input", "[", "0", "]", ".", "length", "]", ";", "MaximumHistogram", "mh", "=", "new", "MaximumHistogram", "(", ")", ";", "int", "maxArea", "=", "0", ";", "int", "area", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "temp", ".", "length", ";", "j", "+", "+", ")", "{", "if", "(", "input", "[", "i", "]", "[", "j", "]", "=", "=", "0", ")", "{", "temp", "[", "j", "]", "=", "0", ";", "}", "else", "{", "temp", "[", "j", "]", "+", "=", "input", "[", "i", "]", "[", "j", "]", ";", "}", "}", "area", "=", "mh", ".", "maxHistogram", "(", "temp", ")", ";", "if", "(", "area", ">", "maxArea", ")", "{", "maxArea", "=", "area", ";", "}", "}", "return", "maxArea", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input", "[", "]", "[", "]", "=", "{", "{", "1", ",", "1", ",", "1", ",", "0", "}", ",", "{", "1", ",", "1", ",", "1", ",", "1", "}", ",", "{", "0", ",", "1", ",", "1", ",", "0", "}", ",", "{", "0", ",", "1", ",", "1", ",", "1", "}", ",", "{", "1", ",", "0", ",", "0", ",", "1", "}", ",", "{", "1", ",", "1", ",", "1", ",", "1", "}", "}", ";", "MaximumRectangularSubmatrixOf1s", "mrs", "=", "new", "MaximumRectangularSubmatrixOf1s", "(", ")", ";", "int", "maxRectangle", "=", "mrs", ".", "maximum", "(", "input", ")", ";", "assert", "maxRectangle", "=", "=", "<NUM_LIT:8>", ";", "}", "</s>"]
["<s>", "public", "boolean", "subsetSum", "(", "int", "input", "[", "]", ",", "int", "total", ")", "{", "boolean", "T", "[", "]", "[", "]", "=", "new", "boolean", "[", "input", ".", "length", "+", "1", "]", "[", "total", "+", "1", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "=", "input", ".", "length", ";", "i", "+", "+", ")", "{", "T", "[", "i", "]", "[", "0", "]", "=", "true", ";", "}", "for", "(", "int", "i", "=", "1", ";", "i", "<", "=", "input", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "1", ";", "j", "<", "=", "total", ";", "j", "+", "+", ")", "{", "if", "(", "j", "-", "input", "[", "i", "-", "1", "]", ">", "=", "0", ")", "{", "T", "[", "i", "]", "[", "j", "]", "=", "T", "[", "i", "-", "1", "]", "[", "j", "]", "|", "|", "T", "[", "i", "-", "1", "]", "[", "j", "-", "input", "[", "i", "-", "1", "]", "]", ";", "}", "else", "{", "T", "[", "i", "]", "[", "j", "]", "=", "T", "[", "i", "-", "1", "]", "[", "j", "]", ";", "}", "}", "}", "return", "T", "[", "input", ".", "length", "]", "[", "total", "]", ";", "}", "</s>"]
["<s>", "public", "boolean", "partition", "(", "int", "arr", "[", "]", ")", "{", "int", "sum", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "sum", "+", "=", "arr", "[", "i", "]", ";", "}", "if", "(", "sum", "%", "<NUM_LIT:2>", "!", "=", "0", ")", "{", "return", "false", ";", "}", "sum", "=", "sum", "/", "<NUM_LIT:2>", ";", "boolean", "[", "]", "[", "]", "T", "=", "new", "boolean", "[", "arr", ".", "length", "+", "1", "]", "[", "sum", "+", "1", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "=", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "T", "[", "i", "]", "[", "0", "]", "=", "true", ";", "}", "for", "(", "int", "i", "=", "1", ";", "i", "<", "=", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "1", ";", "j", "<", "=", "sum", ";", "j", "+", "+", ")", "{", "if", "(", "j", "-", "arr", "[", "i", "-", "1", "]", ">", "=", "0", ")", "{", "T", "[", "i", "]", "[", "j", "]", "=", "T", "[", "i", "-", "1", "]", "[", "j", "-", "arr", "[", "i", "-", "1", "]", "]", "|", "|", "T", "[", "i", "-", "1", "]", "[", "j", "]", ";", "}", "else", "{", "T", "[", "i", "]", "[", "j", "]", "=", "T", "[", "i", "-", "1", "]", "[", "j", "]", ";", "}", "}", "}", "return", "T", "[", "arr", ".", "length", "]", "[", "sum", "]", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "SubsetSum", "ss", "=", "new", "SubsetSum", "(", ")", ";", "int", "arr", "[", "]", "=", "{", "1", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:2>", ",", "1", ",", "1", ",", "<NUM_LIT:6>", "}", ";", "System", ".", "out", ".", "println", "(", "ss", ".", "partition", "(", "arr", ")", ")", ";", "int", "arr1", "[", "]", "=", "{", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:8>", "}", ";", "System", ".", "out", ".", "print", "(", "ss", ".", "subsetSum", "(", "arr1", ",", "<NUM_LIT:11>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "String", "justify", "(", "String", "words", "[", "]", ",", "int", "width", ")", "{", "int", "cost", "[", "]", "[", "]", "=", "new", "int", "[", "words", ".", "length", "]", "[", "words", ".", "length", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "words", ".", "length", ";", "i", "+", "+", ")", "{", "cost", "[", "i", "]", "[", "i", "]", "=", "width", "-", "words", "[", "i", "]", ".", "length", "(", ")", ";", "for", "(", "int", "j", "=", "i", "+", "1", ";", "j", "<", "words", ".", "length", ";", "j", "+", "+", ")", "{", "cost", "[", "i", "]", "[", "j", "]", "=", "cost", "[", "i", "]", "[", "j", "-", "1", "]", "-", "words", "[", "j", "]", ".", "length", "(", ")", "-", "1", ";", "}", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "words", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "i", ";", "j", "<", "words", ".", "length", ";", "j", "+", "+", ")", "{", "if", "(", "cost", "[", "i", "]", "[", "j", "]", "<", "0", ")", "{", "cost", "[", "i", "]", "[", "j", "]", "=", "Integer", ".", "MAX_VALUE", ";", "}", "else", "{", "cost", "[", "i", "]", "[", "j", "]", "=", "(", "int", ")", "Math", ".", "pow", "(", "cost", "[", "i", "]", "[", "j", "]", ",", "<NUM_LIT:2>", ")", ";", "}", "}", "}", "int", "minCost", "[", "]", "=", "new", "int", "[", "words", ".", "length", "]", ";", "int", "result", "[", "]", "=", "new", "int", "[", "words", ".", "length", "]", ";", "for", "(", "int", "i", "=", "words", ".", "length", "-", "1", ";", "i", ">", "=", "0", ";", "i", "-", "-", ")", "{", "minCost", "[", "i", "]", "=", "cost", "[", "i", "]", "[", "words", ".", "length", "-", "1", "]", ";", "result", "[", "i", "]", "=", "words", ".", "length", ";", "for", "(", "int", "j", "=", "words", ".", "length", "-", "1", ";", "j", ">", "i", ";", "j", "-", "-", ")", "{", "if", "(", "cost", "[", "i", "]", "[", "j", "-", "1", "]", "=", "=", "Integer", ".", "MAX_VALUE", ")", "{", "continue", ";", "}", "if", "(", "minCost", "[", "i", "]", ">", "minCost", "[", "j", "]", "+", "cost", "[", "i", "]", "[", "j", "-", "1", "]", ")", "{", "minCost", "[", "i", "]", "=", "minCost", "[", "j", "]", "+", "cost", "[", "i", "]", "[", "j", "-", "1", "]", ";", "result", "[", "i", "]", "=", "j", ";", "}", "}", "}", "int", "i", "=", "0", ";", "int", "j", ";", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", "+", "minCost", "[", "0", "]", ")", ";", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "<STR_LIT>", "\"", ")", ";", "StringBuilder", "builder", "=", "new", "StringBuilder", "(", ")", ";", "do", "{", "j", "=", "result", "[", "i", "]", ";", "for", "(", "int", "k", "=", "i", ";", "k", "<", "j", ";", "k", "+", "+", ")", "{", "builder", ".", "append", "(", "words", "[", "k", "]", "+", "\"", "\"", ")", ";", "}", "builder", ".", "append", "(", "\"", "<STR_LIT>", "<STR_LIT>", "\"", ")", ";", "i", "=", "j", ";", "}", "while", "(", "j", "<", "words", ".", "length", ")", ";", "return", "builder", ".", "toString", "(", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "String", "words1", "[", "]", "=", "{", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", "}", ";", "TextJustification", "awl", "=", "new", "TextJustification", "(", ")", ";", "System", ".", "out", ".", "println", "(", "awl", ".", "justify", "(", "words1", ",", "<NUM_LIT:12>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "isInterleavedRecursive", "(", "char", "str1", "[", "]", ",", "char", "str2", "[", "]", ",", "char", "str3", "[", "]", ",", "int", "pos1", ",", "int", "pos2", ",", "int", "pos3", ")", "{", "if", "(", "pos1", "=", "=", "str1", ".", "length", "&", "&", "pos2", "=", "=", "str2", ".", "length", "&", "&", "pos3", "=", "=", "str3", ".", "length", ")", "{", "return", "true", ";", "}", "if", "(", "pos3", "=", "=", "str3", ".", "length", ")", "{", "return", "false", ";", "}", "return", "(", "pos1", "<", "str1", ".", "length", "&", "&", "str1", "[", "pos1", "]", "=", "=", "str3", "[", "pos3", "]", "&", "&", "isInterleavedRecursive", "(", "str1", ",", "str2", ",", "str3", ",", "pos1", "+", "1", ",", "pos2", ",", "pos3", "+", "1", ")", ")", "|", "|", "(", "pos2", "<", "str2", ".", "length", "&", "&", "str2", "[", "pos2", "]", "=", "=", "str3", "[", "pos3", "]", "&", "&", "isInterleavedRecursive", "(", "str1", ",", "str2", ",", "str3", ",", "pos1", ",", "pos2", "+", "1", ",", "pos3", "+", "1", ")", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "isInterleaved", "(", "char", "str1", "[", "]", ",", "char", "str2", "[", "]", ",", "char", "str3", "[", "]", ")", "{", "boolean", "T", "[", "]", "[", "]", "=", "new", "boolean", "[", "str1", ".", "length", "+", "1", "]", "[", "str2", ".", "length", "+", "1", "]", ";", "if", "(", "str1", ".", "length", "+", "str2", ".", "length", "!", "=", "str3", ".", "length", ")", "{", "return", "false", ";", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "T", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "T", "[", "i", "]", ".", "length", ";", "j", "+", "+", ")", "{", "int", "l", "=", "i", "+", "j", "-", "1", ";", "if", "(", "i", "=", "=", "0", "&", "&", "j", "=", "=", "0", ")", "{", "T", "[", "i", "]", "[", "j", "]", "=", "true", ";", "}", "else", "if", "(", "i", "=", "=", "0", ")", "{", "if", "(", "str3", "[", "l", "]", "=", "=", "str2", "[", "j", "-", "1", "]", ")", "{", "T", "[", "i", "]", "[", "j", "]", "=", "T", "[", "i", "]", "[", "j", "-", "1", "]", ";", "}", "}", "else", "if", "(", "j", "=", "=", "0", ")", "{", "if", "(", "str1", "[", "i", "-", "1", "]", "=", "=", "str3", "[", "l", "]", ")", "{", "T", "[", "i", "]", "[", "j", "]", "=", "T", "[", "i", "-", "1", "]", "[", "j", "]", ";", "}", "}", "else", "{", "T", "[", "i", "]", "[", "j", "]", "=", "(", "str1", "[", "i", "-", "1", "]", "=", "=", "str3", "[", "l", "]", "?", "T", "[", "i", "-", "1", "]", "[", "j", "]", ":", "false", ")", "|", "|", "(", "str2", "[", "j", "-", "1", "]", "=", "=", "str3", "[", "l", "]", "?", "T", "[", "i", "]", "[", "j", "-", "1", "]", ":", "false", ")", ";", "}", "}", "}", "return", "T", "[", "str1", ".", "length", "]", "[", "str2", ".", "length", "]", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "String", "str1", "=", "\"", "<STR_LIT>", "\"", ";", "String", "str2", "=", "\"", "<STR_LIT>", "\"", ";", "String", "str3", "=", "\"", "<STR_LIT>", "\"", ";", "TwoStringInterleavingToFormThird", "sti", "=", "new", "TwoStringInterleavingToFormThird", "(", ")", ";", "System", ".", "out", ".", "println", "(", "sti", ".", "isInterleaved", "(", "str1", ".", "toCharArray", "(", ")", ",", "str2", ".", "toCharArray", "(", ")", ",", "str3", ".", "toCharArray", "(", ")", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "maxHeight", "(", "Dimension", "[", "]", "input", ")", "{", "Dimension", "[", "]", "allRotationInput", "=", "new", "Dimension", "[", "input", ".", "length", "*", "<NUM_LIT:3>", "]", ";", "createAllRotation", "(", "input", ",", "allRotationInput", ")", ";", "Arrays", ".", "sort", "(", "allRotationInput", ")", ";", "int", "T", "[", "]", "=", "new", "int", "[", "allRotationInput", ".", "length", "]", ";", "int", "result", "[", "]", "=", "new", "int", "[", "allRotationInput", ".", "length", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "T", ".", "length", ";", "i", "+", "+", ")", "{", "T", "[", "i", "]", "=", "allRotationInput", "[", "i", "]", ".", "height", ";", "result", "[", "i", "]", "=", "i", ";", "}", "for", "(", "int", "i", "=", "1", ";", "i", "<", "T", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "i", ";", "j", "+", "+", ")", "{", "if", "(", "allRotationInput", "[", "i", "]", ".", "length", "<", "allRotationInput", "[", "j", "]", ".", "length", "&", "&", "allRotationInput", "[", "i", "]", ".", "width", "<", "allRotationInput", "[", "j", "]", ".", "width", ")", "{", "if", "(", "T", "[", "j", "]", "+", "allRotationInput", "[", "i", "]", ".", "height", ">", "T", "[", "i", "]", ")", "{", "T", "[", "i", "]", "=", "T", "[", "j", "]", "+", "allRotationInput", "[", "i", "]", ".", "height", ";", "result", "[", "i", "]", "=", "j", ";", "}", "}", "}", "}", "int", "max", "=", "Integer", ".", "MIN_VALUE", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "T", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "T", "[", "i", "]", ">", "max", ")", "{", "max", "=", "T", "[", "i", "]", ";", "}", "}", "return", "max", ";", "}", "</s>"]
["<s>", "private", "void", "createAllRotation", "(", "Dimension", "[", "]", "input", ",", "Dimension", "[", "]", "allRotationInput", ")", "{", "int", "index", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "allRotationInput", "[", "index", "+", "+", "]", "=", "Dimension", ".", "createDimension", "(", "input", "[", "i", "]", ".", "height", ",", "input", "[", "i", "]", ".", "length", ",", "input", "[", "i", "]", ".", "width", ")", ";", "allRotationInput", "[", "index", "+", "+", "]", "=", "Dimension", ".", "createDimension", "(", "input", "[", "i", "]", ".", "length", ",", "input", "[", "i", "]", ".", "height", ",", "input", "[", "i", "]", ".", "width", ")", ";", "allRotationInput", "[", "index", "+", "+", "]", "=", "Dimension", ".", "createDimension", "(", "input", "[", "i", "]", ".", "width", ",", "input", "[", "i", "]", ".", "length", ",", "input", "[", "i", "]", ".", "height", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "BoxStacking", "bs", "=", "new", "BoxStacking", "(", ")", ";", "Dimension", "input", "[", "]", "=", "{", "new", "Dimension", "(", "<NUM_LIT:3>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:5>", ")", ",", "new", "Dimension", "(", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:4>", ")", "}", ";", "int", "maxHeight", "=", "bs", ".", "maxHeight", "(", "input", ")", ";", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", "+", "maxHeight", ")", ";", "assert", "<NUM_LIT:11>", "=", "=", "maxHeight", ";", "}", "</s>"]
["<s>", "Dimension", "(", "int", "height", ",", "int", "length", ",", "int", "width", ")", "{", "this", ".", "height", "=", "height", ";", "this", ".", "length", "=", "length", ";", "this", ".", "width", "=", "width", ";", "}", "</s>"]
["<s>", "Dimension", "(", ")", "{", "}", "</s>"]
["<s>", "static", "Dimension", "createDimension", "(", "int", "height", ",", "int", "side1", ",", "int", "side2", ")", "{", "Dimension", "d", "=", "new", "Dimension", "(", ")", ";", "d", ".", "height", "=", "height", ";", "if", "(", "side1", ">", "=", "side2", ")", "{", "d", ".", "length", "=", "side1", ";", "d", ".", "width", "=", "side2", ";", "}", "else", "{", "d", ".", "length", "=", "side2", ";", "d", ".", "width", "=", "side1", ";", "}", "return", "d", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "int", "compareTo", "(", "Dimension", "d", ")", "{", "if", "(", "this", ".", "length", "*", "this", ".", "width", ">", "=", "d", ".", "length", "*", "d", ".", "width", ")", "{", "return", "-", "1", ";", "}", "else", "{", "return", "1", ";", "}", "}", "</s>"]
["<s>", "@", "Override", "public", "String", "toString", "(", ")", "{", "return", "\"", "<STR_LIT>", "\"", "+", "height", "+", "\"", "<STR_LIT>", "\"", "+", "length", "+", "\"", "<STR_LIT>", "\"", "+", "width", "+", "\"", "<STR_LIT:]>", "\"", ";", "}", "</s>"]
["<s>", "public", "int", "maxSum", "(", "int", "arr", "[", "]", ")", "{", "int", "T", "[", "]", "=", "new", "int", "[", "arr", ".", "length", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "T", ".", "length", ";", "i", "+", "+", ")", "{", "T", "[", "i", "]", "=", "arr", "[", "i", "]", ";", "}", "for", "(", "int", "i", "=", "1", ";", "i", "<", "T", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "i", ";", "j", "+", "+", ")", "{", "if", "(", "arr", "[", "j", "]", "<", "arr", "[", "i", "]", ")", "{", "T", "[", "i", "]", "=", "Math", ".", "max", "(", "T", "[", "i", "]", ",", "T", "[", "j", "]", "+", "arr", "[", "i", "]", ")", ";", "}", "}", "}", "int", "max", "=", "T", "[", "0", "]", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "T", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "T", "[", "i", "]", ">", "max", ")", "{", "max", "=", "T", "[", "i", "]", ";", "}", "}", "return", "max", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "MaximumSumSubsequence", "mss", "=", "new", "MaximumSumSubsequence", "(", ")", ";", "int", "arr", "[", "]", "=", "{", "1", ",", "<NUM_LIT>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:100>", ",", "<NUM_LIT:4>", "}", ";", "int", "r", "=", "mss", ".", "maxSum", "(", "arr", ")", ";", "System", ".", "out", ".", "print", "(", "r", ")", ";", "}", "</s>"]
["<s>", "public", "int", "longestSubsequenceWithActualSolution", "(", "int", "arr", "[", "]", ")", "{", "int", "T", "[", "]", "=", "new", "int", "[", "arr", ".", "length", "]", ";", "int", "actualSolution", "[", "]", "=", "new", "int", "[", "arr", ".", "length", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "T", "[", "i", "]", "=", "1", ";", "actualSolution", "[", "i", "]", "=", "i", ";", "}", "for", "(", "int", "i", "=", "1", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "i", ";", "j", "+", "+", ")", "{", "if", "(", "arr", "[", "i", "]", ">", "arr", "[", "j", "]", ")", "{", "if", "(", "T", "[", "j", "]", "+", "1", ">", "T", "[", "i", "]", ")", "{", "T", "[", "i", "]", "=", "T", "[", "j", "]", "+", "1", ";", "actualSolution", "[", "i", "]", "=", "j", ";", "}", "}", "}", "}", "int", "maxIndex", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "T", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "T", "[", "i", "]", ">", "T", "[", "maxIndex", "]", ")", "{", "maxIndex", "=", "i", ";", "}", "}", "int", "t", "=", "maxIndex", ";", "int", "newT", "=", "maxIndex", ";", "do", "{", "t", "=", "newT", ";", "System", ".", "out", ".", "print", "(", "arr", "[", "t", "]", "+", "\"", "\"", ")", ";", "newT", "=", "actualSolution", "[", "t", "]", ";", "}", "while", "(", "t", "!", "=", "newT", ")", ";", "System", ".", "out", ".", "println", "(", ")", ";", "return", "T", "[", "maxIndex", "]", ";", "}", "</s>"]
["<s>", "public", "int", "longestSubsequenceRecursive", "(", "int", "arr", "[", "]", ")", "{", "int", "maxLen", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", "-", "1", ";", "i", "+", "+", ")", "{", "int", "len", "=", "longestSubsequenceRecursive", "(", "arr", ",", "i", "+", "1", ",", "arr", "[", "i", "]", ")", ";", "if", "(", "len", ">", "maxLen", ")", "{", "maxLen", "=", "len", ";", "}", "}", "return", "maxLen", "+", "1", ";", "}", "</s>"]
["<s>", "private", "int", "longestSubsequenceRecursive", "(", "int", "arr", "[", "]", ",", "int", "pos", ",", "int", "lastNum", ")", "{", "if", "(", "pos", "=", "=", "arr", ".", "length", ")", "{", "return", "0", ";", "}", "int", "t1", "=", "0", ";", "if", "(", "arr", "[", "pos", "]", ">", "lastNum", ")", "{", "t1", "=", "1", "+", "longestSubsequenceRecursive", "(", "arr", ",", "pos", "+", "1", ",", "arr", "[", "pos", "]", ")", ";", "}", "int", "t2", "=", "longestSubsequenceRecursive", "(", "arr", ",", "pos", "+", "1", ",", "lastNum", ")", ";", "return", "Math", ".", "max", "(", "t1", ",", "t2", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "LongestIncreasingSubsequence", "lis", "=", "new", "LongestIncreasingSubsequence", "(", ")", ";", "int", "arr", "[", "]", "=", "{", "<NUM_LIT>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT:24>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", "}", ";", "int", "result", "=", "lis", ".", "longestSubsequenceWithActualSolution", "(", "arr", ")", ";", "int", "result1", "=", "lis", ".", "longestSubsequenceRecursive", "(", "arr", ")", ";", "System", ".", "out", ".", "println", "(", "result", ")", ";", "System", ".", "out", ".", "println", "(", "result1", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "evaluate", "(", "char", "[", "]", "expression", ",", "int", "result", ")", "{", "int", "operands", "[", "]", "=", "new", "int", "[", "expression", ".", "length", "/", "<NUM_LIT:2>", "+", "1", "]", ";", "char", "operators", "[", "]", "=", "new", "char", "[", "expression", ".", "length", "/", "<NUM_LIT:2>", "]", ";", "int", "index1", "=", "0", ";", "int", "index2", "=", "0", ";", "operands", "[", "index1", "+", "+", "]", "=", "expression", "[", "0", "]", "-", "<CHAR_LIT:0>", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "expression", ".", "length", ";", "i", "+", "=", "<NUM_LIT:2>", ")", "{", "operators", "[", "index2", "+", "+", "]", "=", "expression", "[", "i", "]", ";", "operands", "[", "index1", "+", "+", "]", "=", "expression", "[", "i", "+", "1", "]", "-", "<CHAR_LIT:0>", ";", "}", "Holder", "T", "[", "]", "[", "]", "=", "new", "Holder", "[", "operands", ".", "length", "]", "[", "operands", ".", "length", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "T", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "T", ".", "length", ";", "j", "+", "+", ")", "{", "T", "[", "i", "]", "[", "j", "]", "=", "new", "Holder", "(", ")", ";", "}", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "operands", ".", "length", ";", "i", "+", "+", ")", "{", "T", "[", "i", "]", "[", "i", "]", ".", "add", "(", "operands", "[", "i", "]", ")", ";", "}", "for", "(", "int", "l", "=", "<NUM_LIT:2>", ";", "l", "<", "=", "T", ".", "length", ";", "l", "+", "+", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "=", "T", ".", "length", "-", "l", ";", "i", "+", "+", ")", "{", "int", "j", "=", "i", "+", "l", "-", "1", ";", "for", "(", "int", "k", "=", "i", ";", "k", "<", "j", ";", "k", "+", "+", ")", "{", "for", "(", "int", "x", ":", "T", "[", "i", "]", "[", "k", "]", ".", "values", "(", ")", ")", "{", "for", "(", "int", "y", ":", "T", "[", "k", "+", "1", "]", "[", "j", "]", ".", "values", "(", ")", ")", "{", "if", "(", "operators", "[", "k", "]", "=", "=", "<CHAR_LIT:/>", "&", "&", "y", "=", "=", "0", ")", "{", "continue", ";", "}", "T", "[", "i", "]", "[", "j", "]", ".", "add", "(", "operate", "(", "operators", "[", "k", "]", ",", "x", ",", "y", ")", ")", ";", "}", "}", "}", "}", "}", "T", "[", "0", "]", "[", "T", ".", "length", "-", "1", "]", ".", "values", "(", ")", ".", "forEach", "(", "(", "i", "-", ">", "System", ".", "out", ".", "print", "(", "i", "+", "\"", "\"", ")", ")", ")", ";", "for", "(", "int", "i", ":", "T", "[", "0", "]", "[", "T", ".", "length", "-", "1", "]", ".", "values", "(", ")", ")", "{", "if", "(", "i", "=", "=", "result", ")", "{", "return", "true", ";", "}", "}", "return", "false", ";", "}", "</s>"]
["<s>", "private", "int", "operate", "(", "char", "operator", ",", "int", "x", ",", "int", "y", ")", "{", "switch", "(", "operator", ")", "{", "case", "<CHAR_LIT>", ":", "return", "x", "+", "y", ";", "case", "<CHAR_LIT:->", ":", "return", "x", "-", "y", ";", "case", "<CHAR_LIT>", ":", "return", "x", "*", "y", ";", "case", "<CHAR_LIT:/>", ":", "return", "x", "/", "y", ";", "default", ":", "throw", "new", "IllegalArgumentException", "(", ")", ";", "}", "}", "</s>"]
["<s>", "void", "add", "(", "Integer", "ch", ")", "{", "valueHolder", ".", "add", "(", "ch", ")", ";", "}", "</s>"]
["<s>", "Set", "<", "Integer", ">", "values", "(", ")", "{", "return", "valueHolder", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "ExpressionEvaluation", "ee", "=", "new", "ExpressionEvaluation", "(", ")", ";", "System", ".", "out", ".", "println", "(", "ee", ".", "evaluate", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ",", "0", ")", ")", ";", "}", "</s>"]
["<s>", "public", "void", "sort", "(", "int", "arr", "[", "]", ")", "{", "for", "(", "int", "i", "=", "1", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "heapAdd", "(", "arr", ",", "i", ")", ";", "}", "for", "(", "int", "i", "=", "arr", ".", "length", "-", "1", ";", "i", ">", "0", ";", "i", "-", "-", ")", "{", "swap", "(", "arr", ",", "0", ",", "i", ")", ";", "heapify", "(", "arr", ",", "i", "-", "1", ")", ";", "}", "}", "</s>"]
["<s>", "private", "void", "heapify", "(", "int", "arr", "[", "]", ",", "int", "end", ")", "{", "int", "i", "=", "0", ";", "int", "leftIndex", ";", "int", "rightIndex", ";", "while", "(", "i", "<", "=", "end", ")", "{", "leftIndex", "=", "<NUM_LIT:2>", "*", "i", "+", "1", ";", "if", "(", "leftIndex", ">", "end", ")", "{", "break", ";", "}", "rightIndex", "=", "<NUM_LIT:2>", "*", "i", "+", "<NUM_LIT:2>", ";", "if", "(", "rightIndex", ">", "end", ")", "{", "rightIndex", "=", "leftIndex", ";", "}", "if", "(", "arr", "[", "i", "]", ">", "=", "Math", ".", "max", "(", "arr", "[", "leftIndex", "]", ",", "arr", "[", "rightIndex", "]", ")", ")", "{", "break", ";", "}", "if", "(", "arr", "[", "leftIndex", "]", ">", "=", "arr", "[", "rightIndex", "]", ")", "{", "swap", "(", "arr", ",", "i", ",", "leftIndex", ")", ";", "i", "=", "leftIndex", ";", "}", "else", "{", "swap", "(", "arr", ",", "i", ",", "rightIndex", ")", ";", "i", "=", "rightIndex", ";", "}", "}", "}", "</s>"]
["<s>", "private", "void", "swap", "(", "int", "arr", "[", "]", ",", "int", "x", ",", "int", "y", ")", "{", "int", "temp", "=", "arr", "[", "x", "]", ";", "arr", "[", "x", "]", "=", "arr", "[", "y", "]", ";", "arr", "[", "y", "]", "=", "temp", ";", "}", "</s>"]
["<s>", "private", "void", "heapAdd", "(", "int", "arr", "[", "]", ",", "int", "end", ")", "{", "int", "i", "=", "end", ";", "while", "(", "i", ">", "0", ")", "{", "if", "(", "arr", "[", "i", "]", ">", "arr", "[", "(", "i", "-", "1", ")", "/", "<NUM_LIT:2>", "]", ")", "{", "swap", "(", "arr", ",", "i", ",", "(", "i", "-", "1", ")", "/", "<NUM_LIT:2>", ")", ";", "i", "=", "(", "i", "-", "1", ")", "/", "<NUM_LIT:2>", ";", "}", "else", "{", "break", ";", "}", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "HeapSort", "hs", "=", "new", "HeapSort", "(", ")", ";", "int", "arr", "[", "]", "=", "{", "-", "1", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:2>", ",", "-", "<NUM_LIT:6>", ",", "-", "<NUM_LIT:8>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT:5>", "}", ";", "hs", ".", "sort", "(", "arr", ")", ";", "for", "(", "int", "a", ":", "arr", ")", "{", "System", ".", "out", ".", "println", "(", "a", ")", ";", "}", "}", "</s>"]
["<s>", "public", "void", "sort", "(", "int", "arr", "[", "]", ")", "{", "for", "(", "int", "i", "=", "arr", ".", "length", "-", "1", ";", "i", ">", "=", "0", ";", "i", "-", "-", ")", "{", "int", "pos", "=", "findMax", "(", "arr", ",", "i", ")", ";", "flip", "(", "arr", ",", "pos", ")", ";", "flip", "(", "arr", ",", "i", ")", ";", "}", "}", "</s>"]
["<s>", "private", "int", "findMax", "(", "int", "arr", "[", "]", ",", "int", "pos", ")", "{", "int", "max", "=", "pos", ";", "for", "(", "int", "i", "=", "pos", "-", "1", ";", "i", ">", "=", "0", ";", "i", "-", "-", ")", "{", "if", "(", "arr", "[", "i", "]", ">", "arr", "[", "max", "]", ")", "{", "max", "=", "i", ";", "}", "}", "return", "max", ";", "}", "</s>"]
["<s>", "private", "void", "flip", "(", "int", "arr", "[", "]", ",", "int", "pos", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "=", "pos", "/", "<NUM_LIT:2>", ";", "i", "+", "+", ")", "{", "swap", "(", "arr", ",", "i", ",", "pos", "-", "i", ")", ";", "}", "}", "</s>"]
["<s>", "private", "void", "swap", "(", "int", "arr", "[", "]", ",", "int", "i", ",", "int", "j", ")", "{", "int", "temp", "=", "arr", "[", "i", "]", ";", "arr", "[", "i", "]", "=", "arr", "[", "j", "]", ";", "arr", "[", "j", "]", "=", "temp", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "arr", "[", "]", "=", "{", "<NUM_LIT:9>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:6>", ",", "1", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:8>", "}", ";", "PanCakeSorting", "pcs", "=", "new", "PanCakeSorting", "(", ")", ";", "pcs", ".", "sort", "(", "arr", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "arr", "[", "i", "]", "+", "\"", "\"", ")", ";", "}", "}", "</s>"]
["<s>", "FrequenceComparator", "(", "Map", "<", "Integer", ",", "SortNode", ">", "countMap", ")", "{", "this", ".", "countMap", "=", "countMap", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "int", "compare", "(", "Integer", "i1", ",", "Integer", "i2", ")", "{", "SortNode", "n1", "=", "countMap", ".", "get", "(", "i1", ")", ";", "SortNode", "n2", "=", "countMap", ".", "get", "(", "i2", ")", ";", "if", "(", "n1", ".", "count", ">", "n2", ".", "count", ")", "{", "return", "-", "1", ";", "}", "else", "if", "(", "n1", ".", "count", "<", "n2", ".", "count", ")", "{", "return", "1", ";", "}", "else", "{", "return", "n1", ".", "firstIndex", "<", "n2", ".", "firstIndex", "?", "-", "1", ":", "1", ";", "}", "}", "</s>"]
["<s>", "public", "void", "sortByFrequence", "(", "Integer", "arr", "[", "]", ")", "{", "Map", "<", "Integer", ",", "SortNode", ">", "countMap", "=", "new", "HashMap", "<", "Integer", ",", "SortNode", ">", "(", ")", ";", "int", "index", "=", "0", ";", "for", "(", "int", "a", ":", "arr", ")", "{", "if", "(", "countMap", ".", "containsKey", "(", "a", ")", ")", "{", "SortNode", "s", "=", "countMap", ".", "get", "(", "a", ")", ";", "s", ".", "count", "+", "+", ";", "}", "else", "{", "SortNode", "s", "=", "new", "SortNode", "(", ")", ";", "s", ".", "count", "=", "1", ";", "s", ".", "firstIndex", "=", "index", ";", "countMap", ".", "put", "(", "a", ",", "s", ")", ";", "}", "index", "+", "+", ";", "}", "FrequenceComparator", "freqComparator", "=", "new", "FrequenceComparator", "(", "countMap", ")", ";", "Arrays", ".", "sort", "(", "arr", ",", "freqComparator", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "Integer", "input", "[", "]", "=", "{", "<NUM_LIT:5>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:2>", "}", ";", "SortArrayByFrequence", "saf", "=", "new", "SortArrayByFrequence", "(", ")", ";", "saf", ".", "sortByFrequence", "(", "input", ")", ";", "for", "(", "int", "i", ":", "input", ")", "{", "System", ".", "out", ".", "println", "(", "i", "+", "\"", "\"", ")", ";", "}", "}", "</s>"]
["<s>", "private", "void", "swap", "(", "int", "A", "[", "]", ",", "int", "i", ",", "int", "j", ")", "{", "int", "temp", "=", "A", "[", "i", "]", ";", "A", "[", "i", "]", "=", "A", "[", "j", "]", ";", "A", "[", "j", "]", "=", "temp", ";", "}", "</s>"]
["<s>", "private", "int", "split", "(", "int", "A", "[", "]", ",", "int", "low", ",", "int", "high", ")", "{", "int", "pivot", "=", "low", ";", "int", "i", "=", "low", "+", "1", ";", "int", "j", "=", "high", ";", "while", "(", "i", "<", "j", ")", "{", "while", "(", "i", "<", "=", "j", "&", "&", "A", "[", "pivot", "]", ">", "=", "A", "[", "i", "]", ")", "{", "i", "+", "+", ";", "}", "while", "(", "j", ">", "=", "i", "&", "&", "A", "[", "pivot", "]", "<", "A", "[", "j", "]", ")", "{", "j", "-", "-", ";", "}", "if", "(", "i", "<", "j", "&", "&", "A", "[", "i", "]", ">", "A", "[", "j", "]", ")", "{", "swap", "(", "A", ",", "i", "+", "+", ",", "j", "-", "-", ")", ";", "}", "}", "if", "(", "A", "[", "pivot", "]", ">", "A", "[", "j", "]", ")", "{", "swap", "(", "A", ",", "j", ",", "pivot", ")", ";", "}", "return", "j", ";", "}", "</s>"]
["<s>", "private", "int", "split1", "(", "int", "A", "[", "]", ",", "int", "low", ",", "int", "high", ")", "{", "int", "pivot", "=", "low", ";", "int", "i", "=", "low", "+", "1", ";", "int", "j", "=", "high", ";", "while", "(", "i", "<", "=", "j", ")", "{", "if", "(", "A", "[", "i", "]", "<", "=", "A", "[", "pivot", "]", ")", "{", "i", "+", "+", ";", "continue", ";", "}", "if", "(", "A", "[", "j", "]", ">", "A", "[", "pivot", "]", ")", "{", "j", "-", "-", ";", "continue", ";", "}", "swap", "(", "A", ",", "i", "+", "+", ",", "j", "-", "-", ")", ";", "}", "if", "(", "A", "[", "pivot", "]", ">", "A", "[", "j", "]", ")", "{", "swap", "(", "A", ",", "pivot", ",", "j", ")", ";", "return", "j", ";", "}", "return", "pivot", ";", "}", "</s>"]
["<s>", "public", "void", "sort", "(", "int", "A", "[", "]", ",", "int", "low", ",", "int", "high", ")", "{", "if", "(", "low", ">", "=", "high", ")", "{", "return", ";", "}", "int", "pos", "=", "split1", "(", "A", ",", "low", ",", "high", ")", ";", "sort", "(", "A", ",", "low", ",", "pos", "-", "1", ")", ";", "sort", "(", "A", ",", "pos", "+", "1", ",", "high", ")", ";", "}", "</s>"]
["<s>", "private", "void", "printArray", "(", "int", "arr", "[", "]", ")", "{", "for", "(", "int", "a", ":", "arr", ")", "{", "System", ".", "out", ".", "println", "(", "a", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "QuickSort", "qs", "=", "new", "QuickSort", "(", ")", ";", "int", "A", "[", "]", "=", "{", "<NUM_LIT:11>", ",", "<NUM_LIT>", ",", "0", ",", "-", "1", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:16>", ",", "-", "<NUM_LIT:3>", ",", "<NUM_LIT:6>", ",", "0", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "-", "<NUM_LIT:6>", ",", "-", "<NUM_LIT:8>", "}", ";", "qs", ".", "sort", "(", "A", ",", "0", ",", "A", ".", "length", "-", "1", ")", ";", "qs", ".", "printArray", "(", "A", ")", ";", "}", "</s>"]
["<s>", "public", "void", "sort", "(", "int", "arr", "[", "]", ")", "{", "Deque", "<", "Integer", ">", "stack", "=", "new", "LinkedList", "<", "Integer", ">", "(", ")", ";", "int", "l", "=", "0", ";", "int", "h", "=", "arr", ".", "length", "-", "1", ";", "stack", ".", "offerFirst", "(", "l", ")", ";", "stack", ".", "offerFirst", "(", "h", ")", ";", "while", "(", "!", "stack", ".", "isEmpty", "(", ")", ")", "{", "h", "=", "stack", ".", "pollFirst", "(", ")", ";", "l", "=", "stack", ".", "pollFirst", "(", ")", ";", "int", "p", "=", "partition", "(", "arr", ",", "l", ",", "h", ")", ";", "if", "(", "l", "<", "p", "-", "1", "&", "&", "h", ">", "p", "+", "1", ")", "{", "stack", ".", "offerFirst", "(", "l", ")", ";", "stack", ".", "offerFirst", "(", "p", "-", "1", ")", ";", "stack", ".", "offerFirst", "(", "p", "+", "1", ")", ";", "stack", ".", "offerFirst", "(", "h", ")", ";", "}", "else", "if", "(", "l", "<", "p", "-", "1", ")", "{", "stack", ".", "offerFirst", "(", "l", ")", ";", "stack", ".", "offerFirst", "(", "p", "-", "1", ")", ";", "}", "else", "if", "(", "h", ">", "p", "+", "1", ")", "{", "stack", ".", "offerFirst", "(", "p", "+", "1", ")", ";", "stack", ".", "offerFirst", "(", "h", ")", ";", "}", "}", "}", "</s>"]
["<s>", "private", "int", "partition", "(", "int", "arr", "[", "]", ",", "int", "low", ",", "int", "high", ")", "{", "int", "pivot", "=", "arr", "[", "low", "]", ";", "int", "i", "=", "low", "+", "1", ";", "int", "j", "=", "low", "+", "1", ";", "while", "(", "j", "<", "=", "high", ")", "{", "if", "(", "arr", "[", "j", "]", "<", "pivot", ")", "{", "swap", "(", "arr", ",", "i", ",", "j", ")", ";", "i", "+", "+", ";", "}", "j", "+", "+", ";", "}", "swap", "(", "arr", ",", "i", "-", "1", ",", "low", ")", ";", "return", "i", "-", "1", ";", "}", "</s>"]
["<s>", "private", "void", "swap", "(", "int", "arr", "[", "]", ",", "int", "a", ",", "int", "b", ")", "{", "int", "temp", "=", "arr", "[", "a", "]", ";", "arr", "[", "a", "]", "=", "arr", "[", "b", "]", ";", "arr", "[", "b", "]", "=", "temp", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "arr", "[", "]", "=", "{", "<NUM_LIT:3>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:8>", ",", "0", ",", "<NUM_LIT:11>", ",", "-", "1", ",", "-", "<NUM_LIT:5>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:32>", ",", "-", "<NUM_LIT>", ",", "<NUM_LIT>", "}", ";", "IterativeQuickSort", "iqs", "=", "new", "IterativeQuickSort", "(", ")", ";", "iqs", ".", "sort", "(", "arr", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "arr", "[", "i", "]", "+", "\"", "\"", ")", ";", "}", "}", "</s>"]
["<s>", "private", "void", "countSort", "(", "int", "arr", "[", "]", ",", "int", "exp", ")", "{", "int", "[", "]", "count", "=", "new", "int", "[", "<NUM_LIT:10>", "]", ";", "int", "[", "]", "output", "=", "new", "int", "[", "arr", ".", "length", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "count", "[", "(", "arr", "[", "i", "]", "/", "exp", ")", "%", "<NUM_LIT:10>", "]", "+", "+", ";", "}", "for", "(", "int", "i", "=", "1", ";", "i", "<", "count", ".", "length", ";", "i", "+", "+", ")", "{", "count", "[", "i", "]", "+", "=", "count", "[", "i", "-", "1", "]", ";", "}", "for", "(", "int", "i", "=", "arr", ".", "length", "-", "1", ";", "i", ">", "=", "0", ";", "i", "-", "-", ")", "{", "output", "[", "count", "[", "(", "arr", "[", "i", "]", "/", "exp", ")", "%", "<NUM_LIT:10>", "]", "-", "1", "]", "=", "arr", "[", "i", "]", ";", "count", "[", "(", "arr", "[", "i", "]", "/", "exp", ")", "%", "<NUM_LIT:10>", "]", "-", "-", ";", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "arr", "[", "i", "]", "=", "output", "[", "i", "]", ";", "}", "}", "</s>"]
["<s>", "private", "int", "max", "(", "int", "arr", "[", "]", ")", "{", "int", "max", "=", "arr", "[", "0", "]", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "max", "<", "arr", "[", "i", "]", ")", "{", "max", "=", "arr", "[", "i", "]", ";", "}", "}", "return", "max", ";", "}", "</s>"]
["<s>", "public", "void", "radixSort", "(", "int", "arr", "[", "]", ")", "{", "int", "max", "=", "max", "(", "arr", ")", ";", "for", "(", "int", "exp", "=", "1", ";", "exp", "<", "=", "max", ";", "exp", "*", "=", "<NUM_LIT:10>", ")", "{", "countSort", "(", "arr", ",", "exp", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "arr", "[", "]", "=", "{", "<NUM_LIT>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", "}", ";", "RadixSort", "rs", "=", "new", "RadixSort", "(", ")", ";", "rs", ".", "radixSort", "(", "arr", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "println", "(", "arr", "[", "i", "]", ")", ";", "}", "}", "</s>"]
["<s>", "public", "void", "sort", "(", "int", "arr", "[", "]", ")", "{", "int", "count", "[", "]", "=", "new", "int", "[", "TOTAL", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "count", "[", "arr", "[", "i", "]", "]", "+", "+", ";", "}", "int", "c", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "TOTAL", ";", "i", "+", "+", ")", "{", "while", "(", "count", "[", "i", "]", ">", "0", ")", "{", "arr", "[", "c", "+", "+", "]", "=", "i", ";", "count", "[", "i", "]", "-", "-", ";", "}", "}", "}", "</s>"]
["<s>", "public", "void", "sort1", "(", "int", "arr", "[", "]", ")", "{", "int", "count", "[", "]", "=", "new", "int", "[", "TOTAL", "]", ";", "int", "output", "[", "]", "=", "new", "int", "[", "arr", ".", "length", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "count", "[", "arr", "[", "i", "]", "]", "+", "+", ";", "}", "for", "(", "int", "i", "=", "1", ";", "i", "<", "TOTAL", ";", "i", "+", "+", ")", "{", "count", "[", "i", "]", "+", "=", "count", "[", "i", "-", "1", "]", ";", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "output", "[", "count", "[", "arr", "[", "i", "]", "]", "-", "1", "]", "=", "arr", "[", "i", "]", ";", "count", "[", "arr", "[", "i", "]", "]", "-", "-", ";", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "arr", "[", "i", "]", "=", "output", "[", "i", "]", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "arr", "[", "]", "=", "{", "<NUM_LIT:6>", ",", "1", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:3>", ",", "1", "}", ";", "CountingSort", "cs", "=", "new", "CountingSort", "(", ")", ";", "cs", ".", "sort1", "(", "arr", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "println", "(", "arr", "[", "i", "]", ")", ";", "}", "}", "</s>"]
["<s>", "public", "void", "sort", "(", "int", "input", "[", "]", ")", "{", "sort", "(", "input", ",", "0", ",", "input", ".", "length", "-", "1", ")", ";", "}", "</s>"]
["<s>", "private", "void", "sort", "(", "int", "input", "[", "]", ",", "int", "low", ",", "int", "high", ")", "{", "if", "(", "low", ">", "=", "high", ")", "{", "return", ";", "}", "int", "middle", "=", "(", "low", "+", "high", ")", "/", "<NUM_LIT:2>", ";", "sort", "(", "input", ",", "low", ",", "middle", ")", ";", "sort", "(", "input", ",", "middle", "+", "1", ",", "high", ")", ";", "sortedMerge", "(", "input", ",", "low", ",", "high", ")", ";", "}", "</s>"]
["<s>", "private", "void", "sortedMerge", "(", "int", "input", "[", "]", ",", "int", "low", ",", "int", "high", ")", "{", "int", "middle", "=", "(", "low", "+", "high", ")", "/", "<NUM_LIT:2>", ";", "int", "temp", "[", "]", "=", "new", "int", "[", "high", "-", "low", "+", "1", "]", ";", "int", "i", "=", "low", ";", "int", "j", "=", "middle", "+", "1", ";", "int", "r", "=", "0", ";", "while", "(", "i", "<", "=", "middle", "&", "&", "j", "<", "=", "high", ")", "{", "if", "(", "input", "[", "i", "]", "<", "=", "input", "[", "j", "]", ")", "{", "temp", "[", "r", "+", "+", "]", "=", "input", "[", "i", "+", "+", "]", ";", "}", "else", "{", "temp", "[", "r", "+", "+", "]", "=", "input", "[", "j", "+", "+", "]", ";", "}", "}", "while", "(", "i", "<", "=", "middle", ")", "{", "temp", "[", "r", "+", "+", "]", "=", "input", "[", "i", "+", "+", "]", ";", "}", "while", "(", "j", "<", "=", "high", ")", "{", "temp", "[", "r", "+", "+", "]", "=", "input", "[", "j", "+", "+", "]", ";", "}", "i", "=", "low", ";", "for", "(", "int", "k", "=", "0", ";", "k", "<", "temp", ".", "length", ";", ")", "{", "input", "[", "i", "+", "+", "]", "=", "temp", "[", "k", "+", "+", "]", ";", "}", "}", "</s>"]
["<s>", "public", "void", "printArray", "(", "int", "input", "[", "]", ")", "{", "for", "(", "int", "i", ":", "input", ")", "{", "System", ".", "out", ".", "print", "(", "i", "+", "\"", "\"", ")", ";", "}", "System", ".", "out", ".", "println", "(", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input1", "[", "]", "=", "{", "1", "}", ";", "int", "input2", "[", "]", "=", "{", "<NUM_LIT:4>", ",", "<NUM_LIT:2>", "}", ";", "int", "input3", "[", "]", "=", "{", "<NUM_LIT:6>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:9>", "}", ";", "int", "input4", "[", "]", "=", "{", "<NUM_LIT:6>", ",", "-", "1", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT:12>", ",", "<NUM_LIT>", "}", ";", "MergeSort", "ms", "=", "new", "MergeSort", "(", ")", ";", "ms", ".", "sort", "(", "input1", ")", ";", "ms", ".", "sort", "(", "input2", ")", ";", "ms", ".", "sort", "(", "input3", ")", ";", "ms", ".", "sort", "(", "input4", ")", ";", "ms", ".", "printArray", "(", "input1", ")", ";", "ms", ".", "printArray", "(", "input2", ")", ";", "ms", ".", "printArray", "(", "input3", ")", ";", "ms", ".", "printArray", "(", "input4", ")", ";", "}", "</s>"]
["<s>", "public", "void", "sort", "(", "int", "arr", "[", "]", ",", "int", "n", ")", "{", "sort", "(", "arr", ",", "n", ",", "1", ")", ";", "sort", "(", "arr", ",", "n", ",", "n", ")", ";", "sort", "(", "arr", ",", "n", ",", "n", "*", "n", ")", ";", "}", "</s>"]
["<s>", "private", "void", "sort", "(", "int", "arr", "[", "]", ",", "int", "n", ",", "int", "exp", ")", "{", "int", "count", "[", "]", "=", "new", "int", "[", "n", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "count", "[", "(", "arr", "[", "i", "]", "/", "exp", ")", "%", "n", "]", "+", "+", ";", "}", "for", "(", "int", "i", "=", "1", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "count", "[", "i", "]", "+", "=", "count", "[", "i", "-", "1", "]", ";", "}", "int", "output", "[", "]", "=", "new", "int", "[", "n", "]", ";", "for", "(", "int", "i", "=", "arr", ".", "length", "-", "1", ";", "i", ">", "=", "0", ";", "i", "-", "-", ")", "{", "output", "[", "count", "[", "(", "arr", "[", "i", "]", "/", "exp", ")", "%", "n", "]", "-", "1", "]", "=", "arr", "[", "i", "]", ";", "count", "[", "(", "arr", "[", "i", "]", "/", "exp", ")", "%", "n", "]", "-", "-", ";", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "arr", "[", "i", "]", "=", "output", "[", "i", "]", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "arr", "[", "]", "=", "{", "<NUM_LIT:100>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", "}", ";", "Sort0toN3", "sn", "=", "new", "Sort0toN3", "(", ")", ";", "sn", ".", "sort", "(", "arr", ",", "arr", ".", "length", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "arr", "[", "i", "]", "+", "\"", "\"", ")", ";", "}", "}", "</s>"]
["<s>", "public", "int", "findSmallestInteger", "(", "int", "input", "[", "]", ")", "{", "int", "result", "=", "1", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "input", "[", "i", "]", "<", "=", "result", ")", "{", "result", "+", "=", "input", "[", "i", "]", ";", "}", "else", "{", "break", ";", "}", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input", "[", "]", "=", "{", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:8>", "}", ";", "SmallestIntegerNotRepresentedBySubsetSum", "ss", "=", "new", "SmallestIntegerNotRepresentedBySubsetSum", "(", ")", ";", "System", ".", "out", ".", "print", "(", "ss", ".", "findSmallestInteger", "(", "input", ")", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "areConsecutive", "(", "int", "input", "[", "]", ")", "{", "int", "min", "=", "Integer", ".", "MAX_VALUE", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "input", "[", "i", "]", "<", "min", ")", "{", "min", "=", "input", "[", "i", "]", ";", "}", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "Math", ".", "abs", "(", "input", "[", "i", "]", ")", "-", "min", ">", "=", "input", ".", "length", ")", "{", "return", "false", ";", "}", "if", "(", "input", "[", "Math", ".", "abs", "(", "input", "[", "i", "]", ")", "-", "min", "]", "<", "0", ")", "{", "return", "false", ";", "}", "input", "[", "Math", ".", "abs", "(", "input", "[", "i", "]", ")", "-", "min", "]", "=", "-", "input", "[", "Math", ".", "abs", "(", "input", "[", "i", "]", ")", "-", "min", "]", ";", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "input", "[", "i", "]", "=", "Math", ".", "abs", "(", "input", "[", "i", "]", ")", ";", "}", "return", "true", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input", "[", "]", "=", "{", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", "}", ";", "CheckIfArrayElementsAreConsecutive", "cia", "=", "new", "CheckIfArrayElementsAreConsecutive", "(", ")", ";", "System", ".", "out", ".", "println", "(", "cia", ".", "areConsecutive", "(", "input", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "[", "]", "find", "(", "char", "[", "]", "input", ")", "{", "int", "[", "]", "output", "=", "new", "int", "[", "input", ".", "length", "+", "1", "]", ";", "output", "[", "0", "]", "=", "1", ";", "int", "low", "=", "0", ";", "int", "start", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "input", "[", "i", "]", "=", "=", "<CHAR_LIT>", ")", "{", "output", "[", "i", "+", "1", "]", "=", "output", "[", "i", "]", "-", "1", ";", "if", "(", "output", "[", "i", "+", "1", "]", "=", "=", "low", ")", "{", "for", "(", "int", "j", "=", "start", ";", "j", "<", "=", "i", "+", "1", ";", "j", "+", "+", ")", "{", "output", "[", "j", "]", "=", "output", "[", "j", "]", "+", "1", ";", "}", "}", "}", "else", "{", "low", "=", "output", "[", "start", "]", ";", "output", "[", "i", "+", "1", "]", "=", "low", "+", "1", ";", "start", "=", "i", "+", "1", ";", "}", "}", "return", "output", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "MinimumNumberFromSequence", "ms", "=", "new", "MinimumNumberFromSequence", "(", ")", ";", "int", "output", "[", "]", "=", "ms", ".", "find", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ";", "System", ".", "out", ".", "println", "(", "Arrays", ".", "toString", "(", "output", ")", ")", ";", "output", "=", "ms", ".", "find", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ";", "System", ".", "out", ".", "println", "(", "Arrays", ".", "toString", "(", "output", ")", ")", ";", "output", "=", "ms", ".", "find", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ";", "System", ".", "out", ".", "println", "(", "Arrays", ".", "toString", "(", "output", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "flip0sToMaximizeConsecutive1s", "(", "int", "input", "[", "]", ",", "int", "flipsAllowed", ")", "{", "int", "windowStart", "=", "0", ";", "int", "countZero", "=", "0", ";", "int", "result", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "input", "[", "i", "]", "=", "=", "1", ")", "{", "result", "=", "Math", ".", "max", "(", "result", ",", "i", "-", "windowStart", "+", "1", ")", ";", "}", "else", "{", "if", "(", "countZero", "<", "flipsAllowed", ")", "{", "countZero", "+", "+", ";", "result", "=", "Math", ".", "max", "(", "result", ",", "i", "-", "windowStart", "+", "1", ")", ";", "}", "else", "{", "while", "(", "true", ")", "{", "if", "(", "input", "[", "windowStart", "]", "=", "=", "0", ")", "{", "windowStart", "+", "+", ";", "break", ";", "}", "windowStart", "+", "+", ";", "}", "}", "}", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input", "[", "]", "=", "{", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", "}", ";", "Flip0sMaximum1s", "fm", "=", "new", "Flip0sMaximum1s", "(", ")", ";", "System", ".", "out", ".", "print", "(", "fm", ".", "flip0sToMaximizeConsecutive1s", "(", "input", ",", "1", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "maxRepeatingNumber", "(", "int", "arr", "[", "]", ",", "int", "k", ")", "{", "int", "len", "=", "k", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "arr", "[", "arr", "[", "i", "]", "%", "len", "]", "+", "=", "len", ";", "}", "int", "maxRepeating", "=", "0", ";", "int", "maxRepeatingIndex", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "len", ";", "i", "+", "+", ")", "{", "if", "(", "maxRepeating", "<", "arr", "[", "i", "]", ")", "{", "maxRepeating", "=", "arr", "[", "i", "]", ";", "maxRepeatingIndex", "=", "i", ";", "}", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "len", ";", "i", "+", "+", ")", "{", "arr", "[", "i", "]", "=", "arr", "[", "i", "]", "%", "len", ";", "}", "return", "maxRepeatingIndex", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "MaxRepeatingNumber", "mrn", "=", "new", "MaxRepeatingNumber", "(", ")", ";", "int", "arr", "[", "]", "=", "{", "<NUM_LIT:2>", ",", "<NUM_LIT:2>", ",", "1", ",", "<NUM_LIT:3>", ",", "1", ",", "<NUM_LIT:2>", ",", "0", ",", "<NUM_LIT:3>", ",", "0", ",", "0", ",", "0", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:4>", "}", ";", "System", ".", "out", ".", "println", "(", "mrn", ".", "maxRepeatingNumber", "(", "arr", ",", "<NUM_LIT:6>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "findMind", "(", "int", "arr", "[", "]", ")", "{", "int", "total", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "total", "+", "=", "arr", "[", "i", "]", ";", "}", "List", "<", "Integer", ">", "result", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "combinationUtil", "(", "arr", ",", "arr", ".", "length", "/", "<NUM_LIT:2>", ",", "0", ",", "0", ",", "total", ",", "0", ",", "result", ")", ";", "return", "minFoundSoFar", ";", "}", "</s>"]
["<s>", "private", "void", "combinationUtil", "(", "int", "arr", "[", "]", ",", "int", "k", ",", "int", "start", ",", "int", "sum", ",", "int", "total", ",", "int", "pos", ",", "List", "<", "Integer", ">", "result", ")", "{", "if", "(", "pos", "=", "=", "k", ")", "{", "if", "(", "Math", ".", "abs", "(", "sum", "-", "total", "/", "<NUM_LIT:2>", ")", "<", "minFoundSoFar", ")", "{", "minFoundSoFar", "=", "Math", ".", "abs", "(", "sum", "-", "total", "/", "<NUM_LIT:2>", ")", ";", "System", ".", "out", ".", "println", "(", "result", ")", ";", "}", "return", ";", "}", "for", "(", "int", "i", "=", "start", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "sum", "+", "=", "arr", "[", "i", "]", ";", "result", ".", "add", "(", "arr", "[", "i", "]", ")", ";", "combinationUtil", "(", "arr", ",", "k", ",", "i", "+", "1", ",", "sum", ",", "total", ",", "pos", "+", "1", ",", "result", ")", ";", "result", ".", "remove", "(", "result", ".", "size", "(", ")", "-", "1", ")", ";", "sum", "-", "=", "arr", "[", "i", "]", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "TugOfWar", "tow", "=", "new", "TugOfWar", "(", ")", ";", "int", "arr", "[", "]", "=", "{", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT:12>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT>", ",", "1", ",", "<NUM_LIT:7>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", "}", ";", "int", "min", "=", "tow", ".", "findMind", "(", "arr", ")", ";", "System", ".", "out", ".", "print", "(", "min", ")", ";", "}", "</s>"]
["<s>", "public", "int", "[", "]", "maxNumber", "(", "int", "[", "]", "nums1", ",", "int", "[", "]", "nums2", ",", "int", "k", ")", "{", "int", "[", "]", "result", "=", "new", "int", "[", "k", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "=", "nums1", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "k", "-", "i", "<", "0", "|", "|", "i", ">", "nums1", ".", "length", "|", "|", "(", "k", "-", "i", ")", ">", "nums2", ".", "length", ")", "{", "continue", ";", "}", "int", "[", "]", "r1", "=", "findMaxNumber", "(", "nums1", ",", "i", ")", ";", "int", "[", "]", "r2", "=", "findMaxNumber", "(", "nums2", ",", "k", "-", "i", ")", ";", "int", "x", "=", "0", ",", "y", "=", "0", ";", "int", "r", "[", "]", "=", "new", "int", "[", "k", "]", ";", "int", "index", "=", "0", ";", "while", "(", "x", "<", "r1", ".", "length", "&", "&", "y", "<", "r2", ".", "length", ")", "{", "if", "(", "r1", "[", "x", "]", "=", "=", "r2", "[", "y", "]", ")", "{", "int", "t", "=", "x", "+", "1", ";", "int", "u", "=", "y", "+", "1", ";", "while", "(", "t", "<", "r1", ".", "length", "&", "&", "u", "<", "r2", ".", "length", ")", "{", "if", "(", "r1", "[", "t", "]", "=", "=", "r2", "[", "u", "]", ")", "{", "t", "+", "+", ";", "u", "+", "+", ";", "}", "else", "{", "break", ";", "}", "}", "if", "(", "t", "=", "=", "r1", ".", "length", "|", "|", "u", "=", "=", "r2", ".", "length", ")", "{", "r", "[", "index", "+", "+", "]", "=", "(", "t", "=", "=", "r1", ".", "length", "?", "r2", "[", "y", "+", "+", "]", ":", "r1", "[", "x", "+", "+", "]", ")", ";", "}", "else", "{", "r", "[", "index", "+", "+", "]", "=", "r1", "[", "t", "]", ">", "r2", "[", "u", "]", "?", "r1", "[", "x", "+", "+", "]", ":", "r2", "[", "y", "+", "+", "]", ";", "}", "}", "else", "if", "(", "r1", "[", "x", "]", ">", "r2", "[", "y", "]", ")", "{", "r", "[", "index", "+", "+", "]", "=", "r1", "[", "x", "+", "+", "]", ";", "}", "else", "if", "(", "r2", "[", "y", "]", ">", "r1", "[", "x", "]", ")", "{", "r", "[", "index", "+", "+", "]", "=", "r2", "[", "y", "+", "+", "]", ";", "}", "}", "while", "(", "x", "<", "r1", ".", "length", ")", "{", "r", "[", "index", "+", "+", "]", "=", "r1", "[", "x", "+", "+", "]", ";", "}", "while", "(", "y", "<", "r2", ".", "length", ")", "{", "r", "[", "index", "+", "+", "]", "=", "r2", "[", "y", "+", "+", "]", ";", "}", "if", "(", "isBigger", "(", "r", ",", "result", ")", ")", "{", "result", "=", "r", ";", "}", "}", "return", "result", ";", "}", "</s>"]
["<s>", "private", "boolean", "isBigger", "(", "int", "[", "]", "r1", ",", "int", "[", "]", "r2", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "r1", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "r1", "[", "i", "]", ">", "r2", "[", "i", "]", ")", "{", "return", "true", ";", "}", "else", "if", "(", "r1", "[", "i", "]", "<", "r2", "[", "i", "]", ")", "{", "return", "false", ";", "}", "}", "return", "false", ";", "}", "</s>"]
["<s>", "private", "int", "[", "]", "findMaxNumber", "(", "int", "input", "[", "]", ",", "int", "k", ")", "{", "int", "remaining", "=", "input", ".", "length", "-", "k", ";", "Deque", "<", "Integer", ">", "stack", "=", "new", "LinkedList", "<", ">", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "while", "(", "!", "stack", ".", "isEmpty", "(", ")", "&", "&", "remaining", ">", "0", ")", "{", "if", "(", "stack", ".", "peek", "(", ")", "<", "input", "[", "i", "]", ")", "{", "stack", ".", "pollFirst", "(", ")", ";", "remaining", "-", "-", ";", "}", "else", "{", "break", ";", "}", "}", "stack", ".", "offerFirst", "(", "input", "[", "i", "]", ")", ";", "}", "int", "[", "]", "result", "=", "new", "int", "[", "Math", ".", "min", "(", "k", ",", "input", ".", "length", ")", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "result", ".", "length", ";", "i", "+", "+", ")", "{", "result", "[", "i", "]", "=", "stack", ".", "pollLast", "(", ")", ";", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "MaxNumberFromTwoArray", "max", "=", "new", "MaxNumberFromTwoArray", "(", ")", ";", "int", "[", "]", "input1", "=", "{", "<NUM_LIT:9>", ",", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:3>", "}", ";", "int", "[", "]", "input2", "=", "{", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:5>", "}", ";", "int", "[", "]", "input3", "=", "{", "<NUM_LIT:2>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:4>", ",", "0", "}", ";", "int", "[", "]", "input4", "=", "{", "<NUM_LIT:7>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:8>", ",", "0", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:2>", "}", ";", "int", "[", "]", "result", "=", "max", ".", "maxNumber", "(", "input3", ",", "input4", ",", "<NUM_LIT:15>", ")", ";", "System", ".", "out", ".", "print", "(", "Arrays", ".", "toString", "(", "result", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "[", "]", "maxSubArray", "(", "int", "input", "[", "]", ",", "int", "k", ")", "{", "Deque", "<", "Integer", ">", "queue", "=", "new", "LinkedList", "<", "Integer", ">", "(", ")", ";", "int", "max", "[", "]", "=", "new", "int", "[", "input", ".", "length", "-", "k", "+", "1", "]", ";", "int", "maxVal", "=", "Integer", ".", "MIN_VALUE", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "k", ";", "i", "+", "+", ")", "{", "if", "(", "maxVal", "<", "input", "[", "i", "]", ")", "{", "maxVal", "=", "input", "[", "i", "]", ";", "}", "if", "(", "queue", ".", "isEmpty", "(", ")", ")", "{", "queue", ".", "offerLast", "(", "i", ")", ";", "}", "else", "{", "while", "(", "!", "queue", ".", "isEmpty", "(", ")", "&", "&", "input", "[", "queue", ".", "peekLast", "(", ")", "]", "<", "=", "input", "[", "i", "]", ")", "{", "queue", ".", "pollLast", "(", ")", ";", "}", "queue", ".", "offerLast", "(", "i", ")", ";", "}", "}", "max", "[", "0", "]", "=", "maxVal", ";", "int", "index", "=", "1", ";", "for", "(", "int", "i", "=", "k", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "i", "-", "k", "+", "1", ">", "queue", ".", "peekFirst", "(", ")", ")", "{", "queue", ".", "pollFirst", "(", ")", ";", "}", "while", "(", "!", "queue", ".", "isEmpty", "(", ")", "&", "&", "input", "[", "queue", ".", "peekLast", "(", ")", "]", "<", "=", "input", "[", "i", "]", ")", "{", "queue", ".", "pollLast", "(", ")", ";", "}", "queue", ".", "offerLast", "(", "i", ")", ";", "max", "[", "index", "]", "=", "input", "[", "queue", ".", "peekFirst", "(", ")", "]", ";", "index", "+", "+", ";", "}", "return", "max", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input", "[", "]", "=", "{", "<NUM_LIT:8>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:15>", ",", "<NUM_LIT:12>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", "}", ";", "MaximumOfSubarrayOfSizeK", "msa", "=", "new", "MaximumOfSubarrayOfSizeK", "(", ")", ";", "int", "max", "[", "]", "=", "msa", ".", "maxSubArray", "(", "input", ",", "<NUM_LIT:4>", ")", ";", "for", "(", "int", "i", ":", "max", ")", "{", "System", ".", "out", ".", "print", "(", "i", "+", "\"", "\"", ")", ";", "}", "}", "</s>"]
["<s>", "public", "String", "toString", "(", ")", "{", "return", "start", "+", "\"", "\"", "+", "end", ";", "}", "</s>"]
["<s>", "public", "Pair", "findSubArray", "(", "int", "input", "[", "]", ",", "int", "sum", ")", "{", "int", "currentSum", "=", "0", ";", "Pair", "p", "=", "new", "Pair", "(", ")", ";", "p", ".", "start", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "currentSum", "+", "=", "input", "[", "i", "]", ";", "p", ".", "end", "=", "i", ";", "if", "(", "currentSum", "=", "=", "sum", ")", "{", "return", "p", ";", "}", "else", "if", "(", "currentSum", ">", "sum", ")", "{", "int", "s", "=", "p", ".", "start", ";", "while", "(", "currentSum", ">", "sum", ")", "{", "currentSum", "-", "=", "input", "[", "s", "]", ";", "s", "+", "+", ";", "}", "p", ".", "start", "=", "s", ";", "if", "(", "currentSum", "=", "=", "sum", ")", "{", "return", "p", ";", "}", "}", "}", "return", "null", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "SubarrayWithGivenSum", "sgs", "=", "new", "SubarrayWithGivenSum", "(", ")", ";", "int", "input", "[", "]", "=", "{", "<NUM_LIT:6>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:11>", ",", "1", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:5>", "}", ";", "System", ".", "out", ".", "println", "(", "sgs", ".", "findSubArray", "(", "input", ",", "<NUM_LIT:15>", ")", ")", ";", "}", "</s>"]
["<s>", "private", "int", "ceilIndex", "(", "int", "input", "[", "]", ",", "int", "T", "[", "]", ",", "int", "end", ",", "int", "s", ")", "{", "int", "start", "=", "0", ";", "int", "middle", ";", "int", "len", "=", "end", ";", "while", "(", "start", "<", "=", "end", ")", "{", "middle", "=", "(", "start", "+", "end", ")", "/", "<NUM_LIT:2>", ";", "if", "(", "middle", "<", "len", "&", "&", "input", "[", "T", "[", "middle", "]", "]", "<", "s", "&", "&", "s", "<", "=", "input", "[", "T", "[", "middle", "+", "1", "]", "]", ")", "{", "return", "middle", "+", "1", ";", "}", "else", "if", "(", "input", "[", "T", "[", "middle", "]", "]", "<", "s", ")", "{", "start", "=", "middle", "+", "1", ";", "}", "else", "{", "end", "=", "middle", "-", "1", ";", "}", "}", "return", "-", "1", ";", "}", "</s>"]
["<s>", "public", "int", "longestIncreasingSubSequence", "(", "int", "input", "[", "]", ")", "{", "int", "T", "[", "]", "=", "new", "int", "[", "input", ".", "length", "]", ";", "int", "R", "[", "]", "=", "new", "int", "[", "input", ".", "length", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "R", ".", "length", ";", "i", "+", "+", ")", "{", "R", "[", "i", "]", "=", "-", "1", ";", "}", "T", "[", "0", "]", "=", "0", ";", "int", "len", "=", "0", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "input", "[", "T", "[", "0", "]", "]", ">", "input", "[", "i", "]", ")", "{", "T", "[", "0", "]", "=", "i", ";", "}", "else", "if", "(", "input", "[", "T", "[", "len", "]", "]", "<", "input", "[", "i", "]", ")", "{", "len", "+", "+", ";", "T", "[", "len", "]", "=", "i", ";", "R", "[", "T", "[", "len", "]", "]", "=", "T", "[", "len", "-", "1", "]", ";", "}", "else", "{", "int", "index", "=", "ceilIndex", "(", "input", ",", "T", ",", "len", ",", "input", "[", "i", "]", ")", ";", "T", "[", "index", "]", "=", "i", ";", "R", "[", "T", "[", "index", "]", "]", "=", "T", "[", "index", "-", "1", "]", ";", "}", "}", "System", ".", "out", ".", "print", "(", "\"", "<STR_LIT>", "\"", ")", ";", "int", "index", "=", "T", "[", "len", "]", ";", "while", "(", "index", "!", "=", "-", "1", ")", "{", "System", ".", "out", ".", "print", "(", "input", "[", "index", "]", "+", "\"", "\"", ")", ";", "index", "=", "R", "[", "index", "]", ";", "}", "System", ".", "out", ".", "println", "(", ")", ";", "return", "len", "+", "1", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input", "[", "]", "=", "{", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ",", "-", "1", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:12>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:10>", "}", ";", "LongestIncreasingSubSequenceOlogNMethod", "lis", "=", "new", "LongestIncreasingSubSequenceOlogNMethod", "(", ")", ";", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", "+", "lis", ".", "longestIncreasingSubSequence", "(", "input", ")", ")", ";", "}", "</s>"]
["<s>", "public", "void", "rearrange", "(", "int", "input", "[", "]", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "input", "[", "i", "]", "+", "+", ";", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "input", "[", "i", "]", ">", "0", ")", "{", "rearrangeUtil", "(", "input", ",", "i", ")", ";", "}", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "input", "[", "i", "]", "=", "-", "input", "[", "i", "]", "-", "1", ";", "}", "}", "</s>"]
["<s>", "private", "void", "rearrangeUtil", "(", "int", "input", "[", "]", ",", "int", "start", ")", "{", "int", "i", "=", "start", "+", "1", ";", "int", "v", "=", "input", "[", "start", "]", ";", "while", "(", "v", ">", "0", ")", "{", "int", "t", "=", "input", "[", "v", "-", "1", "]", ";", "input", "[", "v", "-", "1", "]", "=", "-", "i", ";", "i", "=", "v", ";", "v", "=", "t", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "RearrangeArrayPerIndex", "rai", "=", "new", "RearrangeArrayPerIndex", "(", ")", ";", "int", "input", "[", "]", "=", "{", "1", ",", "<NUM_LIT:2>", ",", "0", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", "}", ";", "rai", ".", "rearrange", "(", "input", ")", ";", "Arrays", ".", "stream", "(", "input", ")", ".", "forEach", "(", "i", "-", ">", "System", ".", "out", ".", "print", "(", "i", "+", "\"", "\"", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "findAllTriplets", "(", "int", "input", "[", "]", ",", "int", "total", ")", "{", "Arrays", ".", "sort", "(", "input", ")", ";", "int", "result", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", "-", "<NUM_LIT:2>", ";", "i", "+", "+", ")", "{", "int", "j", "=", "i", "+", "1", ";", "int", "k", "=", "input", ".", "length", "-", "1", ";", "while", "(", "j", "<", "k", ")", "{", "if", "(", "input", "[", "i", "]", "+", "input", "[", "j", "]", "+", "input", "[", "k", "]", ">", "=", "total", ")", "{", "k", "-", "-", ";", "}", "else", "{", "result", "+", "=", "k", "-", "j", ";", "j", "+", "+", ";", "}", "}", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input", "[", "]", "=", "{", "<NUM_LIT:5>", ",", "1", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:7>", "}", ";", "TripletSumLessThanTotal", "tt", "=", "new", "TripletSumLessThanTotal", "(", ")", ";", "System", ".", "out", ".", "print", "(", "tt", ".", "findAllTriplets", "(", "input", ",", "<NUM_LIT:12>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "void", "arrange", "(", "int", "arr", "[", "]", ")", "{", "int", "startOfPos", "=", "segregate", "(", "arr", ")", ";", "int", "startOfNeg", "=", "1", ";", "while", "(", "startOfNeg", "<", "startOfPos", "&", "&", "startOfPos", "<", "arr", ".", "length", ")", "{", "swap", "(", "arr", ",", "startOfNeg", ",", "startOfPos", ")", ";", "startOfNeg", "+", "=", "<NUM_LIT:2>", ";", "startOfPos", "+", "+", ";", "}", "}", "</s>"]
["<s>", "private", "int", "segregate", "(", "int", "arr", "[", "]", ")", "{", "int", "low", "=", "0", ";", "int", "high", "=", "arr", ".", "length", "-", "1", ";", "while", "(", "low", "<", "high", ")", "{", "if", "(", "arr", "[", "low", "]", "<", "0", ")", "{", "low", "+", "+", ";", "}", "else", "if", "(", "arr", "[", "high", "]", ">", "=", "0", ")", "{", "high", "-", "-", ";", "}", "else", "{", "swap", "(", "arr", ",", "low", ",", "high", ")", ";", "}", "}", "return", "low", ";", "}", "</s>"]
["<s>", "private", "void", "swap", "(", "int", "arr", "[", "]", ",", "int", "i", ",", "int", "j", ")", "{", "int", "t", "=", "arr", "[", "i", "]", ";", "arr", "[", "i", "]", "=", "arr", "[", "j", "]", ";", "arr", "[", "j", "]", "=", "t", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "arr", "[", "]", "=", "{", "-", "1", ",", "-", "<NUM_LIT:2>", ",", "-", "<NUM_LIT:3>", ",", "-", "<NUM_LIT:4>", ",", "-", "<NUM_LIT:5>", ",", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", "}", ";", "PositiveAndNegativeNumberAlternatively", "pan", "=", "new", "PositiveAndNegativeNumberAlternatively", "(", ")", ";", "pan", ".", "arrange", "(", "arr", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "arr", "[", "i", "]", "+", "\"", "\"", ")", ";", "}", "}", "</s>"]
["<s>", "public", "int", "maxProduct", "(", "int", "arr", "[", "]", ")", "{", "int", "RGN", "[", "]", "=", "new", "int", "[", "arr", ".", "length", "]", ";", "int", "LGN", "[", "]", "=", "new", "int", "[", "arr", ".", "length", "]", ";", "RGN", "[", "arr", ".", "length", "-", "1", "]", "=", "arr", "[", "arr", ".", "length", "-", "1", "]", ";", "int", "max", "=", "arr", "[", "arr", ".", "length", "-", "1", "]", ";", "for", "(", "int", "i", "=", "arr", ".", "length", "-", "<NUM_LIT:2>", ";", "i", ">", "=", "0", ";", "i", "-", "-", ")", "{", "if", "(", "max", "<", "arr", "[", "i", "]", ")", "{", "max", "=", "arr", "[", "i", "]", ";", "}", "if", "(", "max", ">", "arr", "[", "i", "]", ")", "{", "RGN", "[", "i", "]", "=", "max", ";", "}", "else", "{", "RGN", "[", "i", "]", "=", "0", ";", "}", "}", "LGN", "[", "0", "]", "=", "0", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "getLGN", "(", "arr", ",", "i", ",", "LGN", ")", ";", "}", "int", "maxProduct", "=", "0", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "arr", ".", "length", "-", "1", ";", "i", "+", "+", ")", "{", "int", "product", "=", "arr", "[", "i", "]", "*", "LGN", "[", "i", "]", "*", "RGN", "[", "i", "]", ";", "if", "(", "maxProduct", "<", "product", ")", "{", "maxProduct", "=", "product", ";", "}", "}", "return", "maxProduct", ";", "}", "</s>"]
["<s>", "private", "void", "getLGN", "(", "int", "arr", "[", "]", ",", "int", "pos", ",", "int", "LGN", "[", "]", ")", "{", "int", "max", "=", "0", ";", "int", "i", "=", "0", ";", "while", "(", "i", "<", "pos", ")", "{", "if", "(", "arr", "[", "i", "]", "<", "arr", "[", "pos", "]", ")", "{", "if", "(", "arr", "[", "i", "]", ">", "max", ")", "{", "max", "=", "arr", "[", "i", "]", ";", "}", "}", "i", "+", "+", ";", "}", "LGN", "[", "pos", "]", "=", "max", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "arr", "[", "]", "=", "{", "<NUM_LIT:6>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:8>", ",", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:10>", "}", ";", "IncreasingSubsequnceOfLength3WithMaxProduct", "iss", "=", "new", "IncreasingSubsequnceOfLength3WithMaxProduct", "(", ")", ";", "System", ".", "out", ".", "println", "(", "iss", ".", "maxProduct", "(", "arr", ")", ")", ";", "int", "arr1", "[", "]", "=", "{", "1", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:9>", "}", ";", "System", ".", "out", ".", "println", "(", "iss", ".", "maxProduct", "(", "arr1", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "maxSum", "(", "int", "input1", "[", "]", ",", "int", "input2", "[", "]", ")", "{", "int", "maxSum", "=", "0", ";", "int", "i", "=", "0", ",", "j", "=", "0", ";", "int", "sum1", "=", "0", ";", "int", "sum2", "=", "0", ";", "while", "(", "i", "<", "input1", ".", "length", "&", "&", "j", "<", "input2", ".", "length", ")", "{", "if", "(", "input1", "[", "i", "]", "=", "=", "input2", "[", "j", "]", ")", "{", "if", "(", "sum1", ">", "sum2", ")", "{", "maxSum", "+", "=", "sum1", "+", "input1", "[", "i", "]", ";", "}", "else", "{", "maxSum", "+", "=", "sum2", "+", "input2", "[", "j", "]", ";", "}", "i", "+", "+", ";", "j", "+", "+", ";", "sum1", "=", "0", ";", "sum2", "=", "0", ";", "}", "else", "if", "(", "input1", "[", "i", "]", "<", "input2", "[", "j", "]", ")", "{", "sum1", "+", "=", "input1", "[", "i", "+", "+", "]", ";", "}", "else", "{", "sum2", "+", "=", "input2", "[", "j", "+", "+", "]", ";", "}", "}", "while", "(", "i", "<", "input1", ".", "length", ")", "{", "sum1", "+", "=", "input1", "[", "i", "+", "+", "]", ";", "}", "while", "(", "j", "<", "input2", ".", "length", ")", "{", "sum2", "+", "=", "input2", "[", "j", "+", "+", "]", ";", "}", "if", "(", "sum1", ">", "sum2", ")", "{", "maxSum", "+", "=", "sum1", ";", "}", "else", "{", "maxSum", "+", "=", "sum2", ";", "}", "return", "maxSum", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input1", "[", "]", "=", "{", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:12>", ",", "<NUM_LIT:15>", ",", "<NUM_LIT:30>", ",", "<NUM_LIT>", "}", ";", "int", "input2", "[", "]", "=", "{", "1", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:15>", ",", "<NUM_LIT:16>", ",", "<NUM_LIT>", "}", ";", "MaximumSumPathTwoArrays", "msp", "=", "new", "MaximumSumPathTwoArrays", "(", ")", ";", "System", ".", "out", ".", "println", "(", "msp", ".", "maxSum", "(", "input1", ",", "input2", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "minDistance", "(", "int", "input", "[", "]", ",", "int", "x", ",", "int", "y", ")", "{", "int", "prev", "=", "-", "1", ";", "int", "prevFound", "=", "-", "1", ";", "int", "min", "=", "<NUM_LIT>", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "input", "[", "i", "]", "=", "=", "x", ")", "{", "if", "(", "prevFound", "=", "=", "-", "1", ")", "{", "prevFound", "=", "x", ";", "prev", "=", "i", ";", "}", "else", "if", "(", "prevFound", "=", "=", "x", ")", "{", "prev", "=", "i", ";", "}", "else", "{", "min", "=", "min", ">", "i", "-", "prev", "?", "i", "-", "prev", ":", "min", ";", "prev", "=", "i", ";", "prevFound", "=", "x", ";", "}", "}", "else", "if", "(", "input", "[", "i", "]", "=", "=", "y", ")", "{", "if", "(", "prevFound", "=", "=", "-", "1", ")", "{", "prevFound", "=", "y", ";", "prev", "=", "i", ";", "}", "else", "if", "(", "prevFound", "=", "=", "y", ")", "{", "prev", "=", "i", ";", "}", "else", "{", "min", "=", "min", ">", "i", "-", "prev", "?", "i", "-", "prev", ":", "min", ";", "prevFound", "=", "y", ";", "prev", "=", "i", ";", "}", "}", "}", "return", "min", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "MinimumDistanceBetweenTwoNumbers", "mdb", "=", "new", "MinimumDistanceBetweenTwoNumbers", "(", ")", ";", "int", "input", "[", "]", "=", "{", "<NUM_LIT:6>", ",", "<NUM_LIT:4>", ",", "1", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:6>", "}", ";", "System", ".", "out", ".", "println", "(", "mdb", ".", "minDistance", "(", "input", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "void", "rearrange", "(", "int", "input", "[", "]", ")", "{", "boolean", "isLess", "=", "true", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", "-", "1", ";", "i", "+", "+", ")", "{", "if", "(", "isLess", ")", "{", "if", "(", "input", "[", "i", "]", ">", "input", "[", "i", "+", "1", "]", ")", "{", "swap", "(", "input", ",", "i", ",", "i", "+", "1", ")", ";", "}", "}", "else", "{", "if", "(", "input", "[", "i", "]", "<", "input", "[", "i", "+", "1", "]", ")", "{", "swap", "(", "input", ",", "i", ",", "i", "+", "1", ")", ";", "}", "}", "isLess", "=", "!", "isLess", ";", "}", "}", "</s>"]
["<s>", "private", "void", "swap", "(", "int", "input", "[", "]", ",", "int", "i", ",", "int", "j", ")", "{", "int", "t", "=", "input", "[", "i", "]", ";", "input", "[", "i", "]", "=", "input", "[", "j", "]", ";", "input", "[", "j", "]", "=", "t", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input", "[", "]", "=", "{", "<NUM_LIT:4>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:7>", ",", "1", ",", "<NUM_LIT:9>", "}", ";", "ZigZagArrangement", "zza", "=", "new", "ZigZagArrangement", "(", ")", ";", "zza", ".", "rearrange", "(", "input", ")", ";", "Arrays", ".", "stream", "(", "input", ")", ".", "forEach", "(", "i", "-", ">", "System", ".", "out", ".", "print", "(", "i", "+", "\"", "\"", ")", ")", ";", "}", "</s>"]
["<s>", "public", "void", "rearrange", "(", "int", "input", "[", "]", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "i", "%", "<NUM_LIT:2>", "=", "=", "0", "&", "&", "input", "[", "i", "]", ">", "=", "0", ")", "{", "int", "indexOfNextNegative", "=", "findNext", "(", "input", ",", "i", "+", "1", ",", "false", ")", ";", "if", "(", "indexOfNextNegative", "=", "=", "-", "1", ")", "{", "return", ";", "}", "else", "{", "rightRotate", "(", "input", ",", "i", ",", "indexOfNextNegative", ")", ";", "}", "}", "else", "if", "(", "i", "%", "<NUM_LIT:2>", "!", "=", "0", "&", "&", "input", "[", "i", "]", "<", "0", ")", "{", "int", "indexOfNextPositive", "=", "findNext", "(", "input", ",", "i", "+", "1", ",", "true", ")", ";", "if", "(", "indexOfNextPositive", "=", "=", "-", "1", ")", "{", "return", ";", "}", "else", "{", "rightRotate", "(", "input", ",", "i", ",", "indexOfNextPositive", ")", ";", "}", "}", "}", "}", "</s>"]
["<s>", "private", "int", "findNext", "(", "int", "input", "[", "]", ",", "int", "start", ",", "boolean", "isPositive", ")", "{", "for", "(", "int", "i", "=", "start", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "(", "isPositive", "&", "&", "input", "[", "i", "]", ">", "=", "0", ")", "|", "|", "(", "!", "isPositive", "&", "&", "input", "[", "i", "]", "<", "0", ")", ")", "{", "return", "i", ";", "}", "}", "return", "-", "1", ";", "}", "</s>"]
["<s>", "private", "void", "rightRotate", "(", "int", "input", "[", "]", ",", "int", "start", ",", "int", "end", ")", "{", "int", "t", "=", "input", "[", "end", "]", ";", "for", "(", "int", "i", "=", "end", ";", "i", ">", "start", ";", "i", "-", "-", ")", "{", "input", "[", "i", "]", "=", "input", "[", "i", "-", "1", "]", ";", "}", "input", "[", "start", "]", "=", "t", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input", "[", "]", "=", "{", "-", "<NUM_LIT:5>", ",", "-", "<NUM_LIT:2>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:7>", ",", "1", ",", "<NUM_LIT:8>", ",", "0", ",", "-", "<NUM_LIT:8>", "}", ";", "PositiveAndNegativeNumberAlternativelyMaintainingOrder", "pss", "=", "new", "PositiveAndNegativeNumberAlternativelyMaintainingOrder", "(", ")", ";", "pss", ".", "rearrange", "(", "input", ")", ";", "Arrays", ".", "stream", "(", "input", ")", ".", "forEach", "(", "i", "-", ">", "System", ".", "out", ".", "print", "(", "i", "+", "\"", "\"", ")", ")", ";", "}", "</s>"]
["<s>", "public", "String", "toString", "(", ")", "{", "return", "a", "+", "\"", "\"", "+", "b", "+", "\"", "\"", "+", "c", ";", "}", "</s>"]
["<s>", "public", "Triplet", "findTriplet", "(", "int", "input", "[", "]", ",", "int", "sum", ")", "{", "Arrays", ".", "sort", "(", "input", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", "-", "<NUM_LIT:2>", ";", "i", "+", "+", ")", "{", "int", "start", "=", "i", "+", "1", ";", "int", "end", "=", "input", ".", "length", "-", "1", ";", "int", "new_sum", "=", "sum", "-", "input", "[", "i", "]", ";", "while", "(", "start", "<", "end", ")", "{", "if", "(", "new_sum", "=", "=", "input", "[", "start", "]", "+", "input", "[", "end", "]", ")", "{", "Triplet", "t", "=", "new", "Triplet", "(", ")", ";", "t", ".", "a", "=", "input", "[", "i", "]", ";", "t", ".", "b", "=", "input", "[", "start", "]", ";", "t", ".", "c", "=", "input", "[", "end", "]", ";", "return", "t", ";", "}", "if", "(", "new_sum", ">", "input", "[", "start", "]", "+", "input", "[", "end", "]", ")", "{", "start", "+", "+", ";", "}", "else", "{", "end", "-", "-", ";", "}", "}", "}", "return", "null", ";", "}", "</s>"]
["<s>", "public", "List", "<", "List", "<", "Integer", ">", ">", "threeSum", "(", "int", "[", "]", "nums", ")", "{", "Arrays", ".", "sort", "(", "nums", ")", ";", "List", "<", "List", "<", "Integer", ">", ">", "result", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "nums", ".", "length", "-", "<NUM_LIT:2>", ";", "i", "+", "+", ")", "{", "if", "(", "i", "!", "=", "0", "&", "&", "nums", "[", "i", "]", "=", "=", "nums", "[", "i", "-", "1", "]", ")", "{", "continue", ";", "}", "int", "start", "=", "i", "+", "1", ";", "int", "end", "=", "nums", ".", "length", "-", "1", ";", "while", "(", "start", "<", "end", ")", "{", "if", "(", "nums", "[", "i", "]", "+", "nums", "[", "start", "]", "+", "nums", "[", "end", "]", "=", "=", "0", ")", "{", "List", "<", "Integer", ">", "r", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "r", ".", "add", "(", "nums", "[", "i", "]", ")", ";", "r", ".", "add", "(", "nums", "[", "start", "]", ")", ";", "r", ".", "add", "(", "nums", "[", "end", "]", ")", ";", "result", ".", "add", "(", "r", ")", ";", "start", "+", "+", ";", "end", "-", "-", ";", "while", "(", "start", "<", "nums", ".", "length", "&", "&", "nums", "[", "start", "]", "=", "=", "nums", "[", "start", "-", "1", "]", ")", "{", "start", "+", "+", ";", "}", "while", "(", "end", ">", "=", "0", "&", "&", "nums", "[", "end", "]", "=", "=", "nums", "[", "end", "+", "1", "]", ")", "{", "end", "-", "-", ";", "}", "}", "else", "if", "(", "nums", "[", "i", "]", "+", "nums", "[", "start", "]", "+", "nums", "[", "end", "]", "<", "0", ")", "{", "start", "+", "+", ";", "}", "else", "{", "end", "-", "-", ";", "}", "}", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "TripletInArray", "tip", "=", "new", "TripletInArray", "(", ")", ";", "int", "input", "[", "]", "=", "{", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", "}", ";", "int", "sum", "=", "<NUM_LIT>", ";", "System", ".", "out", ".", "println", "(", "tip", ".", "findTriplet", "(", "input", ",", "sum", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "String", "toString", "(", ")", "{", "return", "\"", "<STR_LIT>", "\"", "+", "start", "+", "\"", "<STR_LIT>", "\"", "+", "end", "+", "\"", "<STR_LIT>", "\"", "+", "sum", "+", "\"", "<STR_LIT:]>", "\"", ";", "}", "</s>"]
["<s>", "public", "Triplet", "kadaneWrap", "(", "int", "arr", "[", "]", ")", "{", "Triplet", "straightKadane", "=", "kadane", "(", "arr", ")", ";", "int", "sum", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "sum", "+", "=", "arr", "[", "i", "]", ";", "arr", "[", "i", "]", "=", "-", "arr", "[", "i", "]", ";", "}", "Triplet", "wrappedNegKadane", "=", "kadane", "(", "arr", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "arr", "[", "i", "]", "=", "-", "arr", "[", "i", "]", ";", "}", "if", "(", "straightKadane", ".", "sum", "<", "sum", "+", "wrappedNegKadane", ".", "sum", ")", "{", "straightKadane", ".", "sum", "=", "wrappedNegKadane", ".", "sum", "+", "sum", ";", "straightKadane", ".", "start", "=", "wrappedNegKadane", ".", "end", "+", "1", ";", "straightKadane", ".", "end", "=", "wrappedNegKadane", ".", "start", "-", "1", ";", "}", "return", "straightKadane", ";", "}", "</s>"]
["<s>", "public", "Triplet", "kadane", "(", "int", "arr", "[", "]", ")", "{", "int", "sum", "=", "0", ";", "int", "cStart", "=", "0", ";", "int", "mStart", "=", "0", ";", "int", "end", "=", "0", ";", "int", "maxSum", "=", "Integer", ".", "MIN_VALUE", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "sum", "+", "=", "arr", "[", "i", "]", ";", "if", "(", "sum", "<", "=", "0", ")", "{", "sum", "=", "0", ";", "cStart", "=", "i", "+", "1", ";", "}", "else", "{", "if", "(", "sum", ">", "maxSum", ")", "{", "maxSum", "=", "sum", ";", "mStart", "=", "cStart", ";", "end", "=", "i", ";", "}", "}", "}", "Triplet", "p", "=", "new", "Triplet", "(", ")", ";", "p", ".", "sum", "=", "maxSum", ";", "p", ".", "start", "=", "mStart", ";", "p", ".", "end", "=", "end", ";", "return", "p", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "KadaneWrapArray", "kwa", "=", "new", "KadaneWrapArray", "(", ")", ";", "int", "input", "[", "]", "=", "{", "<NUM_LIT:12>", ",", "-", "<NUM_LIT:2>", ",", "-", "<NUM_LIT:6>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:9>", ",", "-", "<NUM_LIT:7>", ",", "<NUM_LIT:3>", "}", ";", "int", "input1", "[", "]", "=", "{", "<NUM_LIT:8>", ",", "-", "<NUM_LIT:8>", ",", "<NUM_LIT:9>", ",", "-", "<NUM_LIT:9>", ",", "<NUM_LIT:10>", ",", "-", "<NUM_LIT:11>", ",", "<NUM_LIT:12>", "}", ";", "System", ".", "out", ".", "println", "(", "kwa", ".", "kadaneWrap", "(", "input", ")", ")", ";", "System", ".", "out", ".", "println", "(", "kwa", ".", "kadaneWrap", "(", "input1", ")", ")", ";", "}", "</s>"]
["<s>", "public", "List", "<", "Integer", ">", "commonElements", "(", "int", "input1", "[", "]", ",", "int", "input2", "[", "]", ",", "int", "input3", "[", "]", ")", "{", "int", "i", "=", "0", ";", "int", "j", "=", "0", ";", "int", "k", "=", "0", ";", "List", "<", "Integer", ">", "result", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "while", "(", "i", "<", "input1", ".", "length", "&", "&", "j", "<", "input2", ".", "length", "&", "&", "k", "<", "input3", ".", "length", ")", "{", "if", "(", "input1", "[", "i", "]", "=", "=", "input2", "[", "j", "]", "&", "&", "input2", "[", "j", "]", "=", "=", "input3", "[", "k", "]", ")", "{", "result", ".", "add", "(", "input1", "[", "i", "]", ")", ";", "i", "+", "+", ";", "j", "+", "+", ";", "k", "+", "+", ";", "}", "else", "if", "(", "input1", "[", "i", "]", "<", "input2", "[", "j", "]", ")", "{", "i", "+", "+", ";", "}", "else", "if", "(", "input2", "[", "j", "]", "<", "input3", "[", "k", "]", ")", "{", "j", "+", "+", ";", "}", "else", "{", "k", "+", "+", ";", "}", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input1", "[", "]", "=", "{", "1", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:20>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", "}", ";", "int", "input2", "[", "]", "=", "{", "<NUM_LIT:6>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:20>", ",", "<NUM_LIT>", ",", "<NUM_LIT:100>", "}", ";", "int", "input3", "[", "]", "=", "{", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:15>", ",", "<NUM_LIT:20>", ",", "<NUM_LIT:30>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", "}", ";", "CommonThreeSortedArray", "cts", "=", "new", "CommonThreeSortedArray", "(", ")", ";", "List", "<", "Integer", ">", "result", "=", "cts", ".", "commonElements", "(", "input1", ",", "input2", ",", "input3", ")", ";", "result", ".", "forEach", "(", "i", "-", ">", "System", ".", "out", ".", "print", "(", "i", "+", "\"", "\"", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "trap", "(", "int", "[", "]", "height", ")", "{", "if", "(", "height", "=", "=", "null", "|", "|", "height", ".", "length", "=", "=", "0", ")", "{", "return", "0", ";", "}", "int", "len", "=", "height", ".", "length", ";", "int", "left", "[", "]", "=", "new", "int", "[", "len", "]", ";", "int", "right", "[", "]", "=", "new", "int", "[", "len", "]", ";", "left", "[", "0", "]", "=", "height", "[", "0", "]", ";", "right", "[", "len", "-", "1", "]", "=", "height", "[", "len", "-", "1", "]", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "len", ";", "i", "+", "+", ")", "{", "left", "[", "i", "]", "=", "Math", ".", "max", "(", "height", "[", "i", "]", ",", "left", "[", "i", "-", "1", "]", ")", ";", "right", "[", "len", "-", "i", "-", "1", "]", "=", "Math", ".", "max", "(", "height", "[", "len", "-", "i", "-", "1", "]", ",", "right", "[", "len", "-", "i", "]", ")", ";", "}", "int", "maxWaterTrapped", "=", "0", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "len", "-", "1", ";", "i", "+", "+", ")", "{", "int", "min", "=", "Math", ".", "min", "(", "left", "[", "i", "]", ",", "right", "[", "i", "]", ")", ";", "if", "(", "height", "[", "i", "]", "<", "min", ")", "{", "maxWaterTrapped", "+", "=", "min", "-", "height", "[", "i", "]", ";", "}", "}", "return", "maxWaterTrapped", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input", "[", "]", "=", "{", "0", ",", "1", ",", "0", ",", "<NUM_LIT:2>", ",", "1", ",", "0", ",", "1", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:2>", ",", "1", ",", "<NUM_LIT:2>", ",", "1", "}", ";", "TrappingWater", "tw", "=", "new", "TrappingWater", "(", ")", ";", "System", ".", "out", ".", "println", "(", "tw", ".", "trap", "(", "input", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "oneProfit", "(", "int", "arr", "[", "]", ")", "{", "int", "minPrice", "=", "arr", "[", "0", "]", ";", "int", "maxProfit", "=", "0", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "arr", "[", "i", "]", "-", "minPrice", ">", "maxProfit", ")", "{", "maxProfit", "=", "arr", "[", "i", "]", "-", "minPrice", ";", "}", "if", "(", "arr", "[", "i", "]", "<", "minPrice", ")", "{", "minPrice", "=", "arr", "[", "i", "]", ";", "}", "}", "return", "maxProfit", ";", "}", "</s>"]
["<s>", "public", "int", "allTimeProfit", "(", "int", "arr", "[", "]", ")", "{", "int", "profit", "=", "0", ";", "int", "localMin", "=", "arr", "[", "0", "]", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "arr", "[", "i", "-", "1", "]", ">", "=", "arr", "[", "i", "]", ")", "{", "localMin", "=", "arr", "[", "i", "]", ";", "}", "else", "{", "profit", "+", "=", "arr", "[", "i", "]", "-", "localMin", ";", "localMin", "=", "arr", "[", "i", "]", ";", "}", "}", "return", "profit", ";", "}", "</s>"]
["<s>", "public", "int", "allTimeProfit1", "(", "int", "arr", "[", "]", ")", "{", "int", "profit", "=", "0", ";", "int", "i", "=", "0", ";", "while", "(", "i", "<", "arr", ".", "length", ")", "{", "while", "(", "i", "+", "1", "<", "arr", ".", "length", "&", "&", "arr", "[", "i", "]", ">", "=", "arr", "[", "i", "+", "1", "]", ")", "{", "i", "+", "+", ";", "}", "while", "(", "i", "+", "1", "<", "arr", ".", "length", "&", "&", "arr", "[", "i", "]", "<", "arr", "[", "i", "+", "1", "]", ")", "{", "profit", "+", "=", "arr", "[", "i", "+", "1", "]", "-", "arr", "[", "i", "]", ";", "i", "+", "+", ";", "}", "i", "+", "+", ";", "}", "return", "profit", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "arr", "[", "]", "=", "{", "<NUM_LIT:7>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:15>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:3>", "}", ";", "int", "arr1", "[", "]", "=", "{", "<NUM_LIT:6>", ",", "<NUM_LIT:4>", ",", "1", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:3>", ",", "1", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ",", "0", ",", "1", ",", "<NUM_LIT:2>", "}", ";", "BuySellStockProfit", "bss", "=", "new", "BuySellStockProfit", "(", ")", ";", "System", ".", "out", ".", "println", "(", "bss", ".", "oneProfit", "(", "arr", ")", ")", ";", "System", ".", "out", ".", "print", "(", "bss", ".", "allTimeProfit", "(", "arr1", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "[", "]", "larger", "(", "int", "input", "[", "]", ")", "{", "Deque", "<", "Integer", ">", "stack", "=", "new", "LinkedList", "<", "Integer", ">", "(", ")", ";", "int", "result", "[", "]", "=", "new", "int", "[", "input", ".", "length", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "result", ".", "length", ";", "i", "+", "+", ")", "{", "result", "[", "i", "]", "=", "-", "1", ";", "}", "stack", ".", "offerFirst", "(", "0", ")", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "while", "(", "stack", ".", "size", "(", ")", ">", "0", ")", "{", "int", "t", "=", "stack", ".", "peekFirst", "(", ")", ";", "if", "(", "input", "[", "t", "]", "<", "input", "[", "i", "]", ")", "{", "result", "[", "t", "]", "=", "i", ";", "stack", ".", "pollFirst", "(", ")", ";", "}", "else", "{", "break", ";", "}", "}", "stack", ".", "offerFirst", "(", "i", ")", ";", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "LargerElementOnRight", "leo", "=", "new", "LargerElementOnRight", "(", ")", ";", "int", "input", "[", "]", "=", "{", "<NUM_LIT:4>", ",", "<NUM_LIT:2>", ",", "-", "<NUM_LIT:8>", ",", "<NUM_LIT:6>", ",", "0", ",", "-", "<NUM_LIT:3>", ",", "-", "1", ",", "1", ",", "<NUM_LIT:9>", "}", ";", "int", "result", "[", "]", "=", "leo", ".", "larger", "(", "input", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "result", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "result", "[", "i", "]", "!", "=", "-", "1", ")", "{", "System", ".", "out", ".", "print", "(", "input", "[", "result", "[", "i", "]", "]", "+", "\"", "\"", ")", ";", "}", "else", "{", "System", ".", "out", ".", "print", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "}", "}", "</s>"]
["<s>", "public", "int", "firstMissingPositive", "(", "int", "[", "]", "nums", ")", "{", "int", "startOfPositive", "=", "segregate", "(", "nums", ")", ";", "for", "(", "int", "i", "=", "startOfPositive", ";", "i", "<", "nums", ".", "length", ";", "i", "+", "+", ")", "{", "int", "index", "=", "Math", ".", "abs", "(", "nums", "[", "i", "]", ")", "+", "startOfPositive", "-", "1", ";", "if", "(", "index", "<", "nums", ".", "length", ")", "{", "nums", "[", "index", "]", "=", "-", "Math", ".", "abs", "(", "nums", "[", "index", "]", ")", ";", "}", "}", "for", "(", "int", "i", "=", "startOfPositive", ";", "i", "<", "nums", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "nums", "[", "i", "]", ">", "0", ")", "{", "return", "i", "-", "startOfPositive", "+", "1", ";", "}", "}", "return", "nums", ".", "length", "-", "startOfPositive", "+", "1", ";", "}", "</s>"]
["<s>", "private", "int", "segregate", "(", "int", "[", "]", "nums", ")", "{", "int", "start", "=", "0", ";", "int", "end", "=", "nums", ".", "length", "-", "1", ";", "while", "(", "start", "<", "=", "end", ")", "{", "if", "(", "nums", "[", "start", "]", "<", "=", "0", ")", "{", "start", "+", "+", ";", "}", "else", "if", "(", "nums", "[", "end", "]", ">", "0", ")", "{", "end", "-", "-", ";", "}", "else", "{", "swap", "(", "nums", ",", "start", ",", "end", ")", ";", "}", "}", "return", "start", ";", "}", "</s>"]
["<s>", "private", "void", "swap", "(", "int", "[", "]", "nums", ",", "int", "start", ",", "int", "end", ")", "{", "int", "t", "=", "nums", "[", "start", "]", ";", "nums", "[", "start", "]", "=", "nums", "[", "end", "]", ";", "nums", "[", "end", "]", "=", "t", ";", "}", "</s>"]
["<s>", "public", "int", "maximumGeeks", "(", "int", "input", "[", "]", ")", "{", "int", "lhs", "[", "]", "=", "new", "int", "[", "input", ".", "length", "]", ";", "int", "rhs", "[", "]", "=", "new", "int", "[", "input", ".", "length", "]", ";", "lhs", "[", "0", "]", "=", "0", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "lhs", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "input", "[", "lhs", "[", "i", "-", "1", "]", "]", "<", "input", "[", "i", "]", ")", "{", "lhs", "[", "i", "]", "=", "lhs", "[", "i", "-", "1", "]", ";", "}", "else", "{", "lhs", "[", "i", "]", "=", "i", ";", "}", "}", "rhs", "[", "input", ".", "length", "-", "1", "]", "=", "input", ".", "length", "-", "1", ";", "for", "(", "int", "i", "=", "input", ".", "length", "-", "<NUM_LIT:2>", ";", "i", ">", "=", "0", ";", "i", "-", "-", ")", "{", "if", "(", "input", "[", "rhs", "[", "i", "+", "1", "]", "]", ">", "input", "[", "i", "]", ")", "{", "rhs", "[", "i", "]", "=", "rhs", "[", "i", "+", "1", "]", ";", "}", "else", "{", "rhs", "[", "i", "]", "=", "i", ";", "}", "}", "int", "i", "=", "0", ";", "int", "j", "=", "0", ";", "int", "max", "=", "0", ";", "for", "(", ";", "j", "<", "input", ".", "length", ";", ")", "{", "if", "(", "input", "[", "lhs", "[", "i", "]", "]", "<", "input", "[", "rhs", "[", "j", "]", "]", ")", "{", "max", "=", "Math", ".", "max", "(", "max", ",", "j", "-", "i", ")", ";", "j", "+", "+", ";", "}", "else", "{", "i", "+", "+", ";", "}", "}", "return", "max", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "MaximumIminusJSuchThatAiGTAj", "mj", "=", "new", "MaximumIminusJSuchThatAiGTAj", "(", ")", ";", "int", "input", "[", "]", "=", "{", "<NUM_LIT:11>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "1", ",", "<NUM_LIT:4>", ",", "<NUM_LIT>", ",", "1", ",", "<NUM_LIT:10>", "}", ";", "System", ".", "out", ".", "println", "(", "mj", ".", "maximumGeeks", "(", "input", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "equalNumber", "(", "int", "arr", "[", "]", ")", "{", "int", "sum", "[", "]", "=", "new", "int", "[", "arr", ".", "length", "]", ";", "sum", "[", "0", "]", "=", "arr", "[", "0", "]", "=", "=", "0", "?", "-", "1", ":", "1", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "sum", ".", "length", ";", "i", "+", "+", ")", "{", "sum", "[", "i", "]", "=", "sum", "[", "i", "-", "1", "]", "+", "(", "arr", "[", "i", "]", "=", "=", "0", "?", "-", "1", ":", "1", ")", ";", "}", "Map", "<", "Integer", ",", "Integer", ">", "pos", "=", "new", "HashMap", "<", "Integer", ",", "Integer", ">", "(", ")", ";", "int", "maxLen", "=", "0", ";", "int", "i", "=", "0", ";", "for", "(", "int", "s", ":", "sum", ")", "{", "if", "(", "s", "=", "=", "0", ")", "{", "maxLen", "=", "Math", ".", "max", "(", "maxLen", ",", "i", "+", "1", ")", ";", "}", "if", "(", "pos", ".", "containsKey", "(", "s", ")", ")", "{", "maxLen", "=", "Math", ".", "max", "(", "maxLen", ",", "i", "-", "pos", ".", "get", "(", "s", ")", ")", ";", "}", "else", "{", "pos", ".", "put", "(", "s", ",", "i", ")", ";", "}", "i", "+", "+", ";", "}", "return", "maxLen", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "arr", "[", "]", "=", "{", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", "}", ";", "LargestSubArrayWithEqual0sAnd1s", "mse", "=", "new", "LargestSubArrayWithEqual0sAnd1s", "(", ")", ";", "System", ".", "out", ".", "println", "(", "mse", ".", "equalNumber", "(", "arr", ")", ")", ";", "}", "</s>"]
["<s>", "public", "List", "<", "Integer", ">", "nthElement", "(", "int", "n", ")", "{", "int", "i", "=", "1", ";", "List", "<", "Integer", ">", "current", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "current", ".", "add", "(", "1", ")", ";", "List", "<", "Integer", ">", "result", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "while", "(", "i", "<", "n", ")", "{", "int", "count", "=", "1", ";", "int", "index", "=", "0", ";", "for", "(", "int", "j", "=", "1", ";", "j", "<", "current", ".", "size", "(", ")", ";", "j", "+", "+", ")", "{", "if", "(", "current", ".", "get", "(", "index", ")", "=", "=", "current", ".", "get", "(", "j", ")", ")", "{", "count", "+", "+", ";", "}", "else", "{", "result", ".", "add", "(", "count", ")", ";", "result", ".", "add", "(", "current", ".", "get", "(", "index", ")", ")", ";", "count", "=", "1", ";", "index", "=", "j", ";", "}", "}", "result", ".", "add", "(", "count", ")", ";", "result", ".", "add", "(", "current", ".", "get", "(", "index", ")", ")", ";", "current", "=", "result", ";", "result", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "i", "+", "+", ";", "}", "return", "current", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "NthElementOfCountNumberSequence", "nes", "=", "new", "NthElementOfCountNumberSequence", "(", ")", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "=", "<NUM_LIT:10>", ";", "i", "+", "+", ")", "{", "List", "<", "Integer", ">", "result", "=", "nes", ".", "nthElement", "(", "i", ")", ";", "result", ".", "forEach", "(", "System", ".", "out", ":", ":", "print", ")", ";", "System", ".", "out", ".", "println", "(", ")", ";", "}", "}", "</s>"]
["<s>", "int", "maxSum", "(", "int", "input", "[", "]", ")", "{", "int", "arrSum", "=", "0", ";", "int", "rotationSum", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "arrSum", "+", "=", "input", "[", "i", "]", ";", "rotationSum", "+", "=", "i", "*", "input", "[", "i", "]", ";", "}", "int", "maxRotationSum", "=", "rotationSum", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "rotationSum", "+", "=", "input", ".", "length", "*", "input", "[", "i", "-", "1", "]", "-", "arrSum", ";", "maxRotationSum", "=", "Math", ".", "max", "(", "maxRotationSum", ",", "rotationSum", ")", ";", "}", "return", "maxRotationSum", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input", "[", "]", "=", "{", "<NUM_LIT:10>", ",", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:9>", "}", ";", "RotationWithMaxSum", "rms", "=", "new", "RotationWithMaxSum", "(", ")", ";", "System", ".", "out", ".", "print", "(", "rms", ".", "maxSum", "(", "input", ")", ")", ";", "}", "</s>"]
["<s>", "public", "void", "divide", "(", "int", "arr", "[", "]", ",", "List", "<", "Integer", ">", "list1", ",", "List", "<", "Integer", ">", "list2", ")", "{", "Arrays", ".", "sort", "(", "arr", ")", ";", "int", "len", "=", "arr", ".", "length", ";", "int", "sum1", "=", "0", ";", "int", "sum2", "=", "0", ";", "for", "(", "int", "i", "=", "len", "-", "1", ";", "i", ">", "=", "0", ";", "i", "-", "-", ")", "{", "if", "(", "(", "sum1", "<", "sum2", "&", "&", "list1", ".", "size", "(", ")", "<", "len", "/", "<NUM_LIT:2>", ")", "|", "|", "(", "list2", ".", "size", "(", ")", ">", "=", "len", "/", "<NUM_LIT:2>", ")", ")", "{", "list1", ".", "add", "(", "arr", "[", "i", "]", ")", ";", "sum1", "=", "sum1", "+", "arr", "[", "i", "]", ";", "}", "else", "{", "list2", ".", "add", "(", "arr", "[", "i", "]", ")", ";", "sum2", "=", "sum2", "+", "arr", "[", "i", "]", ";", "}", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "List", "<", "Integer", ">", "list1", "=", "new", "ArrayList", "<", "Integer", ">", "(", ")", ";", "List", "<", "Integer", ">", "list2", "=", "new", "ArrayList", "<", "Integer", ">", "(", ")", ";", "int", "arr", "[", "]", "=", "{", "<NUM_LIT:15>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "1", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:2>", ",", "}", ";", "int", "arr1", "[", "]", "=", "{", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT:12>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT>", ",", "1", ",", "<NUM_LIT:7>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", "}", ";", "DivideNumbersInEqualGroupWithClosestSum", "dn", "=", "new", "DivideNumbersInEqualGroupWithClosestSum", "(", ")", ";", "dn", ".", "divide", "(", "arr", ",", "list1", ",", "list2", ")", ";", "System", ".", "out", ".", "println", "(", "list1", ")", ";", "System", ".", "out", ".", "println", "(", "list2", ")", ";", "list1", ".", "clear", "(", ")", ";", "list2", ".", "clear", "(", ")", ";", "dn", ".", "divide", "(", "arr1", ",", "list1", ",", "list2", ")", ";", "System", ".", "out", ".", "println", "(", "list1", ")", ";", "System", ".", "out", ".", "println", "(", "list2", ")", ";", "}", "</s>"]
["<s>", "public", "int", "[", "]", "multiply", "(", "int", "input", "[", "]", ")", "{", "int", "result", "[", "]", "=", "new", "int", "[", "input", ".", "length", "]", ";", "int", "left", "[", "]", "=", "new", "int", "[", "input", ".", "length", "]", ";", "int", "right", "[", "]", "=", "new", "int", "[", "input", ".", "length", "]", ";", "left", "[", "0", "]", "=", "1", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "left", "[", "i", "]", "=", "left", "[", "i", "-", "1", "]", "*", "input", "[", "i", "-", "1", "]", ";", "}", "right", "[", "input", ".", "length", "-", "1", "]", "=", "1", ";", "for", "(", "int", "i", "=", "input", ".", "length", "-", "<NUM_LIT:2>", ";", "i", ">", "=", "0", ";", "i", "-", "-", ")", "{", "right", "[", "i", "]", "=", "right", "[", "i", "+", "1", "]", "*", "input", "[", "i", "+", "1", "]", ";", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "result", "[", "i", "]", "=", "left", "[", "i", "]", "*", "right", "[", "i", "]", ";", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "MultiplyAllFieldsExceptOwnPosition", "maf", "=", "new", "MultiplyAllFieldsExceptOwnPosition", "(", ")", ";", "int", "input", "[", "]", "=", "{", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", "}", ";", "int", "result", "[", "]", "=", "maf", ".", "multiply", "(", "input", ")", ";", "for", "(", "int", "r", ":", "result", ")", "{", "System", ".", "out", ".", "print", "(", "r", "+", "\"", "\"", ")", ";", "}", "}", "</s>"]
["<s>", "NumberIndex", "(", "int", "val", ",", "int", "index", ")", "{", "this", ".", "val", "=", "val", ";", "this", ".", "index", "=", "index", ";", "}", "</s>"]
["<s>", "public", "List", "<", "Integer", ">", "countSmaller", "(", "int", "[", "]", "nums", ")", "{", "if", "(", "nums", ".", "length", "=", "=", "0", ")", "{", "return", "new", "ArrayList", "<", ">", "(", ")", ";", "}", "NumberIndex", "[", "]", "input", "=", "new", "NumberIndex", "[", "nums", ".", "length", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "nums", ".", "length", ";", "i", "+", "+", ")", "{", "input", "[", "i", "]", "=", "new", "NumberIndex", "(", "nums", "[", "i", "]", ",", "i", ")", ";", "}", "int", "result", "[", "]", "=", "new", "int", "[", "nums", ".", "length", "]", ";", "mergeUtil", "(", "input", ",", "result", ",", "0", ",", "input", ".", "length", "-", "1", ")", ";", "List", "<", "Integer", ">", "r", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "for", "(", "int", "s", ":", "result", ")", "{", "r", ".", "add", "(", "s", ")", ";", "}", "return", "r", ";", "}", "</s>"]
["<s>", "private", "void", "mergeUtil", "(", "NumberIndex", "[", "]", "nums", ",", "int", "[", "]", "result", ",", "int", "low", ",", "int", "high", ")", "{", "if", "(", "low", "=", "=", "high", ")", "{", "return", ";", "}", "int", "mid", "=", "(", "low", "+", "high", ")", "/", "<NUM_LIT:2>", ";", "mergeUtil", "(", "nums", ",", "result", ",", "low", ",", "mid", ")", ";", "mergeUtil", "(", "nums", ",", "result", ",", "mid", "+", "1", ",", "high", ")", ";", "int", "i", "=", "low", ";", "int", "j", "=", "mid", "+", "1", ";", "NumberIndex", "[", "]", "t", "=", "new", "NumberIndex", "[", "high", "-", "low", "+", "1", "]", ";", "int", "k", "=", "0", ";", "int", "tempResult", "[", "]", "=", "new", "int", "[", "high", "-", "low", "+", "1", "]", ";", "while", "(", "i", "<", "=", "mid", "&", "&", "j", "<", "=", "high", ")", "{", "if", "(", "nums", "[", "i", "]", ".", "val", "<", "=", "nums", "[", "j", "]", ".", "val", ")", "{", "tempResult", "[", "nums", "[", "i", "]", ".", "index", "-", "low", "]", "=", "j", "-", "mid", "-", "1", ";", "t", "[", "k", "+", "+", "]", "=", "nums", "[", "i", "+", "+", "]", ";", "}", "else", "{", "tempResult", "[", "nums", "[", "i", "]", ".", "index", "-", "low", "]", "=", "j", "-", "mid", ";", "t", "[", "k", "+", "+", "]", "=", "nums", "[", "j", "+", "+", "]", ";", "}", "}", "int", "i1", "=", "i", ";", "while", "(", "i1", "<", "=", "mid", ")", "{", "tempResult", "[", "nums", "[", "i1", "]", ".", "index", "-", "low", "]", "=", "j", "-", "mid", "-", "1", ";", "t", "[", "k", "+", "+", "]", "=", "nums", "[", "i1", "+", "+", "]", ";", "}", "while", "(", "j", "<", "=", "high", ")", "{", "t", "[", "k", "+", "+", "]", "=", "nums", "[", "j", "+", "+", "]", ";", "}", "k", "=", "0", ";", "for", "(", "i", "=", "low", ";", "i", "<", "=", "high", ";", "i", "+", "+", ")", "{", "nums", "[", "i", "]", "=", "t", "[", "k", "]", ";", "result", "[", "i", "]", "+", "=", "tempResult", "[", "k", "+", "+", "]", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "CountSmallerOnRight", "csr", "=", "new", "CountSmallerOnRight", "(", ")", ";", "int", "nums", "[", "]", "=", "{", "<NUM_LIT:5>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:6>", ",", "1", ",", "0", ",", "<NUM_LIT:3>", "}", ";", "List", "<", "Integer", ">", "result", "=", "csr", ".", "countSmaller", "(", "nums", ")", ";", "result", ".", "forEach", "(", "r", "-", ">", "System", ".", "out", ".", "print", "(", "r", "+", "\"", "\"", ")", ")", ";", "}", "</s>"]
["<s>", "public", "void", "printElementsOccurringKTimes", "(", "int", "arr", "[", "]", ",", "int", "k", ")", "{", "Pair", "[", "]", "p", "=", "new", "Pair", "[", "k", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "k", ";", "i", "+", "+", ")", "{", "p", "[", "i", "]", "=", "new", "Pair", "(", ")", ";", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "int", "j", "=", "0", ";", "for", "(", "j", "=", "0", ";", "j", "<", "k", ";", "j", "+", "+", ")", "{", "if", "(", "p", "[", "j", "]", ".", "element", "=", "=", "arr", "[", "i", "]", ")", "{", "p", "[", "j", "]", ".", "count", "+", "+", ";", "break", ";", "}", "}", "if", "(", "j", "=", "=", "k", ")", "{", "int", "l", "=", "0", ";", "for", "(", "l", "=", "0", ";", "l", "<", "k", ";", "l", "+", "+", ")", "{", "if", "(", "p", "[", "l", "]", ".", "count", "=", "=", "0", ")", "{", "p", "[", "l", "]", ".", "element", "=", "arr", "[", "i", "]", ";", "p", "[", "l", "]", ".", "count", "=", "1", ";", "break", ";", "}", "}", "if", "(", "l", "=", "=", "k", ")", "{", "for", "(", "int", "t", "=", "0", ";", "t", "<", "k", ";", "t", "+", "+", ")", "{", "p", "[", "t", "]", ".", "count", "-", "-", ";", "}", "}", "}", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "k", ";", "i", "+", "+", ")", "{", "if", "(", "p", "[", "i", "]", ".", "count", ">", "0", ")", "{", "int", "count", "=", "0", ";", "for", "(", "int", "j", "=", "0", ";", "j", "<", "arr", ".", "length", ";", "j", "+", "+", ")", "{", "if", "(", "arr", "[", "j", "]", "=", "=", "p", "[", "i", "]", ".", "element", ")", "{", "count", "+", "+", ";", "}", "}", "if", "(", "count", ">", "=", "arr", ".", "length", "/", "k", ")", "{", "System", ".", "out", ".", "println", "(", "p", "[", "i", "]", ".", "element", ")", ";", "}", "}", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "arr", "[", "]", "=", "{", "<NUM_LIT:3>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:2>", ",", "1", ",", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:3>", ",", "1", "}", ";", "FindElementsOccurringNByKTimesTetris", "fe", "=", "new", "FindElementsOccurringNByKTimesTetris", "(", ")", ";", "fe", ".", "printElementsOccurringKTimes", "(", "arr", ",", "<NUM_LIT:3>", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "duplicate", "(", "int", "arr", "[", "]", ",", "int", "k", ")", "{", "Set", "<", "Integer", ">", "visited", "=", "new", "HashSet", "<", "Integer", ">", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "visited", ".", "contains", "(", "arr", "[", "i", "]", ")", ")", "{", "return", "true", ";", "}", "if", "(", "i", ">", "=", "k", ")", "{", "visited", ".", "remove", "(", "arr", "[", "i", "-", "k", "]", ")", ";", "}", "visited", ".", "add", "(", "arr", "[", "i", "]", ")", ";", "}", "return", "false", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "arr", "[", "]", "=", "{", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", "}", ";", "DuplicateWithinkIndices", "dk", "=", "new", "DuplicateWithinkIndices", "(", ")", ";", "System", ".", "out", ".", "println", "(", "dk", ".", "duplicate", "(", "arr", ",", "<NUM_LIT:3>", ")", ")", ";", "}", "</s>"]
["<s>", "private", "boolean", "checkIfNewIsBetter", "(", "int", "priority", "[", "]", "[", "]", ",", "int", "bride", ",", "int", "currentGroom", ",", "int", "suitor", ")", "{", "for", "(", "int", "groom", ":", "priority", "[", "bride", "]", ")", "{", "if", "(", "currentGroom", "=", "=", "groom", ")", "{", "return", "false", ";", "}", "if", "(", "suitor", "=", "=", "groom", ")", "{", "return", "true", ";", "}", "}", "return", "false", ";", "}", "</s>"]
["<s>", "public", "int", "[", "]", "findPair", "(", "int", "[", "]", "[", "]", "priority", ")", "{", "int", "pair", "=", "priority", "[", "0", "]", ".", "length", ";", "int", "groomToBride", "[", "]", "=", "new", "int", "[", "pair", "]", ";", "int", "brideToGroom", "[", "]", "=", "new", "int", "[", "pair", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "groomToBride", ".", "length", ";", "i", "+", "+", ")", "{", "groomToBride", "[", "i", "]", "=", "-", "1", ";", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "brideToGroom", ".", "length", ";", "i", "+", "+", ")", "{", "brideToGroom", "[", "i", "]", "=", "-", "1", ";", "}", "int", "groom", ";", "int", "remaingGrooms", "=", "pair", ";", "while", "(", "remaingGrooms", ">", "0", ")", "{", "groom", "=", "-", "1", ";", "for", "(", "int", "hasBride", ":", "groomToBride", ")", "{", "if", "(", "hasBride", "!", "=", "-", "1", ")", "{", "continue", ";", "}", "groom", "+", "+", ";", "for", "(", "int", "bride", ":", "priority", "[", "groom", "]", ")", "{", "if", "(", "brideToGroom", "[", "bride", "-", "pair", "]", "=", "=", "-", "1", ")", "{", "groomToBride", "[", "groom", "]", "=", "bride", ";", "brideToGroom", "[", "bride", "-", "pair", "]", "=", "groom", ";", "remaingGrooms", "-", "-", ";", "break", ";", "}", "else", "{", "boolean", "flag", "=", "checkIfNewIsBetter", "(", "priority", ",", "bride", ",", "brideToGroom", "[", "bride", "-", "pair", "]", ",", "groom", ")", ";", "if", "(", "flag", ")", "{", "int", "currentGroom", "=", "brideToGroom", "[", "bride", "-", "pair", "]", ";", "brideToGroom", "[", "bride", "-", "pair", "]", "=", "groom", ";", "groomToBride", "[", "groom", "]", "=", "bride", ";", "groomToBride", "[", "currentGroom", "]", "=", "-", "1", ";", "}", "}", "}", "}", "}", "return", "groomToBride", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "priority", "[", "]", "[", "]", "=", "{", "{", "<NUM_LIT:5>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:6>", "}", ",", "{", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:7>", "}", ",", "{", "<NUM_LIT:5>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:7>", "}", ",", "{", "<NUM_LIT:5>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:6>", "}", ",", "{", "0", ",", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", "}", ",", "{", "0", ",", "1", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:2>", "}", ",", "{", "0", ",", "<NUM_LIT:3>", ",", "1", ",", "<NUM_LIT:2>", "}", ",", "{", "0", ",", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", "}", "}", ";", "StableMarriageProblem", "smp", "=", "new", "StableMarriageProblem", "(", ")", ";", "int", "[", "]", "result", "=", "smp", ".", "findPair", "(", "priority", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "result", ".", "length", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "println", "(", "i", "+", "\"", "\"", "+", "result", "[", "i", "]", ")", ";", "}", "}", "</s>"]
["<s>", "public", "int", "kthLargest1", "(", "int", "arr1", "[", "]", ",", "int", "arr2", "[", "]", ",", "int", "low1", ",", "int", "high1", ",", "int", "low2", ",", "int", "high2", ",", "int", "k", ")", "{", "int", "len1", "=", "high1", "-", "low1", "+", "1", ";", "int", "len2", "=", "high2", "-", "low2", "+", "1", ";", "if", "(", "len1", "=", "=", "0", ")", "{", "return", "arr2", "[", "low2", "+", "k", "]", ";", "}", "if", "(", "len2", "=", "=", "0", ")", "{", "return", "arr1", "[", "low1", "+", "k", "]", ";", "}", "if", "(", "k", "=", "=", "0", ")", "{", "return", "Math", ".", "min", "(", "arr1", "[", "low1", "]", ",", "arr2", "[", "low2", "]", ")", ";", "}", "int", "mid1", "=", "len1", "*", "k", "/", "(", "len1", "+", "len2", ")", ";", "int", "mid2", "=", "k", "-", "mid1", "-", "1", ";", "mid1", "=", "low1", "+", "mid1", ";", "mid2", "=", "low2", "+", "mid2", ";", "if", "(", "arr1", "[", "mid1", "]", ">", "arr2", "[", "mid2", "]", ")", "{", "k", "=", "k", "-", "mid2", "+", "low2", "-", "1", ";", "high1", "=", "mid1", ";", "low2", "=", "mid2", "+", "1", ";", "}", "else", "{", "k", "=", "k", "-", "mid1", "+", "low1", "-", "1", ";", "high2", "=", "mid2", ";", "low1", "=", "mid1", "+", "1", ";", "}", "return", "kthLargest", "(", "arr1", ",", "arr2", ",", "low1", ",", "high1", ",", "low2", ",", "high2", ",", "k", ")", ";", "}", "</s>"]
["<s>", "public", "int", "kthLargest", "(", "int", "input1", "[", "]", ",", "int", "input2", "[", "]", ",", "int", "k", ")", "{", "return", "kthLargest", "(", "input1", ",", "input2", ",", "0", ",", "input1", ".", "length", "-", "1", ",", "0", ",", "input2", ".", "length", "-", "1", ",", "k", ")", ";", "}", "</s>"]
["<s>", "private", "int", "kthLargest", "(", "int", "input1", "[", "]", ",", "int", "input2", "[", "]", ",", "int", "l1", ",", "int", "h1", ",", "int", "l2", ",", "int", "h2", ",", "int", "k", ")", "{", "if", "(", "l1", ">", "h1", ")", "{", "return", "input2", "[", "k", "-", "1", "]", ";", "}", "if", "(", "l2", ">", "h2", ")", "{", "return", "input1", "[", "k", "-", "1", "]", ";", "}", "if", "(", "(", "h1", "-", "l1", "+", "1", ")", "+", "(", "h2", "-", "l2", "+", "1", ")", "=", "=", "k", ")", "{", "return", "Math", ".", "max", "(", "input1", "[", "h1", "]", ",", "input2", "[", "h2", "]", ")", ";", "}", "if", "(", "k", "=", "=", "1", ")", "{", "return", "Math", ".", "min", "(", "input1", "[", "l1", "]", ",", "input2", "[", "l2", "]", ")", ";", "}", "if", "(", "l2", "=", "=", "h2", "|", "|", "l1", "=", "=", "h1", ")", "{", "if", "(", "l2", "=", "=", "h2", ")", "{", "if", "(", "input1", "[", "l1", "+", "k", "-", "1", "]", "<", "input2", "[", "l2", "]", ")", "{", "return", "input1", "[", "l1", "+", "k", "-", "1", "]", ";", "}", "else", "if", "(", "input1", "[", "l1", "+", "k", "-", "<NUM_LIT:2>", "]", ">", "input2", "[", "l2", "]", ")", "{", "return", "input1", "[", "l1", "+", "k", "-", "<NUM_LIT:2>", "]", ";", "}", "else", "{", "return", "input2", "[", "l2", "]", ";", "}", "}", "if", "(", "l1", "=", "=", "h1", ")", "{", "if", "(", "input2", "[", "l2", "+", "k", "-", "1", "]", "<", "input1", "[", "l1", "]", ")", "{", "return", "input2", "[", "l2", "+", "k", "-", "1", "]", ";", "}", "else", "if", "(", "input2", "[", "l2", "+", "k", "-", "<NUM_LIT:2>", "]", ">", "input1", "[", "l1", "]", ")", "{", "return", "input2", "[", "l2", "+", "k", "-", "<NUM_LIT:2>", "]", ";", "}", "else", "{", "return", "input1", "[", "l1", "]", ";", "}", "}", "}", "int", "m1", "=", "(", "h1", "+", "l1", ")", "/", "<NUM_LIT:2>", ";", "int", "m2", "=", "(", "h2", "+", "l2", ")", "/", "<NUM_LIT:2>", ";", "int", "diff1", "=", "m1", "-", "l1", "+", "1", ";", "int", "diff2", "=", "m2", "-", "l2", "+", "1", ";", "if", "(", "diff1", "+", "diff2", ">", "=", "k", ")", "{", "if", "(", "input1", "[", "m1", "]", "<", "input2", "[", "m2", "]", ")", "{", "return", "kthLargest", "(", "input1", ",", "input2", ",", "l1", ",", "h1", ",", "l2", ",", "m2", ",", "k", ")", ";", "}", "else", "{", "return", "kthLargest", "(", "input1", ",", "input2", ",", "l1", ",", "m1", ",", "l2", ",", "h2", ",", "k", ")", ";", "}", "}", "else", "{", "if", "(", "input1", "[", "m1", "]", "<", "input2", "[", "m2", "]", ")", "{", "return", "kthLargest", "(", "input1", ",", "input2", ",", "m1", "+", "1", ",", "h1", ",", "l2", ",", "h2", ",", "k", "-", "diff1", ")", ";", "}", "else", "{", "return", "kthLargest", "(", "input1", ",", "input2", ",", "l1", ",", "h1", ",", "m2", "+", "1", ",", "h2", ",", "k", "-", "diff2", ")", ";", "}", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "KthLargestInTwoSortedArray", "kis", "=", "new", "KthLargestInTwoSortedArray", "(", ")", ";", "int", "input1", "[", "]", "=", "{", "1", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", "}", ";", "int", "input2", "[", "]", "=", "{", "-", "<NUM_LIT:4>", ",", "-", "1", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", "}", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input1", ".", "length", "+", "input2", ".", "length", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "println", "(", "kis", ".", "kthLargest", "(", "input1", ",", "input2", ",", "i", "+", "1", ")", ")", ";", "}", "}", "</s>"]
["<s>", "public", "int", "candy", "(", "int", "[", "]", "ratings", ")", "{", "int", "pointOfChange", "=", "0", ";", "int", "totalCandies", "=", "1", ";", "int", "currentCandy", "=", "1", ";", "boolean", "isIndependent", "=", "true", ";", "int", "maxHeight", "=", "0", ";", "int", "diff", "=", "0", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "ratings", ".", "length", ";", "i", "+", "+", ")", "{", "diff", "=", "0", ";", "if", "(", "ratings", "[", "i", "]", ">", "ratings", "[", "i", "-", "1", "]", ")", "{", "currentCandy", "+", "=", "1", ";", "}", "else", "if", "(", "ratings", "[", "i", "]", "=", "=", "ratings", "[", "i", "-", "1", "]", ")", "{", "isIndependent", "=", "true", ";", "pointOfChange", "=", "i", ";", "currentCandy", "=", "1", ";", "}", "else", "{", "if", "(", "currentCandy", "=", "=", "1", ")", "{", "if", "(", "!", "isIndependent", ")", "{", "if", "(", "i", "-", "pointOfChange", "=", "=", "maxHeight", "-", "1", ")", "{", "pointOfChange", "-", "-", ";", "}", "}", "}", "else", "{", "maxHeight", "=", "currentCandy", ";", "currentCandy", "=", "1", ";", "isIndependent", "=", "false", ";", "pointOfChange", "=", "i", ";", "}", "diff", "=", "i", "-", "pointOfChange", ";", "}", "totalCandies", "+", "=", "(", "diff", "+", "currentCandy", ")", ";", "}", "return", "totalCandies", ";", "}", "</s>"]
["<s>", "public", "int", "startTour", "(", "int", "gasAvailable", "[", "]", ",", "int", "gasRequired", "[", "]", ")", "{", "int", "start", "=", "-", "1", ";", "int", "end", "=", "0", ";", "int", "currentGas", "=", "0", ";", "boolean", "visitedOnce", "=", "false", ";", "while", "(", "start", "!", "=", "end", ")", "{", "currentGas", "+", "=", "gasAvailable", "[", "end", "]", "-", "gasRequired", "[", "end", "]", ";", "if", "(", "start", "=", "=", "-", "1", ")", "{", "start", "=", "end", ";", "}", "if", "(", "end", "=", "=", "gasAvailable", ".", "length", "-", "1", "&", "&", "visitedOnce", "=", "=", "false", ")", "{", "visitedOnce", "=", "true", ";", "}", "else", "if", "(", "end", "=", "=", "gasAvailable", ".", "length", "-", "1", "&", "&", "visitedOnce", "=", "=", "true", ")", "{", "return", "-", "1", ";", "}", "if", "(", "currentGas", "<", "0", ")", "{", "start", "=", "-", "1", ";", "currentGas", "=", "0", ";", "}", "end", "=", "(", "end", "+", "1", ")", "%", "gasAvailable", ".", "length", ";", "}", "return", "end", ";", "}", "</s>"]
["<s>", "public", "int", "startTour1", "(", "int", "gasAvailable", "[", "]", ",", "int", "gasRequired", "[", "]", ")", "{", "int", "diff", "[", "]", "=", "new", "int", "[", "gasAvailable", ".", "length", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "diff", ".", "length", ";", "i", "+", "+", ")", "{", "diff", "[", "i", "]", "=", "gasAvailable", "[", "i", "]", "-", "gasRequired", "[", "i", "]", ";", "}", "KadaneWrapArray", "kwa", "=", "new", "KadaneWrapArray", "(", ")", ";", "Triplet", "t", "=", "kwa", ".", "kadaneWrap", "(", "diff", ")", ";", "return", "t", ".", "start", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "GasStationCircle", "gsc", "=", "new", "GasStationCircle", "(", ")", ";", "int", "[", "]", "gasAvailable", "=", "{", "<NUM_LIT:8>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:11>", "}", ";", "int", "[", "]", "gasRequired", "=", "{", "<NUM_LIT:10>", ",", "<NUM_LIT:12>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:8>", "}", ";", "System", ".", "out", ".", "println", "(", "gsc", ".", "startTour", "(", "gasAvailable", ",", "gasRequired", ")", ")", ";", "System", ".", "out", ".", "println", "(", "gsc", ".", "startTour1", "(", "gasAvailable", ",", "gasRequired", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "minLength", "(", "int", "arr", "[", "]", ")", "{", "int", "i", "=", "0", ";", "while", "(", "i", "<", "arr", ".", "length", "-", "1", "&", "&", "arr", "[", "i", "]", "<", "arr", "[", "i", "+", "1", "]", ")", "{", "i", "+", "+", ";", "}", "if", "(", "i", "=", "=", "arr", ".", "length", "-", "1", ")", "{", "return", "0", ";", "}", "int", "j", "=", "arr", ".", "length", "-", "1", ";", "while", "(", "j", ">", "0", "&", "&", "arr", "[", "j", "]", ">", "arr", "[", "j", "-", "1", "]", ")", "{", "j", "-", "-", ";", "}", "int", "max", "=", "Integer", ".", "MIN_VALUE", ";", "int", "min", "=", "Integer", ".", "MAX_VALUE", ";", "for", "(", "int", "k", "=", "i", ";", "k", "<", "=", "j", ";", "k", "+", "+", ")", "{", "if", "(", "max", "<", "arr", "[", "k", "]", ")", "{", "max", "=", "arr", "[", "k", "]", ";", "}", "if", "(", "min", ">", "arr", "[", "k", "]", ")", "{", "min", "=", "arr", "[", "k", "]", ";", "}", "}", "int", "x", "=", "i", "-", "1", ";", "while", "(", "x", ">", "=", "0", ")", "{", "if", "(", "min", ">", "arr", "[", "x", "]", ")", "{", "break", ";", "}", "x", "-", "-", ";", "}", "int", "y", "=", "j", "+", "1", ";", "while", "(", "y", "<", "arr", ".", "length", ")", "{", "if", "(", "max", "<", "arr", "[", "y", "]", ")", "{", "break", ";", "}", "y", "+", "+", ";", "}", "return", "y", "-", "x", "-", "<NUM_LIT:2>", "+", "1", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "arr", "[", "]", "=", "{", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", "}", ";", "int", "arr1", "[", "]", "=", "{", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:12>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT:15>", "}", ";", "int", "arr2", "[", "]", "=", "{", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT:15>", "}", ";", "MinimumSortedWhichSortsEntireArray", "msw", "=", "new", "MinimumSortedWhichSortsEntireArray", "(", ")", ";", "System", ".", "out", ".", "println", "(", "msw", ".", "minLength", "(", "arr1", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "[", "]", "add", "(", "int", "arr1", "[", "]", ",", "int", "arr2", "[", "]", ")", "{", "int", "l", "=", "Math", ".", "max", "(", "arr1", ".", "length", ",", "arr2", ".", "length", ")", ";", "int", "[", "]", "result", "=", "new", "int", "[", "l", "]", ";", "int", "c", "=", "0", ";", "int", "i", "=", "arr1", ".", "length", "-", "1", ";", "int", "j", "=", "arr2", ".", "length", "-", "1", ";", "int", "r", "=", "0", ";", "l", "-", "-", ";", "while", "(", "i", ">", "=", "0", "&", "&", "j", ">", "=", "0", ")", "{", "r", "=", "arr1", "[", "i", "-", "-", "]", "+", "arr2", "[", "j", "-", "-", "]", "+", "c", ";", "c", "=", "r", "/", "<NUM_LIT:10>", ";", "result", "[", "l", "-", "-", "]", "=", "r", "%", "<NUM_LIT:10>", ";", "}", "while", "(", "i", ">", "=", "0", ")", "{", "r", "=", "arr1", "[", "i", "-", "-", "]", "+", "c", ";", "c", "=", "r", "/", "<NUM_LIT:10>", ";", "result", "[", "l", "-", "-", "]", "=", "r", "%", "<NUM_LIT:10>", ";", "}", "while", "(", "j", ">", "=", "0", ")", "{", "r", "=", "arr2", "[", "j", "-", "-", "]", "+", "c", ";", "c", "=", "r", "/", "<NUM_LIT:10>", ";", "result", "[", "l", "-", "-", "]", "=", "r", "%", "<NUM_LIT:10>", ";", "}", "if", "(", "c", "!", "=", "0", ")", "{", "int", "[", "]", "newResult", "=", "new", "int", "[", "result", ".", "length", "+", "1", "]", ";", "for", "(", "int", "t", "=", "newResult", ".", "length", "-", "1", ";", "t", ">", "0", ";", "t", "-", "-", ")", "{", "newResult", "[", "t", "]", "=", "result", "[", "t", "-", "1", "]", ";", "}", "newResult", "[", "0", "]", "=", "c", ";", "return", "newResult", ";", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "arr1", "[", "]", "=", "{", "<NUM_LIT:9>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:9>", "}", ";", "int", "arr2", "[", "]", "=", "{", "1", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:7>", "}", ";", "ArrayAddition", "aa", "=", "new", "ArrayAddition", "(", ")", ";", "int", "result", "[", "]", "=", "aa", ".", "add", "(", "arr1", ",", "arr2", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "result", ".", "length", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "\"", "\"", "+", "result", "[", "i", "]", ")", ";", "}", "}", "</s>"]
["<s>", "public", "void", "reorder", "(", "int", "input", "[", "]", ",", "int", "index", "[", "]", ")", "{", "if", "(", "index", ".", "length", "!", "=", "input", ".", "length", ")", "{", "throw", "new", "IllegalArgumentException", "(", ")", ";", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "index", ".", "length", ";", "i", "+", "+", ")", "{", "while", "(", "index", "[", "i", "]", "!", "=", "i", ")", "{", "int", "sIndex", "=", "index", "[", "index", "[", "i", "]", "]", ";", "int", "sVal", "=", "input", "[", "index", "[", "i", "]", "]", ";", "index", "[", "index", "[", "i", "]", "]", "=", "index", "[", "i", "]", ";", "input", "[", "index", "[", "i", "]", "]", "=", "input", "[", "i", "]", ";", "index", "[", "i", "]", "=", "sIndex", ";", "input", "[", "i", "]", "=", "sVal", ";", "}", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input", "[", "]", "=", "{", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", "}", ";", "int", "index", "[", "]", "=", "{", "<NUM_LIT:3>", ",", "0", ",", "<NUM_LIT:4>", ",", "1", ",", "<NUM_LIT:2>", "}", ";", "ReorderArrayByIndex", "reorderArrayByIndex", "=", "new", "ReorderArrayByIndex", "(", ")", ";", "reorderArrayByIndex", ".", "reorder", "(", "input", ",", "index", ")", ";", "Arrays", ".", "stream", "(", "input", ")", ".", "forEach", "(", "i", "-", ">", "System", ".", "out", ".", "print", "(", "i", "+", "\"", "\"", ")", ")", ";", "System", ".", "out", ".", "println", "(", ")", ";", "Arrays", ".", "stream", "(", "index", ")", ".", "forEach", "(", "i", "-", ">", "System", ".", "out", ".", "print", "(", "i", "+", "\"", "\"", ")", ")", ";", "}", "</s>"]
["<s>", "public", "void", "moveZeros", "(", "int", "arr", "[", "]", ")", "{", "int", "slow", "=", "0", ";", "int", "fast", "=", "0", ";", "while", "(", "fast", "<", "arr", ".", "length", ")", "{", "if", "(", "arr", "[", "fast", "]", "=", "=", "0", ")", "{", "fast", "+", "+", ";", "continue", ";", "}", "arr", "[", "slow", "]", "=", "arr", "[", "fast", "]", ";", "slow", "+", "+", ";", "fast", "+", "+", ";", "}", "while", "(", "slow", "<", "arr", ".", "length", ")", "{", "arr", "[", "slow", "+", "+", "]", "=", "0", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "MoveAllZerosToEnd", "maz", "=", "new", "MoveAllZerosToEnd", "(", ")", ";", "int", "arr", "[", "]", "=", "{", "0", ",", "0", ",", "1", ",", "<NUM_LIT:2>", ",", "0", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:7>", ",", "0", "}", ";", "maz", ".", "moveZeros", "(", "arr", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "arr", "[", "i", "]", ")", ";", "}", "}", "</s>"]
["<s>", "public", "int", "numberOfTriangles", "(", "int", "input", "[", "]", ")", "{", "Arrays", ".", "sort", "(", "input", ")", ";", "int", "count", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", "-", "<NUM_LIT:2>", ";", "i", "+", "+", ")", "{", "int", "k", "=", "i", "+", "<NUM_LIT:2>", ";", "for", "(", "int", "j", "=", "i", "+", "1", ";", "j", "<", "input", ".", "length", ";", "j", "+", "+", ")", "{", "while", "(", "k", "<", "input", ".", "length", "&", "&", "input", "[", "i", "]", "+", "input", "[", "j", "]", ">", "input", "[", "k", "]", ")", "{", "k", "+", "+", ";", "}", "count", "+", "=", "k", "-", "j", "-", "1", ";", "}", "}", "return", "count", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input", "[", "]", "=", "{", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:15>", "}", ";", "NumberOfTrianglesInUnsortedArray", "not", "=", "new", "NumberOfTrianglesInUnsortedArray", "(", ")", ";", "System", ".", "out", ".", "println", "(", "not", ".", "numberOfTriangles", "(", "input", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "maxProduct", "(", "int", "input", "[", "]", ")", "{", "int", "maxEnding", "=", "1", ";", "int", "minEnding", "=", "1", ";", "int", "maxSoFar", "=", "1", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "input", "[", "i", "]", ">", "0", ")", "{", "maxEnding", "=", "maxEnding", "*", "input", "[", "i", "]", ";", "minEnding", "=", "Math", ".", "min", "(", "minEnding", "*", "input", "[", "i", "]", ",", "1", ")", ";", "}", "else", "if", "(", "input", "[", "i", "]", "=", "=", "0", ")", "{", "maxEnding", "=", "1", ";", "minEnding", "=", "1", ";", "}", "else", "{", "int", "t", "=", "maxEnding", ";", "maxEnding", "=", "Math", ".", "max", "(", "minEnding", "*", "input", "[", "i", "]", ",", "1", ")", ";", "minEnding", "=", "t", "*", "input", "[", "i", "]", ";", "}", "if", "(", "maxSoFar", "<", "maxEnding", ")", "{", "maxSoFar", "=", "maxEnding", ";", "}", "}", "return", "maxSoFar", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "MaxProductSubarray", "mps", "=", "new", "MaxProductSubarray", "(", ")", ";", "int", "input", "[", "]", "=", "{", "-", "<NUM_LIT:6>", ",", "-", "<NUM_LIT:3>", ",", "<NUM_LIT:8>", ",", "-", "<NUM_LIT:9>", ",", "-", "1", ",", "-", "1", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:9>", ",", "0", ",", "<NUM_LIT:3>", ",", "-", "1", "}", ";", "System", ".", "out", ".", "println", "(", "mps", ".", "maxProduct", "(", "input", ")", ")", ";", "}", "</s>"]
["<s>", "public", "void", "convert", "(", "int", "arr", "[", "]", ")", "{", "int", "k", "=", "0", ";", "if", "(", "arr", ".", "length", "%", "<NUM_LIT:2>", "=", "=", "0", ")", "{", "k", "=", "arr", ".", "length", "/", "<NUM_LIT:2>", ";", "}", "else", "{", "k", "=", "arr", ".", "length", "/", "<NUM_LIT:2>", "+", "1", ";", "}", "KthElementInArray", "kthElement", "=", "new", "KthElementInArray", "(", ")", ";", "kthElement", ".", "kthElement", "(", "arr", ",", "k", ")", ";", "int", "high", "=", "k", ";", "int", "low", "=", "1", ";", "while", "(", "low", "<", "high", "&", "&", "high", "<", "arr", ".", "length", ")", "{", "swap", "(", "arr", ",", "low", ",", "high", ")", ";", "high", "+", "+", ";", "low", "+", "=", "<NUM_LIT:2>", ";", "}", "}", "</s>"]
["<s>", "public", "void", "convert1", "(", "int", "arr", "[", "]", ")", "{", "Arrays", ".", "sort", "(", "arr", ")", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "=", "<NUM_LIT:2>", ")", "{", "if", "(", "i", "+", "1", "<", "arr", ".", "length", ")", "{", "swap", "(", "arr", ",", "i", ",", "i", "+", "1", ")", ";", "}", "}", "}", "</s>"]
["<s>", "private", "void", "swap", "(", "int", "arr", "[", "]", ",", "int", "low", ",", "int", "high", ")", "{", "int", "temp", "=", "arr", "[", "low", "]", ";", "arr", "[", "low", "]", "=", "arr", "[", "high", "]", ";", "arr", "[", "high", "]", "=", "temp", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "ConvertAnArrayIntoDecreaseIncreaseFashion", "can", "=", "new", "ConvertAnArrayIntoDecreaseIncreaseFashion", "(", ")", ";", "int", "arr", "[", "]", "=", "{", "0", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT>", ",", "<NUM_LIT:10>", ",", "-", "1", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT>", ",", "-", "<NUM_LIT:5>", "}", ";", "can", ".", "convert", "(", "arr", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "arr", "[", "i", "]", "+", "\"", "\"", ")", ";", "}", "System", ".", "out", ".", "println", "(", ")", ";", "int", "arr1", "[", "]", "=", "{", "0", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT>", ",", "<NUM_LIT:10>", ",", "-", "1", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT>", ",", "-", "<NUM_LIT:5>", "}", ";", "can", ".", "convert1", "(", "arr1", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr1", ".", "length", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "arr1", "[", "i", "]", "+", "\"", "\"", ")", ";", "}", "}", "</s>"]
["<s>", "public", "void", "rearrange", "(", "int", "arr", "[", "]", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "int", "temp", ";", "if", "(", "arr", "[", "arr", "[", "i", "]", "]", ">", "arr", ".", "length", "-", "1", ")", "{", "temp", "=", "arr", "[", "arr", "[", "i", "]", "]", "/", "arr", ".", "length", "-", "1", ";", "}", "else", "{", "temp", "=", "arr", "[", "arr", "[", "i", "]", "]", ";", "}", "arr", "[", "i", "]", "=", "temp", "+", "arr", ".", "length", "*", "(", "arr", "[", "i", "]", "+", "1", ")", ";", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "arr", "[", "i", "]", "=", "arr", "[", "i", "]", "%", "arr", ".", "length", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "arr", "[", "]", "=", "{", "<NUM_LIT:4>", ",", "<NUM_LIT:2>", ",", "0", ",", "1", ",", "<NUM_LIT:3>", "}", ";", "RearrangeSuchThatArriBecomesArrArri", "rss", "=", "new", "RearrangeSuchThatArriBecomesArrArri", "(", ")", ";", "rss", ".", "rearrange", "(", "arr", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "arr", "[", "i", "]", ")", ";", "}", "}", "</s>"]
["<s>", "Pair", "(", "int", "num", ",", "int", "count", ")", "{", "this", ".", "count", "=", "count", ";", "this", ".", "num", "=", "num", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "int", "compare", "(", "Pair", "o1", ",", "Pair", "o2", ")", "{", "if", "(", "o1", ".", "count", "<", "=", "o2", ".", "count", ")", "{", "return", "1", ";", "}", "else", "{", "return", "-", "1", ";", "}", "}", "</s>"]
["<s>", "public", "boolean", "group", "(", "int", "input", "[", "]", ",", "int", "m", ")", "{", "Map", "<", "Integer", ",", "Integer", ">", "count", "=", "new", "HashMap", "<", "Integer", ",", "Integer", ">", "(", ")", ";", "for", "(", "Integer", "i", ":", "input", ")", "{", "int", "c", "=", "1", ";", "if", "(", "count", ".", "containsKey", "(", "i", ")", ")", "{", "c", "=", "count", ".", "get", "(", "i", ")", ";", "c", "+", "+", ";", "}", "count", ".", "put", "(", "i", ",", "c", ")", ";", "}", "PriorityQueue", "<", "Pair", ">", "maxHeap", "=", "new", "PriorityQueue", "<", "Pair", ">", "(", "count", ".", "size", "(", ")", ",", "new", "Comparators", "(", ")", ")", ";", "for", "(", "Integer", "s", ":", "count", ".", "keySet", "(", ")", ")", "{", "int", "c", "=", "count", ".", "get", "(", "s", ")", ";", "if", "(", "c", ">", "Math", ".", "ceil", "(", "input", ".", "length", "*", "<NUM_LIT:1.0>", "/", "m", ")", ")", "{", "return", "false", ";", "}", "maxHeap", ".", "offer", "(", "new", "Pair", "(", "s", ",", "c", ")", ")", ";", "}", "int", "current", "=", "0", ";", "int", "start", "=", "current", ";", "while", "(", "maxHeap", ".", "size", "(", ")", ">", "0", ")", "{", "Pair", "p", "=", "maxHeap", ".", "poll", "(", ")", ";", "int", "i", "=", "0", ";", "while", "(", "i", "<", "p", ".", "count", ")", "{", "input", "[", "start", "]", "=", "p", ".", "num", ";", "start", "=", "start", "+", "m", ";", "if", "(", "start", ">", "=", "input", ".", "length", ")", "{", "current", "+", "+", ";", "start", "=", "current", ";", "}", "i", "+", "+", ";", "}", "}", "return", "true", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input", "[", "]", "=", "{", "<NUM_LIT:2>", ",", "1", ",", "<NUM_LIT:5>", ",", "1", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", "}", ";", "int", "input1", "[", "]", "=", "{", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:8>", "}", ";", "GroupElementsInSizeM", "gps", "=", "new", "GroupElementsInSizeM", "(", ")", ";", "boolean", "r", "=", "gps", ".", "group", "(", "input1", ",", "<NUM_LIT:3>", ")", ";", "System", ".", "out", ".", "println", "(", "r", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input1", ".", "length", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "println", "(", "input1", "[", "i", "]", ")", ";", "}", "}", "</s>"]
["<s>", "public", "String", "toString", "(", ")", "{", "return", "repeating", "+", "\"", "\"", "+", "missing", ";", "}", "</s>"]
["<s>", "public", "Pair", "findNumbers", "(", "int", "input", "[", "]", ")", "{", "Pair", "p", "=", "new", "Pair", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "input", "[", "Math", ".", "abs", "(", "input", "[", "i", "]", ")", "-", "1", "]", "<", "0", ")", "{", "p", ".", "repeating", "=", "Math", ".", "abs", "(", "input", "[", "i", "]", ")", ";", "}", "else", "{", "input", "[", "Math", ".", "abs", "(", "input", "[", "i", "]", ")", "-", "1", "]", "=", "-", "input", "[", "Math", ".", "abs", "(", "input", "[", "i", "]", ")", "-", "1", "]", ";", "}", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "input", "[", "i", "]", "<", "0", ")", "{", "input", "[", "i", "]", "=", "-", "input", "[", "i", "]", ";", "}", "else", "{", "p", ".", "missing", "=", "i", "+", "1", ";", "}", "}", "return", "p", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "RepeatingAndMissingNumber", "rmn", "=", "new", "RepeatingAndMissingNumber", "(", ")", ";", "int", "input", "[", "]", "=", "{", "<NUM_LIT:3>", ",", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:7>", "}", ";", "System", ".", "out", ".", "println", "(", "rmn", ".", "findNumbers", "(", "input", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "longestSpan", "(", "int", "input1", "[", "]", ",", "int", "input2", "[", "]", ")", "{", "if", "(", "input1", ".", "length", "!", "=", "input2", ".", "length", ")", "{", "throw", "new", "IllegalArgumentException", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "Map", "<", "Integer", ",", "Integer", ">", "diff", "=", "new", "HashMap", "<", ">", "(", ")", ";", "int", "prefix1", "=", "0", ",", "prefix2", "=", "0", ";", "int", "maxSpan", "=", "0", ";", "diff", ".", "put", "(", "0", ",", "-", "1", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input1", ".", "length", ";", "i", "+", "+", ")", "{", "prefix1", "+", "=", "input1", "[", "i", "]", ";", "prefix2", "+", "=", "input2", "[", "i", "]", ";", "int", "currDiff", "=", "prefix1", "-", "prefix2", ";", "if", "(", "diff", ".", "containsKey", "(", "currDiff", ")", ")", "{", "maxSpan", "=", "Math", ".", "max", "(", "maxSpan", ",", "i", "-", "diff", ".", "get", "(", "currDiff", ")", ")", ";", "}", "else", "{", "diff", ".", "put", "(", "currDiff", ",", "i", ")", ";", "}", "}", "return", "maxSpan", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input1", "[", "]", "=", "{", "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", "}", ";", "int", "input2", "[", "]", "=", "{", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", "}", ";", "LongestSameSumSpan", "lsss", "=", "new", "LongestSameSumSpan", "(", ")", ";", "System", ".", "out", ".", "print", "(", "lsss", ".", "longestSpan", "(", "input1", ",", "input2", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "int", "compareTo", "(", "Triplet", "o", ")", "{", "if", "(", "val", "<", "=", "o", ".", "val", ")", "{", "return", "-", "1", ";", "}", "else", "{", "return", "1", ";", "}", "}", "</s>"]
["<s>", "public", "List", "<", "Integer", ">", "mergeUsingHeap", "(", "List", "<", "List", "<", "Integer", ">", ">", "chunks", ")", "{", "List", "<", "Integer", ">", "result", "=", "new", "ArrayList", "<", "Integer", ">", "(", ")", ";", "PriorityQueue", "<", "Triplet", ">", "queue", "=", "new", "PriorityQueue", "<", "Triplet", ">", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "chunks", ".", "size", "(", ")", ";", "i", "+", "+", ")", "{", "Triplet", "p", "=", "new", "Triplet", "(", ")", ";", "p", ".", "pos", "=", "i", ";", "p", ".", "val", "=", "chunks", ".", "get", "(", "i", ")", ".", "get", "(", "0", ")", ";", "p", ".", "index", "=", "1", ";", "queue", ".", "add", "(", "p", ")", ";", "}", "while", "(", "!", "queue", ".", "isEmpty", "(", ")", ")", "{", "Triplet", "p", "=", "queue", ".", "poll", "(", ")", ";", "result", ".", "add", "(", "p", ".", "val", ")", ";", "if", "(", "p", ".", "index", "<", "chunks", ".", "get", "(", "p", ".", "pos", ")", ".", "size", "(", ")", ")", "{", "p", ".", "val", "=", "chunks", ".", "get", "(", "p", ".", "pos", ")", ".", "get", "(", "p", ".", "index", ")", ";", "p", ".", "index", "+", "=", "1", ";", "queue", ".", "add", "(", "p", ")", ";", "}", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "List", "<", "Integer", ">", "mergeChunksOfDifferentSize", "(", "List", "<", "List", "<", "Integer", ">", ">", "chunks", ")", "{", "List", "<", "Integer", ">", "result", "=", "new", "ArrayList", "<", "Integer", ">", "(", ")", ";", "int", "sum", "[", "]", "=", "new", "int", "[", "chunks", ".", "size", "(", ")", "+", "1", "]", ";", "sum", "[", "0", "]", "=", "0", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "sum", ".", "length", ";", "i", "+", "+", ")", "{", "sum", "[", "i", "]", "=", "sum", "[", "i", "-", "1", "]", "+", "chunks", ".", "get", "(", "i", "-", "1", ")", ".", "size", "(", ")", ";", "}", "for", "(", "List", "<", "Integer", ">", "chunk", ":", "chunks", ")", "{", "for", "(", "Integer", "i", ":", "chunk", ")", "{", "result", ".", "add", "(", "i", ")", ";", "}", "}", "mergeSort", "(", "result", ",", "0", ",", "chunks", ".", "size", "(", ")", "-", "1", ",", "sum", ")", ";", "return", "result", ";", "}", "</s>"]
["<s>", "private", "void", "mergeSort", "(", "List", "<", "Integer", ">", "result", ",", "int", "start", ",", "int", "end", ",", "int", "sum", "[", "]", ")", "{", "if", "(", "start", ">", "=", "end", ")", "{", "return", ";", "}", "int", "mid", "=", "(", "start", "+", "end", ")", "/", "<NUM_LIT:2>", ";", "mergeSort", "(", "result", ",", "start", ",", "mid", ",", "sum", ")", ";", "mergeSort", "(", "result", ",", "mid", "+", "1", ",", "end", ",", "sum", ")", ";", "sortedMerge", "(", "result", ",", "start", ",", "end", ",", "sum", ")", ";", "}", "</s>"]
["<s>", "private", "void", "sortedMerge", "(", "List", "<", "Integer", ">", "result", ",", "int", "start", ",", "int", "end", ",", "int", "sum", "[", "]", ")", "{", "int", "mid", "=", "(", "start", "+", "end", ")", "/", "<NUM_LIT:2>", ";", "int", "i", "=", "sum", "[", "start", "]", ";", "int", "j", "=", "sum", "[", "mid", "+", "1", "]", ";", "List", "<", "Integer", ">", "temp", "=", "new", "ArrayList", "<", "Integer", ">", "(", ")", ";", "while", "(", "i", "<", "sum", "[", "mid", "+", "1", "]", "&", "&", "j", "<", "sum", "[", "end", "+", "1", "]", ")", "{", "if", "(", "result", ".", "get", "(", "i", ")", "<", "result", ".", "get", "(", "j", ")", ")", "{", "temp", ".", "add", "(", "result", ".", "get", "(", "i", ")", ")", ";", "i", "+", "+", ";", "}", "else", "{", "temp", ".", "add", "(", "result", ".", "get", "(", "j", ")", ")", ";", "j", "+", "+", ";", "}", "}", "while", "(", "i", "<", "sum", "[", "mid", "+", "1", "]", ")", "{", "temp", ".", "add", "(", "result", ".", "get", "(", "i", ")", ")", ";", "i", "+", "+", ";", "}", "while", "(", "j", "<", "sum", "[", "end", "+", "1", "]", ")", "{", "temp", ".", "add", "(", "result", ".", "get", "(", "j", ")", ")", ";", "j", "+", "+", ";", "}", "int", "index", "=", "sum", "[", "start", "]", ";", "for", "(", "int", "k", ":", "temp", ")", "{", "result", ".", "set", "(", "index", ",", "k", ")", ";", "index", "+", "+", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "Integer", "arr1", "[", "]", "=", "{", "1", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT>", "}", ";", "Integer", "arr2", "[", "]", "=", "{", "<NUM_LIT:4>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT>", "}", ";", "Integer", "arr3", "[", "]", "=", "{", "-", "1", ",", "0", ",", "<NUM_LIT:7>", "}", ";", "Integer", "arr4", "[", "]", "=", "{", "-", "<NUM_LIT:4>", ",", "-", "<NUM_LIT:2>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", "}", ";", "Integer", "arr5", "[", "]", "=", "{", "<NUM_LIT:2>", ",", "<NUM_LIT:6>", "}", ";", "Integer", "arr6", "[", "]", "=", "{", "-", "<NUM_LIT:5>", ",", "-", "<NUM_LIT:2>", ",", "1", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT>", "}", ";", "Integer", "arr7", "[", "]", "=", "{", "-", "<NUM_LIT:6>", ",", "-", "1", ",", "0", ",", "<NUM_LIT:15>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT:24>", "}", ";", "List", "<", "Integer", ">", "list1", "=", "Arrays", ".", "asList", "(", "arr1", ")", ";", "List", "<", "Integer", ">", "list2", "=", "Arrays", ".", "asList", "(", "arr2", ")", ";", "List", "<", "Integer", ">", "list3", "=", "Arrays", ".", "asList", "(", "arr3", ")", ";", "List", "<", "Integer", ">", "list4", "=", "Arrays", ".", "asList", "(", "arr4", ")", ";", "List", "<", "Integer", ">", "list5", "=", "Arrays", ".", "asList", "(", "arr5", ")", ";", "List", "<", "Integer", ">", "list6", "=", "Arrays", ".", "asList", "(", "arr6", ")", ";", "List", "<", "Integer", ">", "list7", "=", "Arrays", ".", "asList", "(", "arr7", ")", ";", "List", "<", "List", "<", "Integer", ">", ">", "chunks", "=", "new", "ArrayList", "<", "List", "<", "Integer", ">", ">", "(", ")", ";", "chunks", ".", "add", "(", "list1", ")", ";", "chunks", ".", "add", "(", "list2", ")", ";", "chunks", ".", "add", "(", "list3", ")", ";", "chunks", ".", "add", "(", "list4", ")", ";", "chunks", ".", "add", "(", "list5", ")", ";", "chunks", ".", "add", "(", "list6", ")", ";", "chunks", ".", "add", "(", "list7", ")", ";", "ChunkMerge", "cm", "=", "new", "ChunkMerge", "(", ")", ";", "List", "<", "Integer", ">", "result", "=", "cm", ".", "mergeChunksOfDifferentSize", "(", "chunks", ")", ";", "System", ".", "out", ".", "println", "(", "result", ".", "size", "(", ")", ")", ";", "for", "(", "Integer", "r", ":", "result", ")", "{", "System", ".", "out", ".", "print", "(", "r", "+", "\"", "\"", ")", ";", "}", "result", "=", "cm", ".", "mergeUsingHeap", "(", "chunks", ")", ";", "System", ".", "out", ".", "println", "(", ")", ";", "for", "(", "Integer", "r", ":", "result", ")", "{", "System", ".", "out", ".", "print", "(", "r", "+", "\"", "\"", ")", ";", "}", "}", "</s>"]
["<s>", "public", "int", "findInversions", "(", "int", "input", "[", "]", ")", "{", "int", "inversion", "=", "0", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "input", ".", "length", "-", "1", ";", "i", "+", "+", ")", "{", "int", "larger", "=", "0", ";", "for", "(", "int", "k", "=", "0", ";", "k", "<", "i", ";", "k", "+", "+", ")", "{", "if", "(", "input", "[", "k", "]", ">", "input", "[", "i", "]", ")", "{", "larger", "+", "+", ";", "}", "}", "int", "smaller", "=", "0", ";", "for", "(", "int", "k", "=", "i", "+", "1", ";", "k", "<", "input", ".", "length", ";", "k", "+", "+", ")", "{", "if", "(", "input", "[", "k", "]", "<", "input", "[", "i", "]", ")", "{", "smaller", "+", "+", ";", "}", "}", "inversion", "+", "=", "smaller", "*", "larger", ";", "}", "return", "inversion", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input", "[", "]", "=", "{", "<NUM_LIT:9>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:8>", "}", ";", "CountInversionOfSize3", "ci", "=", "new", "CountInversionOfSize3", "(", ")", ";", "System", ".", "out", ".", "print", "(", "ci", ".", "findInversions", "(", "input", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "kthElement", "(", "int", "arr", "[", "]", ",", "int", "k", ")", "{", "int", "low", "=", "0", ";", "int", "high", "=", "arr", ".", "length", "-", "1", ";", "int", "pos", "=", "0", ";", "while", "(", "true", ")", "{", "pos", "=", "quickSelect", "(", "arr", ",", "low", ",", "high", ")", ";", "if", "(", "pos", "=", "=", "(", "k", "+", "low", ")", ")", "{", "return", "arr", "[", "pos", "]", ";", "}", "if", "(", "pos", ">", "k", ")", "{", "high", "=", "pos", "-", "1", ";", "}", "else", "{", "low", "=", "pos", "+", "1", ";", "k", "=", "k", "-", "low", ";", "}", "}", "}", "</s>"]
["<s>", "private", "int", "quickSelect", "(", "int", "arr", "[", "]", ",", "int", "low", ",", "int", "high", ")", "{", "int", "pivot", "=", "low", ";", "low", "+", "+", ";", "while", "(", "low", "<", "=", "high", ")", "{", "if", "(", "arr", "[", "pivot", "]", ">", "arr", "[", "low", "]", ")", "{", "low", "+", "+", ";", "continue", ";", "}", "if", "(", "arr", "[", "pivot", "]", "<", "=", "arr", "[", "high", "]", ")", "{", "high", "-", "-", ";", "continue", ";", "}", "swap", "(", "arr", ",", "low", ",", "high", ")", ";", "}", "if", "(", "arr", "[", "high", "]", "<", "arr", "[", "pivot", "]", ")", "{", "swap", "(", "arr", ",", "pivot", ",", "high", ")", ";", "}", "return", "high", ";", "}", "</s>"]
["<s>", "private", "void", "swap", "(", "int", "arr", "[", "]", ",", "int", "low", ",", "int", "high", ")", "{", "int", "temp", "=", "arr", "[", "low", "]", ";", "arr", "[", "low", "]", "=", "arr", "[", "high", "]", ";", "arr", "[", "high", "]", "=", "temp", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "arr", "[", "]", "=", "{", "<NUM_LIT:3>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:9>", ",", "1", ",", "<NUM_LIT:2>", "}", ";", "KthElementInArray", "kthElement", "=", "new", "KthElementInArray", "(", ")", ";", "System", ".", "out", ".", "print", "(", "kthElement", ".", "kthElement", "(", "arr", ",", "0", ")", ")", ";", "}", "</s>"]
["<s>", "public", "List", "<", "String", ">", "formCircle", "(", "String", "input", "[", "]", ")", "{", "List", "<", "String", ">", "result", "=", "new", "ArrayList", "<", "String", ">", "(", ")", ";", "result", ".", "add", "(", "input", "[", "0", "]", ")", ";", "boolean", "used", "[", "]", "=", "new", "boolean", "[", "input", ".", "length", "]", ";", "boolean", "r", "=", "formCircle", "(", "input", ",", "result", ",", "used", ",", "input", "[", "0", "]", ".", "charAt", "(", "0", ")", ")", ";", "if", "(", "!", "r", ")", "{", "return", "Collections", ".", "emptyList", "(", ")", ";", "}", "return", "result", ";", "}", "</s>"]
["<s>", "private", "boolean", "formCircle", "(", "String", "input", "[", "]", ",", "List", "<", "String", ">", "result", ",", "boolean", "used", "[", "]", ",", "char", "firstChar", ")", "{", "if", "(", "input", ".", "length", "=", "=", "result", ".", "size", "(", ")", ")", "{", "String", "str", "=", "result", ".", "get", "(", "result", ".", "size", "(", ")", "-", "1", ")", ";", "if", "(", "firstChar", "=", "=", "str", ".", "charAt", "(", "str", ".", "length", "(", ")", "-", "1", ")", ")", "{", "return", "true", ";", "}", "return", "false", ";", "}", "String", "str", "=", "result", ".", "get", "(", "result", ".", "size", "(", ")", "-", "1", ")", ";", "char", "lastChar", "=", "str", ".", "charAt", "(", "str", ".", "length", "(", ")", "-", "1", ")", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "used", "[", "i", "]", ")", "{", "continue", ";", "}", "if", "(", "lastChar", "=", "=", "input", "[", "i", "]", ".", "charAt", "(", "0", ")", ")", "{", "used", "[", "i", "]", "=", "true", ";", "result", ".", "add", "(", "input", "[", "i", "]", ")", ";", "boolean", "r", "=", "formCircle", "(", "input", ",", "result", ",", "used", ",", "firstChar", ")", ";", "if", "(", "r", ")", "{", "return", "true", ";", "}", "used", "[", "i", "]", "=", "false", ";", "result", ".", "remove", "(", "result", ".", "size", "(", ")", "-", "1", ")", ";", "}", "}", "return", "false", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "String", "notChaininput", "[", "]", "=", "{", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", "}", ";", "String", "chainInput", "[", "]", "=", "{", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", "}", ";", "ChainWordsToFormCircle", "cwt", "=", "new", "ChainWordsToFormCircle", "(", ")", ";", "List", "<", "String", ">", "result", "=", "cwt", ".", "formCircle", "(", "chainInput", ")", ";", "if", "(", "result", ".", "size", "(", ")", "=", "=", "0", ")", "{", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "else", "{", "for", "(", "String", "chainNode", ":", "result", ")", "{", "System", ".", "out", ".", "print", "(", "chainNode", "+", "\"", "\"", ")", ";", "}", "}", "}", "</s>"]
["<s>", "public", "void", "combination", "(", "char", "input", "[", "]", ",", "int", "count", "[", "]", ")", "{", "int", "len", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "count", ".", "length", ";", "i", "+", "+", ")", "{", "len", "+", "=", "count", "[", "i", "]", ";", "}", "char", "result", "[", "]", "=", "new", "char", "[", "len", "]", ";", "combination", "(", "input", ",", "count", ",", "0", ",", "0", ",", "result", ",", "0", ")", ";", "}", "</s>"]
["<s>", "private", "void", "combination", "(", "char", "input", "[", "]", ",", "int", "count", "[", "]", ",", "int", "pos", ",", "int", "countPos", ",", "char", "result", "[", "]", ",", "int", "len", ")", "{", "if", "(", "pos", "=", "=", "input", ".", "length", ")", "{", "return", ";", "}", "print", "(", "result", ",", "len", ")", ";", "for", "(", "int", "i", "=", "pos", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "countPos", "<", "count", "[", "i", "]", ")", "{", "result", "[", "len", "]", "=", "input", "[", "i", "]", ";", "combination", "(", "input", ",", "count", ",", "i", ",", "countPos", "+", "1", ",", "result", ",", "len", "+", "1", ")", ";", "}", "countPos", "=", "0", ";", "}", "}", "</s>"]
["<s>", "public", "void", "combination", "(", "char", "input", "[", "]", ")", "{", "Arrays", ".", "sort", "(", "input", ")", ";", "char", "result", "[", "]", "=", "new", "char", "[", "input", ".", "length", "]", ";", "combination", "(", "input", ",", "0", ",", "result", ",", "0", ")", ";", "}", "</s>"]
["<s>", "private", "void", "combination", "(", "char", "input", "[", "]", ",", "int", "pos", ",", "char", "result", "[", "]", ",", "int", "len", ")", "{", "print", "(", "result", ",", "len", ")", ";", "for", "(", "int", "i", "=", "pos", ";", "i", "<", "input", ".", "length", ";", ")", "{", "int", "j", "=", "i", ";", "while", "(", "j", "<", "input", ".", "length", "&", "&", "input", "[", "i", "]", "=", "=", "input", "[", "j", "]", ")", "{", "j", "+", "+", ";", "}", "int", "tempLen", "=", "len", ";", "for", "(", "int", "k", "=", "i", ";", "k", "<", "j", ";", "k", "+", "+", ")", "{", "result", "[", "len", "]", "=", "input", "[", "i", "]", ";", "combination", "(", "input", ",", "j", ",", "result", ",", "len", "+", "1", ")", ";", "len", "+", "+", ";", "}", "len", "=", "tempLen", ";", "i", "=", "j", ";", "}", "}", "</s>"]
["<s>", "private", "void", "print", "(", "char", "result", "[", "]", ",", "int", "pos", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "pos", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "result", "[", "i", "]", "+", "\"", "\"", ")", ";", "}", "System", ".", "out", ".", "println", "(", ")", ";", "}", "</s>"]
["<s>", "public", "void", "combinationEasiest", "(", "char", "[", "]", "input", ")", "{", "List", "<", "Character", ">", "r", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "Arrays", ".", "sort", "(", "input", ")", ";", "combinationEasiest", "(", "input", ",", "0", ",", "r", ")", ";", "}", "</s>"]
["<s>", "private", "void", "combinationEasiest", "(", "char", "[", "]", "input", ",", "int", "pos", ",", "List", "<", "Character", ">", "r", ")", "{", "r", ".", "forEach", "(", "r1", "-", ">", "System", ".", "out", ".", "print", "(", "r1", "+", "\"", "\"", ")", ")", ";", "System", ".", "out", ".", "println", "(", ")", ";", "for", "(", "int", "i", "=", "pos", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "i", "!", "=", "pos", "&", "&", "input", "[", "i", "]", "=", "=", "input", "[", "i", "-", "1", "]", ")", "{", "continue", ";", "}", "r", ".", "add", "(", "input", "[", "i", "]", ")", ";", "combinationEasiest", "(", "input", ",", "i", "+", "1", ",", "r", ")", ";", "r", ".", "remove", "(", "r", ".", "size", "(", ")", "-", "1", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "CombinationWithReptition", "cwr", "=", "new", "CombinationWithReptition", "(", ")", ";", "int", "count", "[", "]", "=", "{", "<NUM_LIT:3>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", "}", ";", "cwr", ".", "combination", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ",", "count", ")", ";", "System", ".", "out", ".", "println", "(", ")", ";", "cwr", ".", "combination", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ";", "System", ".", "out", ".", "println", "(", ")", ";", "cwr", ".", "combinationEasiest", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ";", "}", "</s>"]
["<s>", "public", "void", "permute", "(", "char", "input", "[", "]", ")", "{", "Map", "<", "Character", ",", "Integer", ">", "countMap", "=", "new", "TreeMap", "<", ">", "(", ")", ";", "for", "(", "char", "ch", ":", "input", ")", "{", "countMap", ".", "compute", "(", "ch", ",", "(", "key", ",", "val", ")", "-", ">", "{", "if", "(", "val", "=", "=", "null", ")", "{", "return", "1", ";", "}", "else", "{", "return", "val", "+", "1", ";", "}", "}", ")", ";", "}", "char", "str", "[", "]", "=", "new", "char", "[", "countMap", ".", "size", "(", ")", "]", ";", "int", "count", "[", "]", "=", "new", "int", "[", "countMap", ".", "size", "(", ")", "]", ";", "int", "index", "=", "0", ";", "for", "(", "Map", ".", "Entry", "<", "Character", ",", "Integer", ">", "entry", ":", "countMap", ".", "entrySet", "(", ")", ")", "{", "str", "[", "index", "]", "=", "entry", ".", "getKey", "(", ")", ";", "count", "[", "index", "]", "=", "entry", ".", "getValue", "(", ")", ";", "index", "+", "+", ";", "}", "char", "result", "[", "]", "=", "new", "char", "[", "input", ".", "length", "]", ";", "permuteUtil", "(", "str", ",", "count", ",", "result", ",", "0", ")", ";", "}", "</s>"]
["<s>", "public", "void", "permuteUtil", "(", "char", "str", "[", "]", ",", "int", "count", "[", "]", ",", "char", "result", "[", "]", ",", "int", "level", ")", "{", "if", "(", "level", "=", "=", "result", ".", "length", ")", "{", "printArray", "(", "result", ")", ";", "return", ";", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "str", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "count", "[", "i", "]", "=", "=", "0", ")", "{", "continue", ";", "}", "result", "[", "level", "]", "=", "str", "[", "i", "]", ";", "count", "[", "i", "]", "-", "-", ";", "permuteUtil", "(", "str", ",", "count", ",", "result", ",", "level", "+", "1", ")", ";", "count", "[", "i", "]", "+", "+", ";", "}", "}", "</s>"]
["<s>", "private", "void", "printArray", "(", "char", "input", "[", "]", ")", "{", "for", "(", "char", "ch", ":", "input", ")", "{", "System", ".", "out", ".", "print", "(", "ch", ")", ";", "}", "System", ".", "out", ".", "println", "(", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "StringPermutation", "sp", "=", "new", "StringPermutation", "(", ")", ";", "sp", ".", "permute", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ";", "}", "</s>"]
["<s>", "public", "void", "combine", "(", "char", "input", "[", "]", ",", "int", "pos", ",", "boolean", "used", "[", "]", ")", "{", "printArray", "(", "input", ",", "used", ")", ";", "for", "(", "int", "i", "=", "pos", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "used", "[", "i", "]", "=", "true", ";", "combine", "(", "input", ",", "i", "+", "1", ",", "used", ")", ";", "used", "[", "i", "]", "=", "false", ";", "}", "}", "</s>"]
["<s>", "private", "void", "printArray", "(", "char", "result", "[", "]", ",", "boolean", "used", "[", "]", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "used", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "used", "[", "i", "]", ")", "{", "System", ".", "out", ".", "print", "(", "result", "[", "i", "]", "+", "\"", "\"", ")", ";", "}", "else", "{", "System", ".", "out", ".", "print", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "}", "System", ".", "out", ".", "println", "(", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "char", "input", "[", "]", "=", "{", "<CHAR_LIT:a>", ",", "<CHAR_LIT:b>", ",", "<CHAR_LIT:c>", ",", "<CHAR_LIT>", "}", ";", "CombinationWithStar", "cws", "=", "new", "CombinationWithStar", "(", ")", ";", "boolean", "used", "[", "]", "=", "new", "boolean", "[", "input", ".", "length", "]", ";", "cws", ".", "combine", "(", "input", ",", "0", ",", "used", ")", ";", "}", "</s>"]
["<s>", "public", "char", "[", "]", "shuffle", "(", "char", "input", "[", "]", ")", "{", "char", "result", "[", "]", "=", "new", "char", "[", "input", ".", "length", "]", ";", "Map", "<", "Character", ",", "Integer", ">", "map", "=", "new", "HashMap", "<", "Character", ",", "Integer", ">", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "Integer", "count", "=", "map", ".", "putIfAbsent", "(", "input", "[", "i", "]", ",", "1", ")", ";", "if", "(", "count", "!", "=", "null", ")", "{", "count", "+", "+", ";", "map", ".", "put", "(", "input", "[", "i", "]", ",", "count", ")", ";", "}", "}", "char", "newInput", "[", "]", "=", "new", "char", "[", "map", ".", "size", "(", ")", "]", ";", "int", "freq", "[", "]", "=", "new", "int", "[", "map", ".", "size", "(", ")", "]", ";", "int", "index", "=", "0", ";", "for", "(", "Entry", "<", "Character", ",", "Integer", ">", "entry", ":", "map", ".", "entrySet", "(", ")", ")", "{", "newInput", "[", "index", "]", "=", "entry", ".", "getKey", "(", ")", ";", "freq", "[", "index", "]", "=", "entry", ".", "getValue", "(", ")", ";", "index", "+", "+", ";", "}", "shuffleUtil", "(", "newInput", ",", "freq", ",", "result", ",", "0", ",", "(", "char", ")", "0", ")", ";", "return", "result", ";", "}", "</s>"]
["<s>", "private", "boolean", "shuffleUtil", "(", "char", "input", "[", "]", ",", "int", "freq", "[", "]", ",", "char", "result", "[", "]", ",", "int", "pos", ",", "char", "lastVal", ")", "{", "if", "(", "pos", "=", "=", "result", ".", "length", ")", "{", "return", "true", ";", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "lastVal", "=", "=", "input", "[", "i", "]", ")", "{", "continue", ";", "}", "if", "(", "freq", "[", "i", "]", "=", "=", "0", ")", "{", "continue", ";", "}", "freq", "[", "i", "]", "-", "-", ";", "result", "[", "pos", "]", "=", "input", "[", "i", "]", ";", "if", "(", "shuffleUtil", "(", "input", ",", "freq", ",", "result", ",", "pos", "+", "1", ",", "input", "[", "i", "]", ")", ")", "{", "return", "true", ";", "}", "freq", "[", "i", "]", "+", "+", ";", "}", "return", "false", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "FancyShuffle", "fs", "=", "new", "FancyShuffle", "(", ")", ";", "char", "result", "[", "]", "=", "fs", ".", "shuffle", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ";", "for", "(", "char", "ch", ":", "result", ")", "{", "System", ".", "out", ".", "print", "(", "ch", ")", ";", "}", "}", "</s>"]
["<s>", "private", "void", "printArray", "(", "int", "arr", "[", "]", ",", "int", "pos", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "pos", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "arr", "[", "i", "]", "+", "\"", "\"", ")", ";", "}", "System", ".", "out", ".", "println", "(", ")", ";", "}", "</s>"]
["<s>", "private", "void", "combination", "(", "int", "arr", "[", "]", ",", "int", "pos", ",", "int", "start", ",", "int", "result", "[", "]", ")", "{", "printArray", "(", "result", ",", "pos", ")", ";", "for", "(", "int", "i", "=", "start", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "result", "[", "pos", "]", "=", "arr", "[", "i", "]", ";", "combination", "(", "arr", ",", "pos", "+", "1", ",", "i", "+", "1", ",", "result", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "Combination", "c", "=", "new", "Combination", "(", ")", ";", "int", "arr", "[", "]", "=", "{", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", "}", ";", "int", "result", "[", "]", "=", "new", "int", "[", "arr", ".", "length", "]", ";", "c", ".", "combination", "(", "arr", ",", "0", ",", "0", ",", "result", ")", ";", "}", "</s>"]
["<s>", "public", "void", "permute", "(", "int", "input", "[", "]", ")", "{", "char", "result", "[", "]", "=", "new", "char", "[", "input", ".", "length", "]", ";", "permute", "(", "input", ",", "0", ",", "result", ")", ";", "}", "</s>"]
["<s>", "private", "void", "permute", "(", "int", "input", "[", "]", ",", "int", "pos", ",", "char", "result", "[", "]", ")", "{", "if", "(", "pos", "=", "=", "input", ".", "length", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "result", ".", "length", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "result", "[", "i", "]", ")", ";", "}", "System", ".", "out", ".", "println", "(", ")", ";", "return", ";", "}", "char", "[", "]", "str", "=", "getCharSetForNumber", "(", "input", "[", "pos", "]", ")", ";", "for", "(", "char", "ch", ":", "str", ")", "{", "result", "[", "pos", "]", "=", "ch", ";", "permute", "(", "input", ",", "pos", "+", "1", ",", "result", ")", ";", "}", "}", "</s>"]
["<s>", "private", "char", "[", "]", "getCharSetForNumber", "(", "int", "num", ")", "{", "switch", "(", "num", ")", "{", "case", "1", ":", "return", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ";", "case", "<NUM_LIT:2>", ":", "return", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ";", "case", "<NUM_LIT:3>", ":", "return", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ";", "case", "<NUM_LIT:4>", ":", "return", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ";", "case", "<NUM_LIT:5>", ":", "return", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ";", "case", "<NUM_LIT:6>", ":", "return", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ";", "case", "<NUM_LIT:8>", ":", "return", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ";", "case", "<NUM_LIT:9>", ":", "return", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ";", "}", "throw", "new", "IllegalArgumentException", "(", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input", "[", "]", "=", "{", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "1", ",", "<NUM_LIT:5>", "}", ";", "KeyPadPermutation", "kpp", "=", "new", "KeyPadPermutation", "(", ")", ";", "kpp", ".", "permute", "(", "input", ")", ";", "}", "</s>"]
["<s>", "public", "void", "printCombinations", "(", "List", "<", "List", "<", "String", ">", ">", "input", ")", "{", "int", "[", "]", "result", "=", "new", "int", "[", "input", ".", "size", "(", ")", "]", ";", "print", "(", "input", ",", "result", ",", "0", ")", ";", "}", "</s>"]
["<s>", "private", "void", "print", "(", "List", "<", "List", "<", "String", ">", ">", "input", ",", "int", "[", "]", "result", ",", "int", "pos", ")", "{", "if", "(", "pos", "=", "=", "result", ".", "length", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "size", "(", ")", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "input", ".", "get", "(", "i", ")", ".", "get", "(", "result", "[", "i", "]", ")", "+", "\"", "\"", ")", ";", "}", "System", ".", "out", ".", "println", "(", ")", ";", "return", ";", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "get", "(", "pos", ")", ".", "size", "(", ")", ";", "i", "+", "+", ")", "{", "result", "[", "pos", "]", "=", "i", ";", "print", "(", "input", ",", "result", ",", "pos", "+", "1", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "List", "<", "String", ">", "l1", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "l1", ".", "add", "(", "\"", "<STR_LIT>", "\"", ")", ";", "l1", ".", "add", "(", "\"", "<STR_LIT>", "\"", ")", ";", "List", "<", "String", ">", "l2", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "l2", ".", "add", "(", "\"", "<STR_LIT>", "\"", ")", ";", "l2", ".", "add", "(", "\"", "<STR_LIT>", "\"", ")", ";", "List", "<", "String", ">", "l3", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "l3", ".", "add", "(", "\"", "<STR_LIT>", "\"", ")", ";", "l3", ".", "add", "(", "\"", "<STR_LIT>", "\"", ")", ";", "List", "<", "List", "<", "String", ">", ">", "input", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "input", ".", "add", "(", "l1", ")", ";", "input", ".", "add", "(", "l2", ")", ";", "input", ".", "add", "(", "l3", ")", ";", "WordCombination", "wc", "=", "new", "WordCombination", "(", ")", ";", "wc", ".", "printCombinations", "(", "input", ")", ";", "}", "</s>"]
["<s>", "void", "print", "(", "char", "str", "[", "]", "[", "]", ")", "{", "Map", "<", "Character", ",", "Boolean", ">", "visited", "=", "new", "HashMap", "<", "Character", ",", "Boolean", ">", "(", ")", ";", "Map", "<", "Character", ",", "Boolean", ">", "alreadyPrinted", "=", "new", "HashMap", "<", "Character", ",", "Boolean", ">", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "str", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "!", "visited", ".", "containsKey", "(", "str", "[", "i", "]", "[", "0", "]", ")", "|", "|", "!", "visited", ".", "get", "(", "str", "[", "i", "]", "[", "0", "]", ")", ")", "{", "if", "(", "!", "alreadyPrinted", ".", "containsKey", "(", "str", "[", "i", "]", "[", "0", "]", ")", "|", "|", "!", "alreadyPrinted", ".", "get", "(", "str", "[", "i", "]", "[", "0", "]", ")", ")", "{", "System", ".", "out", ".", "println", "(", "str", "[", "i", "]", "[", "0", "]", ")", ";", "alreadyPrinted", ".", "put", "(", "str", "[", "i", "]", "[", "0", "]", ",", "true", ")", ";", "}", "DFS", "(", "str", ",", "i", ",", "<NUM_LIT:5>", ",", "visited", ")", ";", "}", "}", "}", "</s>"]
["<s>", "private", "void", "DFS", "(", "char", "str", "[", "]", "[", "]", ",", "int", "pos", ",", "int", "distance", ",", "Map", "<", "Character", ",", "Boolean", ">", "visited", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "distance", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "\"", "\"", ")", ";", "}", "System", ".", "out", ".", "println", "(", "str", "[", "pos", "]", "[", "1", "]", ")", ";", "char", "ch", "=", "str", "[", "pos", "]", "[", "1", "]", ";", "visited", ".", "put", "(", "ch", ",", "true", ")", ";", "int", "i", "=", "pos", "+", "1", ";", "for", "(", ";", "i", "<", "str", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "ch", "=", "=", "str", "[", "i", "]", "[", "0", "]", ")", "{", "if", "(", "i", "!", "=", "str", ".", "length", ")", "{", "DFS", "(", "str", ",", "i", ",", "distance", "+", "<NUM_LIT:5>", ",", "visited", ")", ";", "}", "}", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "char", "str", "[", "]", "[", "]", "=", "{", "{", "<CHAR_LIT:a>", ",", "<CHAR_LIT:b>", "}", ",", "{", "<CHAR_LIT:a>", ",", "<CHAR_LIT:c>", "}", ",", "{", "<CHAR_LIT:b>", ",", "<CHAR_LIT>", "}", ",", "{", "<CHAR_LIT:c>", ",", "<CHAR_LIT>", "}", ",", "{", "<CHAR_LIT:b>", ",", "<CHAR_LIT:e>", "}", ",", "{", "<CHAR_LIT>", ",", "<CHAR_LIT>", "}", ",", "{", "<CHAR_LIT>", ",", "<CHAR_LIT>", "}", "}", ";", "PrintArrayInCustomizedFormat", "pac", "=", "new", "PrintArrayInCustomizedFormat", "(", ")", ";", "pac", ".", "print", "(", "str", ")", ";", "}", "</s>"]
["<s>", "public", "int", "minimum", "(", "char", "input", "[", "]", ")", "{", "return", "minimum", "(", "input", ",", "0", ",", "0", ")", ";", "}", "</s>"]
["<s>", "private", "int", "minimum", "(", "char", "input", "[", "]", ",", "int", "pos", ",", "int", "countXs", ")", "{", "if", "(", "pos", "=", "=", "input", ".", "length", ")", "{", "if", "(", "countXs", ">", "1", ")", "{", "return", "Integer", ".", "MAX_VALUE", ";", "}", "return", "0", ";", "}", "if", "(", "input", "[", "pos", "]", "=", "=", "<CHAR_LIT>", ")", "{", "int", "v1", "=", "minimum", "(", "input", ",", "pos", "+", "1", ",", "countXs", "+", "1", ")", ";", "int", "v2", "=", "Integer", ".", "MAX_VALUE", ";", "if", "(", "countXs", ">", "1", ")", "{", "v2", "=", "minimum", "(", "input", ",", "pos", "+", "1", ",", "countXs", "-", "1", ")", ";", "v2", "=", "(", "v2", "!", "=", "Integer", ".", "MAX_VALUE", "?", "v2", "+", "1", ":", "Integer", ".", "MAX_VALUE", ")", ";", "}", "int", "v3", "=", "minimum", "(", "input", ",", "pos", "+", "1", ",", "countXs", ")", ";", "v3", "=", "(", "v3", "!", "=", "Integer", ".", "MAX_VALUE", "?", "v3", "+", "1", ":", "Integer", ".", "MAX_VALUE", ")", ";", "return", "Math", ".", "min", "(", "Math", ".", "min", "(", "v1", ",", "v2", ")", ",", "v3", ")", ";", "}", "else", "{", "if", "(", "countXs", ">", "=", "<NUM_LIT:2>", ")", "{", "return", "minimum", "(", "input", ",", "pos", "+", "1", ",", "countXs", "-", "1", ")", ";", "}", "else", "{", "int", "v1", "=", "minimum", "(", "input", ",", "pos", "+", "1", ",", "countXs", ")", ";", "v1", "=", "(", "v1", "!", "=", "Integer", ".", "MAX_VALUE", "?", "v1", "+", "1", ":", "Integer", ".", "MAX_VALUE", ")", ";", "int", "v2", "=", "minimum", "(", "input", ",", "pos", "+", "1", ",", "countXs", "+", "1", ")", ";", "v2", "=", "(", "v2", "!", "=", "Integer", ".", "MAX_VALUE", "?", "v2", "+", "1", ":", "Integer", ".", "MAX_VALUE", ")", ";", "return", "Math", ".", "min", "(", "v1", ",", "v2", ")", ";", "}", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "MinimumEditForReversePolishNotation", "mef", "=", "new", "MinimumEditForReversePolishNotation", "(", ")", ";", "System", ".", "out", ".", "println", "(", "mef", ".", "minimum", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "findMinimumSwaps", "(", "int", "input", "[", "]", ",", "Map", "<", "Integer", ",", "Integer", ">", "pair", ")", "{", "Map", "<", "Integer", ",", "Integer", ">", "index", "=", "new", "HashMap", "<", ">", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "index", ".", "put", "(", "input", "[", "i", "]", ",", "i", ")", ";", "}", "return", "findMinimumSwapsUtil", "(", "input", ",", "pair", ",", "index", ",", "0", ")", ";", "}", "</s>"]
["<s>", "public", "int", "findMinimumSwapsUtil", "(", "int", "input", "[", "]", ",", "Map", "<", "Integer", ",", "Integer", ">", "pair", ",", "Map", "<", "Integer", ",", "Integer", ">", "index", ",", "int", "current", ")", "{", "if", "(", "current", "=", "=", "input", ".", "length", ")", "{", "return", "0", ";", "}", "int", "v1", "=", "input", "[", "current", "]", ";", "int", "v2", "=", "input", "[", "current", "+", "1", "]", ";", "int", "pv2", "=", "pair", ".", "get", "(", "v1", ")", ";", "if", "(", "pv2", "=", "=", "v2", ")", "{", "return", "findMinimumSwapsUtil", "(", "input", ",", "pair", ",", "index", ",", "current", "+", "<NUM_LIT:2>", ")", ";", "}", "else", "{", "int", "idx1", "=", "index", ".", "get", "(", "v1", ")", ";", "int", "idx2", "=", "index", ".", "get", "(", "v2", ")", ";", "int", "idx3", "=", "index", ".", "get", "(", "pair", ".", "get", "(", "v1", ")", ")", ";", "int", "idx4", "=", "index", ".", "get", "(", "pair", ".", "get", "(", "v2", ")", ")", ";", "swap", "(", "index", ",", "input", ",", "idx2", ",", "idx3", ")", ";", "int", "val1", "=", "findMinimumSwapsUtil", "(", "input", ",", "pair", ",", "index", ",", "current", "+", "<NUM_LIT:2>", ")", ";", "swap", "(", "index", ",", "input", ",", "idx2", ",", "idx3", ")", ";", "swap", "(", "index", ",", "input", ",", "idx1", ",", "idx4", ")", ";", "int", "val2", "=", "findMinimumSwapsUtil", "(", "input", ",", "pair", ",", "index", ",", "current", "+", "<NUM_LIT:2>", ")", ";", "swap", "(", "index", ",", "input", ",", "idx1", ",", "idx4", ")", ";", "return", "1", "+", "Math", ".", "max", "(", "val1", ",", "val2", ")", ";", "}", "}", "</s>"]
["<s>", "private", "void", "swap", "(", "Map", "<", "Integer", ",", "Integer", ">", "index", ",", "int", "input", "[", "]", ",", "int", "i", ",", "int", "j", ")", "{", "index", ".", "compute", "(", "input", "[", "i", "]", ",", "(", "k", ",", "v", ")", "-", ">", "j", ")", ";", "index", ".", "compute", "(", "input", "[", "j", "]", ",", "(", "k", ",", "v", ")", "-", ">", "i", ")", ";", "int", "t", "=", "input", "[", "i", "]", ";", "input", "[", "i", "]", "=", "input", "[", "j", "]", ";", "input", "[", "j", "]", "=", "t", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "SetPairTogether", "spt", "=", "new", "SetPairTogether", "(", ")", ";", "int", "input", "[", "]", "=", "{", "<NUM_LIT:3>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:4>", ",", "1", ",", "<NUM_LIT:2>", "}", ";", "Map", "<", "Integer", ",", "Integer", ">", "pair", "=", "new", "HashMap", "<", ">", "(", ")", ";", "pair", ".", "put", "(", "1", ",", "<NUM_LIT:3>", ")", ";", "pair", ".", "put", "(", "<NUM_LIT:3>", ",", "1", ")", ";", "pair", ".", "put", "(", "<NUM_LIT:2>", ",", "<NUM_LIT:6>", ")", ";", "pair", ".", "put", "(", "<NUM_LIT:6>", ",", "<NUM_LIT:2>", ")", ";", "pair", ".", "put", "(", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", ")", ";", "pair", ".", "put", "(", "<NUM_LIT:5>", ",", "<NUM_LIT:4>", ")", ";", "System", ".", "out", ".", "println", "(", "spt", ".", "findMinimumSwaps", "(", "input", ",", "pair", ")", ")", ";", "}", "</s>"]
["<s>", "public", "List", "<", "Integer", ">", "diffWaysToCompute", "(", "String", "str", ")", "{", "List", "<", "Integer", ">", "operands", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "List", "<", "Character", ">", "operators", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "int", "prev", "=", "-", "1", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "str", ".", "length", "(", ")", ";", "i", "+", "+", ")", "{", "if", "(", "str", ".", "charAt", "(", "i", ")", "=", "=", "<CHAR_LIT>", "|", "|", "str", ".", "charAt", "(", "i", ")", "=", "=", "<CHAR_LIT:->", "|", "|", "str", ".", "charAt", "(", "i", ")", "=", "=", "<CHAR_LIT>", ")", "{", "operands", ".", "add", "(", "Integer", ".", "parseInt", "(", "str", ".", "substring", "(", "prev", "+", "1", ",", "i", ")", ")", ")", ";", "operators", ".", "add", "(", "str", ".", "charAt", "(", "i", ")", ")", ";", "prev", "=", "i", ";", "}", "}", "operands", ".", "add", "(", "Integer", ".", "parseInt", "(", "str", ".", "substring", "(", "prev", "+", "1", ",", "str", ".", "length", "(", ")", ")", ")", ")", ";", "return", "diffWaysToComputeUtil", "(", "operands", ",", "operators", ",", "0", ",", "operators", ".", "size", "(", ")", "-", "1", ")", ";", "}", "</s>"]
["<s>", "private", "List", "<", "Integer", ">", "diffWaysToComputeUtil", "(", "List", "<", "Integer", ">", "operands", ",", "List", "<", "Character", ">", "operators", ",", "int", "start", ",", "int", "end", ")", "{", "if", "(", "start", ">", "end", ")", "{", "if", "(", "start", ">", "=", "0", ")", "{", "return", "Collections", ".", "singletonList", "(", "operands", ".", "get", "(", "start", ")", ")", ";", "}", "else", "{", "return", "Collections", ".", "singletonList", "(", "operands", ".", "get", "(", "end", ")", ")", ";", "}", "}", "List", "<", "Integer", ">", "result", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "for", "(", "int", "i", "=", "start", ";", "i", "<", "=", "end", ";", "i", "+", "+", ")", "{", "List", "<", "Integer", ">", "leftResult", "=", "diffWaysToComputeUtil", "(", "operands", ",", "operators", ",", "start", ",", "i", "-", "1", ")", ";", "List", "<", "Integer", ">", "rightResult", "=", "diffWaysToComputeUtil", "(", "operands", ",", "operators", ",", "i", "+", "1", ",", "end", ")", ";", "for", "(", "int", "left", ":", "leftResult", ")", "{", "for", "(", "int", "right", ":", "rightResult", ")", "{", "result", ".", "add", "(", "(", "int", ")", "operate", "(", "left", ",", "right", ",", "operators", ".", "get", "(", "i", ")", ")", ")", ";", "}", "}", "}", "return", "result", ";", "}", "</s>"]
["<s>", "private", "long", "operate", "(", "int", "val1", ",", "int", "val2", ",", "char", "op", ")", "{", "switch", "(", "op", ")", "{", "case", "<CHAR_LIT>", ":", "return", "val1", "+", "val2", ";", "case", "<CHAR_LIT:->", ":", "return", "val1", "-", "val2", ";", "case", "<CHAR_LIT>", ":", "return", "val1", "*", "val2", ";", "}", "throw", "new", "IllegalArgumentException", "(", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "DifferentWaysToAddParentheses", "df", "=", "new", "DifferentWaysToAddParentheses", "(", ")", ";", "List", "<", "Integer", ">", "result", "=", "df", ".", "diffWaysToCompute", "(", "\"", "<STR_LIT>", "\"", ")", ";", "result", ".", "forEach", "(", "s", "-", ">", "System", ".", "out", ".", "println", "(", "s", ")", ")", ";", "}", "</s>"]
["<s>", "public", "void", "printArray", "(", "int", "len", ",", "int", "k", ")", "{", "List", "<", "Integer", ">", "result", "=", "new", "ArrayList", "<", "Integer", ">", "(", ")", ";", "printArray", "(", "len", ",", "0", ",", "result", ",", "k", ")", ";", "}", "</s>"]
["<s>", "private", "void", "printArray", "(", "int", "len", ",", "int", "pos", ",", "List", "<", "Integer", ">", "result", ",", "int", "k", ")", "{", "if", "(", "pos", ">", "len", ")", "{", "return", ";", "}", "if", "(", "pos", "=", "=", "len", ")", "{", "for", "(", "int", "i", ":", "result", ")", "{", "System", ".", "out", ".", "print", "(", "i", "+", "\"", "\"", ")", ";", "}", "System", ".", "out", ".", "println", "(", ")", ";", "return", ";", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "k", ";", "i", "+", "+", ")", "{", "result", ".", "add", "(", "i", "+", "1", ")", ";", "printArray", "(", "len", ",", "pos", "+", "i", "+", "1", ",", "result", ",", "k", ")", ";", "result", ".", "remove", "(", "result", ".", "size", "(", ")", "-", "1", ")", ";", "}", "}", "</s>"]
["<s>", "public", "int", "numberOfWaysPossible", "(", "int", "input", "[", "]", ",", "int", "pos", ")", "{", "if", "(", "pos", ">", "input", ".", "length", ")", "{", "return", "0", ";", "}", "if", "(", "pos", "=", "=", "input", ".", "length", ")", "{", "return", "1", ";", "}", "int", "count", "=", "numberOfWaysPossible", "(", "input", ",", "pos", "+", "1", ")", ";", "if", "(", "pos", "+", "1", "<", "input", ".", "length", ")", "{", "int", "num", "=", "input", "[", "pos", "]", "*", "<NUM_LIT:10>", "+", "input", "[", "pos", "+", "1", "]", ";", "if", "(", "num", "<", "<NUM_LIT>", ")", "{", "count", "+", "=", "numberOfWaysPossible", "(", "input", ",", "pos", "+", "<NUM_LIT:2>", ")", ";", "}", "}", "return", "count", ";", "}", "</s>"]
["<s>", "public", "int", "numberOfWaysPossibleFaster", "(", "int", "input", "[", "]", ")", "{", "int", "a0", "=", "1", ";", "int", "a1", "=", "1", ";", "int", "c", "=", "0", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "input", "[", "i", "]", "+", "input", "[", "i", "-", "1", "]", "*", "<NUM_LIT:10>", "<", "=", "<NUM_LIT>", ")", "{", "c", "=", "a1", "+", "a0", ";", "}", "else", "{", "c", "=", "a1", ";", "}", "a0", "=", "a1", ";", "a1", "=", "c", ";", "}", "return", "c", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "PrintArrayInAdjacentWay", "paw", "=", "new", "PrintArrayInAdjacentWay", "(", ")", ";", "int", "input", "[", "]", "=", "{", "1", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:7>", ",", "1", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:2>", "}", ";", "System", ".", "out", ".", "println", "(", "paw", ".", "numberOfWaysPossible", "(", "input", ",", "0", ")", ")", ";", "System", ".", "out", ".", "println", "(", "paw", ".", "numberOfWaysPossibleFaster", "(", "input", ")", ")", ";", "}", "</s>"]
["<s>", "public", "void", "print", "(", "int", "[", "]", "input", ")", "{", "int", "[", "]", "output", "=", "new", "int", "[", "input", ".", "length", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "output", "[", "0", "]", "=", "input", "[", "i", "]", ";", "print", "(", "input", ",", "output", ",", "1", ",", "i", "+", "1", ",", "true", ")", ";", "}", "}", "</s>"]
["<s>", "private", "void", "print", "(", "int", "[", "]", "input", ",", "int", "[", "]", "output", ",", "int", "len", ",", "int", "current", ",", "boolean", "print", ")", "{", "if", "(", "print", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "len", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "output", "[", "i", "]", "+", "\"", "\"", ")", ";", "}", "System", ".", "out", ".", "println", "(", ")", ";", "}", "if", "(", "current", "=", "=", "input", ".", "length", ")", "{", "return", ";", "}", "output", "[", "len", "]", "=", "input", "[", "current", "]", ";", "print", "(", "input", ",", "output", ",", "len", "+", "1", ",", "current", "+", "1", ",", "true", ")", ";", "print", "(", "input", ",", "output", ",", "len", ",", "current", "+", "1", ",", "false", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "PrintAllSubsequence", "ps", "=", "new", "PrintAllSubsequence", "(", ")", ";", "int", "[", "]", "input", "=", "{", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", "}", ";", "ps", ".", "print", "(", "input", ")", ";", "}", "</s>"]
["<s>", "public", "List", "<", "List", "<", "Integer", ">", ">", "combinationSum", "(", "int", "[", "]", "candidates", ",", "int", "target", ")", "{", "if", "(", "candidates", ".", "length", "=", "=", "0", ")", "{", "return", "new", "ArrayList", "<", ">", "(", ")", ";", "}", "List", "<", "List", "<", "Integer", ">", ">", "rr", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "List", "<", "Integer", ">", "r", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "Arrays", ".", "sort", "(", "candidates", ")", ";", "combinationSumUtil", "(", "candidates", ",", "target", ",", "r", ",", "rr", ",", "0", ")", ";", "return", "rr", ";", "}", "</s>"]
["<s>", "private", "void", "combinationSumUtil", "(", "int", "[", "]", "candidates", ",", "int", "target", ",", "List", "<", "Integer", ">", "r", ",", "List", "<", "List", "<", "Integer", ">", ">", "rr", ",", "int", "pos", ")", "{", "if", "(", "target", "=", "=", "0", ")", "{", "List", "<", "Integer", ">", "r1", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "r1", ".", "addAll", "(", "r", ")", ";", "rr", ".", "add", "(", "r1", ")", ";", "return", ";", "}", "if", "(", "target", "<", "0", ")", "{", "return", ";", "}", "if", "(", "pos", "=", "=", "candidates", ".", "length", ")", "{", "return", ";", "}", "r", ".", "add", "(", "candidates", "[", "pos", "]", ")", ";", "combinationSumUtil", "(", "candidates", ",", "target", "-", "candidates", "[", "pos", "]", ",", "r", ",", "rr", ",", "pos", ")", ";", "r", ".", "remove", "(", "r", ".", "size", "(", ")", "-", "1", ")", ";", "combinationSumUtil", "(", "candidates", ",", "target", ",", "r", ",", "rr", ",", "pos", "+", "1", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input", "[", "]", "=", "{", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:5>", "}", ";", "PrintSumCombination", "psc", "=", "new", "PrintSumCombination", "(", ")", ";", "List", "<", "List", "<", "Integer", ">", ">", "result", "=", "psc", ".", "combinationSum", "(", "input", ",", "<NUM_LIT:10>", ")", ";", "result", ".", "forEach", "(", "r", "-", ">", "{", "r", ".", "forEach", "(", "r1", "-", ">", "System", ".", "out", ".", "print", "(", "r1", "+", "\"", "\"", ")", ")", ";", "System", ".", "out", ".", "println", "(", ")", ";", "}", ")", ";", "}", "</s>"]
["<s>", "private", "void", "swap", "(", "char", "arr", "[", "]", ",", "int", "i", ",", "int", "j", ")", "{", "char", "temp", "=", "arr", "[", "i", "]", ";", "arr", "[", "i", "]", "=", "arr", "[", "j", "]", ";", "arr", "[", "j", "]", "=", "temp", ";", "}", "</s>"]
["<s>", "private", "void", "printArray", "(", "char", "str", "[", "]", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "str", ".", "length", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "str", "[", "i", "]", ")", ";", "}", "System", ".", "out", ".", "print", "(", "\"", "<STR_LIT>", "<STR_LIT>", "\"", ")", ";", "}", "</s>"]
["<s>", "public", "void", "permute", "(", "char", "[", "]", "str", ",", "int", "pos", ")", "{", "if", "(", "pos", "=", "=", "str", ".", "length", ")", "{", "printArray", "(", "str", ")", ";", "return", ";", "}", "for", "(", "int", "i", "=", "pos", ";", "i", "<", "str", ".", "length", ";", "i", "+", "+", ")", "{", "swap", "(", "str", ",", "pos", ",", "i", ")", ";", "permute", "(", "str", ",", "pos", "+", "1", ")", ";", "swap", "(", "str", ",", "pos", ",", "i", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "String", "str", "=", "\"", "<STR_LIT>", "\"", ";", "StringPermutationRotation", "sp", "=", "new", "StringPermutationRotation", "(", ")", ";", "sp", ".", "permute", "(", "str", ".", "toCharArray", "(", ")", ",", "0", ")", ";", "}", "</s>"]
["<s>", "public", "void", "interpret", "(", "int", "arr", "[", "]", ")", "{", "char", "t", "[", "]", "[", "]", "=", "new", "char", "[", "arr", ".", "length", "]", "[", "<NUM_LIT:2>", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "<NUM_LIT:2>", ";", "j", "+", "+", ")", "{", "t", "[", "i", "]", "[", "j", "]", "=", "<CHAR_LIT:0>", ";", "}", "}", "for", "(", "int", "l", "=", "1", ";", "l", "<", "=", "<NUM_LIT:2>", ";", "l", "+", "+", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "=", "arr", ".", "length", "-", "l", ";", "i", "+", "+", ")", "{", "int", "j", "=", "i", "+", "l", "-", "1", ";", "t", "[", "i", "]", "[", "l", "-", "1", "]", "=", "getRepresentation", "(", "i", "=", "=", "j", "?", "arr", "[", "i", "]", ":", "arr", "[", "i", "]", "*", "<NUM_LIT:10>", "+", "arr", "[", "j", "]", ")", ";", "}", "}", "List", "<", "Character", ">", "result", "=", "new", "ArrayList", "<", "Character", ">", "(", ")", ";", "interpret", "(", "arr", ".", "length", ",", "0", ",", "result", ",", "t", ")", ";", "}", "</s>"]
["<s>", "private", "void", "interpret", "(", "int", "len", ",", "int", "pos", ",", "List", "<", "Character", ">", "result", ",", "char", "[", "]", "[", "]", "t", ")", "{", "if", "(", "pos", "=", "=", "len", ")", "{", "print", "(", "result", ")", ";", "return", ";", "}", "if", "(", "t", "[", "pos", "]", "[", "0", "]", "!", "=", "<CHAR_LIT:0>", ")", "{", "result", ".", "add", "(", "t", "[", "pos", "]", "[", "0", "]", ")", ";", "interpret", "(", "len", ",", "pos", "+", "1", ",", "result", ",", "t", ")", ";", "result", ".", "remove", "(", "result", ".", "size", "(", ")", "-", "1", ")", ";", "}", "if", "(", "pos", "+", "1", "<", "len", "&", "&", "t", "[", "pos", "]", "[", "1", "]", "!", "=", "<CHAR_LIT:0>", ")", "{", "result", ".", "add", "(", "t", "[", "pos", "]", "[", "1", "]", ")", ";", "interpret", "(", "len", ",", "pos", "+", "<NUM_LIT:2>", ",", "result", ",", "t", ")", ";", "result", ".", "remove", "(", "result", ".", "size", "(", ")", "-", "1", ")", ";", "}", "}", "</s>"]
["<s>", "private", "void", "print", "(", "List", "<", "Character", ">", "result", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "result", ".", "size", "(", ")", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "result", ".", "get", "(", "i", ")", "+", "\"", "\"", ")", ";", "}", "System", ".", "out", ".", "println", "(", ")", ";", "}", "</s>"]
["<s>", "private", "char", "getRepresentation", "(", "int", "number", ")", "{", "if", "(", "number", ">", "<NUM_LIT>", "|", "|", "number", "<", "=", "0", ")", "{", "return", "<CHAR_LIT:0>", ";", "}", "return", "(", "char", ")", "(", "<CHAR_LIT:a>", "+", "number", "-", "1", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "arr", "[", "]", "=", "{", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:6>", ",", "1", ",", "<NUM_LIT:7>", "}", ";", "InterpretationOfArray", "ioa", "=", "new", "InterpretationOfArray", "(", ")", ";", "ioa", ".", "interpret", "(", "arr", ")", ";", "}", "</s>"]
["<s>", "public", "void", "print", "(", "int", "arr", "[", "]", "[", "]", ",", "int", "row", ",", "int", "col", ",", "int", "result", "[", "]", ",", "int", "pos", ")", "{", "if", "(", "row", "=", "=", "arr", ".", "length", "-", "1", "&", "&", "col", "=", "=", "arr", "[", "0", "]", ".", "length", "-", "1", ")", "{", "result", "[", "pos", "]", "=", "arr", "[", "row", "]", "[", "col", "]", ";", "System", ".", "out", ".", "println", "(", "Arrays", ".", "toString", "(", "result", ")", ")", ";", "return", ";", "}", "if", "(", "row", ">", "=", "arr", ".", "length", "|", "|", "col", ">", "=", "arr", "[", "0", "]", ".", "length", ")", "{", "return", ";", "}", "result", "[", "pos", "]", "=", "arr", "[", "row", "]", "[", "col", "]", ";", "print", "(", "arr", ",", "row", ",", "col", "+", "1", ",", "result", ",", "pos", "+", "1", ")", ";", "print", "(", "arr", ",", "row", "+", "1", ",", "col", ",", "result", ",", "pos", "+", "1", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "PrintAllPathFromTopLeftToBottomRight", "pam", "=", "new", "PrintAllPathFromTopLeftToBottomRight", "(", ")", ";", "int", "arr", "[", "]", "[", "]", "=", "{", "{", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", "}", ",", "{", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:8>", "}", ",", "{", "<NUM_LIT:9>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT:12>", "}", "}", ";", "int", "result", "[", "]", "=", "new", "int", "[", "arr", ".", "length", "+", "arr", "[", "0", "]", ".", "length", "-", "1", "]", ";", "pam", ".", "print", "(", "arr", ",", "0", ",", "0", ",", "result", ",", "0", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "matchRecurisve", "(", "char", "[", "]", "str1", ",", "char", "[", "]", "str2", ")", "{", "return", "match", "(", "str1", ",", "str2", ",", "0", ",", "0", ",", "true", ")", ";", "}", "</s>"]
["<s>", "private", "boolean", "match", "(", "char", "[", "]", "str1", ",", "char", "[", "]", "str2", ",", "int", "pos1", ",", "int", "pos2", ",", "boolean", "areSame", ")", "{", "if", "(", "pos1", "=", "=", "str1", ".", "length", "&", "&", "pos2", "=", "=", "str2", ".", "length", ")", "{", "return", "true", ";", "}", "if", "(", "areSame", ")", "{", "if", "(", "(", "pos1", "=", "=", "str1", ".", "length", "&", "&", "pos2", "=", "=", "str2", ".", "length", "-", "1", ")", "|", "|", "(", "pos1", "=", "=", "str1", ".", "length", "-", "1", "&", "&", "pos2", "=", "=", "str2", ".", "length", ")", ")", "{", "return", "true", ";", "}", "}", "if", "(", "pos1", "=", "=", "str1", ".", "length", "|", "|", "pos2", "=", "=", "str2", ".", "length", ")", "{", "return", "false", ";", "}", "if", "(", "areSame", ")", "{", "return", "match", "(", "str1", ",", "str2", ",", "pos1", "+", "1", ",", "pos2", "+", "1", ",", "str1", "[", "pos1", "]", "=", "=", "str2", "[", "pos2", "]", ")", "|", "|", "match", "(", "str1", ",", "str2", ",", "pos1", ",", "pos2", "+", "1", ",", "false", ")", "|", "|", "match", "(", "str1", ",", "str2", ",", "pos1", "+", "1", ",", "pos2", ",", "false", ")", ";", "}", "else", "{", "return", "str1", "[", "pos1", "]", "=", "=", "str2", "[", "pos2", "]", "&", "&", "match", "(", "str1", ",", "str2", ",", "pos1", "+", "1", ",", "pos2", "+", "1", ",", "areSame", ")", ";", "}", "}", "</s>"]
["<s>", "public", "boolean", "matchIterative", "(", "char", "str1", "[", "]", ",", "char", "str2", "[", "]", ")", "{", "if", "(", "str1", ".", "length", "<", "str2", ".", "length", ")", "{", "char", "temp", "[", "]", "=", "str1", ";", "str1", "=", "str2", ";", "str2", "=", "temp", ";", "}", "if", "(", "str1", ".", "length", "-", "str2", ".", "length", ">", "1", ")", "{", "return", "false", ";", "}", "int", "k", "=", "1", ";", "if", "(", "str1", ".", "length", "=", "=", "str2", ".", "length", ")", "{", "int", "i", "=", "0", ";", "int", "j", "=", "0", ";", "while", "(", "k", ">", "=", "0", "&", "&", "i", "<", "str1", ".", "length", ")", "{", "if", "(", "str1", "[", "i", "]", "!", "=", "str2", "[", "j", "]", ")", "{", "k", "-", "-", ";", "}", "i", "+", "+", ";", "j", "+", "+", ";", "}", "if", "(", "k", "<", "0", ")", "{", "return", "false", ";", "}", "}", "else", "{", "int", "i", "=", "0", ";", "int", "j", "=", "0", ";", "while", "(", "k", ">", "=", "0", "&", "&", "i", "<", "str1", ".", "length", "&", "&", "j", "<", "str2", ".", "length", ")", "{", "if", "(", "str1", "[", "i", "]", "!", "=", "str2", "[", "j", "]", ")", "{", "i", "+", "+", ";", "k", "-", "-", ";", "continue", ";", "}", "i", "+", "+", ";", "j", "+", "+", ";", "}", "if", "(", "k", "=", "=", "-", "1", ")", "{", "return", "false", ";", "}", "}", "return", "true", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "OneEditApart", "oea", "=", "new", "OneEditApart", "(", ")", ";", "System", ".", "out", ".", "println", "(", "oea", ".", "matchRecurisve", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ",", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ")", ";", "System", ".", "out", ".", "println", "(", "oea", ".", "matchRecurisve", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ",", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ")", ";", "System", ".", "out", ".", "println", "(", "oea", ".", "matchRecurisve", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ",", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ")", ";", "System", ".", "out", ".", "println", "(", "oea", ".", "matchRecurisve", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ",", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ")", ";", "System", ".", "out", ".", "println", "(", "oea", ".", "matchRecurisve", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ",", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ")", ";", "System", ".", "out", ".", "println", "(", "oea", ".", "matchIterative", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ",", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ")", ";", "System", ".", "out", ".", "println", "(", "oea", ".", "matchIterative", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ",", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ")", ";", "System", ".", "out", ".", "println", "(", "oea", ".", "matchIterative", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ",", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ")", ";", "System", ".", "out", ".", "println", "(", "oea", ".", "matchIterative", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ",", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ")", ";", "System", ".", "out", ".", "println", "(", "oea", ".", "matchIterative", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ",", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ")", ";", "}", "</s>"]
["<s>", "Position", "(", "int", "row", ",", "int", "col", ")", "{", "this", ".", "row", "=", "row", ";", "this", ".", "col", "=", "col", ";", "}", "</s>"]
["<s>", "public", "Position", "[", "]", "solveNQueenOneSolution", "(", "int", "n", ")", "{", "Position", "[", "]", "positions", "=", "new", "Position", "[", "n", "]", ";", "boolean", "hasSolution", "=", "solveNQueenOneSolutionUtil", "(", "n", ",", "0", ",", "positions", ")", ";", "if", "(", "hasSolution", ")", "{", "return", "positions", ";", "}", "else", "{", "return", "new", "Position", "[", "0", "]", ";", "}", "}", "</s>"]
["<s>", "private", "boolean", "solveNQueenOneSolutionUtil", "(", "int", "n", ",", "int", "row", ",", "Position", "[", "]", "positions", ")", "{", "if", "(", "n", "=", "=", "row", ")", "{", "return", "true", ";", "}", "int", "col", ";", "for", "(", "col", "=", "0", ";", "col", "<", "n", ";", "col", "+", "+", ")", "{", "boolean", "foundSafe", "=", "true", ";", "for", "(", "int", "queen", "=", "0", ";", "queen", "<", "row", ";", "queen", "+", "+", ")", "{", "if", "(", "positions", "[", "queen", "]", ".", "col", "=", "=", "col", "|", "|", "positions", "[", "queen", "]", ".", "row", "-", "positions", "[", "queen", "]", ".", "col", "=", "=", "row", "-", "col", "|", "|", "positions", "[", "queen", "]", ".", "row", "+", "positions", "[", "queen", "]", ".", "col", "=", "=", "row", "+", "col", ")", "{", "foundSafe", "=", "false", ";", "break", ";", "}", "}", "if", "(", "foundSafe", ")", "{", "positions", "[", "row", "]", "=", "new", "Position", "(", "row", ",", "col", ")", ";", "if", "(", "solveNQueenOneSolutionUtil", "(", "n", ",", "row", "+", "1", ",", "positions", ")", ")", "{", "return", "true", ";", "}", "}", "}", "return", "false", ";", "}", "</s>"]
["<s>", "public", "List", "<", "List", "<", "String", ">", ">", "solveNQueens", "(", "int", "n", ")", "{", "List", "<", "List", "<", "String", ">", ">", "result", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "Position", "[", "]", "positions", "=", "new", "Position", "[", "n", "]", ";", "solve", "(", "0", ",", "positions", ",", "result", ",", "n", ")", ";", "return", "result", ";", "}", "</s>"]
["<s>", "public", "void", "solve", "(", "int", "current", ",", "Position", "[", "]", "positions", ",", "List", "<", "List", "<", "String", ">", ">", "result", ",", "int", "n", ")", "{", "if", "(", "n", "=", "=", "current", ")", "{", "StringBuffer", "buff", "=", "new", "StringBuffer", "(", ")", ";", "List", "<", "String", ">", "oneResult", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "for", "(", "Position", "p", ":", "positions", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "n", ";", "i", "+", "+", ")", "{", "if", "(", "p", ".", "col", "=", "=", "i", ")", "{", "buff", ".", "append", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "else", "{", "buff", ".", "append", "(", "\"", "<STR_LIT:.>", "\"", ")", ";", "}", "}", "oneResult", ".", "add", "(", "buff", ".", "toString", "(", ")", ")", ";", "buff", "=", "new", "StringBuffer", "(", ")", ";", "}", "result", ".", "add", "(", "oneResult", ")", ";", "return", ";", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "n", ";", "i", "+", "+", ")", "{", "boolean", "foundSafe", "=", "true", ";", "for", "(", "int", "j", "=", "0", ";", "j", "<", "current", ";", "j", "+", "+", ")", "{", "if", "(", "positions", "[", "j", "]", ".", "col", "=", "=", "i", "|", "|", "positions", "[", "j", "]", ".", "col", "-", "positions", "[", "j", "]", ".", "row", "=", "=", "i", "-", "current", "|", "|", "positions", "[", "j", "]", ".", "row", "+", "positions", "[", "j", "]", ".", "col", "=", "=", "i", "+", "current", ")", "{", "foundSafe", "=", "false", ";", "break", ";", "}", "}", "if", "(", "foundSafe", ")", "{", "positions", "[", "current", "]", "=", "new", "Position", "(", "current", ",", "i", ")", ";", "solve", "(", "current", "+", "1", ",", "positions", ",", "result", ",", "n", ")", ";", "}", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "NQueenProblem", "s", "=", "new", "NQueenProblem", "(", ")", ";", "Position", "[", "]", "positions", "=", "s", ".", "solveNQueenOneSolution", "(", "<NUM_LIT:6>", ")", ";", "Arrays", ".", "stream", "(", "positions", ")", ".", "forEach", "(", "position", "-", ">", "System", ".", "out", ".", "println", "(", "position", ".", "row", "+", "\"", "\"", "+", "position", ".", "col", ")", ")", ";", "}", "</s>"]
["<s>", "public", "void", "combination", "(", "int", "arr", "[", "]", ",", "int", "k", ")", "{", "int", "result", "[", "]", "=", "new", "int", "[", "k", "]", ";", "combinationUtil", "(", "arr", ",", "k", ",", "0", ",", "result", ",", "0", ")", ";", "}", "</s>"]
["<s>", "private", "void", "combinationUtil", "(", "int", "arr", "[", "]", ",", "int", "k", ",", "int", "pos", ",", "int", "result", "[", "]", ",", "int", "start", ")", "{", "if", "(", "pos", "=", "=", "k", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "k", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "result", "[", "i", "]", "+", "\"", "\"", ")", ";", "}", "System", ".", "out", ".", "print", "(", "\"", "<STR_LIT>", "<STR_LIT>", "\"", ")", ";", "return", ";", "}", "for", "(", "int", "i", "=", "start", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "result", "[", "pos", "]", "=", "arr", "[", "i", "]", ";", "combinationUtil", "(", "arr", ",", "k", ",", "pos", "+", "1", ",", "result", ",", "i", "+", "1", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "CombinationOfSizeK", "kk", "=", "new", "CombinationOfSizeK", "(", ")", ";", "int", "arr", "[", "]", "=", "{", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", "}", ";", "kk", ".", "combination", "(", "arr", ",", "<NUM_LIT:2>", ")", ";", "}", "</s>"]
["<s>", "public", "List", "<", "String", ">", "addOperators", "(", "String", "num", ",", "int", "target", ")", "{", "if", "(", "num", ".", "length", "(", ")", "=", "=", "0", ")", "{", "return", "new", "ArrayList", "<", ">", "(", ")", ";", "}", "List", "<", "String", ">", "result", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "StringBuffer", "buff", "=", "new", "StringBuffer", "(", ")", ";", "dfs", "(", "num", ",", "0", ",", "target", ",", "0", ",", "0", ",", "result", ",", "buff", ")", ";", "return", "result", ";", "}", "</s>"]
["<s>", "private", "void", "dfs", "(", "String", "nums", ",", "int", "pos", ",", "int", "target", ",", "long", "runningTotal", ",", "long", "multiplicationVal", ",", "List", "<", "String", ">", "result", ",", "StringBuffer", "buff", ")", "{", "if", "(", "pos", "=", "=", "nums", ".", "length", "(", ")", ")", "{", "if", "(", "runningTotal", "=", "=", "target", ")", "{", "result", ".", "add", "(", "buff", ".", "toString", "(", ")", ")", ";", "}", "return", ";", "}", "for", "(", "int", "i", "=", "pos", ";", "i", "<", "nums", ".", "length", "(", ")", ";", "i", "+", "+", ")", "{", "if", "(", "i", "!", "=", "pos", "&", "&", "nums", ".", "charAt", "(", "pos", ")", "=", "=", "<CHAR_LIT:0>", ")", "{", "break", ";", "}", "String", "subStr", "=", "nums", ".", "substring", "(", "pos", ",", "i", "+", "1", ")", ";", "long", "num", "=", "Long", ".", "parseLong", "(", "subStr", ")", ";", "if", "(", "pos", "=", "=", "0", ")", "{", "dfs", "(", "nums", ",", "i", "+", "1", ",", "target", ",", "num", ",", "num", ",", "result", ",", "buff", ".", "append", "(", "num", ")", ")", ";", "buff", ".", "delete", "(", "buff", ".", "length", "(", ")", "-", "subStr", ".", "length", "(", ")", ",", "buff", ".", "length", "(", ")", ")", ";", "continue", ";", "}", "dfs", "(", "nums", ",", "i", "+", "1", ",", "target", ",", "runningTotal", "+", "num", ",", "num", ",", "result", ",", "buff", ".", "append", "(", "\"", "<STR_LIT:+>", "\"", ")", ".", "append", "(", "subStr", ")", ")", ";", "buff", ".", "delete", "(", "buff", ".", "length", "(", ")", "-", "subStr", ".", "length", "(", ")", "-", "1", ",", "buff", ".", "length", "(", ")", ")", ";", "dfs", "(", "nums", ",", "i", "+", "1", ",", "target", ",", "runningTotal", "-", "num", ",", "-", "num", ",", "result", ",", "buff", ".", "append", "(", "\"", "<STR_LIT:->", "\"", ")", ".", "append", "(", "subStr", ")", ")", ";", "buff", ".", "delete", "(", "buff", ".", "length", "(", ")", "-", "subStr", ".", "length", "(", ")", "-", "1", ",", "buff", ".", "length", "(", ")", ")", ";", "dfs", "(", "nums", ",", "i", "+", "1", ",", "target", ",", "runningTotal", "+", "num", "*", "multiplicationVal", "-", "multiplicationVal", ",", "num", "*", "multiplicationVal", ",", "result", ",", "buff", ".", "append", "(", "\"", "<STR_LIT:*>", "\"", ")", ".", "append", "(", "subStr", ")", ")", ";", "buff", ".", "delete", "(", "buff", ".", "length", "(", ")", "-", "subStr", ".", "length", "(", ")", "-", "1", ",", "buff", ".", "length", "(", ")", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "OperatorAdditionForTarget", "p", "=", "new", "OperatorAdditionForTarget", "(", ")", ";", "List", "<", "String", ">", "result", "=", "p", ".", "addOperators", "(", "\"", "<STR_LIT>", "\"", ",", "-", "1", ")", ";", "result", ".", "stream", "(", ")", ".", "forEach", "(", "s", "-", ">", "System", ".", "out", ".", "println", "(", "s", ")", ")", ";", "}", "</s>"]
["<s>", "public", "List", "<", "String", ">", "removeInvalidParentheses", "(", "String", "s", ")", "{", "Set", "<", "String", ">", "res", "=", "new", "HashSet", "<", ">", "(", ")", ";", "int", "rmL", "=", "0", ",", "rmR", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "s", ".", "length", "(", ")", ";", "i", "+", "+", ")", "{", "if", "(", "s", ".", "charAt", "(", "i", ")", "=", "=", "<CHAR_LIT:(>", ")", "rmL", "+", "+", ";", "if", "(", "s", ".", "charAt", "(", "i", ")", "=", "=", "<CHAR_LIT:)>", ")", "{", "if", "(", "rmL", "!", "=", "0", ")", "rmL", "-", "-", ";", "else", "rmR", "+", "+", ";", "}", "}", "DFS", "(", "res", ",", "s", ",", "0", ",", "rmL", ",", "rmR", ",", "0", ",", "new", "StringBuilder", "(", ")", ")", ";", "return", "new", "ArrayList", "<", "String", ">", "(", "res", ")", ";", "}", "</s>"]
["<s>", "public", "void", "DFS", "(", "Set", "<", "String", ">", "res", ",", "String", "s", ",", "int", "i", ",", "int", "rmL", ",", "int", "rmR", ",", "int", "open", ",", "StringBuilder", "sb", ")", "{", "if", "(", "i", "=", "=", "s", ".", "length", "(", ")", "&", "&", "rmL", "=", "=", "0", "&", "&", "rmR", "=", "=", "0", "&", "&", "open", "=", "=", "0", ")", "{", "res", ".", "add", "(", "sb", ".", "toString", "(", ")", ")", ";", "return", ";", "}", "if", "(", "i", "=", "=", "s", ".", "length", "(", ")", "|", "|", "rmL", "<", "0", "|", "|", "rmR", "<", "0", "|", "|", "open", "<", "0", ")", "return", ";", "char", "c", "=", "s", ".", "charAt", "(", "i", ")", ";", "int", "len", "=", "sb", ".", "length", "(", ")", ";", "if", "(", "c", "=", "=", "<CHAR_LIT:(>", ")", "{", "DFS", "(", "res", ",", "s", ",", "i", "+", "1", ",", "rmL", "-", "1", ",", "rmR", ",", "open", ",", "sb", ")", ";", "DFS", "(", "res", ",", "s", ",", "i", "+", "1", ",", "rmL", ",", "rmR", ",", "open", "+", "1", ",", "sb", ".", "append", "(", "c", ")", ")", ";", "}", "else", "if", "(", "c", "=", "=", "<CHAR_LIT:)>", ")", "{", "DFS", "(", "res", ",", "s", ",", "i", "+", "1", ",", "rmL", ",", "rmR", "-", "1", ",", "open", ",", "sb", ")", ";", "DFS", "(", "res", ",", "s", ",", "i", "+", "1", ",", "rmL", ",", "rmR", ",", "open", "-", "1", ",", "sb", ".", "append", "(", "c", ")", ")", ";", "}", "else", "{", "DFS", "(", "res", ",", "s", ",", "i", "+", "1", ",", "rmL", ",", "rmR", ",", "open", ",", "sb", ".", "append", "(", "c", ")", ")", ";", "}", "sb", ".", "setLength", "(", "len", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "String", "s", "=", "\"", "<STR_LIT>", "\"", ";", "RemoveInvalidParenthesis", "rmp", "=", "new", "RemoveInvalidParenthesis", "(", ")", ";", "List", "<", "String", ">", "result", "=", "rmp", ".", "removeInvalidParentheses", "(", "s", ")", ";", "result", ".", "forEach", "(", "s1", "-", ">", "System", ".", "out", ".", "println", "(", "s1", ")", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "matchBracket", "(", "char", "str", "[", "]", ",", "int", "openCount", ",", "int", "pos", ")", "{", "if", "(", "str", ".", "length", "=", "=", "pos", ")", "{", "if", "(", "openCount", "=", "=", "0", ")", "{", "return", "true", ";", "}", "return", "false", ";", "}", "if", "(", "str", "[", "pos", "]", "=", "=", "<CHAR_LIT:(>", ")", "{", "openCount", "+", "+", ";", "}", "else", "{", "openCount", "-", "-", ";", "}", "if", "(", "openCount", "<", "0", ")", "{", "return", "false", ";", "}", "return", "matchBracket", "(", "str", ",", "openCount", ",", "pos", "+", "1", ")", ";", "}", "</s>"]
["<s>", "private", "void", "printArray", "(", "char", "result", "[", "]", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "result", ".", "length", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "result", "[", "i", "]", ")", ";", "}", "System", ".", "out", ".", "println", "(", ")", ";", "}", "</s>"]
["<s>", "public", "void", "bracketPermutation", "(", "char", "result", "[", "]", ",", "int", "n", ",", "int", "pos", ",", "int", "openCount", ",", "int", "closeCount", ")", "{", "if", "(", "pos", "=", "=", "<NUM_LIT:2>", "*", "n", ")", "{", "printArray", "(", "result", ")", ";", "return", ";", "}", "if", "(", "openCount", "<", "n", ")", "{", "result", "[", "pos", "]", "=", "<CHAR_LIT:(>", ";", "bracketPermutation", "(", "result", ",", "n", ",", "pos", "+", "1", ",", "openCount", "+", "1", ",", "closeCount", ")", ";", "}", "if", "(", "closeCount", "<", "openCount", ")", "{", "result", "[", "pos", "]", "=", "<CHAR_LIT:)>", ";", "bracketPermutation", "(", "result", ",", "n", ",", "pos", "+", "1", ",", "openCount", ",", "closeCount", "+", "1", ")", ";", "}", "}", "</s>"]
["<s>", "public", "boolean", "matchBracket", "(", "char", "[", "]", "brackets", ")", "{", "Deque", "<", "Character", ">", "stack", "=", "new", "LinkedList", "<", "Character", ">", "(", ")", ";", "for", "(", "Character", "ch", ":", "brackets", ")", "{", "char", "checkChar", "=", "getOpeningCharacter", "(", "ch", ")", ";", "if", "(", "checkChar", "=", "=", "0", ")", "{", "stack", ".", "addFirst", "(", "ch", ")", ";", "}", "else", "{", "if", "(", "stack", ".", "size", "(", ")", "=", "=", "0", "|", "|", "stack", ".", "peek", "(", ")", "!", "=", "checkChar", ")", "{", "return", "false", ";", "}", "else", "{", "stack", ".", "pop", "(", ")", ";", "}", "}", "}", "if", "(", "stack", ".", "size", "(", ")", ">", "0", ")", "{", "return", "false", ";", "}", "return", "true", ";", "}", "</s>"]
["<s>", "private", "Character", "getOpeningCharacter", "(", "char", "ch", ")", "{", "switch", "(", "ch", ")", "{", "case", "<CHAR_LIT:)>", ":", "return", "<CHAR_LIT:(>", ";", "case", "<CHAR_LIT:]>", ":", "return", "<CHAR_LIT:[>", ";", "case", "<CHAR_LIT:}>", ":", "return", "<CHAR_LIT>", ";", "default", ":", "return", "0", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "Bracketology", "matcher", "=", "new", "Bracketology", "(", ")", ";", "int", "n", "=", "<NUM_LIT:4>", ";", "char", "result", "[", "]", "=", "new", "char", "[", "n", "*", "<NUM_LIT:2>", "]", ";", "System", ".", "out", ".", "println", "(", "matcher", ".", "matchBracket", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ")", ";", "}", "</s>"]
["<s>", "private", "void", "printArray", "(", "char", "[", "]", "str", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "str", ".", "length", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "str", "[", "i", "]", ")", ";", "}", "System", ".", "out", ".", "println", "(", ")", ";", "}", "</s>"]
["<s>", "public", "void", "interleaving", "(", "char", "[", "]", "str1", ",", "char", "[", "]", "str2", ",", "int", "len1", ",", "int", "len2", ",", "int", "current", ",", "char", "[", "]", "result", ")", "{", "if", "(", "current", "=", "=", "result", ".", "length", ")", "{", "printArray", "(", "result", ")", ";", "return", ";", "}", "if", "(", "len1", "<", "str1", ".", "length", ")", "{", "result", "[", "current", "]", "=", "str1", "[", "len1", "]", ";", "interleaving", "(", "str1", ",", "str2", ",", "len1", "+", "1", ",", "len2", ",", "current", "+", "1", ",", "result", ")", ";", "}", "if", "(", "len2", "<", "str2", ".", "length", ")", "{", "result", "[", "current", "]", "=", "str2", "[", "len2", "]", ";", "interleaving", "(", "str1", ",", "str2", ",", "len1", ",", "len2", "+", "1", ",", "current", "+", "1", ",", "result", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "StringInterleaving", "si", "=", "new", "StringInterleaving", "(", ")", ";", "String", "str1", "=", "\"", "<STR_LIT>", "\"", ";", "String", "str2", "=", "\"", "<STR_LIT>", "\"", ";", "char", "[", "]", "result", "=", "new", "char", "[", "str1", ".", "length", "(", ")", "+", "str2", ".", "length", "(", ")", "]", ";", "si", ".", "interleaving", "(", "str1", ".", "toCharArray", "(", ")", ",", "str2", ".", "toCharArray", "(", ")", ",", "0", ",", "0", ",", "0", ",", "result", ")", ";", "}", "</s>"]
["<s>", "public", "void", "combination", "(", "int", "input", "[", "]", ",", "int", "result", "[", "]", ",", "int", "k", ",", "int", "pos", ",", "int", "r", ")", "{", "if", "(", "pos", "=", "=", "input", ".", "length", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "r", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "result", "[", "i", "]", "+", "\"", "\"", ")", ";", "}", "System", ".", "out", ".", "println", "(", ")", ";", "return", ";", "}", "for", "(", "int", "i", "=", "pos", ";", "i", "<", "pos", "+", "k", "&", "&", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "result", "[", "r", "]", "=", "formNumber", "(", "input", ",", "pos", ",", "i", ")", ";", "combination", "(", "input", ",", "result", ",", "k", ",", "i", "+", "1", ",", "r", "+", "1", ")", ";", "}", "}", "</s>"]
["<s>", "private", "int", "formNumber", "(", "int", "input", "[", "]", ",", "int", "start", ",", "int", "end", ")", "{", "int", "num", "=", "0", ";", "for", "(", "int", "i", "=", "start", ";", "i", "<", "=", "end", ";", "i", "+", "+", ")", "{", "num", "=", "num", "*", "<NUM_LIT:10>", "+", "input", "[", "i", "]", ";", "}", "return", "num", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "AllAdjacentCombination", "adc", "=", "new", "AllAdjacentCombination", "(", ")", ";", "int", "input", "[", "]", "=", "{", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", "}", ";", "int", "result", "[", "]", "=", "new", "int", "[", "input", ".", "length", "]", ";", "adc", ".", "combination", "(", "input", ",", "result", ",", "<NUM_LIT:3>", ",", "0", ",", "0", ")", ";", "}", "</s>"]
["<s>", "public", "int", "maxHistogram", "(", "int", "input", "[", "]", ")", "{", "Deque", "<", "Integer", ">", "stack", "=", "new", "LinkedList", "<", "Integer", ">", "(", ")", ";", "int", "maxArea", "=", "0", ";", "int", "area", "=", "0", ";", "int", "i", ";", "for", "(", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", ")", "{", "if", "(", "stack", ".", "isEmpty", "(", ")", "|", "|", "input", "[", "stack", ".", "peekFirst", "(", ")", "]", "<", "=", "input", "[", "i", "]", ")", "{", "stack", ".", "offerFirst", "(", "i", "+", "+", ")", ";", "}", "else", "{", "int", "top", "=", "stack", ".", "pollFirst", "(", ")", ";", "if", "(", "stack", ".", "isEmpty", "(", ")", ")", "{", "area", "=", "input", "[", "top", "]", "*", "i", ";", "}", "else", "{", "area", "=", "input", "[", "top", "]", "*", "(", "i", "-", "stack", ".", "peekFirst", "(", ")", "-", "1", ")", ";", "}", "if", "(", "area", ">", "maxArea", ")", "{", "maxArea", "=", "area", ";", "}", "}", "}", "while", "(", "!", "stack", ".", "isEmpty", "(", ")", ")", "{", "int", "top", "=", "stack", ".", "pollFirst", "(", ")", ";", "if", "(", "stack", ".", "isEmpty", "(", ")", ")", "{", "area", "=", "input", "[", "top", "]", "*", "i", ";", "}", "else", "{", "area", "=", "input", "[", "top", "]", "*", "(", "i", "-", "stack", ".", "peekFirst", "(", ")", "-", "1", ")", ";", "}", "if", "(", "area", ">", "maxArea", ")", "{", "maxArea", "=", "area", ";", "}", "}", "return", "maxArea", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "MaximumHistogram", "mh", "=", "new", "MaximumHistogram", "(", ")", ";", "int", "input", "[", "]", "=", "{", "<NUM_LIT:2>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:6>", ",", "1", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:2>", "}", ";", "int", "maxArea", "=", "mh", ".", "maxHistogram", "(", "input", ")", ";", "assert", "maxArea", "=", "=", "<NUM_LIT:12>", ";", "}", "</s>"]
["<s>", "public", "String", "moveFolder", "(", "String", "absCurrentFolder", ",", "String", "relativeNewFolder", ")", "{", "Deque", "<", "String", ">", "stack", "=", "new", "LinkedList", "<", "String", ">", "(", ")", ";", "StringTokenizer", "tokenizer", "=", "new", "StringTokenizer", "(", "absCurrentFolder", ",", "\"", "<STR_LIT:/>", "\"", ")", ";", "while", "(", "tokenizer", ".", "hasMoreTokens", "(", ")", ")", "{", "stack", ".", "offerFirst", "(", "tokenizer", ".", "nextToken", "(", ")", ")", ";", "}", "tokenizer", "=", "new", "StringTokenizer", "(", "relativeNewFolder", ",", "\"", "<STR_LIT:/>", "\"", ")", ";", "while", "(", "tokenizer", ".", "hasMoreTokens", "(", ")", ")", "{", "String", "token", "=", "tokenizer", ".", "nextToken", "(", ")", ";", "if", "(", "\"", "<STR_LIT>", "\"", ".", "equals", "(", "token", ")", ")", "{", "stack", ".", "pollFirst", "(", ")", ";", "}", "else", "if", "(", "\"", "<STR_LIT:.>", "\"", ".", "equals", "(", "token", ")", ")", "{", "}", "else", "{", "stack", ".", "offerFirst", "(", "token", ")", ";", "}", "}", "StringBuffer", "buffer", "=", "new", "StringBuffer", "(", ")", ";", "while", "(", "stack", ".", "size", "(", ")", ">", "0", ")", "{", "buffer", ".", "append", "(", "stack", ".", "pollLast", "(", ")", ")", ".", "append", "(", "\"", "<STR_LIT:/>", "\"", ")", ";", "}", "return", "buffer", ".", "toString", "(", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "String", "absCurrentFolder", "=", "\"", "<STR_LIT>", "\"", ";", "String", "relativeNewFolder", "=", "\"", "<STR_LIT>", "\"", ";", "MoveFromCurrentToNewFolder", "mfc", "=", "new", "MoveFromCurrentToNewFolder", "(", ")", ";", "System", ".", "out", ".", "println", "(", "mfc", ".", "moveFolder", "(", "absCurrentFolder", ",", "relativeNewFolder", ")", ")", ";", "}", "</s>"]
["<s>", "public", "CircularQueue", "(", "int", "size", ")", "{", "this", ".", "QUEUE_LENGTH", "=", "size", ";", "data", "=", "(", "T", "[", "]", ")", "new", "Object", "[", "QUEUE_LENGTH", "]", ";", "}", "</s>"]
["<s>", "public", "void", "offer", "(", "T", "t", ")", "{", "if", "(", "top", "=", "=", "-", "1", ")", "{", "data", "[", "0", "]", "=", "t", ";", "top", "=", "0", ";", "end", "=", "0", ";", "}", "else", "if", "(", "top", "=", "=", "(", "end", "+", "1", ")", "%", "QUEUE_LENGTH", ")", "{", "throw", "new", "IllegalArgumentException", "(", ")", ";", "}", "else", "{", "end", "=", "(", "end", "+", "1", ")", "%", "QUEUE_LENGTH", ";", "data", "[", "end", "]", "=", "t", ";", "}", "}", "</s>"]
["<s>", "public", "T", "top", "(", ")", "{", "if", "(", "top", "=", "=", "-", "1", ")", "{", "throw", "new", "IllegalArgumentException", "(", ")", ";", "}", "else", "{", "return", "data", "[", "top", "]", ";", "}", "}", "</s>"]
["<s>", "public", "T", "poll", "(", ")", "{", "if", "(", "top", "=", "=", "-", "1", ")", "{", "throw", "new", "IllegalArgumentException", "(", ")", ";", "}", "else", "if", "(", "top", "=", "=", "end", ")", "{", "T", "t", "=", "data", "[", "top", "]", ";", "top", "=", "-", "1", ";", "end", "=", "-", "1", ";", "return", "t", ";", "}", "else", "{", "T", "t", "=", "data", "[", "top", "]", ";", "top", "=", "(", "top", "+", "1", ")", "%", "QUEUE_LENGTH", ";", "return", "t", ";", "}", "}", "</s>"]
["<s>", "public", "boolean", "isEmpty", "(", ")", "{", "if", "(", "top", "=", "=", "-", "1", ")", "{", "return", "true", ";", "}", "return", "false", ";", "}", "</s>"]
["<s>", "public", "boolean", "isFull", "(", ")", "{", "if", "(", "top", "=", "=", "(", "end", "+", "1", ")", "%", "QUEUE_LENGTH", ")", "{", "return", "true", ";", "}", "return", "false", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "CircularQueue", "<", "Integer", ">", "circularQueue", "=", "new", "CircularQueue", "<", "Integer", ">", "(", "<NUM_LIT:5>", ")", ";", "circularQueue", ".", "offer", "(", "1", ")", ";", "circularQueue", ".", "offer", "(", "<NUM_LIT:2>", ")", ";", "circularQueue", ".", "offer", "(", "<NUM_LIT:3>", ")", ";", "System", ".", "out", ".", "println", "(", "circularQueue", ".", "poll", "(", ")", ")", ";", "circularQueue", ".", "offer", "(", "<NUM_LIT:4>", ")", ";", "circularQueue", ".", "offer", "(", "<NUM_LIT:5>", ")", ";", "System", ".", "out", ".", "print", "(", "circularQueue", ".", "isFull", "(", ")", ")", ";", "circularQueue", ".", "offer", "(", "<NUM_LIT:6>", ")", ";", "System", ".", "out", ".", "print", "(", "circularQueue", ".", "isFull", "(", ")", ")", ";", "while", "(", "!", "circularQueue", ".", "isEmpty", "(", ")", ")", "{", "System", ".", "out", ".", "println", "(", "circularQueue", ".", "poll", "(", ")", ")", ";", "}", "}", "</s>"]
["<s>", "public", "String", "removeDuplicateLetters", "(", "String", "s", ")", "{", "Deque", "<", "Character", ">", "stack", "=", "new", "LinkedList", "<", ">", "(", ")", ";", "Map", "<", "Character", ",", "Integer", ">", "count", "=", "new", "HashMap", "<", ">", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "s", ".", "length", "(", ")", ";", "i", "+", "+", ")", "{", "count", ".", "compute", "(", "s", ".", "charAt", "(", "i", ")", ",", "(", "key", ",", "val", ")", "-", ">", "{", "if", "(", "val", "=", "=", "null", ")", "{", "return", "1", ";", "}", "else", "{", "return", "val", "+", "1", ";", "}", "}", ")", ";", "}", "Set", "<", "Character", ">", "visited", "=", "new", "HashSet", "<", ">", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "s", ".", "length", "(", ")", ";", "i", "+", "+", ")", "{", "char", "ch", "=", "s", ".", "charAt", "(", "i", ")", ";", "count", ".", "put", "(", "ch", ",", "count", ".", "get", "(", "ch", ")", "-", "1", ")", ";", "if", "(", "visited", ".", "contains", "(", "ch", ")", ")", "{", "continue", ";", "}", "while", "(", "!", "stack", ".", "isEmpty", "(", ")", "&", "&", "stack", ".", "peekFirst", "(", ")", ">", "ch", "&", "&", "count", ".", "get", "(", "stack", ".", "peekFirst", "(", ")", ")", ">", "0", ")", "{", "visited", ".", "remove", "(", "stack", ".", "peekFirst", "(", ")", ")", ";", "stack", ".", "pollFirst", "(", ")", ";", "}", "stack", ".", "offerFirst", "(", "ch", ")", ";", "visited", ".", "add", "(", "ch", ")", ";", "}", "StringBuffer", "buff", "=", "new", "StringBuffer", "(", ")", ";", "while", "(", "!", "stack", ".", "isEmpty", "(", ")", ")", "{", "buff", ".", "append", "(", "stack", ".", "pollLast", "(", ")", ")", ";", "}", "return", "buff", ".", "toString", "(", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "RemoveDuplicateMaintainingOrder", "rm", "=", "new", "RemoveDuplicateMaintainingOrder", "(", ")", ";", "System", ".", "out", ".", "println", "(", "rm", ".", "removeDuplicateLetters", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "remove", "(", "char", "input", "[", "]", ")", "{", "if", "(", "input", "=", "=", "null", ")", "{", "return", "0", ";", "}", "Deque", "<", "Integer", ">", "dq", "=", "new", "LinkedList", "<", "Integer", ">", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "input", "[", "i", "]", "!", "=", "<CHAR_LIT:(>", "&", "&", "input", "[", "i", "]", "!", "=", "<CHAR_LIT:)>", ")", "{", "continue", ";", "}", "if", "(", "input", "[", "i", "]", "=", "=", "<CHAR_LIT:(>", ")", "{", "dq", ".", "addFirst", "(", "i", ")", ";", "}", "else", "if", "(", "input", "[", "i", "]", "=", "=", "<CHAR_LIT:)>", ")", "{", "if", "(", "!", "dq", ".", "isEmpty", "(", ")", "&", "&", "input", "[", "dq", ".", "peekFirst", "(", ")", "]", "=", "=", "<CHAR_LIT:(>", ")", "{", "dq", ".", "pollFirst", "(", ")", ";", "}", "else", "{", "dq", ".", "addFirst", "(", "i", ")", ";", "}", "}", "}", "int", "index", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "!", "dq", ".", "isEmpty", "(", ")", "&", "&", "i", "=", "=", "dq", ".", "peekLast", "(", ")", ")", "{", "dq", ".", "pollLast", "(", ")", ";", "}", "else", "{", "input", "[", "index", "+", "+", "]", "=", "input", "[", "i", "]", ";", "}", "}", "return", "index", ";", "}", "</s>"]
["<s>", "public", "int", "removeWithoutExtraSpace", "(", "char", "input", "[", "]", ")", "{", "int", "openBrackets", "=", "0", ";", "int", "closeBrackets", "=", "0", ";", "int", "index", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "input", "[", "i", "]", "!", "=", "<CHAR_LIT:(>", "&", "&", "input", "[", "i", "]", "!", "=", "<CHAR_LIT:)>", ")", "{", "input", "[", "index", "+", "+", "]", "=", "input", "[", "i", "]", ";", "continue", ";", "}", "if", "(", "input", "[", "i", "]", "=", "=", "<CHAR_LIT:(>", ")", "{", "openBrackets", "+", "+", ";", "input", "[", "index", "+", "+", "]", "=", "input", "[", "i", "]", ";", "}", "else", "{", "if", "(", "closeBrackets", "<", "openBrackets", ")", "{", "input", "[", "index", "+", "+", "]", "=", "input", "[", "i", "]", ";", "closeBrackets", "+", "+", ";", "}", "}", "}", "if", "(", "openBrackets", ">", "closeBrackets", ")", "{", "int", "newIndex", "=", "0", ";", "int", "seenOpenBracket", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "index", ";", "i", "+", "+", ")", "{", "if", "(", "input", "[", "i", "]", "=", "=", "<CHAR_LIT:(>", ")", "{", "seenOpenBracket", "+", "+", ";", "}", "if", "(", "input", "[", "i", "]", "!", "=", "<CHAR_LIT:(>", "|", "|", "seenOpenBracket", "<", "=", "closeBrackets", ")", "{", "input", "[", "newIndex", "+", "+", "]", "=", "input", "[", "i", "]", ";", "}", "}", "index", "=", "newIndex", ";", "}", "return", "index", ";", "}", "</s>"]
["<s>", "public", "static", "void", "printArray", "(", "char", "input", "[", "]", ",", "int", "size", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "size", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "input", "[", "i", "]", "+", "\"", "\"", ")", ";", "}", "System", ".", "out", ".", "println", "(", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "RemoveExtraBrackets", "reb", "=", "new", "RemoveExtraBrackets", "(", ")", ";", "char", "input1", "[", "]", "=", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ";", "int", "pos", "=", "reb", ".", "remove", "(", "input1", ")", ";", "printArray", "(", "input1", ",", "pos", ")", ";", "char", "input1_1", "[", "]", "=", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ";", "pos", "=", "reb", ".", "removeWithoutExtraSpace", "(", "input1_1", ")", ";", "printArray", "(", "input1_1", ",", "pos", ")", ";", "char", "input2", "[", "]", "=", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ";", "pos", "=", "reb", ".", "remove", "(", "input2", ")", ";", "printArray", "(", "input2", ",", "pos", ")", ";", "char", "input2_1", "[", "]", "=", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ";", "pos", "=", "reb", ".", "removeWithoutExtraSpace", "(", "input2_1", ")", ";", "printArray", "(", "input2_1", ",", "pos", ")", ";", "char", "input3", "[", "]", "=", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ";", "pos", "=", "reb", ".", "remove", "(", "input3", ")", ";", "printArray", "(", "input3", ",", "pos", ")", ";", "char", "input3_1", "[", "]", "=", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ";", "pos", "=", "reb", ".", "removeWithoutExtraSpace", "(", "input3_1", ")", ";", "printArray", "(", "input3_1", ",", "pos", ")", ";", "char", "input4", "[", "]", "=", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ";", "pos", "=", "reb", ".", "remove", "(", "input4", ")", ";", "printArray", "(", "input4", ",", "pos", ")", ";", "char", "input4_1", "[", "]", "=", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ";", "pos", "=", "reb", ".", "removeWithoutExtraSpace", "(", "input4_1", ")", ";", "printArray", "(", "input4_1", ",", "pos", ")", ";", "char", "input5", "[", "]", "=", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ";", "pos", "=", "reb", ".", "remove", "(", "input5", ")", ";", "printArray", "(", "input5", ",", "pos", ")", ";", "char", "input5_1", "[", "]", "=", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ";", "pos", "=", "reb", ".", "removeWithoutExtraSpace", "(", "input5_1", ")", ";", "printArray", "(", "input5_1", ",", "pos", ")", ";", "char", "input6", "[", "]", "=", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ";", "pos", "=", "reb", ".", "remove", "(", "input6", ")", ";", "printArray", "(", "input6", ",", "pos", ")", ";", "char", "input6_1", "[", "]", "=", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ";", "pos", "=", "reb", ".", "removeWithoutExtraSpace", "(", "input6_1", ")", ";", "printArray", "(", "input6_1", ",", "pos", ")", ";", "}", "</s>"]
["<s>", "public", "void", "add", "(", "long", "time", ")", "{", "Node", "last", "=", "queue", ".", "peekLast", "(", ")", ";", "if", "(", "last", "!", "=", "null", ")", "{", "if", "(", "time", "-", "last", ".", "time", "<", "BOUND", ")", "{", "last", ".", "count", "+", "+", ";", "count", "+", "+", ";", "return", ";", "}", "else", "if", "(", "time", "-", "last", ".", "time", ">", "MAX_BOUND", ")", "{", "queue", ".", "clear", "(", ")", ";", "Node", "n", "=", "new", "Node", "(", ")", ";", "n", ".", "time", "=", "time", "/", "BOUND", "*", "BOUND", ";", "n", ".", "count", "=", "1", ";", "queue", ".", "add", "(", "n", ")", ";", "count", "+", "+", ";", "return", ";", "}", "}", "while", "(", "queue", ".", "size", "(", ")", ">", "0", ")", "{", "Node", "t1", "=", "queue", ".", "peekFirst", "(", ")", ";", "if", "(", "time", "-", "t1", ".", "time", ">", "MAX_BOUND", ")", "{", "count", "=", "count", "-", "t1", ".", "count", ";", "queue", ".", "pollFirst", "(", ")", ";", "}", "else", "{", "break", ";", "}", "}", "Node", "n", "=", "new", "Node", "(", ")", ";", "n", ".", "time", "=", "time", "/", "BOUND", "*", "BOUND", ";", "n", ".", "count", "=", "1", ";", "queue", ".", "add", "(", "n", ")", ";", "count", "+", "+", ";", "}", "</s>"]
["<s>", "public", "int", "getCount", "(", "int", "time", ")", "{", "while", "(", "queue", ".", "size", "(", ")", ">", "0", ")", "{", "Node", "t1", "=", "queue", ".", "peekFirst", "(", ")", ";", "if", "(", "time", "-", "t1", ".", "time", ">", "MAX_BOUND", ")", "{", "count", "=", "count", "-", "t1", ".", "count", ";", "queue", ".", "pollFirst", "(", ")", ";", "}", "else", "{", "break", ";", "}", "}", "return", "count", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "RealTimeCounterUsingCircularQueue", "src", "=", "new", "RealTimeCounterUsingCircularQueue", "(", ")", ";", "src", ".", "add", "(", "<NUM_LIT:10>", ")", ";", "src", ".", "add", "(", "<NUM_LIT>", ")", ";", "src", ".", "add", "(", "<NUM_LIT>", ")", ";", "src", ".", "add", "(", "<NUM_LIT>", ")", ";", "src", ".", "add", "(", "<NUM_LIT>", ")", ";", "src", ".", "add", "(", "<NUM_LIT>", ")", ";", "src", ".", "add", "(", "<NUM_LIT>", ")", ";", "src", ".", "add", "(", "<NUM_LIT>", ")", ";", "src", ".", "add", "(", "<NUM_LIT>", ")", ";", "src", ".", "add", "(", "<NUM_LIT>", ")", ";", "src", ".", "add", "(", "<NUM_LIT>", ")", ";", "System", ".", "out", ".", "print", "(", "src", ".", "getCount", "(", "<NUM_LIT>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "static", "int", "[", "]", "stockSpan", "(", "int", "[", "]", "prices", ")", "{", "Deque", "<", "Integer", ">", "stack", "=", "new", "ArrayDeque", "<", ">", "(", ")", ";", "int", "[", "]", "stockSpan", "=", "new", "int", "[", "prices", ".", "length", "]", ";", "stockSpan", "[", "0", "]", "=", "1", ";", "stack", ".", "push", "(", "0", ")", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "prices", ".", "length", ";", "i", "+", "+", ")", "{", "Integer", "j", "=", "stack", ".", "peek", "(", ")", ";", "while", "(", "j", "!", "=", "null", "&", "&", "prices", "[", "j", "]", "<", "prices", "[", "i", "]", ")", "{", "stack", ".", "pop", "(", ")", ";", "j", "=", "stack", ".", "peek", "(", ")", ";", "}", "if", "(", "j", "=", "=", "null", ")", "{", "stockSpan", "[", "i", "]", "=", "i", "+", "1", ";", "}", "else", "{", "stockSpan", "[", "i", "]", "=", "i", "-", "stack", ".", "peek", "(", ")", ";", "}", "stack", ".", "push", "(", "i", ")", ";", "}", "return", "stockSpan", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "[", "]", "args", ")", "{", "int", "[", "]", "p", "=", "{", "<NUM_LIT:100>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", "}", ";", "int", "[", "]", "q", "=", "stockSpan", "(", "p", ")", ";", "for", "(", "int", "aQ", ":", "q", ")", "{", "System", ".", "out", ".", "println", "(", "aQ", ")", ";", "}", "}", "</s>"]
["<s>", "public", "void", "reverse", "(", "Deque", "<", "Integer", ">", "stack", ")", "{", "if", "(", "stack", ".", "size", "(", ")", "=", "=", "0", ")", "{", "return", ";", "}", "int", "temp", "=", "stack", ".", "pollFirst", "(", ")", ";", "reverse", "(", "stack", ")", ";", "pushAtBottom", "(", "stack", ",", "temp", ")", ";", "}", "</s>"]
["<s>", "private", "void", "pushAtBottom", "(", "Deque", "<", "Integer", ">", "stack", ",", "int", "data", ")", "{", "if", "(", "stack", ".", "size", "(", ")", "=", "=", "0", ")", "{", "stack", ".", "offerFirst", "(", "data", ")", ";", "return", ";", "}", "int", "temp", "=", "stack", ".", "pollFirst", "(", ")", ";", "pushAtBottom", "(", "stack", ",", "data", ")", ";", "stack", ".", "offerFirst", "(", "temp", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "Deque", "<", "Integer", ">", "stack", "=", "new", "LinkedList", "<", "Integer", ">", "(", ")", ";", "stack", ".", "push", "(", "1", ")", ";", "stack", ".", "push", "(", "<NUM_LIT:2>", ")", ";", "stack", ".", "push", "(", "<NUM_LIT:3>", ")", ";", "stack", ".", "push", "(", "<NUM_LIT:4>", ")", ";", "stack", ".", "push", "(", "<NUM_LIT:5>", ")", ";", "stack", ".", "push", "(", "<NUM_LIT:6>", ")", ";", "Iterator", "<", "Integer", ">", "itr", "=", "stack", ".", "iterator", "(", ")", ";", "while", "(", "itr", ".", "hasNext", "(", ")", ")", "{", "System", ".", "out", ".", "println", "(", "itr", ".", "next", "(", ")", ")", ";", "}", "ReverseStackUsingRecursion", "rsu", "=", "new", "ReverseStackUsingRecursion", "(", ")", ";", "rsu", ".", "reverse", "(", "stack", ")", ";", "itr", "=", "stack", ".", "iterator", "(", ")", ";", "while", "(", "itr", ".", "hasNext", "(", ")", ")", "{", "System", ".", "out", ".", "println", "(", "itr", ".", "next", "(", ")", ")", ";", "}", "}", "</s>"]
["<s>", "public", "void", "add", "(", "long", "currentTimeInMills", ")", "{", "while", "(", "secQueue", ".", "size", "(", ")", ">", "0", "&", "&", "currentTimeInMills", "-", "<NUM_LIT:1000>", ">", "secQueue", ".", "peek", "(", ")", ")", "{", "secCount", "-", "-", ";", "secQueue", ".", "poll", "(", ")", ";", "}", "secCount", "+", "+", ";", "secQueue", ".", "offer", "(", "currentTimeInMills", ")", ";", "}", "</s>"]
["<s>", "public", "long", "getCallsInLastSec", "(", "long", "currentTimeInMills", ")", "{", "while", "(", "secQueue", ".", "size", "(", ")", ">", "0", "&", "&", "currentTimeInMills", "-", "<NUM_LIT:1000>", ">", "secQueue", ".", "peek", "(", ")", ")", "{", "secCount", "-", "-", ";", "secQueue", ".", "poll", "(", ")", ";", "}", "return", "secCount", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "RealTimeCounter", "rtc", "=", "new", "RealTimeCounter", "(", ")", ";", "rtc", ".", "add", "(", "<NUM_LIT:100>", ")", ";", "rtc", ".", "add", "(", "<NUM_LIT>", ")", ";", "rtc", ".", "add", "(", "<NUM_LIT>", ")", ";", "System", ".", "out", ".", "println", "(", "rtc", ".", "getCallsInLastSec", "(", "<NUM_LIT>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "rtc", ".", "getCallsInLastSec", "(", "<NUM_LIT>", ")", ")", ";", "rtc", ".", "add", "(", "<NUM_LIT>", ")", ";", "System", ".", "out", ".", "println", "(", "rtc", ".", "getCallsInLastSec", "(", "<NUM_LIT>", ")", ")", ";", "rtc", ".", "add", "(", "<NUM_LIT>", ")", ";", "System", ".", "out", ".", "println", "(", "rtc", ".", "getCallsInLastSec", "(", "<NUM_LIT>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "search", "(", "int", "arr", "[", "]", ",", "int", "search", ")", "{", "int", "low", "=", "0", ";", "int", "high", "=", "arr", ".", "length", "-", "1", ";", "while", "(", "low", "<", "=", "high", ")", "{", "int", "mid", "=", "(", "low", "+", "high", ")", "/", "<NUM_LIT:2>", ";", "if", "(", "arr", "[", "mid", "]", "=", "=", "search", ")", "{", "return", "mid", ";", "}", "if", "(", "arr", "[", "mid", "]", "<", "arr", "[", "high", "]", ")", "{", "if", "(", "arr", "[", "mid", "]", "<", "search", "&", "&", "search", "<", "=", "arr", "[", "high", "]", ")", "{", "low", "=", "mid", "+", "1", ";", "}", "else", "{", "high", "=", "mid", "-", "1", ";", "}", "}", "else", "{", "if", "(", "search", ">", "=", "arr", "[", "low", "]", "&", "&", "search", "<", "arr", "[", "mid", "]", ")", "{", "high", "=", "mid", "-", "1", ";", "}", "else", "{", "low", "=", "mid", "+", "1", ";", "}", "}", "}", "return", "-", "1", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "SortedAndRotatedArraySearch", "ras", "=", "new", "SortedAndRotatedArraySearch", "(", ")", ";", "int", "arr1", "[", "]", "=", "{", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT>", "}", ";", "System", ".", "out", ".", "print", "(", "ras", ".", "search", "(", "arr1", ",", "1", ")", ")", ";", "System", ".", "out", ".", "print", "(", "ras", ".", "search", "(", "arr1", ",", "<NUM_LIT:5>", ")", ")", ";", "System", ".", "out", ".", "print", "(", "ras", ".", "search", "(", "arr1", ",", "<NUM_LIT>", ")", ")", ";", "System", ".", "out", ".", "println", "(", ")", ";", "int", "arr2", "[", "]", "=", "{", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:15>", "}", ";", "System", ".", "out", ".", "print", "(", "ras", ".", "search", "(", "arr2", ",", "1", ")", ")", ";", "System", ".", "out", ".", "print", "(", "ras", ".", "search", "(", "arr2", ",", "<NUM_LIT:5>", ")", ")", ";", "System", ".", "out", ".", "print", "(", "ras", ".", "search", "(", "arr2", ",", "<NUM_LIT:10>", ")", ")", ";", "System", ".", "out", ".", "print", "(", "ras", ".", "search", "(", "arr2", ",", "<NUM_LIT>", ")", ")", ";", "System", ".", "out", ".", "println", "(", ")", ";", "int", "arr3", "[", "]", "=", "{", "<NUM_LIT:7>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:15>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", "}", ";", "System", ".", "out", ".", "print", "(", "ras", ".", "search", "(", "arr3", ",", "1", ")", ")", ";", "System", ".", "out", ".", "print", "(", "ras", ".", "search", "(", "arr3", ",", "<NUM_LIT:5>", ")", ")", ";", "System", ".", "out", ".", "print", "(", "ras", ".", "search", "(", "arr3", ",", "<NUM_LIT:10>", ")", ")", ";", "System", ".", "out", ".", "print", "(", "ras", ".", "search", "(", "arr3", ",", "<NUM_LIT:7>", ")", ")", ";", "System", ".", "out", ".", "print", "(", "ras", ".", "search", "(", "arr3", ",", "<NUM_LIT:6>", ")", ")", ";", "System", ".", "out", ".", "print", "(", "ras", ".", "search", "(", "arr3", ",", "<NUM_LIT:16>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "countPairs", "(", "int", "X", "[", "]", ",", "int", "Y", "[", "]", ")", "{", "Map", "<", "Integer", ",", "Integer", ">", "hardCoded", "=", "new", "HashMap", "<", "Integer", ",", "Integer", ">", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "Y", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "Y", "[", "i", "]", "<", "<NUM_LIT:4>", ")", "{", "Integer", "count", "=", "hardCoded", ".", "get", "(", "Y", "[", "i", "]", ")", ";", "if", "(", "count", "!", "=", "null", ")", "{", "hardCoded", ".", "put", "(", "Y", "[", "i", "]", ",", "count", "+", "+", ")", ";", "}", "else", "{", "hardCoded", ".", "put", "(", "Y", "[", "i", "]", ",", "1", ")", ";", "}", "}", "}", "Arrays", ".", "sort", "(", "Y", ")", ";", "int", "countPairs", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "X", ".", "length", ";", "i", "+", "+", ")", "{", "countPairs", "+", "=", "count", "(", "X", "[", "i", "]", ",", "Y", ",", "hardCoded", ")", ";", "}", "return", "countPairs", ";", "}", "</s>"]
["<s>", "private", "int", "count", "(", "int", "x", ",", "int", "Y", "[", "]", ",", "Map", "<", "Integer", ",", "Integer", ">", "hardCount", ")", "{", "if", "(", "x", "=", "=", "0", ")", "{", "return", "0", ";", "}", "if", "(", "x", "=", "=", "1", ")", "{", "return", "upperBound", "(", "0", ",", "Y", ")", ";", "}", "int", "result", "=", "Y", ".", "length", "-", "upperBound", "(", "x", ",", "Y", ")", ";", "result", "+", "=", "(", "hardCount", ".", "containsKey", "(", "1", ")", "?", "hardCount", ".", "get", "(", "1", ")", ":", "0", ")", "+", "(", "hardCount", ".", "containsKey", "(", "0", ")", "?", "hardCount", ".", "get", "(", "0", ")", ":", "0", ")", ";", "if", "(", "x", "=", "=", "<NUM_LIT:2>", ")", "{", "result", "-", "=", "(", "hardCount", ".", "containsKey", "(", "<NUM_LIT:3>", ")", "?", "hardCount", ".", "get", "(", "<NUM_LIT:3>", ")", ":", "0", ")", ";", "}", "if", "(", "x", "=", "=", "<NUM_LIT:3>", ")", "{", "result", "+", "=", "(", "hardCount", ".", "containsKey", "(", "<NUM_LIT:2>", ")", "?", "hardCount", ".", "get", "(", "<NUM_LIT:2>", ")", ":", "0", ")", ";", "}", "return", "result", ";", "}", "</s>"]
["<s>", "private", "int", "upperBound", "(", "int", "x", ",", "int", "arr", "[", "]", ")", "{", "int", "low", "=", "0", ";", "int", "high", "=", "arr", ".", "length", "-", "1", ";", "while", "(", "low", "<", "=", "high", ")", "{", "int", "mid", "=", "(", "low", "+", "high", ")", "/", "<NUM_LIT:2>", ";", "if", "(", "arr", "[", "mid", "]", ">", "x", "&", "&", "(", "mid", "-", "1", "<", "0", "|", "|", "arr", "[", "mid", "-", "1", "]", "<", "=", "x", ")", ")", "{", "return", "mid", ";", "}", "else", "if", "(", "arr", "[", "mid", "]", ">", "x", ")", "{", "high", "=", "mid", "-", "1", ";", "}", "else", "{", "low", "=", "mid", "+", "1", ";", "}", "}", "return", "-", "1", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "NumberOfPairWithXPowerYGreaterThanYPowerX", "nop", "=", "new", "NumberOfPairWithXPowerYGreaterThanYPowerX", "(", ")", ";", "int", "X", "[", "]", "=", "{", "<NUM_LIT:7>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:11>", ",", "0", ",", "1", ",", "1", ",", "<NUM_LIT:3>", "}", ";", "int", "Y", "[", "]", "=", "{", "<NUM_LIT:6>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT>", ",", "<NUM_LIT:5>", ",", "1", ",", "0", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:9>", "}", ";", "System", ".", "out", ".", "println", "(", "nop", ".", "countPairs", "(", "X", ",", "Y", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "floor", "(", "int", "input", "[", "]", ",", "int", "x", ")", "{", "int", "low", "=", "0", ";", "int", "high", "=", "input", ".", "length", "-", "1", ";", "while", "(", "low", "<", "=", "high", ")", "{", "int", "middle", "=", "(", "low", "+", "high", ")", "/", "<NUM_LIT:2>", ";", "if", "(", "input", "[", "middle", "]", "=", "=", "x", "|", "|", "(", "input", "[", "middle", "]", "<", "x", "&", "&", "(", "middle", "=", "=", "input", ".", "length", "-", "1", "|", "|", "input", "[", "middle", "+", "1", "]", ">", "x", ")", ")", ")", "{", "return", "middle", ";", "}", "else", "if", "(", "input", "[", "middle", "]", "<", "x", ")", "{", "low", "=", "middle", "+", "1", ";", "}", "else", "{", "high", "=", "middle", "-", "1", ";", "}", "}", "return", "-", "1", ";", "}", "</s>"]
["<s>", "public", "int", "ceiling", "(", "int", "input", "[", "]", ",", "int", "x", ")", "{", "int", "low", "=", "0", ";", "int", "high", "=", "input", ".", "length", "-", "1", ";", "while", "(", "low", "<", "=", "high", ")", "{", "int", "middle", "=", "(", "low", "+", "high", ")", "/", "<NUM_LIT:2>", ";", "if", "(", "input", "[", "middle", "]", "=", "=", "x", "|", "|", "(", "input", "[", "middle", "]", ">", "x", "&", "&", "(", "middle", "=", "=", "0", "|", "|", "input", "[", "middle", "-", "1", "]", "<", "x", ")", ")", ")", "{", "return", "middle", ";", "}", "else", "if", "(", "input", "[", "middle", "]", "<", "x", ")", "{", "low", "=", "middle", "+", "1", ";", "}", "else", "{", "high", "=", "middle", "-", "1", ";", "}", "}", "return", "-", "1", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input", "[", "]", "=", "{", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT:15>", "}", ";", "FloorAndCeilingSortedArray", "foc", "=", "new", "FloorAndCeilingSortedArray", "(", ")", ";", "System", ".", "out", ".", "println", "(", "foc", ".", "floor", "(", "input", ",", "<NUM_LIT:15>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "foc", ".", "ceiling", "(", "input", ",", "<NUM_LIT:2>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "search", "(", "int", "input", "[", "]", ")", "{", "int", "low", "=", "0", ";", "int", "high", "=", "input", ".", "length", "-", "1", ";", "int", "ap", "=", "(", "input", "[", "high", "]", "-", "input", "[", "low", "]", ")", "/", "(", "input", ".", "length", ")", ";", "int", "middle", "=", "-", "1", ";", "while", "(", "low", "<", "=", "high", ")", "{", "middle", "=", "(", "low", "+", "high", ")", "/", "<NUM_LIT:2>", ";", "if", "(", "input", "[", "middle", "]", "=", "=", "input", "[", "0", "]", "+", "(", "middle", ")", "*", "ap", ")", "{", "low", "=", "middle", "+", "1", ";", "}", "else", "if", "(", "(", "input", "[", "middle", "]", ">", "input", "[", "0", "]", "+", "(", "middle", ")", "*", "ap", ")", "&", "&", "input", "[", "middle", "-", "1", "]", "=", "=", "input", "[", "0", "]", "+", "(", "middle", "-", "1", ")", "*", "ap", ")", "{", "return", "input", "[", "0", "]", "+", "(", "middle", ")", "*", "ap", ";", "}", "else", "{", "high", "=", "middle", "-", "1", ";", "}", "}", "return", "-", "1", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input", "[", "]", "=", "{", "1", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT>", ",", "<NUM_LIT:16>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", "}", ";", "ArithmeticProgressionSearch", "aps", "=", "new", "ArithmeticProgressionSearch", "(", ")", ";", "System", ".", "out", ".", "println", "(", "aps", ".", "search", "(", "input", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "peakElement", "(", "int", "arr", "[", "]", ")", "{", "int", "low", "=", "0", ";", "int", "high", "=", "arr", ".", "length", "-", "1", ";", "while", "(", "low", "<", "high", ")", "{", "int", "mid", "=", "(", "low", "+", "high", ")", "/", "<NUM_LIT:2>", ";", "if", "(", "mid", "=", "=", "0", "|", "|", "mid", "=", "=", "arr", ".", "length", "-", "1", ")", "{", "return", "arr", "[", "mid", "]", ";", "}", "if", "(", "arr", "[", "mid", "]", ">", "arr", "[", "mid", "-", "1", "]", "&", "&", "arr", "[", "mid", "]", ">", "arr", "[", "mid", "+", "1", "]", ")", "{", "return", "arr", "[", "mid", "]", ";", "}", "if", "(", "arr", "[", "mid", "]", "<", "arr", "[", "mid", "-", "1", "]", ")", "{", "high", "=", "mid", "-", "1", ";", "continue", ";", "}", "if", "(", "arr", "[", "mid", "]", "<", "arr", "[", "mid", "+", "1", "]", ")", "{", "low", "=", "mid", "+", "1", ";", "continue", ";", "}", "}", "return", "arr", "[", "low", "]", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "arr", "[", "]", "=", "{", "<NUM_LIT:10>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:15>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", "}", ";", "PeakElement", "pe", "=", "new", "PeakElement", "(", ")", ";", "System", ".", "out", ".", "println", "(", "pe", ".", "peakElement", "(", "arr", ")", ")", ";", "int", "arr1", "[", "]", "=", "{", "<NUM_LIT:10>", ",", "<NUM_LIT:20>", ",", "<NUM_LIT:30>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", "}", ";", "System", ".", "out", ".", "println", "(", "pe", ".", "peakElement", "(", "arr1", ")", ")", ";", "int", "arr2", "[", "]", "=", "{", "<NUM_LIT:100>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", "}", ";", "System", ".", "out", ".", "println", "(", "pe", ".", "peakElement", "(", "arr2", ")", ")", ";", "}", "</s>"]
["<s>", "private", "int", "f", "(", "int", "x", ")", "{", "return", "x", "*", "x", "-", "<NUM_LIT:10>", "*", "x", "-", "<NUM_LIT:20>", ";", "}", "</s>"]
["<s>", "public", "int", "findPoint", "(", ")", "{", "int", "i", "=", "1", ";", "while", "(", "f", "(", "i", ")", "<", "=", "0", ")", "{", "i", "=", "i", "*", "<NUM_LIT:2>", ";", "}", "return", "binarySearch", "(", "i", "/", "<NUM_LIT:2>", ",", "i", ")", ";", "}", "</s>"]
["<s>", "private", "int", "binarySearch", "(", "int", "start", ",", "int", "end", ")", "{", "int", "mid", "=", "(", "start", "+", "end", ")", "/", "<NUM_LIT:2>", ";", "while", "(", "start", "<", "end", ")", "{", "mid", "=", "(", "start", "+", "end", ")", "/", "<NUM_LIT:2>", ";", "if", "(", "f", "(", "mid", ")", ">", "0", "&", "&", "f", "(", "mid", "-", "1", ")", "<", "=", "0", ")", "{", "return", "mid", ";", "}", "if", "(", "f", "(", "mid", ")", "<", "=", "0", "&", "&", "f", "(", "mid", "+", "1", ")", ">", "0", ")", "{", "return", "mid", "+", "1", ";", "}", "if", "(", "f", "(", "mid", ")", "<", "=", "0", ")", "{", "start", "=", "mid", "+", "1", ";", "}", "else", "{", "end", "=", "mid", "-", "1", ";", "}", "}", "return", "mid", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "MonotonicallyIncreasingFunctionBecomesPositive", "mif", "=", "new", "MonotonicallyIncreasingFunctionBecomesPositive", "(", ")", ";", "System", ".", "out", ".", "print", "(", "mif", ".", "findPoint", "(", ")", ")", ";", "}", "</s>"]
["<s>", "public", "double", "median", "(", "int", "arr1", "[", "]", ",", "int", "arr2", "[", "]", ")", "{", "int", "low1", "=", "0", ";", "int", "high1", "=", "arr1", ".", "length", "-", "1", ";", "int", "low2", "=", "0", ";", "int", "high2", "=", "arr2", ".", "length", "-", "1", ";", "while", "(", "true", ")", "{", "if", "(", "high1", "=", "=", "low1", ")", "{", "return", "(", "arr1", "[", "low1", "]", "+", "arr2", "[", "low2", "]", ")", "/", "<NUM_LIT:2>", ";", "}", "if", "(", "high1", "-", "low1", "=", "=", "1", ")", "{", "return", "(", "double", ")", "(", "Math", ".", "max", "(", "arr1", "[", "low1", "]", ",", "arr2", "[", "low2", "]", ")", "+", "Math", ".", "min", "(", "arr1", "[", "high1", "]", ",", "arr2", "[", "high2", "]", ")", ")", "/", "<NUM_LIT:2>", ";", "}", "double", "med1", "=", "getMedian", "(", "arr1", ",", "low1", ",", "high1", ")", ";", "double", "med2", "=", "getMedian", "(", "arr2", ",", "low1", ",", "high2", ")", ";", "if", "(", "med1", "<", "=", "med2", ")", "{", "if", "(", "(", "high1", "-", "low1", "+", "1", ")", "%", "<NUM_LIT:2>", "=", "=", "0", ")", "{", "low1", "=", "(", "high1", "+", "low1", ")", "/", "<NUM_LIT:2>", ";", "high2", "=", "(", "high2", "+", "low2", ")", "/", "<NUM_LIT:2>", "+", "1", ";", "}", "else", "{", "low1", "=", "(", "low1", "+", "high1", ")", "/", "<NUM_LIT:2>", ";", "high2", "=", "(", "low2", "+", "high2", ")", "/", "<NUM_LIT:2>", ";", "}", "}", "else", "{", "if", "(", "(", "high1", "-", "low1", "+", "1", ")", "%", "<NUM_LIT:2>", "=", "=", "0", ")", "{", "low2", "=", "(", "high2", "+", "low2", ")", "/", "<NUM_LIT:2>", ";", "high1", "=", "(", "high1", "+", "low1", ")", "/", "<NUM_LIT:2>", "+", "1", ";", "}", "else", "{", "low2", "=", "(", "low2", "+", "high2", ")", "/", "<NUM_LIT:2>", ";", "high1", "=", "(", "low1", "+", "high1", ")", "/", "<NUM_LIT:2>", ";", "}", "}", "}", "}", "</s>"]
["<s>", "private", "double", "getMedian", "(", "int", "arr", "[", "]", ",", "int", "low", ",", "int", "high", ")", "{", "int", "len", "=", "high", "-", "low", "+", "1", ";", "if", "(", "len", "%", "<NUM_LIT:2>", "=", "=", "0", ")", "{", "return", "(", "arr", "[", "low", "+", "len", "/", "<NUM_LIT:2>", "]", "+", "arr", "[", "low", "+", "len", "/", "<NUM_LIT:2>", "-", "1", "]", ")", "/", "<NUM_LIT:2>", ";", "}", "else", "{", "return", "arr", "[", "low", "+", "len", "/", "<NUM_LIT:2>", "]", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "arr1", "[", "]", "=", "{", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:6>", "}", ";", "int", "arr2", "[", "]", "=", "{", "-", "1", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:8>", "}", ";", "MedianOfTwoSortedArray", "mts", "=", "new", "MedianOfTwoSortedArray", "(", ")", ";", "System", ".", "out", ".", "println", "(", "mts", ".", "median", "(", "arr1", ",", "arr2", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "count", "(", "int", "arr", "[", "]", ",", "int", "k", ")", "{", "Arrays", ".", "sort", "(", "arr", ")", ";", "int", "count", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "boolean", "result", "=", "binarySearch", "(", "arr", ",", "i", "+", "1", ",", "arr", ".", "length", "-", "1", ",", "arr", "[", "i", "]", "+", "k", ")", ";", "if", "(", "result", ")", "{", "count", "+", "+", ";", "}", "}", "return", "count", ";", "}", "</s>"]
["<s>", "private", "boolean", "binarySearch", "(", "int", "arr", "[", "]", ",", "int", "start", ",", "int", "end", ",", "int", "num", ")", "{", "if", "(", "start", ">", "end", ")", "{", "return", "false", ";", "}", "int", "mid", "=", "(", "start", "+", "end", ")", "/", "<NUM_LIT:2>", ";", "if", "(", "arr", "[", "mid", "]", "=", "=", "num", ")", "{", "return", "true", ";", "}", "else", "if", "(", "arr", "[", "mid", "]", ">", "num", ")", "{", "return", "binarySearch", "(", "arr", ",", "start", ",", "mid", "-", "1", ",", "num", ")", ";", "}", "else", "{", "return", "binarySearch", "(", "arr", ",", "mid", "+", "1", ",", "end", ",", "num", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "CountNDistinctPairsWithDifferenceK", "cn", "=", "new", "CountNDistinctPairsWithDifferenceK", "(", ")", ";", "int", "arr", "[", "]", "=", "{", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:9>", "}", ";", "System", ".", "out", ".", "print", "(", "cn", ".", "count", "(", "arr", ",", "<NUM_LIT:3>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "search", "(", "int", "arr", "[", "]", ")", "{", "int", "low", "=", "0", ";", "int", "high", "=", "arr", ".", "length", "-", "1", ";", "int", "mid", "=", "0", ";", "while", "(", "low", "<", "high", ")", "{", "mid", "=", "(", "low", "+", "high", ")", "/", "<NUM_LIT:2>", ";", "if", "(", "(", "low", "=", "=", "mid", "|", "|", "arr", "[", "mid", "]", "<", "arr", "[", "mid", "-", "1", "]", ")", "&", "&", "arr", "[", "mid", "]", "<", "arr", "[", "mid", "+", "1", "]", ")", "{", "return", "arr", "[", "mid", "]", ";", "}", "if", "(", "(", "arr", "[", "mid", "]", ">", "=", "arr", "[", "low", "]", "&", "&", "arr", "[", "mid", "]", ">", "=", "arr", "[", "high", "]", ")", ")", "{", "if", "(", "arr", "[", "low", "]", "<", "arr", "[", "high", "]", ")", "{", "high", "=", "mid", "-", "1", ";", "}", "else", "{", "low", "=", "mid", "+", "1", ";", "}", "}", "else", "{", "if", "(", "arr", "[", "mid", "-", "1", "]", "<", "arr", "[", "mid", "+", "1", "]", ")", "{", "high", "=", "mid", "-", "1", ";", "}", "else", "{", "low", "=", "mid", "+", "1", ";", "}", "}", "}", "return", "arr", "[", "low", "]", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "CircularBinarySearch", "cbs", "=", "new", "CircularBinarySearch", "(", ")", ";", "int", "arr", "[", "]", "=", "{", "<NUM_LIT:7>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:5>", "}", ";", "System", ".", "out", ".", "print", "(", "cbs", ".", "search", "(", "arr", ")", ")", ";", "int", "arr1", "[", "]", "=", "{", "<NUM_LIT:5>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:2>", "}", ";", "System", ".", "out", ".", "print", "(", "cbs", ".", "search", "(", "arr1", ")", ")", ";", "int", "arr2", "[", "]", "=", "{", "<NUM_LIT:3>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:2>", "}", ";", "System", ".", "out", ".", "print", "(", "cbs", ".", "search", "(", "arr2", ")", ")", ";", "int", "arr3", "[", "]", "=", "{", "<NUM_LIT:8>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:10>", "}", ";", "System", ".", "out", ".", "print", "(", "cbs", ".", "search", "(", "arr3", ")", ")", ";", "int", "arr4", "[", "]", "=", "{", "<NUM_LIT:5>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:7>", "}", ";", "System", ".", "out", ".", "print", "(", "cbs", ".", "search", "(", "arr4", ")", ")", ";", "int", "arr5", "[", "]", "=", "{", "<NUM_LIT:100>", ",", "<NUM_LIT:20>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT:16>", ",", "<NUM_LIT>", "}", ";", "System", ".", "out", ".", "print", "(", "cbs", ".", "search", "(", "arr5", ")", ")", ";", "int", "arr6", "[", "]", "=", "{", "<NUM_LIT>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:15>", ",", "<NUM_LIT:20>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", "}", ";", "System", ".", "out", ".", "print", "(", "cbs", ".", "search", "(", "arr6", ")", ")", ";", "int", "arr7", "[", "]", "=", "{", "<NUM_LIT:5>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:20>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT:2>", "}", ";", "System", ".", "out", ".", "print", "(", "cbs", ".", "search", "(", "arr7", ")", ")", ";", "int", "arr8", "[", "]", "=", "{", "<NUM_LIT:2>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:20>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", "}", ";", "System", ".", "out", ".", "print", "(", "cbs", ".", "search", "(", "arr8", ")", ")", ";", "int", "arr9", "[", "]", "=", "{", "<NUM_LIT:3>", ",", "1", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:4>", "}", ";", "System", ".", "out", ".", "print", "(", "cbs", ".", "search", "(", "arr9", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "search", "(", "int", "input", "[", "]", ",", "int", "search", ")", "{", "int", "low", "=", "0", ";", "int", "high", "=", "input", ".", "length", "-", "1", ";", "int", "mid", "=", "0", ";", "while", "(", "low", "<", "=", "high", ")", "{", "mid", "=", "(", "low", "+", "high", ")", "/", "<NUM_LIT:2>", ";", "if", "(", "input", "[", "mid", "]", "=", "=", "search", ")", "{", "return", "mid", ";", "}", "else", "if", "(", "input", "[", "mid", "]", "<", "search", ")", "{", "low", "=", "mid", "+", "1", ";", "}", "else", "{", "high", "=", "mid", "-", "1", ";", "}", "}", "return", "-", "1", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "BinarySearch", "bs", "=", "new", "BinarySearch", "(", ")", ";", "int", "arr1", "[", "]", "=", "{", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:8>", "}", ";", "System", ".", "out", ".", "println", "(", "bs", ".", "search", "(", "arr1", ",", "-", "1", ")", ")", ";", "System", ".", "out", ".", "println", "(", "bs", ".", "search", "(", "arr1", ",", "1", ")", ")", ";", "System", ".", "out", ".", "println", "(", "bs", ".", "search", "(", "arr1", ",", "<NUM_LIT:8>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "bs", ".", "search", "(", "arr1", ",", "<NUM_LIT:2>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "Integer", "findMissing", "(", "int", "arr", "[", "]", ")", "{", "int", "lowNum", "=", "arr", "[", "0", "]", ";", "int", "low", "=", "0", ";", "int", "high", "=", "arr", ".", "length", "-", "1", ";", "int", "middle", "=", "(", "low", "+", "high", ")", "/", "<NUM_LIT:2>", ";", "while", "(", "low", "<", "=", "high", ")", "{", "middle", "=", "(", "low", "+", "high", ")", "/", "<NUM_LIT:2>", ";", "if", "(", "arr", "[", "middle", "]", "=", "=", "(", "middle", "+", "1", "+", "lowNum", ")", "&", "&", "middle", "-", "1", ">", "=", "0", "&", "&", "arr", "[", "middle", "-", "1", "]", "=", "=", "(", "middle", "+", "lowNum", "-", "1", ")", ")", "{", "return", "middle", "+", "lowNum", ";", "}", "else", "if", "(", "(", "middle", "+", "lowNum", ")", "=", "=", "arr", "[", "middle", "]", ")", "{", "low", "=", "middle", "+", "1", ";", "}", "else", "{", "high", "=", "middle", "-", "1", ";", "}", "}", "return", "null", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "arr", "[", "]", "=", "{", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT:12>", "}", ";", "int", "arr1", "[", "]", "=", "{", "-", "<NUM_LIT:5>", ",", "-", "<NUM_LIT:4>", ",", "-", "<NUM_LIT:3>", ",", "-", "1", ",", "0", ",", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", "}", ";", "MissingNumberInConsecutiveNumbers", "mn", "=", "new", "MissingNumberInConsecutiveNumbers", "(", ")", ";", "System", ".", "out", ".", "println", "(", "mn", ".", "findMissing", "(", "arr1", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "firstOccurrence", "(", "int", "input", "[", "]", ",", "int", "x", ")", "{", "int", "low", "=", "0", ";", "int", "high", "=", "input", ".", "length", "-", "1", ";", "while", "(", "low", "<", "=", "high", ")", "{", "int", "middle", "=", "(", "low", "+", "high", ")", "/", "<NUM_LIT:2>", ";", "if", "(", "input", "[", "middle", "]", "=", "=", "x", "&", "&", "(", "middle", "=", "=", "0", "|", "|", "input", "[", "middle", "-", "1", "]", "<", "x", ")", ")", "{", "return", "middle", ";", "}", "else", "if", "(", "input", "[", "middle", "]", "<", "x", ")", "{", "low", "=", "middle", "+", "1", ";", "}", "else", "{", "high", "=", "middle", "-", "1", ";", "}", "}", "return", "-", "1", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "FirstOccurrenceOfNumberInSortedArray", "fos", "=", "new", "FirstOccurrenceOfNumberInSortedArray", "(", ")", ";", "int", "input", "[", "]", "=", "{", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:7>", "}", ";", "System", ".", "out", ".", "println", "(", "fos", ".", "firstOccurrence", "(", "input", ",", "<NUM_LIT:6>", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "boolean", "equals", "(", "Object", "o", ")", "{", "if", "(", "this", "=", "=", "o", ")", "return", "true", ";", "if", "(", "o", "=", "=", "null", "|", "|", "getClass", "(", ")", "!", "=", "o", ".", "getClass", "(", ")", ")", "return", "false", ";", "Index", "index", "=", "(", "Index", ")", "o", ";", "if", "(", "currentVertex", "!", "=", "index", ".", "currentVertex", ")", "return", "false", ";", "return", "!", "(", "vertexSet", "!", "=", "null", "?", "!", "vertexSet", ".", "equals", "(", "index", ".", "vertexSet", ")", ":", "index", ".", "vertexSet", "!", "=", "null", ")", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "int", "hashCode", "(", ")", "{", "int", "result", "=", "currentVertex", ";", "result", "=", "<NUM_LIT:31>", "*", "result", "+", "(", "vertexSet", "!", "=", "null", "?", "vertexSet", ".", "hashCode", "(", ")", ":", "0", ")", ";", "return", "result", ";", "}", "</s>"]
["<s>", "private", "static", "Index", "createIndex", "(", "int", "vertex", ",", "Set", "<", "Integer", ">", "vertexSet", ")", "{", "Index", "i", "=", "new", "Index", "(", ")", ";", "i", ".", "currentVertex", "=", "vertex", ";", "i", ".", "vertexSet", "=", "vertexSet", ";", "return", "i", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "int", "compare", "(", "Set", "<", "Integer", ">", "o1", ",", "Set", "<", "Integer", ">", "o2", ")", "{", "if", "(", "o1", ".", "size", "(", ")", "<", "=", "o2", ".", "size", "(", ")", ")", "{", "return", "-", "1", ";", "}", "else", "{", "return", "1", ";", "}", "}", "</s>"]
["<s>", "public", "int", "minCost", "(", "int", "[", "]", "[", "]", "distance", ")", "{", "Map", "<", "Index", ",", "Integer", ">", "minCostDP", "=", "new", "HashMap", "<", ">", "(", ")", ";", "Map", "<", "Index", ",", "Integer", ">", "parent", "=", "new", "HashMap", "<", ">", "(", ")", ";", "List", "<", "Set", "<", "Integer", ">", ">", "allSets", "=", "generateCombination", "(", "distance", ".", "length", "-", "1", ")", ";", "for", "(", "Set", "<", "Integer", ">", "set", ":", "allSets", ")", "{", "for", "(", "int", "currentVertex", "=", "1", ";", "currentVertex", "<", "distance", ".", "length", ";", "currentVertex", "+", "+", ")", "{", "if", "(", "set", ".", "contains", "(", "currentVertex", ")", ")", "{", "continue", ";", "}", "Index", "index", "=", "Index", ".", "createIndex", "(", "currentVertex", ",", "set", ")", ";", "int", "minCost", "=", "INFINITY", ";", "int", "minPrevVertex", "=", "0", ";", "Set", "<", "Integer", ">", "copySet", "=", "new", "HashSet", "<", ">", "(", "set", ")", ";", "for", "(", "int", "prevVertex", ":", "set", ")", "{", "int", "cost", "=", "distance", "[", "prevVertex", "]", "[", "currentVertex", "]", "+", "getCost", "(", "copySet", ",", "prevVertex", ",", "minCostDP", ")", ";", "if", "(", "cost", "<", "minCost", ")", "{", "minCost", "=", "cost", ";", "minPrevVertex", "=", "prevVertex", ";", "}", "}", "if", "(", "set", ".", "size", "(", ")", "=", "=", "0", ")", "{", "minCost", "=", "distance", "[", "0", "]", "[", "currentVertex", "]", ";", "}", "minCostDP", ".", "put", "(", "index", ",", "minCost", ")", ";", "parent", ".", "put", "(", "index", ",", "minPrevVertex", ")", ";", "}", "}", "Set", "<", "Integer", ">", "set", "=", "new", "HashSet", "<", ">", "(", ")", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "distance", ".", "length", ";", "i", "+", "+", ")", "{", "set", ".", "add", "(", "i", ")", ";", "}", "int", "min", "=", "Integer", ".", "MAX_VALUE", ";", "int", "prevVertex", "=", "-", "1", ";", "Set", "<", "Integer", ">", "copySet", "=", "new", "HashSet", "<", ">", "(", "set", ")", ";", "for", "(", "int", "k", ":", "set", ")", "{", "int", "cost", "=", "distance", "[", "k", "]", "[", "0", "]", "+", "getCost", "(", "copySet", ",", "k", ",", "minCostDP", ")", ";", "if", "(", "cost", "<", "min", ")", "{", "min", "=", "cost", ";", "prevVertex", "=", "k", ";", "}", "}", "parent", ".", "put", "(", "Index", ".", "createIndex", "(", "0", ",", "set", ")", ",", "prevVertex", ")", ";", "printTour", "(", "parent", ",", "distance", ".", "length", ")", ";", "return", "min", ";", "}", "</s>"]
["<s>", "private", "void", "printTour", "(", "Map", "<", "Index", ",", "Integer", ">", "parent", ",", "int", "totalVertices", ")", "{", "Set", "<", "Integer", ">", "set", "=", "new", "HashSet", "<", ">", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "totalVertices", ";", "i", "+", "+", ")", "{", "set", ".", "add", "(", "i", ")", ";", "}", "Integer", "start", "=", "0", ";", "Deque", "<", "Integer", ">", "stack", "=", "new", "LinkedList", "<", ">", "(", ")", ";", "while", "(", "true", ")", "{", "stack", ".", "push", "(", "start", ")", ";", "set", ".", "remove", "(", "start", ")", ";", "start", "=", "parent", ".", "get", "(", "Index", ".", "createIndex", "(", "start", ",", "set", ")", ")", ";", "if", "(", "start", "=", "=", "null", ")", "{", "break", ";", "}", "}", "StringJoiner", "joiner", "=", "new", "StringJoiner", "(", "\"", "<STR_LIT>", "\"", ")", ";", "stack", ".", "forEach", "(", "v", "-", ">", "joiner", ".", "add", "(", "String", ".", "valueOf", "(", "v", ")", ")", ")", ";", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "<STR_LIT>", "\"", ")", ";", "System", ".", "out", ".", "println", "(", "joiner", ".", "toString", "(", ")", ")", ";", "}", "</s>"]
["<s>", "private", "int", "getCost", "(", "Set", "<", "Integer", ">", "set", ",", "int", "prevVertex", ",", "Map", "<", "Index", ",", "Integer", ">", "minCostDP", ")", "{", "set", ".", "remove", "(", "prevVertex", ")", ";", "Index", "index", "=", "Index", ".", "createIndex", "(", "prevVertex", ",", "set", ")", ";", "int", "cost", "=", "minCostDP", ".", "get", "(", "index", ")", ";", "set", ".", "add", "(", "prevVertex", ")", ";", "return", "cost", ";", "}", "</s>"]
["<s>", "private", "List", "<", "Set", "<", "Integer", ">", ">", "generateCombination", "(", "int", "n", ")", "{", "int", "input", "[", "]", "=", "new", "int", "[", "n", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "input", "[", "i", "]", "=", "i", "+", "1", ";", "}", "List", "<", "Set", "<", "Integer", ">", ">", "allSets", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "int", "result", "[", "]", "=", "new", "int", "[", "input", ".", "length", "]", ";", "generateCombination", "(", "input", ",", "0", ",", "0", ",", "allSets", ",", "result", ")", ";", "Collections", ".", "sort", "(", "allSets", ",", "new", "SetSizeComparator", "(", ")", ")", ";", "return", "allSets", ";", "}", "</s>"]
["<s>", "private", "void", "generateCombination", "(", "int", "input", "[", "]", ",", "int", "start", ",", "int", "pos", ",", "List", "<", "Set", "<", "Integer", ">", ">", "allSets", ",", "int", "result", "[", "]", ")", "{", "if", "(", "pos", "=", "=", "input", ".", "length", ")", "{", "return", ";", "}", "Set", "<", "Integer", ">", "set", "=", "createSet", "(", "result", ",", "pos", ")", ";", "allSets", ".", "add", "(", "set", ")", ";", "for", "(", "int", "i", "=", "start", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "result", "[", "pos", "]", "=", "input", "[", "i", "]", ";", "generateCombination", "(", "input", ",", "i", "+", "1", ",", "pos", "+", "1", ",", "allSets", ",", "result", ")", ";", "}", "}", "</s>"]
["<s>", "private", "static", "Set", "<", "Integer", ">", "createSet", "(", "int", "input", "[", "]", ",", "int", "pos", ")", "{", "if", "(", "pos", "=", "=", "0", ")", "{", "return", "new", "HashSet", "<", ">", "(", ")", ";", "}", "Set", "<", "Integer", ">", "set", "=", "new", "HashSet", "<", ">", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "pos", ";", "i", "+", "+", ")", "{", "set", ".", "add", "(", "input", "[", "i", "]", ")", ";", "}", "return", "set", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "TravelingSalesmanHeldKarp", "ht", "=", "new", "TravelingSalesmanHeldKarp", "(", ")", ";", "int", "distance", "[", "]", "[", "]", "=", "{", "{", "0", ",", "1", ",", "<NUM_LIT:15>", ",", "<NUM_LIT:6>", "}", ",", "{", "<NUM_LIT:2>", ",", "0", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:3>", "}", ",", "{", "<NUM_LIT:9>", ",", "<NUM_LIT:6>", ",", "0", ",", "<NUM_LIT:12>", "}", ",", "{", "<NUM_LIT:10>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:8>", ",", "0", "}", ",", "}", ";", "int", "minCost", "=", "ht", ".", "minCost", "(", "distance", ")", ";", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", "+", "minCost", ")", ";", "}", "</s>"]
["<s>", "public", "void", "DFS", "(", "Graph", "<", "Integer", ">", "graph", ")", "{", "Set", "<", "Long", ">", "visited", "=", "new", "HashSet", "<", "Long", ">", "(", ")", ";", "for", "(", "Vertex", "<", "Integer", ">", "vertex", ":", "graph", ".", "getAllVertex", "(", ")", ")", "{", "if", "(", "!", "visited", ".", "contains", "(", "vertex", ".", "getId", "(", ")", ")", ")", "{", "DFSUtil", "(", "vertex", ",", "visited", ")", ";", "}", "}", "}", "</s>"]
["<s>", "private", "void", "DFSUtil", "(", "Vertex", "<", "Integer", ">", "v", ",", "Set", "<", "Long", ">", "visited", ")", "{", "visited", ".", "add", "(", "v", ".", "getId", "(", ")", ")", ";", "System", ".", "out", ".", "print", "(", "v", ".", "getId", "(", ")", "+", "\"", "\"", ")", ";", "for", "(", "Vertex", "<", "Integer", ">", "vertex", ":", "v", ".", "getAdjacentVertexes", "(", ")", ")", "{", "if", "(", "!", "visited", ".", "contains", "(", "vertex", ".", "getId", "(", ")", ")", ")", "DFSUtil", "(", "vertex", ",", "visited", ")", ";", "}", "}", "</s>"]
["<s>", "public", "void", "BFS", "(", "Graph", "<", "Integer", ">", "graph", ")", "{", "Set", "<", "Long", ">", "visited", "=", "new", "HashSet", "<", "Long", ">", "(", ")", ";", "Queue", "<", "Vertex", "<", "Integer", ">", ">", "q", "=", "new", "LinkedList", "<", "Vertex", "<", "Integer", ">", ">", "(", ")", ";", "for", "(", "Vertex", "<", "Integer", ">", "vertex", ":", "graph", ".", "getAllVertex", "(", ")", ")", "{", "if", "(", "!", "visited", ".", "contains", "(", "vertex", ".", "getId", "(", ")", ")", ")", "{", "q", ".", "add", "(", "vertex", ")", ";", "visited", ".", "add", "(", "vertex", ".", "getId", "(", ")", ")", ";", "while", "(", "q", ".", "size", "(", ")", "!", "=", "0", ")", "{", "Vertex", "<", "Integer", ">", "vq", "=", "q", ".", "poll", "(", ")", ";", "System", ".", "out", ".", "print", "(", "vq", ".", "getId", "(", ")", "+", "\"", "\"", ")", ";", "for", "(", "Vertex", "<", "Integer", ">", "v", ":", "vq", ".", "getAdjacentVertexes", "(", ")", ")", "{", "if", "(", "!", "visited", ".", "contains", "(", "v", ".", "getId", "(", ")", ")", ")", "{", "q", ".", "add", "(", "v", ")", ";", "visited", ".", "add", "(", "v", ".", "getId", "(", ")", ")", ";", "}", "}", "}", "}", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "Graph", "<", "Integer", ">", "graph", "=", "new", "Graph", "<", "Integer", ">", "(", "true", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:2>", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:3>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:2>", ",", "<NUM_LIT:4>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:4>", ",", "<NUM_LIT:6>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:6>", ",", "<NUM_LIT:5>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:5>", ",", "<NUM_LIT:3>", ")", ";", "GraphTraversal", "g", "=", "new", "GraphTraversal", "(", ")", ";", "g", ".", "BFS", "(", "graph", ")", ";", "}", "</s>"]
["<s>", "public", "void", "makeSet", "(", "long", "data", ")", "{", "Node", "node", "=", "new", "Node", "(", ")", ";", "node", ".", "data", "=", "data", ";", "node", ".", "parent", "=", "node", ";", "node", ".", "rank", "=", "0", ";", "map", ".", "put", "(", "data", ",", "node", ")", ";", "}", "</s>"]
["<s>", "public", "void", "union", "(", "long", "data1", ",", "long", "data2", ")", "{", "Node", "node1", "=", "map", ".", "get", "(", "data1", ")", ";", "Node", "node2", "=", "map", ".", "get", "(", "data2", ")", ";", "Node", "parent1", "=", "findSet", "(", "node1", ")", ";", "Node", "parent2", "=", "findSet", "(", "node2", ")", ";", "if", "(", "parent1", ".", "data", "=", "=", "parent2", ".", "data", ")", "{", "return", ";", "}", "if", "(", "parent1", ".", "rank", ">", "=", "parent2", ".", "rank", ")", "{", "parent1", ".", "rank", "=", "(", "parent1", ".", "rank", "=", "=", "parent2", ".", "rank", ")", "?", "parent1", ".", "rank", "+", "1", ":", "parent1", ".", "rank", ";", "parent2", ".", "parent", "=", "parent1", ";", "}", "else", "{", "parent1", ".", "parent", "=", "parent2", ";", "}", "}", "</s>"]
["<s>", "public", "long", "findSet", "(", "long", "data", ")", "{", "return", "findSet", "(", "map", ".", "get", "(", "data", ")", ")", ".", "data", ";", "}", "</s>"]
["<s>", "private", "Node", "findSet", "(", "Node", "node", ")", "{", "Node", "parent", "=", "node", ".", "parent", ";", "if", "(", "parent", "=", "=", "node", ")", "{", "return", "parent", ";", "}", "node", ".", "parent", "=", "findSet", "(", "node", ".", "parent", ")", ";", "return", "node", ".", "parent", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "DisjointSet", "ds", "=", "new", "DisjointSet", "(", ")", ";", "ds", ".", "makeSet", "(", "1", ")", ";", "ds", ".", "makeSet", "(", "<NUM_LIT:2>", ")", ";", "ds", ".", "makeSet", "(", "<NUM_LIT:3>", ")", ";", "ds", ".", "makeSet", "(", "<NUM_LIT:4>", ")", ";", "ds", ".", "makeSet", "(", "<NUM_LIT:5>", ")", ";", "ds", ".", "makeSet", "(", "<NUM_LIT:6>", ")", ";", "ds", ".", "makeSet", "(", "<NUM_LIT:7>", ")", ";", "ds", ".", "union", "(", "1", ",", "<NUM_LIT:2>", ")", ";", "ds", ".", "union", "(", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ")", ";", "ds", ".", "union", "(", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", ")", ";", "ds", ".", "union", "(", "<NUM_LIT:6>", ",", "<NUM_LIT:7>", ")", ";", "ds", ".", "union", "(", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ")", ";", "ds", ".", "union", "(", "<NUM_LIT:3>", ",", "<NUM_LIT:7>", ")", ";", "System", ".", "out", ".", "println", "(", "ds", ".", "findSet", "(", "1", ")", ")", ";", "System", ".", "out", ".", "println", "(", "ds", ".", "findSet", "(", "<NUM_LIT:2>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "ds", ".", "findSet", "(", "<NUM_LIT:3>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "ds", ".", "findSet", "(", "<NUM_LIT:4>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "ds", ".", "findSet", "(", "<NUM_LIT:5>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "ds", ".", "findSet", "(", "<NUM_LIT:6>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "ds", ".", "findSet", "(", "<NUM_LIT:7>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "Map", "<", "Vertex", "<", "Integer", ">", ",", "Integer", ">", "getShortestPath", "(", "Graph", "<", "Integer", ">", "graph", ",", "Vertex", "<", "Integer", ">", "sourceVertex", ")", "{", "Map", "<", "Vertex", "<", "Integer", ">", ",", "Integer", ">", "distance", "=", "new", "HashMap", "<", ">", "(", ")", ";", "Map", "<", "Vertex", "<", "Integer", ">", ",", "Vertex", "<", "Integer", ">", ">", "parent", "=", "new", "HashMap", "<", ">", "(", ")", ";", "for", "(", "Vertex", "<", "Integer", ">", "v", ":", "graph", ".", "getAllVertex", "(", ")", ")", "{", "distance", ".", "put", "(", "v", ",", "INFINITY", ")", ";", "parent", ".", "put", "(", "v", ",", "null", ")", ";", "}", "distance", ".", "put", "(", "sourceVertex", ",", "0", ")", ";", "int", "V", "=", "graph", ".", "getAllVertex", "(", ")", ".", "size", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "V", "-", "1", ";", "i", "+", "+", ")", "{", "for", "(", "Edge", "<", "Integer", ">", "edge", ":", "graph", ".", "getAllEdges", "(", ")", ")", "{", "Vertex", "<", "Integer", ">", "u", "=", "edge", ".", "getVertex1", "(", ")", ";", "Vertex", "<", "Integer", ">", "v", "=", "edge", ".", "getVertex2", "(", ")", ";", "if", "(", "distance", ".", "get", "(", "u", ")", "+", "edge", ".", "getWeight", "(", ")", "<", "distance", ".", "get", "(", "v", ")", ")", "{", "distance", ".", "put", "(", "v", ",", "distance", ".", "get", "(", "u", ")", "+", "edge", ".", "getWeight", "(", ")", ")", ";", "parent", ".", "put", "(", "v", ",", "u", ")", ";", "}", "}", "}", "for", "(", "Edge", "<", "Integer", ">", "edge", ":", "graph", ".", "getAllEdges", "(", ")", ")", "{", "Vertex", "<", "Integer", ">", "u", "=", "edge", ".", "getVertex1", "(", ")", ";", "Vertex", "<", "Integer", ">", "v", "=", "edge", ".", "getVertex2", "(", ")", ";", "if", "(", "distance", ".", "get", "(", "u", ")", "+", "edge", ".", "getWeight", "(", ")", "<", "distance", ".", "get", "(", "v", ")", ")", "{", "throw", "new", "NegativeWeightCycleException", "(", ")", ";", "}", "}", "return", "distance", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "Graph", "<", "Integer", ">", "graph", "=", "new", "Graph", "<", ">", "(", "false", ")", ";", "graph", ".", "addEdge", "(", "0", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:8>", ")", ";", "graph", ".", "addEdge", "(", "0", ",", "1", ",", "<NUM_LIT:4>", ")", ";", "graph", ".", "addEdge", "(", "0", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:5>", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:2>", ",", "-", "<NUM_LIT:3>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:2>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:4>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:2>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:4>", ",", "<NUM_LIT:3>", ",", "1", ")", ";", "BellmanFordShortestPath", "shortestPath", "=", "new", "BellmanFordShortestPath", "(", ")", ";", "Vertex", "<", "Integer", ">", "startVertex", "=", "graph", ".", "getAllVertex", "(", ")", ".", "iterator", "(", ")", ".", "next", "(", ")", ";", "Map", "<", "Vertex", "<", "Integer", ">", ",", "Integer", ">", "distance", "=", "shortestPath", ".", "getShortestPath", "(", "graph", ",", "startVertex", ")", ";", "System", ".", "out", ".", "println", "(", "distance", ")", ";", "}", "</s>"]
["<s>", "public", "Graph", "<", "T", ">", "clone", "(", "Graph", "<", "T", ">", "graph", ")", "{", "if", "(", "graph", "=", "=", "null", ")", "{", "return", "null", ";", "}", "if", "(", "!", "graph", ".", "isDirected", ")", "{", "throw", "new", "IllegalArgumentException", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "if", "(", "graph", ".", "getAllVertex", "(", ")", ".", "size", "(", ")", "=", "=", "0", ")", "{", "throw", "new", "IllegalArgumentException", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "Map", "<", "Vertex", "<", "T", ">", ",", "Vertex", "<", "T", ">", ">", "cloneMap", "=", "new", "HashMap", "<", "Vertex", "<", "T", ">", ",", "Vertex", "<", "T", ">", ">", "(", ")", ";", "for", "(", "Vertex", "<", "T", ">", "vertex", ":", "graph", ".", "getAllVertex", "(", ")", ")", "{", "clone", "(", "vertex", ",", "cloneMap", ")", ";", "}", "Graph", "<", "T", ">", "clonedGraph", "=", "new", "Graph", "<", ">", "(", "true", ")", ";", "for", "(", "Vertex", "<", "T", ">", "vertex", ":", "cloneMap", ".", "values", "(", ")", ")", "{", "clonedGraph", ".", "addVertex", "(", "vertex", ")", ";", "}", "return", "clonedGraph", ";", "}", "</s>"]
["<s>", "private", "void", "clone", "(", "Vertex", "<", "T", ">", "origVertex", ",", "Map", "<", "Vertex", "<", "T", ">", ",", "Vertex", "<", "T", ">", ">", "cloneMap", ")", "{", "Vertex", "<", "T", ">", "cloneVertex", "=", "null", ";", "if", "(", "cloneMap", ".", "containsKey", "(", "origVertex", ")", ")", "{", "cloneVertex", "=", "cloneMap", ".", "get", "(", "origVertex", ")", ";", "}", "else", "{", "cloneVertex", "=", "new", "Vertex", "<", "T", ">", "(", "origVertex", ".", "getId", "(", ")", "*", "<NUM_LIT:10>", ")", ";", "cloneMap", ".", "put", "(", "origVertex", ",", "cloneVertex", ")", ";", "}", "for", "(", "Edge", "<", "T", ">", "edge", ":", "origVertex", ".", "getEdges", "(", ")", ")", "{", "if", "(", "edge", ".", "getVertex1", "(", ")", ".", "equals", "(", "origVertex", ")", ")", "{", "Vertex", "<", "T", ">", "adjVertex", "=", "edge", ".", "getVertex2", "(", ")", ";", "updateMap", "(", "cloneMap", ",", "cloneVertex", ",", "adjVertex", ",", "edge", ")", ";", "}", "else", "{", "Vertex", "<", "T", ">", "adjVertex", "=", "edge", ".", "getVertex1", "(", ")", ";", "updateMap", "(", "cloneMap", ",", "cloneVertex", ",", "adjVertex", ",", "edge", ")", ";", "}", "}", "}", "</s>"]
["<s>", "private", "void", "updateMap", "(", "Map", "<", "Vertex", "<", "T", ">", ",", "Vertex", "<", "T", ">", ">", "cloneMap", ",", "Vertex", "<", "T", ">", "cloneVertex", ",", "Vertex", "<", "T", ">", "adjVertex", ",", "Edge", "<", "T", ">", "edge", ")", "{", "if", "(", "cloneMap", ".", "containsKey", "(", "adjVertex", ")", ")", "{", "Vertex", "<", "T", ">", "adjVertexClone", "=", "cloneMap", ".", "get", "(", "adjVertex", ")", ";", "Edge", "<", "T", ">", "newEdge", "=", "new", "Edge", "<", "T", ">", "(", "cloneVertex", ",", "adjVertexClone", ",", "edge", ".", "isDirected", "(", ")", ",", "edge", ".", "getWeight", "(", ")", ")", ";", "cloneVertex", ".", "addAdjacentVertex", "(", "newEdge", ",", "adjVertexClone", ")", ";", "}", "else", "{", "Vertex", "<", "T", ">", "adjVertexClone", "=", "new", "Vertex", "<", "T", ">", "(", "adjVertex", ".", "getId", "(", ")", ")", ";", "cloneMap", ".", "put", "(", "adjVertex", ",", "adjVertexClone", ")", ";", "Edge", "<", "T", ">", "newEdge", "=", "new", "Edge", "<", "T", ">", "(", "cloneVertex", ",", "adjVertexClone", ",", "edge", ".", "isDirected", "(", ")", ",", "edge", ".", "getWeight", "(", ")", ")", ";", "cloneVertex", ".", "addAdjacentVertex", "(", "newEdge", ",", "adjVertexClone", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "Graph", "<", "Integer", ">", "graph", "=", "new", "Graph", "<", "Integer", ">", "(", "true", ")", ";", "graph", ".", "addEdge", "(", "0", ",", "<NUM_LIT:3>", ")", ";", "graph", ".", "addEdge", "(", "0", ",", "<NUM_LIT:2>", ")", ";", "graph", ".", "addEdge", "(", "0", ",", "<NUM_LIT:4>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:3>", ",", "<NUM_LIT:2>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:2>", ",", "0", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:4>", ",", "<NUM_LIT:3>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:4>", ",", "1", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:2>", ")", ";", "CloneDirectedGraph", "<", "Integer", ">", "cg", "=", "new", "CloneDirectedGraph", "<", ">", "(", ")", ";", "Graph", "<", "Integer", ">", "clonedGraph", "=", "cg", ".", "clone", "(", "graph", ")", ";", "System", ".", "out", ".", "println", "(", "clonedGraph", ")", ";", "}", "</s>"]
["<s>", "public", "int", "[", "]", "[", "]", "allPairShortestPath", "(", "int", "[", "]", "[", "]", "distanceMatrix", ")", "{", "int", "distance", "[", "]", "[", "]", "=", "new", "int", "[", "distanceMatrix", ".", "length", "]", "[", "distanceMatrix", ".", "length", "]", ";", "int", "path", "[", "]", "[", "]", "=", "new", "int", "[", "distanceMatrix", ".", "length", "]", "[", "distanceMatrix", ".", "length", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "distanceMatrix", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "distanceMatrix", "[", "i", "]", ".", "length", ";", "j", "+", "+", ")", "{", "distance", "[", "i", "]", "[", "j", "]", "=", "distanceMatrix", "[", "i", "]", "[", "j", "]", ";", "if", "(", "distanceMatrix", "[", "i", "]", "[", "j", "]", "!", "=", "INF", "&", "&", "i", "!", "=", "j", ")", "{", "path", "[", "i", "]", "[", "j", "]", "=", "i", ";", "}", "else", "{", "path", "[", "i", "]", "[", "j", "]", "=", "-", "1", ";", "}", "}", "}", "for", "(", "int", "k", "=", "0", ";", "k", "<", "distanceMatrix", ".", "length", ";", "k", "+", "+", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "distanceMatrix", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "distanceMatrix", ".", "length", ";", "j", "+", "+", ")", "{", "if", "(", "distance", "[", "i", "]", "[", "k", "]", "=", "=", "INF", "|", "|", "distance", "[", "k", "]", "[", "j", "]", "=", "=", "INF", ")", "{", "continue", ";", "}", "if", "(", "distance", "[", "i", "]", "[", "j", "]", ">", "distance", "[", "i", "]", "[", "k", "]", "+", "distance", "[", "k", "]", "[", "j", "]", ")", "{", "distance", "[", "i", "]", "[", "j", "]", "=", "distance", "[", "i", "]", "[", "k", "]", "+", "distance", "[", "k", "]", "[", "j", "]", ";", "path", "[", "i", "]", "[", "j", "]", "=", "path", "[", "k", "]", "[", "j", "]", ";", "}", "}", "}", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "distance", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "distance", "[", "i", "]", "[", "i", "]", "<", "0", ")", "{", "throw", "new", "NegativeWeightCycleException", "(", ")", ";", "}", "}", "printPath", "(", "path", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:2>", ")", ";", "return", "distance", ";", "}", "</s>"]
["<s>", "public", "void", "printPath", "(", "int", "[", "]", "[", "]", "path", ",", "int", "start", ",", "int", "end", ")", "{", "if", "(", "start", "<", "0", "|", "|", "end", "<", "0", "|", "|", "start", ">", "=", "path", ".", "length", "|", "|", "end", ">", "=", "path", ".", "length", ")", "{", "throw", "new", "IllegalArgumentException", "(", ")", ";", "}", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", "+", "start", "+", "\"", "\"", "+", "end", ")", ";", "Deque", "<", "Integer", ">", "stack", "=", "new", "LinkedList", "<", ">", "(", ")", ";", "stack", ".", "addFirst", "(", "end", ")", ";", "while", "(", "true", ")", "{", "end", "=", "path", "[", "start", "]", "[", "end", "]", ";", "if", "(", "end", "=", "=", "-", "1", ")", "{", "return", ";", "}", "stack", ".", "addFirst", "(", "end", ")", ";", "if", "(", "end", "=", "=", "start", ")", "{", "break", ";", "}", "}", "while", "(", "!", "stack", ".", "isEmpty", "(", ")", ")", "{", "System", ".", "out", ".", "print", "(", "stack", ".", "pollFirst", "(", ")", "+", "\"", "\"", ")", ";", "}", "System", ".", "out", ".", "println", "(", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "[", "]", "[", "]", "graph", "=", "{", "{", "0", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:15>", "}", ",", "{", "INF", ",", "0", ",", "-", "<NUM_LIT:2>", ",", "INF", "}", ",", "{", "INF", ",", "INF", ",", "0", ",", "<NUM_LIT:2>", "}", ",", "{", "1", ",", "INF", ",", "INF", ",", "0", "}", "}", ";", "FloydWarshallAllPairShortestPath", "shortestPath", "=", "new", "FloydWarshallAllPairShortestPath", "(", ")", ";", "int", "[", "]", "[", "]", "distance", "=", "shortestPath", ".", "allPairShortestPath", "(", "graph", ")", ";", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "distance", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "distance", ".", "length", ";", "j", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "distance", "[", "i", "]", "[", "j", "]", "+", "\"", "\"", ")", ";", "}", "System", ".", "out", ".", "println", "(", "\"", "\"", ")", ";", "}", "}", "</s>"]
["<s>", "public", "Map", "<", "Vertex", "<", "Integer", ">", ",", "Integer", ">", "shortestPath", "(", "Graph", "<", "Integer", ">", "graph", ",", "Vertex", "<", "Integer", ">", "sourceVertex", ")", "{", "BinaryMinHeap", "<", "Vertex", "<", "Integer", ">", ">", "minHeap", "=", "new", "BinaryMinHeap", "<", ">", "(", ")", ";", "Map", "<", "Vertex", "<", "Integer", ">", ",", "Integer", ">", "distance", "=", "new", "HashMap", "<", ">", "(", ")", ";", "Map", "<", "Vertex", "<", "Integer", ">", ",", "Vertex", "<", "Integer", ">", ">", "parent", "=", "new", "HashMap", "<", ">", "(", ")", ";", "for", "(", "Vertex", "<", "Integer", ">", "vertex", ":", "graph", ".", "getAllVertex", "(", ")", ")", "{", "minHeap", ".", "add", "(", "Integer", ".", "MAX_VALUE", ",", "vertex", ")", ";", "}", "minHeap", ".", "decrease", "(", "sourceVertex", ",", "0", ")", ";", "distance", ".", "put", "(", "sourceVertex", ",", "0", ")", ";", "parent", ".", "put", "(", "sourceVertex", ",", "null", ")", ";", "while", "(", "!", "minHeap", ".", "empty", "(", ")", ")", "{", "BinaryMinHeap", "<", "Vertex", "<", "Integer", ">", ">", ".", "Node", "heapNode", "=", "minHeap", ".", "extractMinNode", "(", ")", ";", "Vertex", "<", "Integer", ">", "current", "=", "heapNode", ".", "key", ";", "distance", ".", "put", "(", "current", ",", "heapNode", ".", "weight", ")", ";", "for", "(", "Edge", "<", "Integer", ">", "edge", ":", "current", ".", "getEdges", "(", ")", ")", "{", "Vertex", "<", "Integer", ">", "adjacent", "=", "getVertexForEdge", "(", "current", ",", "edge", ")", ";", "if", "(", "!", "minHeap", ".", "containsData", "(", "adjacent", ")", ")", "{", "continue", ";", "}", "int", "newDistance", "=", "distance", ".", "get", "(", "current", ")", "+", "edge", ".", "getWeight", "(", ")", ";", "if", "(", "minHeap", ".", "getWeight", "(", "adjacent", ")", ">", "newDistance", ")", "{", "minHeap", ".", "decrease", "(", "adjacent", ",", "newDistance", ")", ";", "parent", ".", "put", "(", "adjacent", ",", "current", ")", ";", "}", "}", "}", "return", "distance", ";", "}", "</s>"]
["<s>", "private", "Vertex", "<", "Integer", ">", "getVertexForEdge", "(", "Vertex", "<", "Integer", ">", "v", ",", "Edge", "<", "Integer", ">", "e", ")", "{", "return", "e", ".", "getVertex1", "(", ")", ".", "equals", "(", "v", ")", "?", "e", ".", "getVertex2", "(", ")", ":", "e", ".", "getVertex1", "(", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "Graph", "<", "Integer", ">", "graph", "=", "new", "Graph", "<", ">", "(", "false", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:5>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:2>", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:9>", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:3>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:2>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:6>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:2>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:3>", ")", ";", "DijkstraShortestPath", "dsp", "=", "new", "DijkstraShortestPath", "(", ")", ";", "Vertex", "<", "Integer", ">", "sourceVertex", "=", "graph", ".", "getVertex", "(", "1", ")", ";", "Map", "<", "Vertex", "<", "Integer", ">", ",", "Integer", ">", "distance", "=", "dsp", ".", "shortestPath", "(", "graph", ",", "sourceVertex", ")", ";", "System", ".", "out", ".", "print", "(", "distance", ")", ";", "}", "</s>"]
["<s>", "public", "int", "countTriangles", "(", "Graph", "<", "Integer", ">", "graph", ")", "{", "Map", "<", "Vertex", "<", "Integer", ">", ",", "Boolean", ">", "visited", "=", "new", "HashMap", "<", "Vertex", "<", "Integer", ">", ",", "Boolean", ">", "(", ")", ";", "int", "count", "=", "0", ";", "for", "(", "Vertex", "<", "Integer", ">", "vertex", ":", "graph", ".", "getAllVertex", "(", ")", ")", "{", "count", "+", "=", "DFS", "(", "vertex", ",", "visited", ",", "null", ")", ";", "}", "return", "count", ";", "}", "</s>"]
["<s>", "public", "int", "DFS", "(", "Vertex", "<", "Integer", ">", "vertex", ",", "Map", "<", "Vertex", "<", "Integer", ">", ",", "Boolean", ">", "visited", ",", "Vertex", "<", "Integer", ">", "parent", ")", "{", "if", "(", "visited", ".", "containsKey", "(", "vertex", ")", ")", "{", "return", "0", ";", "}", "visited", ".", "put", "(", "vertex", ",", "true", ")", ";", "int", "count", "=", "0", ";", "for", "(", "Vertex", "<", "Integer", ">", "child", ":", "vertex", ".", "getAdjacentVertexes", "(", ")", ")", "{", "if", "(", "child", ".", "equals", "(", "parent", ")", ")", "{", "continue", ";", "}", "if", "(", "visited", ".", "containsKey", "(", "child", ")", ")", "{", "count", "+", "=", "isNeighbor", "(", "child", ",", "parent", ")", "?", "1", ":", "0", ";", "}", "else", "{", "count", "+", "=", "DFS", "(", "child", ",", "visited", ",", "vertex", ")", ";", "}", "}", "return", "count", ";", "}", "</s>"]
["<s>", "private", "boolean", "isNeighbor", "(", "Vertex", "<", "Integer", ">", "vertex", ",", "Vertex", "<", "Integer", ">", "destVertex", ")", "{", "for", "(", "Vertex", "<", "Integer", ">", "child", ":", "vertex", ".", "getAdjacentVertexes", "(", ")", ")", "{", "if", "(", "child", ".", "equals", "(", "destVertex", ")", ")", "{", "return", "true", ";", "}", "}", "return", "false", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "Graph", "<", "Integer", ">", "graph", "=", "new", "Graph", "<", "Integer", ">", "(", "false", ")", ";", "graph", ".", "addEdge", "(", "0", ",", "1", ")", ";", "graph", ".", "addEdge", "(", "0", ",", "<NUM_LIT:2>", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:2>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:3>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ")", ";", "graph", ".", "addEdge", "(", "0", ",", "<NUM_LIT:4>", ")", ";", "graph", ".", "addEdge", "(", "0", ",", "<NUM_LIT:3>", ")", ";", "NumberofTriangles", "not", "=", "new", "NumberofTriangles", "(", ")", ";", "System", ".", "out", ".", "println", "(", "not", ".", "countTriangles", "(", "graph", ")", ")", ";", "}", "</s>"]
["<s>", "public", "void", "add", "(", "int", "weight", ",", "T", "data", ")", "{", "Node", "node", "=", "new", "Node", "(", ")", ";", "node", ".", "weight", "=", "weight", ";", "node", ".", "data", "=", "data", ";", "allNodes", ".", "add", "(", "node", ")", ";", "int", "size", "=", "allNodes", ".", "size", "(", ")", ";", "int", "current", "=", "size", "-", "1", ";", "int", "parentIndex", "=", "(", "current", "-", "1", ")", "/", "<NUM_LIT:2>", ";", "while", "(", "parentIndex", ">", "=", "0", ")", "{", "Node", "parentNode", "=", "allNodes", ".", "get", "(", "parentIndex", ")", ";", "Node", "currentNode", "=", "allNodes", ".", "get", "(", "current", ")", ";", "if", "(", "parentNode", ".", "weight", "<", "currentNode", ".", "weight", ")", "{", "swap", "(", "parentNode", ",", "currentNode", ")", ";", "current", "=", "parentIndex", ";", "parentIndex", "=", "(", "parentIndex", "-", "1", ")", "/", "<NUM_LIT:2>", ";", "}", "else", "{", "break", ";", "}", "}", "}", "</s>"]
["<s>", "private", "void", "swap", "(", "Node", "node1", ",", "Node", "node2", ")", "{", "int", "weight", "=", "node1", ".", "weight", ";", "T", "data", "=", "node1", ".", "data", ";", "node1", ".", "data", "=", "node2", ".", "data", ";", "node1", ".", "weight", "=", "node2", ".", "weight", ";", "node2", ".", "data", "=", "data", ";", "node2", ".", "weight", "=", "weight", ";", "}", "</s>"]
["<s>", "public", "T", "max", "(", ")", "{", "return", "allNodes", ".", "get", "(", "0", ")", ".", "data", ";", "}", "</s>"]
["<s>", "public", "boolean", "empty", "(", ")", "{", "return", "allNodes", ".", "size", "(", ")", "=", "=", "0", ";", "}", "</s>"]
["<s>", "public", "T", "extractMap", "(", ")", "{", "int", "size", "=", "allNodes", ".", "size", "(", ")", "-", "1", ";", "T", "max", "=", "allNodes", ".", "get", "(", "0", ")", ".", "data", ";", "int", "lastNodeWeight", "=", "allNodes", ".", "get", "(", "size", ")", ".", "weight", ";", "allNodes", ".", "get", "(", "0", ")", ".", "weight", "=", "lastNodeWeight", ";", "allNodes", ".", "get", "(", "0", ")", ".", "data", "=", "allNodes", ".", "get", "(", "size", ")", ".", "data", ";", "allNodes", ".", "remove", "(", "size", ")", ";", "int", "currentIndex", "=", "0", ";", "size", "-", "-", ";", "while", "(", "true", ")", "{", "int", "left", "=", "<NUM_LIT:2>", "*", "currentIndex", "+", "1", ";", "int", "right", "=", "<NUM_LIT:2>", "*", "currentIndex", "+", "<NUM_LIT:2>", ";", "if", "(", "left", ">", "size", ")", "{", "break", ";", "}", "if", "(", "right", ">", "size", ")", "{", "right", "=", "left", ";", "}", "int", "largerIndex", "=", "allNodes", ".", "get", "(", "left", ")", ".", "weight", ">", "=", "allNodes", ".", "get", "(", "right", ")", ".", "weight", "?", "left", ":", "right", ";", "if", "(", "allNodes", ".", "get", "(", "currentIndex", ")", ".", "weight", "<", "allNodes", ".", "get", "(", "largerIndex", ")", ".", "weight", ")", "{", "swap", "(", "allNodes", ".", "get", "(", "currentIndex", ")", ",", "allNodes", ".", "get", "(", "largerIndex", ")", ")", ";", "currentIndex", "=", "largerIndex", ";", "}", "else", "{", "break", ";", "}", "}", "return", "max", ";", "}", "</s>"]
["<s>", "public", "void", "printHeap", "(", ")", "{", "for", "(", "Node", "n", ":", "allNodes", ")", "{", "System", ".", "out", ".", "println", "(", "n", ".", "weight", "+", "\"", "\"", "+", "n", ".", "data", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "BinaryMaxHeap", "<", "String", ">", "heap", "=", "new", "BinaryMaxHeap", "<", "String", ">", "(", ")", ";", "heap", ".", "add", "(", "<NUM_LIT:3>", ",", "\"", "<STR_LIT>", "\"", ")", ";", "heap", ".", "add", "(", "<NUM_LIT:4>", ",", "\"", "<STR_LIT>", "\"", ")", ";", "heap", ".", "add", "(", "<NUM_LIT:8>", ",", "\"", "<STR_LIT>", "\"", ")", ";", "heap", ".", "add", "(", "<NUM_LIT:10>", ",", "\"", "<STR_LIT>", "\"", ")", ";", "heap", ".", "add", "(", "<NUM_LIT:5>", ",", "\"", "<STR_LIT>", "\"", ")", ";", "heap", ".", "add", "(", "<NUM_LIT:6>", ",", "\"", "<STR_LIT>", "\"", ")", ";", "heap", ".", "printHeap", "(", ")", ";", "}", "</s>"]
["<s>", "public", "void", "fill", "(", "char", "board", "[", "]", "[", "]", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "board", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "board", "[", "i", "]", "[", "0", "]", "=", "=", "<CHAR_LIT>", ")", "{", "markNotFill", "(", "board", ",", "i", ",", "0", ")", ";", "}", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "board", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "board", "[", "i", "]", "[", "board", ".", "length", "-", "1", "]", "=", "=", "<CHAR_LIT>", ")", "{", "markNotFill", "(", "board", ",", "i", ",", "board", ".", "length", "-", "1", ")", ";", "}", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "board", "[", "0", "]", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "board", "[", "0", "]", "[", "i", "]", "=", "=", "<CHAR_LIT>", ")", "{", "markNotFill", "(", "board", ",", "0", ",", "i", ")", ";", "}", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "board", "[", "0", "]", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "board", "[", "board", ".", "length", "-", "1", "]", "[", "i", "]", "=", "=", "<CHAR_LIT>", ")", "{", "markNotFill", "(", "board", ",", "board", ".", "length", "-", "1", ",", "i", ")", ";", "}", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "board", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "board", "[", "0", "]", ".", "length", ";", "j", "+", "+", ")", "{", "if", "(", "board", "[", "i", "]", "[", "j", "]", "=", "=", "<CHAR_LIT>", ")", "{", "board", "[", "i", "]", "[", "j", "]", "=", "<CHAR_LIT>", ";", "}", "else", "if", "(", "board", "[", "i", "]", "[", "j", "]", "=", "=", "<CHAR_LIT:->", ")", "{", "board", "[", "i", "]", "[", "j", "]", "=", "<CHAR_LIT>", ";", "}", "}", "}", "}", "</s>"]
["<s>", "private", "void", "markNotFill", "(", "char", "board", "[", "]", "[", "]", ",", "int", "i", ",", "int", "j", ")", "{", "if", "(", "i", "<", "0", "|", "|", "i", ">", "=", "board", ".", "length", "|", "|", "j", "<", "0", "|", "|", "j", ">", "board", "[", "i", "]", ".", "length", ")", "{", "return", ";", "}", "if", "(", "board", "[", "i", "]", "[", "j", "]", "=", "=", "<CHAR_LIT>", "|", "|", "board", "[", "i", "]", "[", "j", "]", "=", "=", "<CHAR_LIT:->", ")", "{", "return", ";", "}", "board", "[", "i", "]", "[", "j", "]", "=", "<CHAR_LIT:->", ";", "for", "(", "int", "k", "=", "i", "-", "1", ";", "k", "<", "=", "i", "+", "1", ";", "k", "+", "+", ")", "{", "for", "(", "int", "l", "=", "j", "-", "1", ";", "l", "<", "=", "j", "+", "1", ";", "l", "+", "+", ")", "{", "if", "(", "k", "=", "=", "i", "&", "&", "j", "=", "=", "l", ")", "{", "continue", ";", "}", "markNotFill", "(", "board", ",", "k", ",", "l", ")", ";", "}", "}", "}", "</s>"]
["<s>", "void", "printArray", "(", "char", "[", "]", "[", "]", "board", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "board", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "board", "[", "i", "]", ".", "length", ";", "j", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "board", "[", "i", "]", "[", "j", "]", "+", "\"", "\"", ")", ";", "}", "System", ".", "out", ".", "println", "(", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "FillOsWIthXsIfSurroundedByXs", "fo", "=", "new", "FillOsWIthXsIfSurroundedByXs", "(", ")", ";", "char", "board", "[", "]", "[", "]", "=", "{", "{", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", "}", ",", "{", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", "}", ",", "{", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", "}", ",", "{", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", "}", "}", ";", "fo", ".", "fill", "(", "board", ")", ";", "fo", ".", "printArray", "(", "board", ")", ";", "}", "</s>"]
["<s>", "public", "Graph", "(", "boolean", "isDirected", ")", "{", "allEdges", "=", "new", "ArrayList", "<", "Edge", "<", "T", ">", ">", "(", ")", ";", "allVertex", "=", "new", "HashMap", "<", "Long", ",", "Vertex", "<", "T", ">", ">", "(", ")", ";", "this", ".", "isDirected", "=", "isDirected", ";", "}", "</s>"]
["<s>", "public", "void", "addEdge", "(", "long", "id1", ",", "long", "id2", ")", "{", "addEdge", "(", "id1", ",", "id2", ",", "0", ")", ";", "}", "</s>"]
["<s>", "public", "void", "addVertex", "(", "Vertex", "<", "T", ">", "vertex", ")", "{", "if", "(", "allVertex", ".", "containsKey", "(", "vertex", ".", "getId", "(", ")", ")", ")", "{", "return", ";", "}", "allVertex", ".", "put", "(", "vertex", ".", "getId", "(", ")", ",", "vertex", ")", ";", "for", "(", "Edge", "<", "T", ">", "edge", ":", "vertex", ".", "getEdges", "(", ")", ")", "{", "allEdges", ".", "add", "(", "edge", ")", ";", "}", "}", "</s>"]
["<s>", "public", "Vertex", "<", "T", ">", "addSingleVertex", "(", "long", "id", ")", "{", "if", "(", "allVertex", ".", "containsKey", "(", "id", ")", ")", "{", "return", "allVertex", ".", "get", "(", "id", ")", ";", "}", "Vertex", "<", "T", ">", "v", "=", "new", "Vertex", "<", "T", ">", "(", "id", ")", ";", "allVertex", ".", "put", "(", "id", ",", "v", ")", ";", "return", "v", ";", "}", "</s>"]
["<s>", "public", "Vertex", "<", "T", ">", "getVertex", "(", "long", "id", ")", "{", "return", "allVertex", ".", "get", "(", "id", ")", ";", "}", "</s>"]
["<s>", "public", "void", "addEdge", "(", "long", "id1", ",", "long", "id2", ",", "int", "weight", ")", "{", "Vertex", "<", "T", ">", "vertex1", "=", "null", ";", "if", "(", "allVertex", ".", "containsKey", "(", "id1", ")", ")", "{", "vertex1", "=", "allVertex", ".", "get", "(", "id1", ")", ";", "}", "else", "{", "vertex1", "=", "new", "Vertex", "<", "T", ">", "(", "id1", ")", ";", "allVertex", ".", "put", "(", "id1", ",", "vertex1", ")", ";", "}", "Vertex", "<", "T", ">", "vertex2", "=", "null", ";", "if", "(", "allVertex", ".", "containsKey", "(", "id2", ")", ")", "{", "vertex2", "=", "allVertex", ".", "get", "(", "id2", ")", ";", "}", "else", "{", "vertex2", "=", "new", "Vertex", "<", "T", ">", "(", "id2", ")", ";", "allVertex", ".", "put", "(", "id2", ",", "vertex2", ")", ";", "}", "Edge", "<", "T", ">", "edge", "=", "new", "Edge", "<", "T", ">", "(", "vertex1", ",", "vertex2", ",", "isDirected", ",", "weight", ")", ";", "allEdges", ".", "add", "(", "edge", ")", ";", "vertex1", ".", "addAdjacentVertex", "(", "edge", ",", "vertex2", ")", ";", "if", "(", "!", "isDirected", ")", "{", "vertex2", ".", "addAdjacentVertex", "(", "edge", ",", "vertex1", ")", ";", "}", "}", "</s>"]
["<s>", "public", "List", "<", "Edge", "<", "T", ">", ">", "getAllEdges", "(", ")", "{", "return", "allEdges", ";", "}", "</s>"]
["<s>", "public", "Collection", "<", "Vertex", "<", "T", ">", ">", "getAllVertex", "(", ")", "{", "return", "allVertex", ".", "values", "(", ")", ";", "}", "</s>"]
["<s>", "public", "void", "setDataForVertex", "(", "long", "id", ",", "T", "data", ")", "{", "if", "(", "allVertex", ".", "containsKey", "(", "id", ")", ")", "{", "Vertex", "<", "T", ">", "vertex", "=", "allVertex", ".", "get", "(", "id", ")", ";", "vertex", ".", "setData", "(", "data", ")", ";", "}", "}", "</s>"]
["<s>", "@", "Override", "public", "String", "toString", "(", ")", "{", "StringBuffer", "buffer", "=", "new", "StringBuffer", "(", ")", ";", "for", "(", "Edge", "<", "T", ">", "edge", ":", "getAllEdges", "(", ")", ")", "{", "buffer", ".", "append", "(", "edge", ".", "getVertex1", "(", ")", "+", "\"", "\"", "+", "edge", ".", "getVertex2", "(", ")", "+", "\"", "\"", "+", "edge", ".", "getWeight", "(", ")", ")", ";", "buffer", ".", "append", "(", "\"", "<STR_LIT>", "<STR_LIT>", "\"", ")", ";", "}", "return", "buffer", ".", "toString", "(", ")", ";", "}", "</s>"]
["<s>", "Vertex", "(", "long", "id", ")", "{", "this", ".", "id", "=", "id", ";", "}", "</s>"]
["<s>", "public", "long", "getId", "(", ")", "{", "return", "id", ";", "}", "</s>"]
["<s>", "public", "void", "setData", "(", "T", "data", ")", "{", "this", ".", "data", "=", "data", ";", "}", "</s>"]
["<s>", "public", "T", "getData", "(", ")", "{", "return", "data", ";", "}", "</s>"]
["<s>", "public", "void", "addAdjacentVertex", "(", "Edge", "<", "T", ">", "e", ",", "Vertex", "<", "T", ">", "v", ")", "{", "edges", ".", "add", "(", "e", ")", ";", "adjacentVertex", ".", "add", "(", "v", ")", ";", "}", "</s>"]
["<s>", "public", "String", "toString", "(", ")", "{", "return", "String", ".", "valueOf", "(", "id", ")", ";", "}", "</s>"]
["<s>", "public", "List", "<", "Vertex", "<", "T", ">", ">", "getAdjacentVertexes", "(", ")", "{", "return", "adjacentVertex", ";", "}", "</s>"]
["<s>", "public", "List", "<", "Edge", "<", "T", ">", ">", "getEdges", "(", ")", "{", "return", "edges", ";", "}", "</s>"]
["<s>", "public", "int", "getDegree", "(", ")", "{", "return", "edges", ".", "size", "(", ")", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "int", "hashCode", "(", ")", "{", "final", "int", "prime", "=", "<NUM_LIT:31>", ";", "int", "result", "=", "1", ";", "result", "=", "prime", "*", "result", "+", "(", "int", ")", "(", "id", "^", "(", "id", ">", ">", ">", "<NUM_LIT:32>", ")", ")", ";", "return", "result", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "boolean", "equals", "(", "Object", "obj", ")", "{", "if", "(", "this", "=", "=", "obj", ")", "return", "true", ";", "if", "(", "obj", "=", "=", "null", ")", "return", "false", ";", "if", "(", "getClass", "(", ")", "!", "=", "obj", ".", "getClass", "(", ")", ")", "return", "false", ";", "Vertex", "other", "=", "(", "Vertex", ")", "obj", ";", "if", "(", "id", "!", "=", "other", ".", "id", ")", "return", "false", ";", "return", "true", ";", "}", "</s>"]
["<s>", "Edge", "(", "Vertex", "<", "T", ">", "vertex1", ",", "Vertex", "<", "T", ">", "vertex2", ")", "{", "this", ".", "vertex1", "=", "vertex1", ";", "this", ".", "vertex2", "=", "vertex2", ";", "}", "</s>"]
["<s>", "Edge", "(", "Vertex", "<", "T", ">", "vertex1", ",", "Vertex", "<", "T", ">", "vertex2", ",", "boolean", "isDirected", ",", "int", "weight", ")", "{", "this", ".", "vertex1", "=", "vertex1", ";", "this", ".", "vertex2", "=", "vertex2", ";", "this", ".", "weight", "=", "weight", ";", "this", ".", "isDirected", "=", "isDirected", ";", "}", "</s>"]
["<s>", "Edge", "(", "Vertex", "<", "T", ">", "vertex1", ",", "Vertex", "<", "T", ">", "vertex2", ",", "boolean", "isDirected", ")", "{", "this", ".", "vertex1", "=", "vertex1", ";", "this", ".", "vertex2", "=", "vertex2", ";", "this", ".", "isDirected", "=", "isDirected", ";", "}", "</s>"]
["<s>", "Vertex", "<", "T", ">", "getVertex1", "(", ")", "{", "return", "vertex1", ";", "}", "</s>"]
["<s>", "Vertex", "<", "T", ">", "getVertex2", "(", ")", "{", "return", "vertex2", ";", "}", "</s>"]
["<s>", "int", "getWeight", "(", ")", "{", "return", "weight", ";", "}", "</s>"]
["<s>", "public", "boolean", "isDirected", "(", ")", "{", "return", "isDirected", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "int", "hashCode", "(", ")", "{", "final", "int", "prime", "=", "<NUM_LIT:31>", ";", "int", "result", "=", "1", ";", "result", "=", "prime", "*", "result", "+", "(", "(", "vertex1", "=", "=", "null", ")", "?", "0", ":", "vertex1", ".", "hashCode", "(", ")", ")", ";", "result", "=", "prime", "*", "result", "+", "(", "(", "vertex2", "=", "=", "null", ")", "?", "0", ":", "vertex2", ".", "hashCode", "(", ")", ")", ";", "return", "result", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "boolean", "equals", "(", "Object", "obj", ")", "{", "if", "(", "this", "=", "=", "obj", ")", "return", "true", ";", "if", "(", "obj", "=", "=", "null", ")", "return", "false", ";", "if", "(", "getClass", "(", ")", "!", "=", "obj", ".", "getClass", "(", ")", ")", "return", "false", ";", "Edge", "other", "=", "(", "Edge", ")", "obj", ";", "if", "(", "vertex1", "=", "=", "null", ")", "{", "if", "(", "other", ".", "vertex1", "!", "=", "null", ")", "return", "false", ";", "}", "else", "if", "(", "!", "vertex1", ".", "equals", "(", "other", ".", "vertex1", ")", ")", "return", "false", ";", "if", "(", "vertex2", "=", "=", "null", ")", "{", "if", "(", "other", ".", "vertex2", "!", "=", "null", ")", "return", "false", ";", "}", "else", "if", "(", "!", "vertex2", ".", "equals", "(", "other", ".", "vertex2", ")", ")", "return", "false", ";", "return", "true", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "String", "toString", "(", ")", "{", "return", "\"", "<STR_LIT>", "\"", "+", "isDirected", "+", "\"", "<STR_LIT>", "\"", "+", "vertex1", "+", "\"", "<STR_LIT>", "\"", "+", "vertex2", "+", "\"", "<STR_LIT>", "\"", "+", "weight", "+", "\"", "<STR_LIT:]>", "\"", ";", "}", "</s>"]
["<s>", "public", "void", "convert", "(", "String", "word1", ",", "String", "word2", ",", "Set", "<", "String", ">", "dict", ")", "{", "Set", "<", "String", ">", "visited", "=", "new", "HashSet", "<", "String", ">", "(", ")", ";", "Queue", "<", "String", ">", "queue", "=", "new", "LinkedList", "<", "String", ">", "(", ")", ";", "Map", "<", "String", ",", "String", ">", "parentMap", "=", "new", "HashMap", "<", "String", ",", "String", ">", "(", ")", ";", "queue", ".", "add", "(", "word1", ")", ";", "visited", ".", "add", "(", "word1", ")", ";", "while", "(", "queue", ".", "size", "(", ")", "!", "=", "0", ")", "{", "String", "word", "=", "queue", ".", "poll", "(", ")", ";", "if", "(", "word", ".", "equals", "(", "word2", ")", ")", "{", "break", ";", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "word", ".", "length", "(", ")", ";", "i", "+", "+", ")", "{", "for", "(", "int", "ch", "=", "<CHAR_LIT:a>", ";", "ch", "<", "=", "<CHAR_LIT>", ";", "ch", "+", "+", ")", "{", "String", "newWord", "=", "replace", "(", "word", ",", "i", ",", "(", "char", ")", "ch", ")", ";", "if", "(", "dict", ".", "contains", "(", "newWord", ")", ")", "{", "if", "(", "!", "visited", ".", "contains", "(", "newWord", ")", ")", "{", "parentMap", ".", "put", "(", "newWord", ",", "word", ")", ";", "queue", ".", "add", "(", "newWord", ")", ";", "visited", ".", "add", "(", "newWord", ")", ";", "}", "}", "}", "}", "}", "String", "word", "=", "word2", ";", "while", "(", "word", "!", "=", "null", ")", "{", "System", ".", "out", ".", "println", "(", "word", ")", ";", "word", "=", "parentMap", ".", "get", "(", "word", ")", ";", "}", "}", "</s>"]
["<s>", "public", "String", "replace", "(", "String", "newWord", ",", "int", "pos", ",", "char", "ch", ")", "{", "StringBuffer", "buffer", "=", "new", "StringBuffer", "(", ")", ";", "buffer", ".", "append", "(", "newWord", ".", "substring", "(", "0", ",", "pos", ")", ")", ";", "buffer", ".", "append", "(", "ch", ")", ";", "buffer", ".", "append", "(", "newWord", ".", "substring", "(", "pos", "+", "1", ",", "newWord", ".", "length", "(", ")", ")", ")", ";", "return", "buffer", ".", "toString", "(", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "Set", "<", "String", ">", "dictionary", "=", "new", "HashSet", "<", "String", ">", "(", ")", ";", "dictionary", ".", "add", "(", "\"", "<STR_LIT>", "\"", ")", ";", "dictionary", ".", "add", "(", "\"", "<STR_LIT>", "\"", ")", ";", "dictionary", ".", "add", "(", "\"", "<STR_LIT>", "\"", ")", ";", "dictionary", ".", "add", "(", "\"", "<STR_LIT>", "\"", ")", ";", "dictionary", ".", "add", "(", "\"", "<STR_LIT>", "\"", ")", ";", "ConvertOneWordToAnother", "cow", "=", "new", "ConvertOneWordToAnother", "(", ")", ";", "cow", ".", "convert", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "dictionary", ")", ";", "}", "</s>"]
["<s>", "public", "int", "numberOfIsland", "(", "int", "[", "]", "[", "]", "graph", ")", "{", "boolean", "[", "]", "[", "]", "visited", "=", "new", "boolean", "[", "graph", ".", "length", "]", "[", "graph", ".", "length", "]", ";", "int", "count", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "graph", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "graph", "[", "i", "]", ".", "length", ";", "j", "+", "+", ")", "{", "if", "(", "visited", "[", "i", "]", "[", "j", "]", "=", "=", "false", "&", "&", "graph", "[", "i", "]", "[", "j", "]", "=", "=", "1", ")", "{", "count", "+", "+", ";", "DFS", "(", "graph", ",", "visited", ",", "i", ",", "j", ")", ";", "}", "}", "}", "return", "count", ";", "}", "</s>"]
["<s>", "private", "void", "DFS", "(", "int", "[", "]", "[", "]", "graph", ",", "boolean", "[", "]", "[", "]", "visited", ",", "int", "i", ",", "int", "j", ")", "{", "if", "(", "i", "<", "0", "|", "|", "j", "<", "0", "|", "|", "i", "=", "=", "graph", ".", "length", "|", "|", "j", "=", "=", "graph", "[", "i", "]", ".", "length", ")", "{", "return", ";", "}", "visited", "[", "i", "]", "[", "j", "]", "=", "true", ";", "if", "(", "graph", "[", "i", "]", "[", "j", "]", "=", "=", "0", ")", "{", "return", ";", "}", "DFS", "(", "graph", ",", "visited", ",", "i", ",", "j", "+", "1", ")", ";", "DFS", "(", "graph", ",", "visited", ",", "i", "+", "1", ",", "j", ")", ";", "DFS", "(", "graph", ",", "visited", ",", "i", "+", "1", ",", "j", "+", "1", ")", ";", "DFS", "(", "graph", ",", "visited", ",", "i", "-", "1", ",", "j", "+", "1", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "matrix", "[", "]", "[", "]", "=", "{", "{", "1", ",", "1", ",", "0", ",", "1", ",", "0", "}", ",", "{", "1", ",", "0", ",", "0", ",", "1", ",", "1", "}", ",", "{", "0", ",", "0", ",", "0", ",", "0", ",", "0", "}", ",", "{", "1", ",", "0", ",", "1", ",", "0", ",", "1", "}", ",", "{", "1", ",", "0", ",", "0", ",", "0", ",", "0", "}", "}", ";", "NumberOfIsland", "island", "=", "new", "NumberOfIsland", "(", ")", ";", "int", "count", "=", "island", ".", "numberOfIsland", "(", "matrix", ")", ";", "System", ".", "out", ".", "println", "(", "count", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "containsData", "(", "T", "key", ")", "{", "return", "nodePosition", ".", "containsKey", "(", "key", ")", ";", "}", "</s>"]
["<s>", "public", "void", "add", "(", "int", "weight", ",", "T", "key", ")", "{", "Node", "node", "=", "new", "Node", "(", ")", ";", "node", ".", "weight", "=", "weight", ";", "node", ".", "key", "=", "key", ";", "allNodes", ".", "add", "(", "node", ")", ";", "int", "size", "=", "allNodes", ".", "size", "(", ")", ";", "int", "current", "=", "size", "-", "1", ";", "int", "parentIndex", "=", "(", "current", "-", "1", ")", "/", "<NUM_LIT:2>", ";", "nodePosition", ".", "put", "(", "node", ".", "key", ",", "current", ")", ";", "while", "(", "parentIndex", ">", "=", "0", ")", "{", "Node", "parentNode", "=", "allNodes", ".", "get", "(", "parentIndex", ")", ";", "Node", "currentNode", "=", "allNodes", ".", "get", "(", "current", ")", ";", "if", "(", "parentNode", ".", "weight", ">", "currentNode", ".", "weight", ")", "{", "swap", "(", "parentNode", ",", "currentNode", ")", ";", "updatePositionMap", "(", "parentNode", ".", "key", ",", "currentNode", ".", "key", ",", "parentIndex", ",", "current", ")", ";", "current", "=", "parentIndex", ";", "parentIndex", "=", "(", "parentIndex", "-", "1", ")", "/", "<NUM_LIT:2>", ";", "}", "else", "{", "break", ";", "}", "}", "}", "</s>"]
["<s>", "public", "T", "min", "(", ")", "{", "return", "allNodes", ".", "get", "(", "0", ")", ".", "key", ";", "}", "</s>"]
["<s>", "public", "boolean", "empty", "(", ")", "{", "return", "allNodes", ".", "size", "(", ")", "=", "=", "0", ";", "}", "</s>"]
["<s>", "public", "void", "decrease", "(", "T", "data", ",", "int", "newWeight", ")", "{", "Integer", "position", "=", "nodePosition", ".", "get", "(", "data", ")", ";", "allNodes", ".", "get", "(", "position", ")", ".", "weight", "=", "newWeight", ";", "int", "parent", "=", "(", "position", "-", "1", ")", "/", "<NUM_LIT:2>", ";", "while", "(", "parent", ">", "=", "0", ")", "{", "if", "(", "allNodes", ".", "get", "(", "parent", ")", ".", "weight", ">", "allNodes", ".", "get", "(", "position", ")", ".", "weight", ")", "{", "swap", "(", "allNodes", ".", "get", "(", "parent", ")", ",", "allNodes", ".", "get", "(", "position", ")", ")", ";", "updatePositionMap", "(", "allNodes", ".", "get", "(", "parent", ")", ".", "key", ",", "allNodes", ".", "get", "(", "position", ")", ".", "key", ",", "parent", ",", "position", ")", ";", "position", "=", "parent", ";", "parent", "=", "(", "parent", "-", "1", ")", "/", "<NUM_LIT:2>", ";", "}", "else", "{", "break", ";", "}", "}", "}", "</s>"]
["<s>", "public", "Integer", "getWeight", "(", "T", "key", ")", "{", "Integer", "position", "=", "nodePosition", ".", "get", "(", "key", ")", ";", "if", "(", "position", "=", "=", "null", ")", "{", "return", "null", ";", "}", "else", "{", "return", "allNodes", ".", "get", "(", "position", ")", ".", "weight", ";", "}", "}", "</s>"]
["<s>", "public", "Node", "extractMinNode", "(", ")", "{", "int", "size", "=", "allNodes", ".", "size", "(", ")", "-", "1", ";", "Node", "minNode", "=", "new", "Node", "(", ")", ";", "minNode", ".", "key", "=", "allNodes", ".", "get", "(", "0", ")", ".", "key", ";", "minNode", ".", "weight", "=", "allNodes", ".", "get", "(", "0", ")", ".", "weight", ";", "int", "lastNodeWeight", "=", "allNodes", ".", "get", "(", "size", ")", ".", "weight", ";", "allNodes", ".", "get", "(", "0", ")", ".", "weight", "=", "lastNodeWeight", ";", "allNodes", ".", "get", "(", "0", ")", ".", "key", "=", "allNodes", ".", "get", "(", "size", ")", ".", "key", ";", "nodePosition", ".", "remove", "(", "minNode", ".", "key", ")", ";", "nodePosition", ".", "remove", "(", "allNodes", ".", "get", "(", "0", ")", ")", ";", "nodePosition", ".", "put", "(", "allNodes", ".", "get", "(", "0", ")", ".", "key", ",", "0", ")", ";", "allNodes", ".", "remove", "(", "size", ")", ";", "int", "currentIndex", "=", "0", ";", "size", "-", "-", ";", "while", "(", "true", ")", "{", "int", "left", "=", "<NUM_LIT:2>", "*", "currentIndex", "+", "1", ";", "int", "right", "=", "<NUM_LIT:2>", "*", "currentIndex", "+", "<NUM_LIT:2>", ";", "if", "(", "left", ">", "size", ")", "{", "break", ";", "}", "if", "(", "right", ">", "size", ")", "{", "right", "=", "left", ";", "}", "int", "smallerIndex", "=", "allNodes", ".", "get", "(", "left", ")", ".", "weight", "<", "=", "allNodes", ".", "get", "(", "right", ")", ".", "weight", "?", "left", ":", "right", ";", "if", "(", "allNodes", ".", "get", "(", "currentIndex", ")", ".", "weight", ">", "allNodes", ".", "get", "(", "smallerIndex", ")", ".", "weight", ")", "{", "swap", "(", "allNodes", ".", "get", "(", "currentIndex", ")", ",", "allNodes", ".", "get", "(", "smallerIndex", ")", ")", ";", "updatePositionMap", "(", "allNodes", ".", "get", "(", "currentIndex", ")", ".", "key", ",", "allNodes", ".", "get", "(", "smallerIndex", ")", ".", "key", ",", "currentIndex", ",", "smallerIndex", ")", ";", "currentIndex", "=", "smallerIndex", ";", "}", "else", "{", "break", ";", "}", "}", "return", "minNode", ";", "}", "</s>"]
["<s>", "public", "T", "extractMin", "(", ")", "{", "Node", "node", "=", "extractMinNode", "(", ")", ";", "return", "node", ".", "key", ";", "}", "</s>"]
["<s>", "private", "void", "printPositionMap", "(", ")", "{", "System", ".", "out", ".", "println", "(", "nodePosition", ")", ";", "}", "</s>"]
["<s>", "private", "void", "swap", "(", "Node", "node1", ",", "Node", "node2", ")", "{", "int", "weight", "=", "node1", ".", "weight", ";", "T", "data", "=", "node1", ".", "key", ";", "node1", ".", "key", "=", "node2", ".", "key", ";", "node1", ".", "weight", "=", "node2", ".", "weight", ";", "node2", ".", "key", "=", "data", ";", "node2", ".", "weight", "=", "weight", ";", "}", "</s>"]
["<s>", "private", "void", "updatePositionMap", "(", "T", "data1", ",", "T", "data2", ",", "int", "pos1", ",", "int", "pos2", ")", "{", "nodePosition", ".", "remove", "(", "data1", ")", ";", "nodePosition", ".", "remove", "(", "data2", ")", ";", "nodePosition", ".", "put", "(", "data1", ",", "pos1", ")", ";", "nodePosition", ".", "put", "(", "data2", ",", "pos2", ")", ";", "}", "</s>"]
["<s>", "public", "void", "printHeap", "(", ")", "{", "for", "(", "Node", "n", ":", "allNodes", ")", "{", "System", ".", "out", ".", "println", "(", "n", ".", "weight", "+", "\"", "\"", "+", "n", ".", "key", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "BinaryMinHeap", "<", "String", ">", "heap", "=", "new", "BinaryMinHeap", "<", "String", ">", "(", ")", ";", "heap", ".", "add", "(", "<NUM_LIT:3>", ",", "\"", "<STR_LIT>", "\"", ")", ";", "heap", ".", "add", "(", "<NUM_LIT:4>", ",", "\"", "<STR_LIT>", "\"", ")", ";", "heap", ".", "add", "(", "<NUM_LIT:8>", ",", "\"", "<STR_LIT>", "\"", ")", ";", "heap", ".", "add", "(", "<NUM_LIT:10>", ",", "\"", "<STR_LIT>", "\"", ")", ";", "heap", ".", "add", "(", "<NUM_LIT:5>", ",", "\"", "<STR_LIT>", "\"", ")", ";", "heap", ".", "add", "(", "<NUM_LIT:6>", ",", "\"", "<STR_LIT>", "\"", ")", ";", "heap", ".", "add", "(", "<NUM_LIT:2>", ",", "\"", "<STR_LIT>", "\"", ")", ";", "heap", ".", "decrease", "(", "\"", "<STR_LIT>", "\"", ",", "1", ")", ";", "heap", ".", "printHeap", "(", ")", ";", "heap", ".", "printPositionMap", "(", ")", ";", "}", "</s>"]
["<s>", "public", "Deque", "<", "Vertex", "<", "T", ">", ">", "topSort", "(", "Graph", "<", "T", ">", "graph", ")", "{", "Deque", "<", "Vertex", "<", "T", ">", ">", "stack", "=", "new", "ArrayDeque", "<", ">", "(", ")", ";", "Set", "<", "Vertex", "<", "T", ">", ">", "visited", "=", "new", "HashSet", "<", ">", "(", ")", ";", "for", "(", "Vertex", "<", "T", ">", "vertex", ":", "graph", ".", "getAllVertex", "(", ")", ")", "{", "if", "(", "visited", ".", "contains", "(", "vertex", ")", ")", "{", "continue", ";", "}", "topSortUtil", "(", "vertex", ",", "stack", ",", "visited", ")", ";", "}", "return", "stack", ";", "}", "</s>"]
["<s>", "private", "void", "topSortUtil", "(", "Vertex", "<", "T", ">", "vertex", ",", "Deque", "<", "Vertex", "<", "T", ">", ">", "stack", ",", "Set", "<", "Vertex", "<", "T", ">", ">", "visited", ")", "{", "visited", ".", "add", "(", "vertex", ")", ";", "for", "(", "Vertex", "<", "T", ">", "childVertex", ":", "vertex", ".", "getAdjacentVertexes", "(", ")", ")", "{", "if", "(", "visited", ".", "contains", "(", "childVertex", ")", ")", "{", "continue", ";", "}", "topSortUtil", "(", "childVertex", ",", "stack", ",", "visited", ")", ";", "}", "stack", ".", "offerFirst", "(", "vertex", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "Graph", "<", "Integer", ">", "graph", "=", "new", "Graph", "<", ">", "(", "true", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:3>", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:2>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:6>", ",", "<NUM_LIT:3>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:3>", ",", "<NUM_LIT:8>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:8>", ",", "<NUM_LIT:11>", ")", ";", "TopologicalSort", "<", "Integer", ">", "sort", "=", "new", "TopologicalSort", "<", "Integer", ">", "(", ")", ";", "Deque", "<", "Vertex", "<", "Integer", ">", ">", "result", "=", "sort", ".", "topSort", "(", "graph", ")", ";", "while", "(", "!", "result", ".", "isEmpty", "(", ")", ")", "{", "System", ".", "out", ".", "println", "(", "result", ".", "poll", "(", ")", ")", ";", "}", "}", "</s>"]
["<s>", "public", "int", "maxFlow", "(", "int", "capacity", "[", "]", "[", "]", ",", "int", "source", ",", "int", "sink", ")", "{", "int", "residualCapacity", "[", "]", "[", "]", "=", "new", "int", "[", "capacity", ".", "length", "]", "[", "capacity", "[", "0", "]", ".", "length", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "capacity", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "capacity", "[", "0", "]", ".", "length", ";", "j", "+", "+", ")", "{", "residualCapacity", "[", "i", "]", "[", "j", "]", "=", "capacity", "[", "i", "]", "[", "j", "]", ";", "}", "}", "Map", "<", "Integer", ",", "Integer", ">", "parent", "=", "new", "HashMap", "<", ">", "(", ")", ";", "List", "<", "List", "<", "Integer", ">", ">", "augmentedPaths", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "int", "maxFlow", "=", "0", ";", "while", "(", "BFS", "(", "residualCapacity", ",", "parent", ",", "source", ",", "sink", ")", ")", "{", "List", "<", "Integer", ">", "augmentedPath", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "int", "flow", "=", "Integer", ".", "MAX_VALUE", ";", "int", "v", "=", "sink", ";", "while", "(", "v", "!", "=", "source", ")", "{", "augmentedPath", ".", "add", "(", "v", ")", ";", "int", "u", "=", "parent", ".", "get", "(", "v", ")", ";", "if", "(", "flow", ">", "residualCapacity", "[", "u", "]", "[", "v", "]", ")", "{", "flow", "=", "residualCapacity", "[", "u", "]", "[", "v", "]", ";", "}", "v", "=", "u", ";", "}", "augmentedPath", ".", "add", "(", "source", ")", ";", "Collections", ".", "reverse", "(", "augmentedPath", ")", ";", "augmentedPaths", ".", "add", "(", "augmentedPath", ")", ";", "maxFlow", "+", "=", "flow", ";", "v", "=", "sink", ";", "while", "(", "v", "!", "=", "source", ")", "{", "int", "u", "=", "parent", ".", "get", "(", "v", ")", ";", "residualCapacity", "[", "u", "]", "[", "v", "]", "-", "=", "flow", ";", "residualCapacity", "[", "v", "]", "[", "u", "]", "+", "=", "flow", ";", "v", "=", "u", ";", "}", "}", "printAugmentedPaths", "(", "augmentedPaths", ")", ";", "return", "maxFlow", ";", "}", "</s>"]
["<s>", "private", "void", "printAugmentedPaths", "(", "List", "<", "List", "<", "Integer", ">", ">", "augmentedPaths", ")", "{", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", ")", ";", "augmentedPaths", ".", "forEach", "(", "path", "-", ">", "{", "path", ".", "forEach", "(", "i", "-", ">", "System", ".", "out", ".", "print", "(", "i", "+", "\"", "\"", ")", ")", ";", "System", ".", "out", ".", "println", "(", ")", ";", "}", ")", ";", "}", "</s>"]
["<s>", "private", "boolean", "BFS", "(", "int", "[", "]", "[", "]", "residualCapacity", ",", "Map", "<", "Integer", ",", "Integer", ">", "parent", ",", "int", "source", ",", "int", "sink", ")", "{", "Set", "<", "Integer", ">", "visited", "=", "new", "HashSet", "<", ">", "(", ")", ";", "Queue", "<", "Integer", ">", "queue", "=", "new", "LinkedList", "<", ">", "(", ")", ";", "queue", ".", "add", "(", "source", ")", ";", "visited", ".", "add", "(", "source", ")", ";", "boolean", "foundAugmentedPath", "=", "false", ";", "while", "(", "!", "queue", ".", "isEmpty", "(", ")", ")", "{", "int", "u", "=", "queue", ".", "poll", "(", ")", ";", "for", "(", "int", "v", "=", "0", ";", "v", "<", "residualCapacity", ".", "length", ";", "v", "+", "+", ")", "{", "if", "(", "!", "visited", ".", "contains", "(", "v", ")", "&", "&", "residualCapacity", "[", "u", "]", "[", "v", "]", ">", "0", ")", "{", "parent", ".", "put", "(", "v", ",", "u", ")", ";", "visited", ".", "add", "(", "v", ")", ";", "queue", ".", "add", "(", "v", ")", ";", "if", "(", "v", "=", "=", "sink", ")", "{", "foundAugmentedPath", "=", "true", ";", "break", ";", "}", "}", "}", "}", "return", "foundAugmentedPath", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "FordFulkerson", "ff", "=", "new", "FordFulkerson", "(", ")", ";", "int", "[", "]", "[", "]", "capacity", "=", "{", "{", "0", ",", "<NUM_LIT:3>", ",", "0", ",", "<NUM_LIT:3>", ",", "0", ",", "0", ",", "0", "}", ",", "{", "0", ",", "0", ",", "<NUM_LIT:4>", ",", "0", ",", "0", ",", "0", ",", "0", "}", ",", "{", "<NUM_LIT:3>", ",", "0", ",", "0", ",", "1", ",", "<NUM_LIT:2>", ",", "0", ",", "0", "}", ",", "{", "0", ",", "0", ",", "0", ",", "0", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:6>", ",", "0", "}", ",", "{", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", "}", ",", "{", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "<NUM_LIT:9>", "}", ",", "{", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "}", "}", ";", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "<STR_LIT>", "\"", "+", "ff", ".", "maxFlow", "(", "capacity", ",", "0", ",", "<NUM_LIT:6>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "[", "]", "[", "]", "getTransitiveClosure", "(", "int", "[", "]", "[", "]", "graph", ")", "{", "int", "rows", "=", "graph", ".", "length", ";", "int", "cols", "=", "graph", "[", "0", "]", ".", "length", ";", "boolean", "[", "]", "[", "]", "result", "=", "new", "boolean", "[", "rows", "]", "[", "cols", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "graph", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "graph", ".", "length", ";", "j", "+", "+", ")", "{", "if", "(", "graph", "[", "i", "]", "[", "j", "]", "!", "=", "<NUM_LIT:100>", ")", "{", "result", "[", "i", "]", "[", "j", "]", "=", "true", ";", "}", "}", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "rows", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "rows", ";", "j", "+", "+", ")", "{", "for", "(", "int", "k", "=", "0", ";", "k", "<", "rows", ";", "k", "+", "+", ")", "{", "result", "[", "i", "]", "[", "j", "]", "=", "result", "[", "i", "]", "[", "j", "]", "|", "|", "(", "result", "[", "i", "]", "[", "k", "]", "&", "&", "result", "[", "k", "]", "[", "j", "]", ")", ";", "}", "}", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "TransitiveClosure", "closure", "=", "new", "TransitiveClosure", "(", ")", ";", "int", "[", "]", "[", "]", "graph", "=", "{", "{", "0", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:100>", "}", ",", "{", "<NUM_LIT:100>", ",", "0", ",", "<NUM_LIT:100>", ",", "1", ",", "<NUM_LIT:100>", "}", ",", "{", "<NUM_LIT:100>", ",", "<NUM_LIT:100>", ",", "0", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:100>", "}", ",", "{", "<NUM_LIT:100>", ",", "<NUM_LIT:100>", ",", "<NUM_LIT:3>", ",", "0", ",", "<NUM_LIT:2>", "}", ",", "{", "<NUM_LIT:100>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:100>", ",", "<NUM_LIT:100>", ",", "0", "}", "}", ";", "boolean", "result", "[", "]", "[", "]", "=", "closure", ".", "getTransitiveClosure", "(", "graph", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "result", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "result", ".", "length", ";", "j", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "result", "[", "i", "]", "[", "j", "]", "+", "\"", "\"", ")", ";", "}", "System", ".", "out", ".", "println", "(", ")", ";", "}", "}", "</s>"]
["<s>", "public", "List", "<", "Set", "<", "Vertex", "<", "Integer", ">", ">", ">", "scc", "(", "Graph", "<", "Integer", ">", "graph", ")", "{", "Deque", "<", "Vertex", "<", "Integer", ">", ">", "stack", "=", "new", "ArrayDeque", "<", ">", "(", ")", ";", "Set", "<", "Vertex", "<", "Integer", ">", ">", "visited", "=", "new", "HashSet", "<", ">", "(", ")", ";", "for", "(", "Vertex", "<", "Integer", ">", "vertex", ":", "graph", ".", "getAllVertex", "(", ")", ")", "{", "if", "(", "visited", ".", "contains", "(", "vertex", ")", ")", "{", "continue", ";", "}", "DFSUtil", "(", "vertex", ",", "visited", ",", "stack", ")", ";", "}", "Graph", "<", "Integer", ">", "reverseGraph", "=", "reverseGraph", "(", "graph", ")", ";", "visited", ".", "clear", "(", ")", ";", "List", "<", "Set", "<", "Vertex", "<", "Integer", ">", ">", ">", "result", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "while", "(", "!", "stack", ".", "isEmpty", "(", ")", ")", "{", "Vertex", "<", "Integer", ">", "vertex", "=", "reverseGraph", ".", "getVertex", "(", "stack", ".", "poll", "(", ")", ".", "getId", "(", ")", ")", ";", "if", "(", "visited", ".", "contains", "(", "vertex", ")", ")", "{", "continue", ";", "}", "Set", "<", "Vertex", "<", "Integer", ">", ">", "set", "=", "new", "HashSet", "<", ">", "(", ")", ";", "DFSUtilForReverseGraph", "(", "vertex", ",", "visited", ",", "set", ")", ";", "result", ".", "add", "(", "set", ")", ";", "}", "return", "result", ";", "}", "</s>"]
["<s>", "private", "Graph", "<", "Integer", ">", "reverseGraph", "(", "Graph", "<", "Integer", ">", "graph", ")", "{", "Graph", "<", "Integer", ">", "reverseGraph", "=", "new", "Graph", "<", ">", "(", "true", ")", ";", "for", "(", "Edge", "<", "Integer", ">", "edge", ":", "graph", ".", "getAllEdges", "(", ")", ")", "{", "reverseGraph", ".", "addEdge", "(", "edge", ".", "getVertex2", "(", ")", ".", "getId", "(", ")", ",", "edge", ".", "getVertex1", "(", ")", ".", "getId", "(", ")", ",", "edge", ".", "getWeight", "(", ")", ")", ";", "}", "return", "reverseGraph", ";", "}", "</s>"]
["<s>", "private", "void", "DFSUtil", "(", "Vertex", "<", "Integer", ">", "vertex", ",", "Set", "<", "Vertex", "<", "Integer", ">", ">", "visited", ",", "Deque", "<", "Vertex", "<", "Integer", ">", ">", "stack", ")", "{", "visited", ".", "add", "(", "vertex", ")", ";", "for", "(", "Vertex", "<", "Integer", ">", "v", ":", "vertex", ".", "getAdjacentVertexes", "(", ")", ")", "{", "if", "(", "visited", ".", "contains", "(", "v", ")", ")", "{", "continue", ";", "}", "DFSUtil", "(", "v", ",", "visited", ",", "stack", ")", ";", "}", "stack", ".", "offerFirst", "(", "vertex", ")", ";", "}", "</s>"]
["<s>", "private", "void", "DFSUtilForReverseGraph", "(", "Vertex", "<", "Integer", ">", "vertex", ",", "Set", "<", "Vertex", "<", "Integer", ">", ">", "visited", ",", "Set", "<", "Vertex", "<", "Integer", ">", ">", "set", ")", "{", "visited", ".", "add", "(", "vertex", ")", ";", "set", ".", "add", "(", "vertex", ")", ";", "for", "(", "Vertex", "<", "Integer", ">", "v", ":", "vertex", ".", "getAdjacentVertexes", "(", ")", ")", "{", "if", "(", "visited", ".", "contains", "(", "v", ")", ")", "{", "continue", ";", "}", "DFSUtilForReverseGraph", "(", "v", ",", "visited", ",", "set", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "Graph", "<", "Integer", ">", "graph", "=", "new", "Graph", "<", ">", "(", "true", ")", ";", "graph", ".", "addEdge", "(", "0", ",", "1", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:2>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:2>", ",", "0", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:3>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:5>", ",", "<NUM_LIT:3>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ")", ";", "StronglyConnectedComponent", "scc", "=", "new", "StronglyConnectedComponent", "(", ")", ";", "List", "<", "Set", "<", "Vertex", "<", "Integer", ">", ">", ">", "result", "=", "scc", ".", "scc", "(", "graph", ")", ";", "result", ".", "forEach", "(", "set", "-", ">", "{", "set", ".", "forEach", "(", "v", "-", ">", "System", ".", "out", ".", "print", "(", "v", ".", "getId", "(", ")", "+", "\"", "\"", ")", ")", ";", "System", ".", "out", ".", "println", "(", ")", ";", "}", ")", ";", "}", "</s>"]
["<s>", "public", "Map", "<", "Vertex", "<", "T", ">", ",", "Integer", ">", "shortestPath", "(", "Graph", "<", "T", ">", "graph", ",", "Vertex", "<", "T", ">", "startVertex", ")", "{", "Map", "<", "Vertex", "<", "T", ">", ",", "Integer", ">", "distance", "=", "new", "HashMap", "<", "Vertex", "<", "T", ">", ",", "Integer", ">", "(", ")", ";", "TopologicalSort", "<", "T", ">", "sort", "=", "new", "TopologicalSort", "<", "T", ">", "(", ")", ";", "Deque", "<", "Vertex", "<", "T", ">", ">", "deque", "=", "sort", ".", "topSort", "(", "graph", ")", ";", "distance", ".", "put", "(", "startVertex", ",", "0", ")", ";", "while", "(", "!", "deque", ".", "isEmpty", "(", ")", ")", "{", "Vertex", "<", "T", ">", "vertex", "=", "deque", ".", "poll", "(", ")", ";", "for", "(", "Edge", "<", "T", ">", "edge", ":", "vertex", ".", "getEdges", "(", ")", ")", "{", "if", "(", "getDistance", "(", "edge", ".", "getVertex2", "(", ")", ",", "distance", ")", ">", "getDistance", "(", "edge", ".", "getVertex1", "(", ")", ",", "distance", ")", "+", "edge", ".", "getWeight", "(", ")", ")", "{", "distance", ".", "put", "(", "edge", ".", "getVertex2", "(", ")", ",", "getDistance", "(", "edge", ".", "getVertex1", "(", ")", ",", "distance", ")", "+", "edge", ".", "getWeight", "(", ")", ")", ";", "}", "}", "}", "return", "distance", ";", "}", "</s>"]
["<s>", "private", "int", "getDistance", "(", "Vertex", "<", "T", ">", "vertex", ",", "Map", "<", "Vertex", "<", "T", ">", ",", "Integer", ">", "distance", ")", "{", "return", "distance", ".", "containsKey", "(", "vertex", ")", "?", "distance", ".", "get", "(", "vertex", ")", ":", "<NUM_LIT:1000>", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "Graph", "<", "Integer", ">", "graph", "=", "new", "Graph", "<", "Integer", ">", "(", "true", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:4>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:3>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:2>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:2>", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:2>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:3>", ",", "<NUM_LIT:5>", ",", "1", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:5>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:2>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:4>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:3>", ")", ";", "DAGShortestPathTopological", "<", "Integer", ">", "shortestPath", "=", "new", "DAGShortestPathTopological", "<", "Integer", ">", "(", ")", ";", "Map", "<", "Vertex", "<", "Integer", ">", ",", "Integer", ">", "distance", "=", "shortestPath", ".", "shortestPath", "(", "graph", ",", "graph", ".", "getAllVertex", "(", ")", ".", "iterator", "(", ")", ".", "next", "(", ")", ")", ";", "System", ".", "out", ".", "print", "(", "distance", ")", ";", "}", "</s>"]
["<s>", "private", "boolean", "isConnected", "(", "Graph", "<", "T", ">", "graph", ")", "{", "Vertex", "<", "T", ">", "startVertex", "=", "null", ";", "for", "(", "Vertex", "<", "T", ">", "vertex", ":", "graph", ".", "getAllVertex", "(", ")", ")", "{", "if", "(", "vertex", ".", "getDegree", "(", ")", "!", "=", "0", ")", "{", "startVertex", "=", "vertex", ";", "break", ";", "}", "}", "if", "(", "startVertex", "=", "=", "null", ")", "{", "return", "true", ";", "}", "Map", "<", "Vertex", "<", "T", ">", ",", "Boolean", ">", "visited", "=", "new", "HashMap", "<", "Vertex", "<", "T", ">", ",", "Boolean", ">", "(", ")", ";", "DFS", "(", "startVertex", ",", "visited", ")", ";", "for", "(", "Vertex", "<", "T", ">", "testVertex", ":", "graph", ".", "getAllVertex", "(", ")", ")", "{", "if", "(", "testVertex", ".", "getDegree", "(", ")", "!", "=", "0", "&", "&", "!", "visited", ".", "containsKey", "(", "testVertex", ")", ")", "{", "return", "false", ";", "}", "}", "return", "true", ";", "}", "</s>"]
["<s>", "private", "void", "DFS", "(", "Vertex", "<", "T", ">", "startVertex", ",", "Map", "<", "Vertex", "<", "T", ">", ",", "Boolean", ">", "visited", ")", "{", "visited", ".", "put", "(", "startVertex", ",", "true", ")", ";", "for", "(", "Vertex", "<", "T", ">", "child", ":", "startVertex", ".", "getAdjacentVertexes", "(", ")", ")", "{", "if", "(", "!", "visited", ".", "containsKey", "(", "child", ")", ")", "{", "DFS", "(", "child", ",", "visited", ")", ";", "}", "}", "}", "</s>"]
["<s>", "public", "Eulerian", "isEulerian", "(", "Graph", "<", "T", ">", "graph", ")", "{", "if", "(", "!", "isConnected", "(", "graph", ")", ")", "{", "return", "Eulerian", ".", "NOT_EULERIAN", ";", "}", "int", "odd", "=", "0", ";", "for", "(", "Vertex", "<", "T", ">", "vertex", ":", "graph", ".", "getAllVertex", "(", ")", ")", "{", "if", "(", "vertex", ".", "getDegree", "(", ")", "!", "=", "0", "&", "&", "vertex", ".", "getDegree", "(", ")", "%", "<NUM_LIT:2>", "!", "=", "0", ")", "{", "odd", "+", "+", ";", "}", "}", "if", "(", "odd", ">", "<NUM_LIT:2>", ")", "{", "return", "Eulerian", ".", "NOT_EULERIAN", ";", "}", "return", "odd", "=", "=", "0", "?", "Eulerian", ".", "EULERIAN", ":", "Eulerian", ".", "SEMIEULERIAN", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "Graph", "<", "Integer", ">", "graph", "=", "new", "Graph", "<", "Integer", ">", "(", "false", ")", ";", "graph", ".", "addSingleVertex", "(", "1", ")", ";", "graph", ".", "addSingleVertex", "(", "<NUM_LIT:2>", ")", ";", "graph", ".", "addSingleVertex", "(", "<NUM_LIT:3>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:6>", ",", "<NUM_LIT:4>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ")", ";", "EulerianPathAndCircuit", "<", "Integer", ">", "eulerian", "=", "new", "EulerianPathAndCircuit", "<", "Integer", ">", "(", ")", ";", "Eulerian", "result", "=", "eulerian", ".", "isEulerian", "(", "graph", ")", ";", "System", ".", "out", ".", "print", "(", "result", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "hasCycleUsingDisjointSets", "(", "Graph", "<", "T", ">", "graph", ")", "{", "DisjointSet", "disjointSet", "=", "new", "DisjointSet", "(", ")", ";", "for", "(", "Vertex", "<", "T", ">", "vertex", ":", "graph", ".", "getAllVertex", "(", ")", ")", "{", "disjointSet", ".", "makeSet", "(", "vertex", ".", "getId", "(", ")", ")", ";", "}", "for", "(", "Edge", "<", "T", ">", "edge", ":", "graph", ".", "getAllEdges", "(", ")", ")", "{", "long", "parent1", "=", "disjointSet", ".", "findSet", "(", "edge", ".", "getVertex1", "(", ")", ".", "getId", "(", ")", ")", ";", "long", "parent2", "=", "disjointSet", ".", "findSet", "(", "edge", ".", "getVertex2", "(", ")", ".", "getId", "(", ")", ")", ";", "if", "(", "parent1", "=", "=", "parent2", ")", "{", "return", "true", ";", "}", "disjointSet", ".", "union", "(", "edge", ".", "getVertex1", "(", ")", ".", "getId", "(", ")", ",", "edge", ".", "getVertex2", "(", ")", ".", "getId", "(", ")", ")", ";", "}", "return", "false", ";", "}", "</s>"]
["<s>", "public", "boolean", "hasCycleDFS", "(", "Graph", "<", "T", ">", "graph", ")", "{", "Set", "<", "Vertex", "<", "T", ">", ">", "visited", "=", "new", "HashSet", "<", "Vertex", "<", "T", ">", ">", "(", ")", ";", "for", "(", "Vertex", "<", "T", ">", "vertex", ":", "graph", ".", "getAllVertex", "(", ")", ")", "{", "if", "(", "visited", ".", "contains", "(", "vertex", ")", ")", "{", "continue", ";", "}", "boolean", "flag", "=", "hasCycleDFSUtil", "(", "vertex", ",", "visited", ",", "null", ")", ";", "if", "(", "flag", ")", "{", "return", "true", ";", "}", "}", "return", "false", ";", "}", "</s>"]
["<s>", "public", "boolean", "hasCycleDFSUtil", "(", "Vertex", "<", "T", ">", "vertex", ",", "Set", "<", "Vertex", "<", "T", ">", ">", "visited", ",", "Vertex", "<", "T", ">", "parent", ")", "{", "visited", ".", "add", "(", "vertex", ")", ";", "for", "(", "Vertex", "<", "T", ">", "adj", ":", "vertex", ".", "getAdjacentVertexes", "(", ")", ")", "{", "if", "(", "adj", ".", "equals", "(", "parent", ")", ")", "{", "continue", ";", "}", "if", "(", "visited", ".", "contains", "(", "adj", ")", ")", "{", "return", "true", ";", "}", "boolean", "hasCycle", "=", "hasCycleDFSUtil", "(", "adj", ",", "visited", ",", "vertex", ")", ";", "if", "(", "hasCycle", ")", "{", "return", "true", ";", "}", "}", "return", "false", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "CycleUndirectedGraph", "<", "Integer", ">", "cycle", "=", "new", "CycleUndirectedGraph", "<", "Integer", ">", "(", ")", ";", "Graph", "<", "Integer", ">", "graph", "=", "new", "Graph", "<", "Integer", ">", "(", "false", ")", ";", "graph", ".", "addEdge", "(", "0", ",", "1", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:2>", ")", ";", "graph", ".", "addEdge", "(", "0", ",", "<NUM_LIT:3>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:5>", ",", "1", ")", ";", "boolean", "isCycle", "=", "cycle", ".", "hasCycleDFS", "(", "graph", ")", ";", "System", ".", "out", ".", "println", "(", "isCycle", ")", ";", "isCycle", "=", "cycle", ".", "hasCycleUsingDisjointSets", "(", "graph", ")", ";", "System", ".", "out", ".", "print", "(", "isCycle", ")", ";", "}", "</s>"]
["<s>", "public", "void", "printPath", "(", "Graph", "<", "Integer", ">", "graph", ",", "Vertex", "<", "Integer", ">", "start", ",", "Vertex", "<", "Integer", ">", "destination", ")", "{", "Set", "<", "Vertex", "<", "Integer", ">", ">", "visited", "=", "new", "LinkedHashSet", "<", "Vertex", "<", "Integer", ">", ">", "(", ")", ";", "printPath", "(", "visited", ",", "destination", ",", "start", ")", ";", "}", "</s>"]
["<s>", "private", "void", "printPath", "(", "Set", "<", "Vertex", "<", "Integer", ">", ">", "visited", ",", "Vertex", "<", "Integer", ">", "destination", ",", "Vertex", "<", "Integer", ">", "current", ")", "{", "if", "(", "visited", ".", "contains", "(", "current", ")", ")", "{", "return", ";", "}", "if", "(", "destination", ".", "equals", "(", "current", ")", ")", "{", "for", "(", "Vertex", "<", "Integer", ">", "v", ":", "visited", ")", "{", "System", ".", "out", ".", "print", "(", "v", ".", "id", "+", "\"", "\"", ")", ";", "}", "System", ".", "out", ".", "println", "(", "destination", ".", "id", ")", ";", "return", ";", "}", "visited", ".", "add", "(", "current", ")", ";", "for", "(", "Vertex", "<", "Integer", ">", "child", ":", "current", ".", "getAdjacentVertexes", "(", ")", ")", "{", "printPath", "(", "visited", ",", "destination", ",", "child", ")", ";", "}", "visited", ".", "remove", "(", "current", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "Graph", "<", "Integer", ">", "graph", "=", "new", "Graph", "<", "Integer", ">", "(", "false", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:2>", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:3>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:2>", ",", "<NUM_LIT:4>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:2>", ",", "<NUM_LIT:5>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:3>", ",", "<NUM_LIT:6>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:5>", ",", "<NUM_LIT:7>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:6>", ",", "<NUM_LIT:7>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:4>", ",", "<NUM_LIT:7>", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:8>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:8>", ",", "<NUM_LIT:9>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:9>", ",", "1", ")", ";", "Vertex", "<", "Integer", ">", "start", "=", "graph", ".", "getVertex", "(", "1", ")", ";", "Vertex", "<", "Integer", ">", "dest", "=", "graph", ".", "getVertex", "(", "<NUM_LIT:7>", ")", ";", "PrintAllPathFromSourceToDestination", "pap", "=", "new", "PrintAllPathFromSourceToDestination", "(", ")", ";", "pap", ".", "printPath", "(", "graph", ",", "start", ",", "dest", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "isBiparte", "(", "Graph", "<", "Integer", ">", "graph", ")", "{", "Set", "<", "Vertex", "<", "Integer", ">", ">", "redSet", "=", "new", "HashSet", "<", "Vertex", "<", "Integer", ">", ">", "(", ")", ";", "Set", "<", "Vertex", "<", "Integer", ">", ">", "blueSet", "=", "new", "HashSet", "<", "Vertex", "<", "Integer", ">", ">", "(", ")", ";", "Queue", "<", "Vertex", "<", "Integer", ">", ">", "queue", "=", "new", "LinkedList", "<", "Vertex", "<", "Integer", ">", ">", "(", ")", ";", "for", "(", "Vertex", "<", "Integer", ">", "vertex", ":", "graph", ".", "getAllVertex", "(", ")", ")", "{", "if", "(", "!", "redSet", ".", "contains", "(", "vertex", ")", "&", "&", "!", "blueSet", ".", "contains", "(", "vertex", ")", ")", "{", "queue", ".", "add", "(", "vertex", ")", ";", "redSet", ".", "add", "(", "vertex", ")", ";", "while", "(", "!", "queue", ".", "isEmpty", "(", ")", ")", "{", "vertex", "=", "queue", ".", "poll", "(", ")", ";", "for", "(", "Vertex", "<", "Integer", ">", "v", ":", "vertex", ".", "getAdjacentVertexes", "(", ")", ")", "{", "if", "(", "redSet", ".", "contains", "(", "vertex", ")", ")", "{", "if", "(", "redSet", ".", "contains", "(", "v", ")", ")", "{", "return", "false", ";", "}", "if", "(", "blueSet", ".", "contains", "(", "v", ")", ")", "{", "continue", ";", "}", "blueSet", ".", "add", "(", "v", ")", ";", "}", "else", "if", "(", "blueSet", ".", "contains", "(", "vertex", ")", ")", "{", "if", "(", "blueSet", ".", "contains", "(", "v", ")", ")", "{", "return", "false", ";", "}", "if", "(", "redSet", ".", "contains", "(", "v", ")", ")", "{", "continue", ";", "}", "redSet", ".", "add", "(", "v", ")", ";", "}", "queue", ".", "add", "(", "v", ")", ";", "}", "}", "}", "}", "System", ".", "out", ".", "println", "(", "redSet", ")", ";", "System", ".", "out", ".", "println", "(", "blueSet", ")", ";", "return", "true", ";", "}", "</s>"]
["<s>", "public", "boolean", "isBiparteDFS", "(", "Graph", "<", "Integer", ">", "graph", ")", "{", "Set", "<", "Vertex", "<", "Integer", ">", ">", "redSet", "=", "new", "HashSet", "<", "Vertex", "<", "Integer", ">", ">", "(", ")", ";", "Set", "<", "Vertex", "<", "Integer", ">", ">", "blueSet", "=", "new", "HashSet", "<", "Vertex", "<", "Integer", ">", ">", "(", ")", ";", "for", "(", "Vertex", "<", "Integer", ">", "vertex", ":", "graph", ".", "getAllVertex", "(", ")", ")", "{", "if", "(", "redSet", ".", "contains", "(", "vertex", ")", "|", "|", "blueSet", ".", "contains", "(", "vertex", ")", ")", "{", "continue", ";", "}", "boolean", "flag", "=", "isBiparteDFS", "(", "vertex", ",", "redSet", ",", "blueSet", ",", "true", ")", ";", "if", "(", "!", "flag", ")", "{", "return", "false", ";", "}", "}", "return", "true", ";", "}", "</s>"]
["<s>", "private", "boolean", "isBiparteDFS", "(", "Vertex", "<", "Integer", ">", "vertex", ",", "Set", "<", "Vertex", "<", "Integer", ">", ">", "redSet", ",", "Set", "<", "Vertex", "<", "Integer", ">", ">", "blueSet", ",", "boolean", "wasRed", ")", "{", "if", "(", "wasRed", ")", "{", "if", "(", "redSet", ".", "contains", "(", "vertex", ")", ")", "{", "return", "false", ";", "}", "else", "if", "(", "blueSet", ".", "contains", "(", "vertex", ")", ")", "{", "return", "true", ";", "}", "blueSet", ".", "add", "(", "vertex", ")", ";", "}", "else", "if", "(", "!", "wasRed", ")", "{", "if", "(", "blueSet", ".", "contains", "(", "vertex", ")", ")", "{", "return", "false", ";", "}", "if", "(", "redSet", ".", "contains", "(", "vertex", ")", ")", "{", "return", "true", ";", "}", "redSet", ".", "add", "(", "vertex", ")", ";", "}", "for", "(", "Vertex", "<", "Integer", ">", "adj", ":", "vertex", ".", "getAdjacentVertexes", "(", ")", ")", "{", "boolean", "flag", "=", "isBiparteDFS", "(", "adj", ",", "redSet", ",", "blueSet", ",", "!", "wasRed", ")", ";", "if", "(", "!", "flag", ")", "{", "return", "false", ";", "}", "}", "return", "true", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "argsp", "[", "]", ")", "{", "Graph", "<", "Integer", ">", "graph", "=", "new", "Graph", "<", "Integer", ">", "(", "false", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:2>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:2>", ",", "<NUM_LIT:5>", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:3>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:4>", ",", "<NUM_LIT:6>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:7>", ",", "<NUM_LIT:9>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:7>", ",", "<NUM_LIT:8>", ")", ";", "BiparteGraph", "bi", "=", "new", "BiparteGraph", "(", ")", ";", "boolean", "result", "=", "bi", ".", "isBiparteDFS", "(", "graph", ")", ";", "System", ".", "out", ".", "print", "(", "result", ")", ";", "}", "</s>"]
["<s>", "public", "Set", "<", "Vertex", "<", "T", ">", ">", "findarticulationPoints", "(", "Graph", "<", "T", ">", "graph", ")", "{", "time", "=", "0", ";", "Set", "<", "Vertex", "<", "T", ">", ">", "visited", "=", "new", "HashSet", "<", ">", "(", ")", ";", "Set", "<", "Vertex", "<", "T", ">", ">", "articulationPoints", "=", "new", "HashSet", "<", ">", "(", ")", ";", "Vertex", "<", "T", ">", "startVertex", "=", "graph", ".", "getAllVertex", "(", ")", ".", "iterator", "(", ")", ".", "next", "(", ")", ";", "Map", "<", "Vertex", "<", "T", ">", ",", "Integer", ">", "visitedTime", "=", "new", "HashMap", "<", ">", "(", ")", ";", "Map", "<", "Vertex", "<", "T", ">", ",", "Integer", ">", "lowTime", "=", "new", "HashMap", "<", ">", "(", ")", ";", "Map", "<", "Vertex", "<", "T", ">", ",", "Vertex", "<", "T", ">", ">", "parent", "=", "new", "HashMap", "<", ">", "(", ")", ";", "DFS", "(", "visited", ",", "articulationPoints", ",", "startVertex", ",", "visitedTime", ",", "lowTime", ",", "parent", ")", ";", "return", "articulationPoints", ";", "}", "</s>"]
["<s>", "private", "void", "DFS", "(", "Set", "<", "Vertex", "<", "T", ">", ">", "visited", ",", "Set", "<", "Vertex", "<", "T", ">", ">", "articulationPoints", ",", "Vertex", "<", "T", ">", "vertex", ",", "Map", "<", "Vertex", "<", "T", ">", ",", "Integer", ">", "visitedTime", ",", "Map", "<", "Vertex", "<", "T", ">", ",", "Integer", ">", "lowTime", ",", "Map", "<", "Vertex", "<", "T", ">", ",", "Vertex", "<", "T", ">", ">", "parent", ")", "{", "visited", ".", "add", "(", "vertex", ")", ";", "visitedTime", ".", "put", "(", "vertex", ",", "time", ")", ";", "lowTime", ".", "put", "(", "vertex", ",", "time", ")", ";", "time", "+", "+", ";", "int", "childCount", "=", "0", ";", "boolean", "isArticulationPoint", "=", "false", ";", "for", "(", "Vertex", "<", "T", ">", "adj", ":", "vertex", ".", "getAdjacentVertexes", "(", ")", ")", "{", "if", "(", "adj", ".", "equals", "(", "parent", ".", "get", "(", "vertex", ")", ")", ")", "{", "continue", ";", "}", "if", "(", "!", "visited", ".", "contains", "(", "adj", ")", ")", "{", "parent", ".", "put", "(", "adj", ",", "vertex", ")", ";", "childCount", "+", "+", ";", "DFS", "(", "visited", ",", "articulationPoints", ",", "adj", ",", "visitedTime", ",", "lowTime", ",", "parent", ")", ";", "if", "(", "visitedTime", ".", "get", "(", "vertex", ")", "<", "=", "lowTime", ".", "get", "(", "adj", ")", ")", "{", "isArticulationPoint", "=", "true", ";", "}", "else", "{", "lowTime", ".", "compute", "(", "vertex", ",", "(", "currentVertex", ",", "time", ")", "-", ">", "Math", ".", "min", "(", "time", ",", "lowTime", ".", "get", "(", "adj", ")", ")", ")", ";", "}", "}", "else", "{", "lowTime", ".", "compute", "(", "vertex", ",", "(", "currentVertex", ",", "time", ")", "-", ">", "Math", ".", "min", "(", "time", ",", "visitedTime", ".", "get", "(", "adj", ")", ")", ")", ";", "}", "}", "if", "(", "(", "parent", ".", "get", "(", "vertex", ")", "=", "=", "null", "&", "&", "childCount", ">", "=", "<NUM_LIT:2>", ")", "|", "|", "parent", ".", "get", "(", "vertex", ")", "!", "=", "null", "&", "&", "isArticulationPoint", ")", "{", "articulationPoints", ".", "add", "(", "vertex", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "Graph", "<", "Integer", ">", "graph", "=", "new", "Graph", "<", ">", "(", "false", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:2>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:3>", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:4>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:6>", ",", "<NUM_LIT:7>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:7>", ",", "<NUM_LIT:5>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:6>", ",", "<NUM_LIT:8>", ")", ";", "ArticulationPoint", "<", "Integer", ">", "ap", "=", "new", "ArticulationPoint", "<", "Integer", ">", "(", ")", ";", "Set", "<", "Vertex", "<", "Integer", ">", ">", "aPoints", "=", "ap", ".", "findarticulationPoints", "(", "graph", ")", ";", "aPoints", ".", "forEach", "(", "point", "-", ">", "System", ".", "out", ".", "println", "(", "point", ")", ")", ";", "}", "</s>"]
["<s>", "public", "AllCyclesInDirectedGraphTarjan", "(", ")", "{", "reset", "(", ")", ";", "}", "</s>"]
["<s>", "private", "void", "reset", "(", ")", "{", "visited", "=", "new", "HashSet", "<", ">", "(", ")", ";", "pointStack", "=", "new", "LinkedList", "<", ">", "(", ")", ";", "markedStack", "=", "new", "LinkedList", "<", ">", "(", ")", ";", "markedSet", "=", "new", "HashSet", "<", ">", "(", ")", ";", "}", "</s>"]
["<s>", "public", "List", "<", "List", "<", "Vertex", "<", "Integer", ">", ">", ">", "findAllSimpleCycles", "(", "Graph", "<", "Integer", ">", "graph", ")", "{", "reset", "(", ")", ";", "List", "<", "List", "<", "Vertex", "<", "Integer", ">", ">", ">", "result", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "for", "(", "Vertex", "<", "Integer", ">", "vertex", ":", "graph", ".", "getAllVertex", "(", ")", ")", "{", "findAllSimpleCycles", "(", "vertex", ",", "vertex", ",", "result", ")", ";", "visited", ".", "add", "(", "vertex", ")", ";", "while", "(", "!", "markedStack", ".", "isEmpty", "(", ")", ")", "{", "markedSet", ".", "remove", "(", "markedStack", ".", "pollFirst", "(", ")", ")", ";", "}", "}", "return", "result", ";", "}", "</s>"]
["<s>", "private", "boolean", "findAllSimpleCycles", "(", "Vertex", "start", ",", "Vertex", "<", "Integer", ">", "current", ",", "List", "<", "List", "<", "Vertex", "<", "Integer", ">", ">", ">", "result", ")", "{", "boolean", "hasCycle", "=", "false", ";", "pointStack", ".", "offerFirst", "(", "current", ")", ";", "markedSet", ".", "add", "(", "current", ")", ";", "markedStack", ".", "offerFirst", "(", "current", ")", ";", "for", "(", "Vertex", "<", "Integer", ">", "w", ":", "current", ".", "getAdjacentVertexes", "(", ")", ")", "{", "if", "(", "visited", ".", "contains", "(", "w", ")", ")", "{", "continue", ";", "}", "else", "if", "(", "w", ".", "equals", "(", "start", ")", ")", "{", "hasCycle", "=", "true", ";", "pointStack", ".", "offerFirst", "(", "w", ")", ";", "List", "<", "Vertex", "<", "Integer", ">", ">", "cycle", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "Iterator", "<", "Vertex", "<", "Integer", ">", ">", "itr", "=", "pointStack", ".", "descendingIterator", "(", ")", ";", "while", "(", "itr", ".", "hasNext", "(", ")", ")", "{", "cycle", ".", "add", "(", "itr", ".", "next", "(", ")", ")", ";", "}", "pointStack", ".", "pollFirst", "(", ")", ";", "result", ".", "add", "(", "cycle", ")", ";", "}", "else", "if", "(", "!", "markedSet", ".", "contains", "(", "w", ")", ")", "{", "hasCycle", "=", "findAllSimpleCycles", "(", "start", ",", "w", ",", "result", ")", "|", "|", "hasCycle", ";", "}", "}", "if", "(", "hasCycle", ")", "{", "while", "(", "!", "markedStack", ".", "peekFirst", "(", ")", ".", "equals", "(", "current", ")", ")", "{", "markedSet", ".", "remove", "(", "markedStack", ".", "pollFirst", "(", ")", ")", ";", "}", "markedSet", ".", "remove", "(", "markedStack", ".", "pollFirst", "(", ")", ")", ";", "}", "pointStack", ".", "pollFirst", "(", ")", ";", "return", "hasCycle", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "Graph", "<", "Integer", ">", "graph", "=", "new", "Graph", "<", ">", "(", "true", ")", ";", "graph", ".", "addEdge", "(", "0", ",", "1", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:4>", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:7>", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:6>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:4>", ",", "<NUM_LIT:2>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:4>", ",", "<NUM_LIT:3>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:2>", ",", "<NUM_LIT:4>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:2>", ",", "<NUM_LIT:7>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:2>", ",", "<NUM_LIT:6>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:7>", ",", "<NUM_LIT:8>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:7>", ",", "<NUM_LIT:5>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:5>", ",", "<NUM_LIT:2>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:5>", ",", "<NUM_LIT:3>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:3>", ",", "<NUM_LIT:7>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:3>", ",", "<NUM_LIT:6>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:6>", ",", "<NUM_LIT:5>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:6>", ",", "<NUM_LIT:8>", ")", ";", "AllCyclesInDirectedGraphTarjan", "tarjan", "=", "new", "AllCyclesInDirectedGraphTarjan", "(", ")", ";", "List", "<", "List", "<", "Vertex", "<", "Integer", ">", ">", ">", "result", "=", "tarjan", ".", "findAllSimpleCycles", "(", "graph", ")", ";", "result", ".", "forEach", "(", "cycle", "-", ">", "{", "cycle", ".", "forEach", "(", "v", "-", ">", "System", ".", "out", ".", "print", "(", "v", ".", "getId", "(", ")", "+", "\"", "\"", ")", ")", ";", "System", ".", "out", ".", "println", "(", ")", ";", "}", ")", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "int", "compare", "(", "Edge", "<", "Integer", ">", "edge1", ",", "Edge", "<", "Integer", ">", "edge2", ")", "{", "if", "(", "edge1", ".", "getWeight", "(", ")", "<", "=", "edge2", ".", "getWeight", "(", ")", ")", "{", "return", "-", "1", ";", "}", "else", "{", "return", "1", ";", "}", "}", "</s>"]
["<s>", "public", "List", "<", "Edge", "<", "Integer", ">", ">", "getMST", "(", "Graph", "<", "Integer", ">", "graph", ")", "{", "List", "<", "Edge", "<", "Integer", ">", ">", "allEdges", "=", "graph", ".", "getAllEdges", "(", ")", ";", "EdgeComparator", "edgeComparator", "=", "new", "EdgeComparator", "(", ")", ";", "Collections", ".", "sort", "(", "allEdges", ",", "edgeComparator", ")", ";", "DisjointSet", "disjointSet", "=", "new", "DisjointSet", "(", ")", ";", "for", "(", "Vertex", "<", "Integer", ">", "vertex", ":", "graph", ".", "getAllVertex", "(", ")", ")", "{", "disjointSet", ".", "makeSet", "(", "vertex", ".", "getId", "(", ")", ")", ";", "}", "List", "<", "Edge", "<", "Integer", ">", ">", "resultEdge", "=", "new", "ArrayList", "<", "Edge", "<", "Integer", ">", ">", "(", ")", ";", "for", "(", "Edge", "<", "Integer", ">", "edge", ":", "allEdges", ")", "{", "long", "root1", "=", "disjointSet", ".", "findSet", "(", "edge", ".", "getVertex1", "(", ")", ".", "getId", "(", ")", ")", ";", "long", "root2", "=", "disjointSet", ".", "findSet", "(", "edge", ".", "getVertex2", "(", ")", ".", "getId", "(", ")", ")", ";", "if", "(", "root1", "=", "=", "root2", ")", "{", "continue", ";", "}", "else", "{", "resultEdge", ".", "add", "(", "edge", ")", ";", "disjointSet", ".", "union", "(", "edge", ".", "getVertex1", "(", ")", ".", "getId", "(", ")", ",", "edge", ".", "getVertex2", "(", ")", ".", "getId", "(", ")", ")", ";", "}", "}", "return", "resultEdge", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "Graph", "<", "Integer", ">", "graph", "=", "new", "Graph", "<", "Integer", ">", "(", "false", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:4>", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:3>", ",", "1", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:2>", ",", "<NUM_LIT:5>", ",", "1", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:2>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:3>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:2>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:2>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:6>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:2>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:6>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:3>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:4>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:2>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:3>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:8>", ")", ";", "KruskalMST", "mst", "=", "new", "KruskalMST", "(", ")", ";", "List", "<", "Edge", "<", "Integer", ">", ">", "result", "=", "mst", ".", "getMST", "(", "graph", ")", ";", "for", "(", "Edge", "<", "Integer", ">", "edge", ":", "result", ")", "{", "System", ".", "out", ".", "println", "(", "edge", ".", "getVertex1", "(", ")", "+", "\"", "\"", "+", "edge", ".", "getVertex2", "(", ")", ")", ";", "}", "}", "</s>"]
["<s>", "public", "boolean", "getHamiltonianCycle", "(", "Graph", "<", "T", ">", "graph", ",", "List", "<", "Vertex", "<", "T", ">", ">", "result", ")", "{", "Vertex", "<", "T", ">", "startVertex", "=", "graph", ".", "getAllVertex", "(", ")", ".", "iterator", "(", ")", ".", "next", "(", ")", ";", "Set", "<", "Vertex", "<", "T", ">", ">", "visited", "=", "new", "HashSet", "<", "Vertex", "<", "T", ">", ">", "(", ")", ";", "return", "hamiltonianUtil", "(", "startVertex", ",", "startVertex", ",", "result", ",", "visited", ",", "graph", ".", "getAllVertex", "(", ")", ".", "size", "(", ")", ")", ";", "}", "</s>"]
["<s>", "private", "boolean", "hamiltonianUtil", "(", "Vertex", "<", "T", ">", "startVertex", ",", "Vertex", "<", "T", ">", "currentVertex", ",", "List", "<", "Vertex", "<", "T", ">", ">", "result", ",", "Set", "<", "Vertex", "<", "T", ">", ">", "visited", ",", "int", "totalVertex", ")", "{", "visited", ".", "add", "(", "currentVertex", ")", ";", "result", ".", "add", "(", "currentVertex", ")", ";", "for", "(", "Vertex", "<", "T", ">", "child", ":", "currentVertex", ".", "getAdjacentVertexes", "(", ")", ")", "{", "if", "(", "startVertex", ".", "equals", "(", "child", ")", "&", "&", "totalVertex", "=", "=", "result", ".", "size", "(", ")", ")", "{", "result", ".", "add", "(", "startVertex", ")", ";", "return", "true", ";", "}", "if", "(", "!", "visited", ".", "contains", "(", "child", ")", ")", "{", "boolean", "isHamil", "=", "hamiltonianUtil", "(", "startVertex", ",", "child", ",", "result", ",", "visited", ",", "totalVertex", ")", ";", "if", "(", "isHamil", ")", "{", "return", "true", ";", "}", "}", "}", "result", ".", "remove", "(", "result", ".", "size", "(", ")", "-", "1", ")", ";", "visited", ".", "remove", "(", "currentVertex", ")", ";", "return", "false", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "Graph", "<", "Integer", ">", "graph", "=", "new", "Graph", "<", "Integer", ">", "(", "false", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:2>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:3>", ",", "<NUM_LIT:5>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:5>", ",", "<NUM_LIT:2>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:2>", ",", "<NUM_LIT:4>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:4>", ",", "1", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", ")", ";", "HamiltonianCycle", "<", "Integer", ">", "hamil", "=", "new", "HamiltonianCycle", "<", "Integer", ">", "(", ")", ";", "List", "<", "Vertex", "<", "Integer", ">", ">", "result", "=", "new", "ArrayList", "<", "Vertex", "<", "Integer", ">", ">", "(", ")", ";", "boolean", "isHamiltonian", "=", "hamil", ".", "getHamiltonianCycle", "(", "graph", ",", "result", ")", ";", "System", ".", "out", ".", "println", "(", "isHamiltonian", ")", ";", "if", "(", "isHamiltonian", ")", "{", "System", ".", "out", ".", "print", "(", "result", ")", ";", "}", "}", "</s>"]
["<s>", "Point", "(", "int", "x", ",", "int", "y", ")", "{", "this", ".", "x", "=", "x", ";", "this", ".", "y", "=", "y", ";", "}", "</s>"]
["<s>", "public", "int", "[", "]", "[", "]", "findShortest", "(", "Cell", "input", "[", "]", "[", "]", ")", "{", "int", "distance", "[", "]", "[", "]", "=", "new", "int", "[", "input", ".", "length", "]", "[", "input", "[", "0", "]", ".", "length", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "input", "[", "0", "]", ".", "length", ";", "j", "+", "+", ")", "{", "distance", "[", "i", "]", "[", "j", "]", "=", "Integer", ".", "MAX_VALUE", ";", "}", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "input", "[", "i", "]", ".", "length", ";", "j", "+", "+", ")", "{", "if", "(", "input", "[", "i", "]", "[", "j", "]", "=", "=", "Cell", ".", "GUARD", ")", "{", "distance", "[", "i", "]", "[", "j", "]", "=", "0", ";", "setDistance", "(", "input", ",", "i", ",", "j", ",", "distance", ")", ";", "}", "}", "}", "return", "distance", ";", "}", "</s>"]
["<s>", "private", "void", "setDistance", "(", "Cell", "input", "[", "]", "[", "]", ",", "int", "x", ",", "int", "y", ",", "int", "distance", "[", "]", "[", "]", ")", "{", "boolean", "visited", "[", "]", "[", "]", "=", "new", "boolean", "[", "input", ".", "length", "]", "[", "input", "[", "0", "]", ".", "length", "]", ";", "Queue", "<", "Point", ">", "q", "=", "new", "LinkedList", "<", ">", "(", ")", ";", "q", ".", "offer", "(", "new", "Point", "(", "x", ",", "y", ")", ")", ";", "while", "(", "!", "q", ".", "isEmpty", "(", ")", ")", "{", "Point", "p", "=", "q", ".", "poll", "(", ")", ";", "setDistanceUtil", "(", "q", ",", "input", ",", "p", ",", "getNeighbor", "(", "input", ",", "p", ".", "x", "+", "1", ",", "p", ".", "y", ")", ",", "distance", ",", "visited", ")", ";", "setDistanceUtil", "(", "q", ",", "input", ",", "p", ",", "getNeighbor", "(", "input", ",", "p", ".", "x", ",", "p", ".", "y", "+", "1", ")", ",", "distance", ",", "visited", ")", ";", "setDistanceUtil", "(", "q", ",", "input", ",", "p", ",", "getNeighbor", "(", "input", ",", "p", ".", "x", "-", "1", ",", "p", ".", "y", ")", ",", "distance", ",", "visited", ")", ";", "setDistanceUtil", "(", "q", ",", "input", ",", "p", ",", "getNeighbor", "(", "input", ",", "p", ".", "x", ",", "p", ".", "y", "-", "1", ")", ",", "distance", ",", "visited", ")", ";", "}", "}", "</s>"]
["<s>", "private", "void", "setDistanceUtil", "(", "Queue", "<", "Point", ">", "q", ",", "Cell", "input", "[", "]", "[", "]", ",", "Point", "p", ",", "Point", "newPoint", ",", "int", "distance", "[", "]", "[", "]", ",", "boolean", "visited", "[", "]", "[", "]", ")", "{", "if", "(", "newPoint", "!", "=", "null", "&", "&", "!", "visited", "[", "newPoint", ".", "x", "]", "[", "newPoint", ".", "y", "]", ")", "{", "if", "(", "input", "[", "newPoint", ".", "x", "]", "[", "newPoint", ".", "y", "]", "!", "=", "Cell", ".", "GUARD", "&", "&", "input", "[", "newPoint", ".", "x", "]", "[", "newPoint", ".", "y", "]", "!", "=", "Cell", ".", "BLOCK", ")", "{", "distance", "[", "newPoint", ".", "x", "]", "[", "newPoint", ".", "y", "]", "=", "Math", ".", "min", "(", "distance", "[", "newPoint", ".", "x", "]", "[", "newPoint", ".", "y", "]", ",", "1", "+", "distance", "[", "p", ".", "x", "]", "[", "p", ".", "y", "]", ")", ";", "visited", "[", "newPoint", ".", "x", "]", "[", "newPoint", ".", "y", "]", "=", "true", ";", "q", ".", "offer", "(", "newPoint", ")", ";", "}", "}", "}", "</s>"]
["<s>", "private", "Point", "getNeighbor", "(", "Cell", "input", "[", "]", "[", "]", ",", "int", "x", ",", "int", "y", ")", "{", "if", "(", "x", "<", "0", "|", "|", "x", ">", "=", "input", ".", "length", "|", "|", "y", "<", "0", "|", "|", "y", ">", "=", "input", "[", "0", "]", ".", "length", ")", "{", "return", "null", ";", "}", "return", "new", "Point", "(", "x", ",", "y", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "ShortestDistanceFromExit", "sdg", "=", "new", "ShortestDistanceFromExit", "(", ")", ";", "Cell", "input", "[", "]", "[", "]", "=", "{", "{", "Cell", ".", "SPACE", ",", "Cell", ".", "SPACE", ",", "Cell", ".", "BLOCK", ",", "Cell", ".", "BLOCK", "}", ",", "{", "Cell", ".", "SPACE", ",", "Cell", ".", "SPACE", ",", "Cell", ".", "GUARD", ",", "Cell", ".", "SPACE", "}", ",", "{", "Cell", ".", "SPACE", ",", "Cell", ".", "SPACE", ",", "Cell", ".", "BLOCK", ",", "Cell", ".", "SPACE", "}", ",", "{", "Cell", ".", "SPACE", ",", "Cell", ".", "GUARD", ",", "Cell", ".", "BLOCK", ",", "Cell", ".", "SPACE", "}", "}", ";", "int", "result", "[", "]", "[", "]", "=", "sdg", ".", "findShortest", "(", "input", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "result", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "result", "[", "0", "]", ".", "length", ";", "j", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "result", "[", "i", "]", "[", "j", "]", "+", "\"", "\"", ")", ";", "}", "System", ".", "out", ".", "println", "(", ")", ";", "}", "}", "</s>"]
["<s>", "public", "List", "<", "Set", "<", "Vertex", "<", "Integer", ">", ">", ">", "scc", "(", "Graph", "<", "Integer", ">", "graph", ")", "{", "time", "=", "0", ";", "visitedTime", "=", "new", "HashMap", "<", ">", "(", ")", ";", "lowTime", "=", "new", "HashMap", "<", ">", "(", ")", ";", "onStack", "=", "new", "HashSet", "<", ">", "(", ")", ";", "stack", "=", "new", "LinkedList", "<", ">", "(", ")", ";", "visited", "=", "new", "HashSet", "<", ">", "(", ")", ";", "result", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "for", "(", "Vertex", "<", "Integer", ">", "vertex", ":", "graph", ".", "getAllVertex", "(", ")", ")", "{", "if", "(", "visited", ".", "contains", "(", "vertex", ")", ")", "{", "continue", ";", "}", "sccUtil", "(", "vertex", ")", ";", "}", "return", "result", ";", "}", "</s>"]
["<s>", "private", "void", "sccUtil", "(", "Vertex", "<", "Integer", ">", "vertex", ")", "{", "visited", ".", "add", "(", "vertex", ")", ";", "visitedTime", ".", "put", "(", "vertex", ",", "time", ")", ";", "lowTime", ".", "put", "(", "vertex", ",", "time", ")", ";", "time", "+", "+", ";", "stack", ".", "addFirst", "(", "vertex", ")", ";", "onStack", ".", "add", "(", "vertex", ")", ";", "for", "(", "Vertex", "child", ":", "vertex", ".", "getAdjacentVertexes", "(", ")", ")", "{", "if", "(", "!", "visited", ".", "contains", "(", "child", ")", ")", "{", "sccUtil", "(", "child", ")", ";", "lowTime", ".", "compute", "(", "vertex", ",", "(", "v", ",", "low", ")", "-", ">", "Math", ".", "min", "(", "low", ",", "lowTime", ".", "get", "(", "child", ")", ")", ")", ";", "}", "else", "if", "(", "onStack", ".", "contains", "(", "child", ")", ")", "{", "lowTime", ".", "compute", "(", "vertex", ",", "(", "v", ",", "low", ")", "-", ">", "Math", ".", "min", "(", "low", ",", "visitedTime", ".", "get", "(", "child", ")", ")", ")", ";", "}", "}", "if", "(", "visitedTime", ".", "get", "(", "vertex", ")", "=", "=", "lowTime", ".", "get", "(", "vertex", ")", ")", "{", "Set", "<", "Vertex", "<", "Integer", ">", ">", "stronglyConnectedComponenet", "=", "new", "HashSet", "<", ">", "(", ")", ";", "Vertex", "v", ";", "do", "{", "v", "=", "stack", ".", "pollFirst", "(", ")", ";", "onStack", ".", "remove", "(", "v", ")", ";", "stronglyConnectedComponenet", ".", "add", "(", "v", ")", ";", "}", "while", "(", "!", "vertex", ".", "equals", "(", "v", ")", ")", ";", "result", ".", "add", "(", "stronglyConnectedComponenet", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "Graph", "<", "Integer", ">", "graph", "=", "new", "Graph", "<", ">", "(", "true", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:2>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:3>", ",", "1", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:6>", ",", "<NUM_LIT:4>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:7>", ",", "<NUM_LIT:6>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:7>", ",", "<NUM_LIT:8>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:8>", ",", "<NUM_LIT:7>", ")", ";", "TarjanStronglyConnectedComponent", "tarjanStronglyConnectedComponent", "=", "new", "TarjanStronglyConnectedComponent", "(", ")", ";", "List", "<", "Set", "<", "Vertex", "<", "Integer", ">", ">", ">", "result", "=", "tarjanStronglyConnectedComponent", ".", "scc", "(", "graph", ")", ";", "result", ".", "forEach", "(", "scc", "-", ">", "{", "scc", ".", "forEach", "(", "vertex", "-", ">", "System", ".", "out", ".", "print", "(", "vertex", "+", "\"", "\"", ")", ")", ";", "System", ".", "out", ".", "println", "(", ")", ";", "}", ")", ";", "}", "</s>"]
["<s>", "public", "List", "<", "Edge", "<", "Integer", ">", ">", "primMST", "(", "Graph", "<", "Integer", ">", "graph", ")", "{", "BinaryMinHeap", "<", "Vertex", "<", "Integer", ">", ">", "minHeap", "=", "new", "BinaryMinHeap", "<", ">", "(", ")", ";", "Map", "<", "Vertex", "<", "Integer", ">", ",", "Edge", "<", "Integer", ">", ">", "vertexToEdge", "=", "new", "HashMap", "<", ">", "(", ")", ";", "List", "<", "Edge", "<", "Integer", ">", ">", "result", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "for", "(", "Vertex", "<", "Integer", ">", "v", ":", "graph", ".", "getAllVertex", "(", ")", ")", "{", "minHeap", ".", "add", "(", "Integer", ".", "MAX_VALUE", ",", "v", ")", ";", "}", "Vertex", "<", "Integer", ">", "startVertex", "=", "graph", ".", "getAllVertex", "(", ")", ".", "iterator", "(", ")", ".", "next", "(", ")", ";", "minHeap", ".", "decrease", "(", "startVertex", ",", "0", ")", ";", "while", "(", "!", "minHeap", ".", "empty", "(", ")", ")", "{", "Vertex", "<", "Integer", ">", "current", "=", "minHeap", ".", "extractMin", "(", ")", ";", "Edge", "<", "Integer", ">", "spanningTreeEdge", "=", "vertexToEdge", ".", "get", "(", "current", ")", ";", "if", "(", "spanningTreeEdge", "!", "=", "null", ")", "{", "result", ".", "add", "(", "spanningTreeEdge", ")", ";", "}", "for", "(", "Edge", "<", "Integer", ">", "edge", ":", "current", ".", "getEdges", "(", ")", ")", "{", "Vertex", "<", "Integer", ">", "adjacent", "=", "getVertexForEdge", "(", "current", ",", "edge", ")", ";", "if", "(", "minHeap", ".", "containsData", "(", "adjacent", ")", "&", "&", "minHeap", ".", "getWeight", "(", "adjacent", ")", ">", "edge", ".", "getWeight", "(", ")", ")", "{", "minHeap", ".", "decrease", "(", "adjacent", ",", "edge", ".", "getWeight", "(", ")", ")", ";", "vertexToEdge", ".", "put", "(", "adjacent", ",", "edge", ")", ";", "}", "}", "}", "return", "result", ";", "}", "</s>"]
["<s>", "private", "Vertex", "<", "Integer", ">", "getVertexForEdge", "(", "Vertex", "<", "Integer", ">", "v", ",", "Edge", "<", "Integer", ">", "e", ")", "{", "return", "e", ".", "getVertex1", "(", ")", ".", "equals", "(", "v", ")", "?", "e", ".", "getVertex2", "(", ")", ":", "e", ".", "getVertex1", "(", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "Graph", "<", "Integer", ">", "graph", "=", "new", "Graph", "<", ">", "(", "false", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "1", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:3>", ",", "1", ",", "1", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:4>", ",", "1", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:2>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:3>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:2>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:3>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:5>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:3>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:4>", ")", ";", "PrimMST", "prims", "=", "new", "PrimMST", "(", ")", ";", "Collection", "<", "Edge", "<", "Integer", ">", ">", "edges", "=", "prims", ".", "primMST", "(", "graph", ")", ";", "for", "(", "Edge", "<", "Integer", ">", "edge", ":", "edges", ")", "{", "System", ".", "out", ".", "println", "(", "edge", ")", ";", "}", "}", "</s>"]
["<s>", "public", "void", "game", "(", "Set", "<", "String", ">", "dictionary", ",", "char", "board", "[", "]", "[", "]", ")", "{", "boolean", "visited", "[", "]", "[", "]", "=", "new", "boolean", "[", "board", ".", "length", "]", "[", "board", "[", "0", "]", ".", "length", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "board", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "board", "[", "i", "]", ".", "length", ";", "j", "+", "+", ")", "{", "StringBuffer", "buffer", "=", "new", "StringBuffer", "(", ")", ";", "DFS", "(", "dictionary", ",", "board", ",", "visited", ",", "i", ",", "j", ",", "buffer", ")", ";", "}", "}", "}", "</s>"]
["<s>", "private", "void", "DFS", "(", "Set", "<", "String", ">", "dictionary", ",", "char", "[", "]", "[", "]", "board", ",", "boolean", "[", "]", "[", "]", "visited", ",", "int", "i", ",", "int", "j", ",", "StringBuffer", "buffer", ")", "{", "if", "(", "i", ">", "=", "board", ".", "length", "|", "|", "i", "<", "0", "|", "|", "j", "<", "0", "|", "|", "j", ">", "=", "board", "[", "i", "]", ".", "length", ")", "{", "return", ";", "}", "if", "(", "visited", "[", "i", "]", "[", "j", "]", "=", "=", "true", ")", "{", "return", ";", "}", "visited", "[", "i", "]", "[", "j", "]", "=", "true", ";", "buffer", ".", "append", "(", "board", "[", "i", "]", "[", "j", "]", ")", ";", "if", "(", "dictionary", ".", "contains", "(", "buffer", ".", "toString", "(", ")", ")", ")", "{", "System", ".", "out", ".", "println", "(", "buffer", ")", ";", "}", "for", "(", "int", "k", "=", "i", "-", "1", ";", "k", "<", "=", "i", "+", "1", ";", "k", "+", "+", ")", "{", "for", "(", "int", "l", "=", "j", "-", "1", ";", "l", "<", "=", "j", "+", "1", ";", "l", "+", "+", ")", "{", "DFS", "(", "dictionary", ",", "board", ",", "visited", ",", "k", ",", "l", ",", "buffer", ")", ";", "}", "}", "buffer", ".", "deleteCharAt", "(", "buffer", ".", "length", "(", ")", "-", "1", ")", ";", "visited", "[", "i", "]", "[", "j", "]", "=", "false", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "Boggle", "boggle", "=", "new", "Boggle", "(", ")", ";", "char", "board", "[", "]", "[", "]", "=", "{", "{", "<CHAR_LIT>", ",", "<CHAR_LIT:a>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", "}", ",", "{", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", "}", ",", "{", "<CHAR_LIT>", ",", "<CHAR_LIT:e>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT:a>", "}", ",", "{", "<CHAR_LIT:a>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", "}", "}", ";", "Set", "<", "String", ">", "dictionary", "=", "new", "HashSet", "<", "String", ">", "(", ")", ";", "dictionary", ".", "add", "(", "\"", "<STR_LIT>", "\"", ")", ";", "dictionary", ".", "add", "(", "\"", "<STR_LIT>", "\"", ")", ";", "boggle", ".", "game", "(", "dictionary", ",", "board", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "hasCycle", "(", "Graph", "<", "Integer", ">", "graph", ")", "{", "Set", "<", "Vertex", "<", "Integer", ">", ">", "whiteSet", "=", "new", "HashSet", "<", ">", "(", ")", ";", "Set", "<", "Vertex", "<", "Integer", ">", ">", "graySet", "=", "new", "HashSet", "<", ">", "(", ")", ";", "Set", "<", "Vertex", "<", "Integer", ">", ">", "blackSet", "=", "new", "HashSet", "<", ">", "(", ")", ";", "for", "(", "Vertex", "<", "Integer", ">", "vertex", ":", "graph", ".", "getAllVertex", "(", ")", ")", "{", "whiteSet", ".", "add", "(", "vertex", ")", ";", "}", "while", "(", "whiteSet", ".", "size", "(", ")", ">", "0", ")", "{", "Vertex", "<", "Integer", ">", "current", "=", "whiteSet", ".", "iterator", "(", ")", ".", "next", "(", ")", ";", "if", "(", "dfs", "(", "current", ",", "whiteSet", ",", "graySet", ",", "blackSet", ")", ")", "{", "return", "true", ";", "}", "}", "return", "false", ";", "}", "</s>"]
["<s>", "private", "boolean", "dfs", "(", "Vertex", "<", "Integer", ">", "current", ",", "Set", "<", "Vertex", "<", "Integer", ">", ">", "whiteSet", ",", "Set", "<", "Vertex", "<", "Integer", ">", ">", "graySet", ",", "Set", "<", "Vertex", "<", "Integer", ">", ">", "blackSet", ")", "{", "moveVertex", "(", "current", ",", "whiteSet", ",", "graySet", ")", ";", "for", "(", "Vertex", "<", "Integer", ">", "neighbor", ":", "current", ".", "getAdjacentVertexes", "(", ")", ")", "{", "if", "(", "blackSet", ".", "contains", "(", "neighbor", ")", ")", "{", "continue", ";", "}", "if", "(", "graySet", ".", "contains", "(", "neighbor", ")", ")", "{", "return", "true", ";", "}", "if", "(", "dfs", "(", "neighbor", ",", "whiteSet", ",", "graySet", ",", "blackSet", ")", ")", "{", "return", "true", ";", "}", "}", "moveVertex", "(", "current", ",", "graySet", ",", "blackSet", ")", ";", "return", "false", ";", "}", "</s>"]
["<s>", "private", "void", "moveVertex", "(", "Vertex", "<", "Integer", ">", "vertex", ",", "Set", "<", "Vertex", "<", "Integer", ">", ">", "sourceSet", ",", "Set", "<", "Vertex", "<", "Integer", ">", ">", "destinationSet", ")", "{", "sourceSet", ".", "remove", "(", "vertex", ")", ";", "destinationSet", ".", "add", "(", "vertex", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "Graph", "<", "Integer", ">", "graph", "=", "new", "Graph", "<", ">", "(", "true", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:2>", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:3>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:4>", ",", "1", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:6>", ",", "<NUM_LIT:4>", ")", ";", "CycleInDirectedGraph", "cdg", "=", "new", "CycleInDirectedGraph", "(", ")", ";", "System", ".", "out", ".", "println", "(", "cdg", ".", "hasCycle", "(", "graph", ")", ")", ";", "}", "</s>"]
["<s>", "public", "List", "<", "List", "<", "Vertex", "<", "Integer", ">", ">", ">", "simpleCyles", "(", "Graph", "<", "Integer", ">", "graph", ")", "{", "blockedSet", "=", "new", "HashSet", "<", ">", "(", ")", ";", "blockedMap", "=", "new", "HashMap", "<", ">", "(", ")", ";", "stack", "=", "new", "LinkedList", "<", ">", "(", ")", ";", "allCycles", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "long", "startIndex", "=", "1", ";", "TarjanStronglyConnectedComponent", "tarjan", "=", "new", "TarjanStronglyConnectedComponent", "(", ")", ";", "while", "(", "startIndex", "<", "=", "graph", ".", "getAllVertex", "(", ")", ".", "size", "(", ")", ")", "{", "Graph", "<", "Integer", ">", "subGraph", "=", "createSubGraph", "(", "startIndex", ",", "graph", ")", ";", "List", "<", "Set", "<", "Vertex", "<", "Integer", ">", ">", ">", "sccs", "=", "tarjan", ".", "scc", "(", "subGraph", ")", ";", "Optional", "<", "Vertex", "<", "Integer", ">", ">", "maybeLeastVertex", "=", "leastIndexSCC", "(", "sccs", ",", "subGraph", ")", ";", "if", "(", "maybeLeastVertex", ".", "isPresent", "(", ")", ")", "{", "Vertex", "<", "Integer", ">", "leastVertex", "=", "maybeLeastVertex", ".", "get", "(", ")", ";", "blockedSet", ".", "clear", "(", ")", ";", "blockedMap", ".", "clear", "(", ")", ";", "findCyclesInSCG", "(", "leastVertex", ",", "leastVertex", ")", ";", "startIndex", "=", "leastVertex", ".", "getId", "(", ")", "+", "1", ";", "}", "else", "{", "break", ";", "}", "}", "return", "allCycles", ";", "}", "</s>"]
["<s>", "private", "Optional", "<", "Vertex", "<", "Integer", ">", ">", "leastIndexSCC", "(", "List", "<", "Set", "<", "Vertex", "<", "Integer", ">", ">", ">", "sccs", ",", "Graph", "<", "Integer", ">", "subGraph", ")", "{", "long", "min", "=", "Integer", ".", "MAX_VALUE", ";", "Vertex", "<", "Integer", ">", "minVertex", "=", "null", ";", "Set", "<", "Vertex", "<", "Integer", ">", ">", "minScc", "=", "null", ";", "for", "(", "Set", "<", "Vertex", "<", "Integer", ">", ">", "scc", ":", "sccs", ")", "{", "if", "(", "scc", ".", "size", "(", ")", "=", "=", "1", ")", "{", "continue", ";", "}", "for", "(", "Vertex", "<", "Integer", ">", "vertex", ":", "scc", ")", "{", "if", "(", "vertex", ".", "getId", "(", ")", "<", "min", ")", "{", "min", "=", "vertex", ".", "getId", "(", ")", ";", "minVertex", "=", "vertex", ";", "minScc", "=", "scc", ";", "}", "}", "}", "if", "(", "minVertex", "=", "=", "null", ")", "{", "return", "Optional", ".", "empty", "(", ")", ";", "}", "Graph", "<", "Integer", ">", "graphScc", "=", "new", "Graph", "<", ">", "(", "true", ")", ";", "for", "(", "Edge", "<", "Integer", ">", "edge", ":", "subGraph", ".", "getAllEdges", "(", ")", ")", "{", "if", "(", "minScc", ".", "contains", "(", "edge", ".", "getVertex1", "(", ")", ")", "&", "&", "minScc", ".", "contains", "(", "edge", ".", "getVertex2", "(", ")", ")", ")", "{", "graphScc", ".", "addEdge", "(", "edge", ".", "getVertex1", "(", ")", ".", "getId", "(", ")", ",", "edge", ".", "getVertex2", "(", ")", ".", "getId", "(", ")", ")", ";", "}", "}", "return", "Optional", ".", "of", "(", "graphScc", ".", "getVertex", "(", "minVertex", ".", "getId", "(", ")", ")", ")", ";", "}", "</s>"]
["<s>", "private", "void", "unblock", "(", "Vertex", "<", "Integer", ">", "u", ")", "{", "blockedSet", ".", "remove", "(", "u", ")", ";", "if", "(", "blockedMap", ".", "get", "(", "u", ")", "!", "=", "null", ")", "{", "blockedMap", ".", "get", "(", "u", ")", ".", "forEach", "(", "v", "-", ">", "{", "if", "(", "blockedSet", ".", "contains", "(", "v", ")", ")", "{", "unblock", "(", "v", ")", ";", "}", "}", ")", ";", "blockedMap", ".", "remove", "(", "u", ")", ";", "}", "}", "</s>"]
["<s>", "private", "boolean", "findCyclesInSCG", "(", "Vertex", "<", "Integer", ">", "startVertex", ",", "Vertex", "<", "Integer", ">", "currentVertex", ")", "{", "boolean", "foundCycle", "=", "false", ";", "stack", ".", "push", "(", "currentVertex", ")", ";", "blockedSet", ".", "add", "(", "currentVertex", ")", ";", "for", "(", "Edge", "<", "Integer", ">", "e", ":", "currentVertex", ".", "getEdges", "(", ")", ")", "{", "Vertex", "<", "Integer", ">", "neighbor", "=", "e", ".", "getVertex2", "(", ")", ";", "if", "(", "neighbor", "=", "=", "startVertex", ")", "{", "List", "<", "Vertex", "<", "Integer", ">", ">", "cycle", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "stack", ".", "push", "(", "startVertex", ")", ";", "cycle", ".", "addAll", "(", "stack", ")", ";", "Collections", ".", "reverse", "(", "cycle", ")", ";", "stack", ".", "pop", "(", ")", ";", "allCycles", ".", "add", "(", "cycle", ")", ";", "foundCycle", "=", "true", ";", "}", "else", "if", "(", "!", "blockedSet", ".", "contains", "(", "neighbor", ")", ")", "{", "boolean", "gotCycle", "=", "findCyclesInSCG", "(", "startVertex", ",", "neighbor", ")", ";", "foundCycle", "=", "foundCycle", "|", "|", "gotCycle", ";", "}", "}", "if", "(", "foundCycle", ")", "{", "unblock", "(", "currentVertex", ")", ";", "}", "else", "{", "for", "(", "Edge", "<", "Integer", ">", "e", ":", "currentVertex", ".", "getEdges", "(", ")", ")", "{", "Vertex", "<", "Integer", ">", "w", "=", "e", ".", "getVertex2", "(", ")", ";", "Set", "<", "Vertex", "<", "Integer", ">", ">", "bSet", "=", "getBSet", "(", "w", ")", ";", "bSet", ".", "add", "(", "currentVertex", ")", ";", "}", "}", "stack", ".", "pop", "(", ")", ";", "return", "foundCycle", ";", "}", "</s>"]
["<s>", "private", "Set", "<", "Vertex", "<", "Integer", ">", ">", "getBSet", "(", "Vertex", "<", "Integer", ">", "v", ")", "{", "return", "blockedMap", ".", "computeIfAbsent", "(", "v", ",", "(", "key", ")", "-", ">", "new", "HashSet", "<", ">", "(", ")", ")", ";", "}", "</s>"]
["<s>", "private", "Graph", "createSubGraph", "(", "long", "startVertex", ",", "Graph", "<", "Integer", ">", "graph", ")", "{", "Graph", "<", "Integer", ">", "subGraph", "=", "new", "Graph", "<", ">", "(", "true", ")", ";", "for", "(", "Edge", "<", "Integer", ">", "edge", ":", "graph", ".", "getAllEdges", "(", ")", ")", "{", "if", "(", "edge", ".", "getVertex1", "(", ")", ".", "getId", "(", ")", ">", "=", "startVertex", "&", "&", "edge", ".", "getVertex2", "(", ")", ".", "getId", "(", ")", ">", "=", "startVertex", ")", "{", "subGraph", ".", "addEdge", "(", "edge", ".", "getVertex1", "(", ")", ".", "getId", "(", ")", ",", "edge", ".", "getVertex2", "(", ")", ".", "getId", "(", ")", ")", ";", "}", "}", "return", "subGraph", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "AllCyclesInDirectedGraphJohnson", "johnson", "=", "new", "AllCyclesInDirectedGraphJohnson", "(", ")", ";", "Graph", "<", "Integer", ">", "graph", "=", "new", "Graph", "<", ">", "(", "true", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:2>", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:8>", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:5>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:2>", ",", "<NUM_LIT:9>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:2>", ",", "<NUM_LIT:7>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:3>", ",", "1", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:3>", ",", "<NUM_LIT:2>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:3>", ",", "<NUM_LIT:6>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:6>", ",", "<NUM_LIT:4>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:5>", ",", "<NUM_LIT:2>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:8>", ",", "<NUM_LIT:9>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:9>", ",", "<NUM_LIT:8>", ")", ";", "List", "<", "List", "<", "Vertex", "<", "Integer", ">", ">", ">", "allCycles", "=", "johnson", ".", "simpleCyles", "(", "graph", ")", ";", "allCycles", ".", "forEach", "(", "cycle", "-", ">", "{", "StringJoiner", "joiner", "=", "new", "StringJoiner", "(", "\"", "<STR_LIT>", "\"", ")", ";", "cycle", ".", "forEach", "(", "vertex", "-", ">", "joiner", ".", "add", "(", "String", ".", "valueOf", "(", "vertex", ".", "getId", "(", ")", ")", ")", ")", ";", "System", ".", "out", ".", "println", "(", "joiner", ")", ";", "}", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "scc", "(", "Graph", "<", "Integer", ">", "graph", ")", "{", "Deque", "<", "Vertex", "<", "Integer", ">", ">", "stack", "=", "new", "ArrayDeque", "<", "Vertex", "<", "Integer", ">", ">", "(", ")", ";", "Map", "<", "Vertex", "<", "Integer", ">", ",", "Boolean", ">", "visited", "=", "new", "HashMap", "<", "Vertex", "<", "Integer", ">", ",", "Boolean", ">", "(", ")", ";", "for", "(", "Vertex", "<", "Integer", ">", "vertex", ":", "graph", ".", "getAllVertex", "(", ")", ")", "{", "if", "(", "visited", ".", "containsKey", "(", "vertex", ")", ")", "{", "continue", ";", "}", "DFSUtil", "(", "vertex", ",", "visited", ",", "stack", ")", ";", "}", "System", ".", "out", ".", "println", "(", "stack", ")", ";", "Graph", "<", "Integer", ">", "reverseGraph", "=", "new", "Graph", "<", "Integer", ">", "(", "true", ")", ";", "Map", "<", "Long", ",", "Vertex", "<", "Integer", ">", ">", "vertexMap", "=", "new", "HashMap", "<", "Long", ",", "Vertex", "<", "Integer", ">", ">", "(", ")", ";", "for", "(", "Edge", "<", "Integer", ">", "edge", ":", "graph", ".", "getAllEdges", "(", ")", ")", "{", "reverseGraph", ".", "addEdge", "(", "edge", ".", "getVertex2", "(", ")", ".", "getId", "(", ")", ",", "edge", ".", "getVertex1", "(", ")", ".", "getId", "(", ")", ",", "edge", ".", "getWeight", "(", ")", ")", ";", "}", "for", "(", "Vertex", "<", "Integer", ">", "vertex", ":", "reverseGraph", ".", "getAllVertex", "(", ")", ")", "{", "vertexMap", ".", "put", "(", "vertex", ".", "getId", "(", ")", ",", "vertex", ")", ";", "}", "visited", ".", "clear", "(", ")", ";", "Vertex", "<", "Integer", ">", "vertex", "=", "vertexMap", ".", "get", "(", "stack", ".", "poll", "(", ")", ".", "getId", "(", ")", ")", ";", "DFSUtil1", "(", "vertex", ",", "visited", ")", ";", "for", "(", "Vertex", "<", "Integer", ">", "testVertex", ":", "reverseGraph", ".", "getAllVertex", "(", ")", ")", "{", "if", "(", "!", "visited", ".", "containsKey", "(", "testVertex", ")", ")", "{", "return", "false", ";", "}", "}", "return", "true", ";", "}", "</s>"]
["<s>", "private", "void", "DFSUtil", "(", "Vertex", "<", "Integer", ">", "vertex", ",", "Map", "<", "Vertex", "<", "Integer", ">", ",", "Boolean", ">", "visited", ",", "Deque", "<", "Vertex", "<", "Integer", ">", ">", "stack", ")", "{", "visited", ".", "put", "(", "vertex", ",", "true", ")", ";", "for", "(", "Vertex", "<", "Integer", ">", "v", ":", "vertex", ".", "getAdjacentVertexes", "(", ")", ")", "{", "if", "(", "visited", ".", "containsKey", "(", "v", ")", ")", "{", "continue", ";", "}", "DFSUtil", "(", "v", ",", "visited", ",", "stack", ")", ";", "}", "stack", ".", "offerFirst", "(", "vertex", ")", ";", "}", "</s>"]
["<s>", "private", "void", "DFSUtil1", "(", "Vertex", "<", "Integer", ">", "vertex", ",", "Map", "<", "Vertex", "<", "Integer", ">", ",", "Boolean", ">", "visited", ")", "{", "visited", ".", "put", "(", "vertex", ",", "true", ")", ";", "for", "(", "Vertex", "<", "Integer", ">", "v", ":", "vertex", ".", "getAdjacentVertexes", "(", ")", ")", "{", "if", "(", "visited", ".", "containsKey", "(", "v", ")", ")", "{", "continue", ";", "}", "DFSUtil1", "(", "v", ",", "visited", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "Graph", "<", "Integer", ">", "graph", "=", "new", "Graph", "<", "Integer", ">", "(", "true", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "0", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:2>", ",", "1", ")", ";", "graph", ".", "addEdge", "(", "0", ",", "<NUM_LIT:2>", ")", ";", "graph", ".", "addEdge", "(", "0", ",", "<NUM_LIT:3>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:4>", ",", "<NUM_LIT:2>", ")", ";", "DirectedGraphConnectivity", "scc", "=", "new", "DirectedGraphConnectivity", "(", ")", ";", "boolean", "result", "=", "scc", ".", "scc", "(", "graph", ")", ";", "System", ".", "out", ".", "println", "(", "result", ")", ";", "}", "</s>"]
["<s>", "public", "int", "findMaxMatching", "(", "Map", "<", "Integer", ",", "List", "<", "Integer", ">", ">", "jobApplications", ",", "List", "<", "Integer", ">", "allJobs", ")", "{", "Map", "<", "Integer", ",", "Integer", ">", "match", "=", "new", "HashMap", "<", "Integer", ",", "Integer", ">", "(", ")", ";", "int", "maxMatch", "=", "0", ";", "for", "(", "Integer", "candidate", ":", "jobApplications", ".", "keySet", "(", ")", ")", "{", "Set", "<", "Integer", ">", "jobsSeen", "=", "new", "HashSet", "<", "Integer", ">", "(", ")", ";", "maxMatch", "+", "=", "matchJobs", "(", "candidate", ",", "jobApplications", ",", "match", ",", "jobsSeen", ")", "=", "=", "true", "?", "1", ":", "0", ";", "}", "return", "maxMatch", ";", "}", "</s>"]
["<s>", "private", "boolean", "matchJobs", "(", "Integer", "candidate", ",", "Map", "<", "Integer", ",", "List", "<", "Integer", ">", ">", "jobApplications", ",", "Map", "<", "Integer", ",", "Integer", ">", "match", ",", "Set", "<", "Integer", ">", "jobsSeen", ")", "{", "for", "(", "int", "job", ":", "jobApplications", ".", "get", "(", "candidate", ")", ")", "{", "if", "(", "jobsSeen", ".", "contains", "(", "job", ")", ")", "{", "continue", ";", "}", "jobsSeen", ".", "add", "(", "job", ")", ";", "if", "(", "match", ".", "get", "(", "job", ")", "=", "=", "null", ")", "{", "match", ".", "put", "(", "job", ",", "candidate", ")", ";", "return", "true", ";", "}", "boolean", "flag", "=", "matchJobs", "(", "match", ".", "get", "(", "job", ")", ",", "jobApplications", ",", "match", ",", "jobsSeen", ")", ";", "if", "(", "flag", ")", "{", "match", ".", "put", "(", "job", ",", "candidate", ")", ";", "return", "true", ";", "}", "}", "return", "false", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "List", "<", "Integer", ">", "app0", "=", "new", "ArrayList", "<", "Integer", ">", "(", ")", ";", "app0", ".", "add", "(", "<NUM_LIT:10>", ")", ";", "app0", ".", "add", "(", "<NUM_LIT:11>", ")", ";", "app0", ".", "add", "(", "<NUM_LIT>", ")", ";", "List", "<", "Integer", ">", "app1", "=", "new", "ArrayList", "<", "Integer", ">", "(", ")", ";", "app1", ".", "add", "(", "<NUM_LIT:10>", ")", ";", "List", "<", "Integer", ">", "app2", "=", "new", "ArrayList", "<", "Integer", ">", "(", ")", ";", "app2", ".", "add", "(", "<NUM_LIT:12>", ")", ";", "List", "<", "Integer", ">", "app3", "=", "new", "ArrayList", "<", "Integer", ">", "(", ")", ";", "app3", ".", "add", "(", "<NUM_LIT:12>", ")", ";", "app3", ".", "add", "(", "<NUM_LIT:10>", ")", ";", "app3", ".", "add", "(", "<NUM_LIT:11>", ")", ";", "Map", "<", "Integer", ",", "List", "<", "Integer", ">", ">", "jobApplications", "=", "new", "HashMap", "<", "Integer", ",", "List", "<", "Integer", ">", ">", "(", ")", ";", "jobApplications", ".", "put", "(", "0", ",", "app0", ")", ";", "jobApplications", ".", "put", "(", "1", ",", "app1", ")", ";", "jobApplications", ".", "put", "(", "<NUM_LIT:2>", ",", "app2", ")", ";", "jobApplications", ".", "put", "(", "<NUM_LIT:3>", ",", "app3", ")", ";", "MaximumBiparteMatching", "mbm", "=", "new", "MaximumBiparteMatching", "(", ")", ";", "List", "<", "Integer", ">", "allJobs", "=", "new", "ArrayList", "<", "Integer", ">", "(", ")", ";", "allJobs", ".", "add", "(", "<NUM_LIT:10>", ")", ";", "allJobs", ".", "add", "(", "<NUM_LIT:11>", ")", ";", "allJobs", ".", "add", "(", "<NUM_LIT:12>", ")", ";", "allJobs", ".", "add", "(", "<NUM_LIT>", ")", ";", "System", ".", "out", ".", "print", "(", "mbm", ".", "findMaxMatching", "(", "jobApplications", ",", "allJobs", ")", ")", ";", "}", "</s>"]
["<s>", "public", "void", "fillDFS", "(", "int", "screen", "[", "]", "[", "]", ",", "int", "oldColor", ",", "int", "newColor", ",", "int", "startx", ",", "int", "starty", ")", "{", "fillUtil", "(", "screen", ",", "startx", ",", "starty", ",", "oldColor", ",", "newColor", ")", ";", "}", "</s>"]
["<s>", "public", "void", "fillUtil", "(", "int", "screen", "[", "]", "[", "]", ",", "int", "currentx", ",", "int", "currenty", ",", "int", "oldColor", ",", "int", "newColor", ")", "{", "if", "(", "currentx", "<", "0", "|", "|", "currentx", ">", "=", "screen", ".", "length", "|", "|", "currenty", "<", "0", "|", "|", "currenty", ">", "=", "screen", "[", "currentx", "]", ".", "length", ")", "{", "return", ";", "}", "if", "(", "screen", "[", "currentx", "]", "[", "currenty", "]", "!", "=", "oldColor", ")", "{", "return", ";", "}", "screen", "[", "currentx", "]", "[", "currenty", "]", "=", "newColor", ";", "fillUtil", "(", "screen", ",", "currentx", "+", "1", ",", "currenty", ",", "oldColor", ",", "newColor", ")", ";", "fillUtil", "(", "screen", ",", "currentx", "-", "1", ",", "currenty", ",", "oldColor", ",", "newColor", ")", ";", "fillUtil", "(", "screen", ",", "currentx", ",", "currenty", "+", "1", ",", "oldColor", ",", "newColor", ")", ";", "fillUtil", "(", "screen", ",", "currentx", ",", "currenty", "-", "1", ",", "oldColor", ",", "newColor", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "screen", "[", "]", "[", "]", "=", "{", "{", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", "}", ",", "{", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", "}", ",", "{", "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", "}", ",", "{", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", "}", ",", "{", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", "}", ",", "{", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", "}", "}", ";", "FloodFillAlgorithm", "ff", "=", "new", "FloodFillAlgorithm", "(", ")", ";", "ff", ".", "fillDFS", "(", "screen", ",", "0", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:3>", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "screen", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "screen", "[", "i", "]", ".", "length", ";", "j", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "screen", "[", "i", "]", "[", "j", "]", "+", "\"", "\"", ")", ";", "}", "System", ".", "out", ".", "println", "(", ")", ";", "}", "}", "</s>"]
["<s>", "public", "void", "WelshPowell", "(", ")", "{", "Graph", "<", "Integer", ">", "graph", "=", "new", "Graph", "<", "Integer", ">", "(", "false", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:2>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:4>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:4>", ",", "<NUM_LIT:6>", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:7>", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:8>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:2>", ",", "<NUM_LIT:9>", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:3>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:2>", ",", "<NUM_LIT:4>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:3>", ",", "<NUM_LIT:7>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:2>", ",", "<NUM_LIT:7>", ")", ";", "ComparatorVertex", "c", "=", "new", "ComparatorVertex", "(", ")", ";", "Set", "<", "Vertex", "<", "Integer", ">", ">", "sortedSet", "=", "new", "TreeSet", "<", "Vertex", "<", "Integer", ">", ">", "(", "c", ")", ";", "for", "(", "Vertex", "<", "Integer", ">", "v", ":", "graph", ".", "getAllVertex", "(", ")", ")", "{", "sortedSet", ".", "add", "(", "v", ")", ";", "}", "Map", "<", "Long", ",", "String", ">", "assignedColor", "=", "new", "HashMap", "<", "Long", ",", "String", ">", "(", ")", ";", "Map", "<", "Long", ",", "String", ">", "finalAssignedColor", "=", "new", "HashMap", "<", "Long", ",", "String", ">", "(", ")", ";", "Map", "<", "String", ",", "Boolean", ">", "colorsUsed", "=", "new", "TreeMap", "<", "String", ",", "Boolean", ">", "(", ")", ";", "colorsUsed", ".", "put", "(", "\"", "<STR_LIT>", "\"", ",", "false", ")", ";", "colorsUsed", ".", "put", "(", "\"", "<STR_LIT>", "\"", ",", "false", ")", ";", "colorsUsed", ".", "put", "(", "\"", "<STR_LIT>", "\"", ",", "false", ")", ";", "colorsUsed", ".", "put", "(", "\"", "<STR_LIT>", "\"", ",", "false", ")", ";", "colorsUsed", ".", "put", "(", "\"", "<STR_LIT>", "\"", ",", "false", ")", ";", "Set", "<", "Vertex", "<", "Integer", ">", ">", "removeSet", "=", "new", "HashSet", "<", "Vertex", "<", "Integer", ">", ">", "(", ")", ";", "while", "(", "sortedSet", ".", "size", "(", ")", "!", "=", "removeSet", ".", "size", "(", ")", ")", "{", "String", "color", "=", "null", ";", "for", "(", "Vertex", "<", "Integer", ">", "v", ":", "sortedSet", ")", "{", "if", "(", "removeSet", ".", "contains", "(", "v", ")", ")", "{", "continue", ";", "}", "boolean", "allUncolored", "=", "allAdjacentUnColored", "(", "v", ".", "getAdjacentVertexes", "(", ")", ",", "assignedColor", ")", ";", "if", "(", "allUncolored", ")", "{", "color", "=", "getUnusedColor", "(", "colorsUsed", ")", ";", "assignedColor", ".", "put", "(", "v", ".", "getId", "(", ")", ",", "color", ")", ";", "removeSet", ".", "add", "(", "v", ")", ";", "finalAssignedColor", ".", "put", "(", "v", ".", "getId", "(", ")", ",", "color", ")", ";", "}", "}", "colorsUsed", ".", "remove", "(", "color", ")", ";", "assignedColor", ".", "clear", "(", ")", ";", "}", "System", ".", "out", ".", "println", "(", "finalAssignedColor", ")", ";", "}", "</s>"]
["<s>", "public", "void", "colorGraph", "(", ")", "{", "Graph", "<", "Integer", ">", "graph", "=", "new", "Graph", "<", "Integer", ">", "(", "false", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:2>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:4>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:4>", ",", "<NUM_LIT:6>", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:7>", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:8>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:2>", ",", "<NUM_LIT:9>", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:3>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:2>", ",", "<NUM_LIT:4>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:3>", ",", "<NUM_LIT:7>", ")", ";", "Map", "<", "String", ",", "Boolean", ">", "colorsUsed", "=", "new", "HashMap", "<", "String", ",", "Boolean", ">", "(", ")", ";", "colorsUsed", ".", "put", "(", "\"", "<STR_LIT>", "\"", ",", "false", ")", ";", "colorsUsed", ".", "put", "(", "\"", "<STR_LIT>", "\"", ",", "false", ")", ";", "colorsUsed", ".", "put", "(", "\"", "<STR_LIT>", "\"", ",", "false", ")", ";", "colorsUsed", ".", "put", "(", "\"", "<STR_LIT>", "\"", ",", "false", ")", ";", "Map", "<", "Long", ",", "String", ">", "colorsAssigned", "=", "new", "HashMap", "<", "Long", ",", "String", ">", "(", ")", ";", "Collection", "<", "Vertex", "<", "Integer", ">", ">", "allVertex", "=", "graph", ".", "getAllVertex", "(", ")", ";", "for", "(", "Vertex", "<", "Integer", ">", "v", ":", "allVertex", ")", "{", "List", "<", "Vertex", "<", "Integer", ">", ">", "adjacentVertexes", "=", "v", ".", "getAdjacentVertexes", "(", ")", ";", "for", "(", "Vertex", "<", "Integer", ">", "adjacentVertex", ":", "adjacentVertexes", ")", "{", "String", "color", "=", "colorsAssigned", ".", "get", "(", "adjacentVertex", ".", "getId", "(", ")", ")", ";", "if", "(", "color", "!", "=", "null", ")", "{", "assignColor", "(", "color", ",", "colorsUsed", ")", ";", "}", "}", "String", "color", "=", "getUnusedColor", "(", "colorsUsed", ")", ";", "colorsAssigned", ".", "put", "(", "v", ".", "getId", "(", ")", ",", "color", ")", ";", "resetColor", "(", "colorsUsed", ")", ";", "}", "System", ".", "out", ".", "println", "(", "colorsAssigned", ")", ";", "}", "</s>"]
["<s>", "private", "String", "getUnusedColor", "(", "Map", "<", "String", ",", "Boolean", ">", "colorsUsed", ")", "{", "for", "(", "String", "color", ":", "colorsUsed", ".", "keySet", "(", ")", ")", "{", "if", "(", "colorsUsed", ".", "get", "(", "color", ")", ".", "equals", "(", "false", ")", ")", "{", "return", "color", ";", "}", "}", "throw", "new", "RuntimeException", "(", ")", ";", "}", "</s>"]
["<s>", "private", "void", "resetColor", "(", "Map", "<", "String", ",", "Boolean", ">", "colorsUsed", ")", "{", "Set", "<", "String", ">", "colors", "=", "new", "HashSet", "<", "String", ">", "(", ")", ";", "for", "(", "String", "color", ":", "colorsUsed", ".", "keySet", "(", ")", ")", "{", "colors", ".", "add", "(", "color", ")", ";", "}", "for", "(", "String", "color", ":", "colors", ")", "{", "colorsUsed", ".", "remove", "(", "color", ")", ";", "colorsUsed", ".", "put", "(", "color", ",", "false", ")", ";", "}", "}", "</s>"]
["<s>", "private", "void", "assignColor", "(", "String", "color", ",", "Map", "<", "String", ",", "Boolean", ">", "colorsUsed", ")", "{", "colorsUsed", ".", "remove", "(", "color", ")", ";", "colorsUsed", ".", "put", "(", "color", ",", "true", ")", ";", "}", "</s>"]
["<s>", "private", "boolean", "allAdjacentUnColored", "(", "Collection", "<", "Vertex", "<", "Integer", ">", ">", "vertexes", ",", "Map", "<", "Long", ",", "String", ">", "colorsAssigned", ")", "{", "for", "(", "Vertex", "<", "Integer", ">", "vertex", ":", "vertexes", ")", "{", "if", "(", "colorsAssigned", ".", "containsKey", "(", "vertex", ".", "getId", "(", ")", ")", ")", "{", "return", "false", ";", "}", "}", "return", "true", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "GraphColoring", "graphColoring", "=", "new", "GraphColoring", "(", ")", ";", "graphColoring", ".", "WelshPowell", "(", ")", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "int", "compare", "(", "Vertex", "<", "Integer", ">", "o1", ",", "Vertex", "<", "Integer", ">", "o2", ")", "{", "if", "(", "o1", ".", "getDegree", "(", ")", "<", "=", "o2", ".", "getDegree", "(", ")", ")", "{", "return", "1", ";", "}", "else", "{", "return", "-", "1", ";", "}", "}", "</s>"]
["<s>", "public", "Set", "<", "Edge", "<", "T", ">", ">", "getBridge", "(", "Graph", "<", "T", ">", "graph", ")", "{", "Set", "<", "Edge", "<", "T", ">", ">", "result", "=", "new", "HashSet", "<", "Edge", "<", "T", ">", ">", "(", ")", ";", "Map", "<", "Vertex", "<", "T", ">", ",", "Integer", ">", "discovery", "=", "new", "HashMap", "<", "Vertex", "<", "T", ">", ",", "Integer", ">", "(", ")", ";", "Map", "<", "Vertex", "<", "T", ">", ",", "Integer", ">", "low", "=", "new", "HashMap", "<", "Vertex", "<", "T", ">", ",", "Integer", ">", "(", ")", ";", "Map", "<", "Vertex", "<", "T", ">", ",", "Vertex", "<", "T", ">", ">", "parent", "=", "new", "HashMap", "<", "Vertex", "<", "T", ">", ",", "Vertex", "<", "T", ">", ">", "(", ")", ";", "Map", "<", "Vertex", "<", "T", ">", ",", "Boolean", ">", "visited", "=", "new", "HashMap", "<", "Vertex", "<", "T", ">", ",", "Boolean", ">", "(", ")", ";", "for", "(", "Vertex", "<", "T", ">", "vertex", ":", "graph", ".", "getAllVertex", "(", ")", ")", "{", "if", "(", "!", "visited", ".", "containsKey", "(", "vertex", ")", ")", "{", "BridgeUtil", "(", "vertex", ",", "result", ",", "discovery", ",", "low", ",", "parent", ",", "visited", ")", ";", "}", "}", "return", "result", ";", "}", "</s>"]
["<s>", "private", "void", "BridgeUtil", "(", "Vertex", "<", "T", ">", "vertex", ",", "Set", "<", "Edge", "<", "T", ">", ">", "result", ",", "Map", "<", "Vertex", "<", "T", ">", ",", "Integer", ">", "discovery", ",", "Map", "<", "Vertex", "<", "T", ">", ",", "Integer", ">", "low", ",", "Map", "<", "Vertex", "<", "T", ">", ",", "Vertex", "<", "T", ">", ">", "parent", ",", "Map", "<", "Vertex", "<", "T", ">", ",", "Boolean", ">", "visited", ")", "{", "visited", ".", "put", "(", "vertex", ",", "true", ")", ";", "discovery", ".", "put", "(", "vertex", ",", "time", ")", ";", "low", ".", "put", "(", "vertex", ",", "time", ")", ";", "time", "+", "+", ";", "for", "(", "Vertex", "<", "T", ">", "child", ":", "vertex", ".", "getAdjacentVertexes", "(", ")", ")", "{", "if", "(", "!", "visited", ".", "containsKey", "(", "child", ")", ")", "{", "parent", ".", "put", "(", "child", ",", "vertex", ")", ";", "BridgeUtil", "(", "child", ",", "result", ",", "discovery", ",", "low", ",", "parent", ",", "visited", ")", ";", "if", "(", "discovery", ".", "get", "(", "vertex", ")", "<", "low", ".", "get", "(", "child", ")", ")", "{", "result", ".", "add", "(", "new", "Edge", "<", "T", ">", "(", "vertex", ",", "child", ")", ")", ";", "}", "low", ".", "put", "(", "vertex", ",", "Math", ".", "min", "(", "discovery", ".", "get", "(", "vertex", ")", ",", "low", ".", "get", "(", "child", ")", ")", ")", ";", "}", "else", "{", "if", "(", "!", "child", ".", "equals", "(", "parent", ".", "get", "(", "vertex", ")", ")", ")", "{", "low", ".", "put", "(", "vertex", ",", "Math", ".", "min", "(", "discovery", ".", "get", "(", "vertex", ")", ",", "low", ".", "get", "(", "child", ")", ")", ")", ";", "}", "}", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "Graph", "<", "Integer", ">", "graph", "=", "new", "Graph", "<", "Integer", ">", "(", "false", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:2>", ",", "1", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:3>", ",", "1", ")", ";", "graph", ".", "addEdge", "(", "1", ",", "<NUM_LIT:4>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", ")", ";", "graph", ".", "addEdge", "(", "<NUM_LIT:5>", ",", "1", ")", ";", "Bridge", "<", "Integer", ">", "ap", "=", "new", "Bridge", "<", "Integer", ">", "(", ")", ";", "Set", "<", "Edge", "<", "Integer", ">", ">", "result", "=", "ap", ".", "getBridge", "(", "graph", ")", ";", "System", ".", "out", ".", "print", "(", "result", ")", ";", "}", "</s>"]
["<s>", "public", "void", "turnImage", "(", "int", "[", "]", "[", "]", "mat", ")", "{", "int", "length", "=", "mat", ".", "length", "-", "1", ";", "int", "j", "=", "0", ";", "while", "(", "j", "<", "mat", ".", "length", "/", "<NUM_LIT:2>", ")", "{", "for", "(", "int", "i", "=", "j", ";", "i", "<", "length", "-", "j", ";", "i", "+", "+", ")", "{", "int", "temp", "=", "mat", "[", "j", "]", "[", "i", "]", ";", "mat", "[", "j", "]", "[", "i", "]", "=", "mat", "[", "length", "-", "i", "]", "[", "j", "]", ";", "mat", "[", "length", "-", "i", "]", "[", "j", "]", "=", "mat", "[", "length", "-", "j", "]", "[", "length", "-", "i", "]", ";", "mat", "[", "length", "-", "j", "]", "[", "length", "-", "i", "]", "=", "mat", "[", "i", "]", "[", "length", "-", "j", "]", ";", "mat", "[", "i", "]", "[", "length", "-", "j", "]", "=", "temp", ";", "}", "j", "+", "+", ";", "}", "}", "</s>"]
["<s>", "private", "void", "print", "(", "int", "arr", "[", "]", "[", "]", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "arr", ".", "length", ";", "j", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "arr", "[", "i", "]", "[", "j", "]", "+", "\"", "\"", ")", ";", "}", "System", ".", "out", ".", "print", "(", "\"", "<STR_LIT>", "<STR_LIT>", "\"", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "mat", "[", "]", "[", "]", "=", "{", "{", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:20>", "}", ",", "{", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:30>", "}", ",", "{", "<NUM_LIT:9>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT:12>", ",", "<NUM_LIT>", "}", ",", "{", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT:15>", ",", "<NUM_LIT:16>", ",", "<NUM_LIT>", "}", ",", "{", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT:24>", ",", "<NUM_LIT>", "}", "}", ";", "TurnImageBy90", "ti", "=", "new", "TurnImageBy90", "(", ")", ";", "ti", ".", "turnImage", "(", "mat", ")", ";", "ti", ".", "print", "(", "mat", ")", ";", "}", "</s>"]
["<s>", "public", "GameOfLife", "(", "boolean", "[", "]", "[", "]", "initialState", ")", "{", "board", "=", "initialState", ";", "tempBoard", "=", "new", "boolean", "[", "board", ".", "length", "]", "[", "board", ".", "length", "]", ";", "}", "</s>"]
["<s>", "public", "void", "printState", "(", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "board", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "board", "[", "i", "]", ".", "length", ";", "j", "+", "+", ")", "{", "if", "(", "board", "[", "i", "]", "[", "j", "]", ")", "{", "System", ".", "out", ".", "print", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "else", "{", "System", ".", "out", ".", "print", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "}", "System", ".", "out", ".", "print", "(", "\"", "<STR_LIT>", "<STR_LIT>", "\"", ")", ";", "}", "System", ".", "out", ".", "print", "(", "\"", "<STR_LIT>", "<STR_LIT>", "<STR_LIT>", "<STR_LIT>", "\"", ")", ";", "}", "</s>"]
["<s>", "public", "void", "next", "(", ")", "{", "int", "count", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "board", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "board", "[", "i", "]", ".", "length", ";", "j", "+", "+", ")", "{", "count", "=", "countNeighbors", "(", "i", ",", "j", ")", ";", "tempBoard", "[", "i", "]", "[", "j", "]", "=", "board", "[", "i", "]", "[", "j", "]", ";", "if", "(", "count", "<", "=", "1", ")", "{", "tempBoard", "[", "i", "]", "[", "j", "]", "=", "false", ";", "}", "if", "(", "count", "=", "=", "<NUM_LIT:3>", ")", "{", "tempBoard", "[", "i", "]", "[", "j", "]", "=", "true", ";", "}", "if", "(", "count", ">", "=", "<NUM_LIT:4>", ")", "{", "tempBoard", "[", "i", "]", "[", "j", "]", "=", "false", ";", "}", "}", "}", "boolean", "[", "]", "[", "]", "rBoard", "=", "tempBoard", ";", "tempBoard", "=", "board", ";", "board", "=", "rBoard", ";", "}", "</s>"]
["<s>", "public", "void", "nextOptimized", "(", ")", "{", "boolean", "temp1", "[", "]", "=", "new", "boolean", "[", "board", "[", "0", "]", ".", "length", "]", ";", "boolean", "temp2", "[", "]", "=", "new", "boolean", "[", "board", "[", "0", "]", ".", "length", "]", ";", "calculate", "(", "board", ",", "temp1", ",", "0", ")", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "board", ".", "length", ";", "i", "+", "+", ")", "{", "calculate", "(", "board", ",", "temp2", ",", "i", ")", ";", "copy", "(", "i", "-", "1", ",", "temp1", ")", ";", "copy", "(", "temp1", ",", "temp2", ")", ";", "}", "copy", "(", "board", ".", "length", "-", "1", ",", "temp1", ")", ";", "}", "</s>"]
["<s>", "void", "copy", "(", "boolean", "arr1", "[", "]", ",", "boolean", "arr2", "[", "]", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr2", ".", "length", ";", "i", "+", "+", ")", "{", "arr1", "[", "i", "]", "=", "arr2", "[", "i", "]", ";", "}", "}", "</s>"]
["<s>", "void", "calculate", "(", "boolean", "[", "]", "[", "]", "board", ",", "boolean", "temp", "[", "]", ",", "int", "i", ")", "{", "int", "count", "=", "0", ";", "for", "(", "int", "j", "=", "0", ";", "j", "<", "board", "[", "i", "]", ".", "length", ";", "j", "+", "+", ")", "{", "count", "=", "countNeighbors", "(", "i", ",", "j", ")", ";", "temp", "[", "j", "]", "=", "board", "[", "i", "]", "[", "j", "]", ";", "if", "(", "count", "<", "=", "1", ")", "{", "temp", "[", "j", "]", "=", "false", ";", "}", "if", "(", "count", "=", "=", "<NUM_LIT:3>", ")", "{", "temp", "[", "j", "]", "=", "true", ";", "}", "if", "(", "count", ">", "=", "<NUM_LIT:4>", ")", "{", "temp", "[", "j", "]", "=", "false", ";", "}", "}", "}", "</s>"]
["<s>", "private", "void", "copy", "(", "int", "i", ",", "boolean", "[", "]", "temp", ")", "{", "for", "(", "int", "x", "=", "0", ";", "x", "<", "temp", ".", "length", ";", "x", "+", "+", ")", "{", "board", "[", "i", "]", "[", "x", "]", "=", "temp", "[", "x", "]", ";", "}", "}", "</s>"]
["<s>", "private", "int", "countNeighbors", "(", "int", "i", ",", "int", "j", ")", "{", "int", "count", "=", "0", ";", "for", "(", "int", "k", "=", "i", "-", "1", ";", "k", "<", "=", "i", "+", "1", ";", "k", "+", "+", ")", "{", "for", "(", "int", "l", "=", "j", "-", "1", ";", "l", "<", "=", "j", "+", "1", ";", "l", "+", "+", ")", "{", "if", "(", "(", "i", "=", "=", "k", "&", "&", "j", "=", "=", "l", ")", "|", "|", "k", "<", "0", "|", "|", "l", "<", "0", "|", "|", "k", ">", "=", "board", ".", "length", "|", "|", "l", ">", "=", "board", "[", "k", "]", ".", "length", ")", "{", "continue", ";", "}", "if", "(", "board", "[", "k", "]", "[", "l", "]", ")", "{", "count", "+", "+", ";", "}", "}", "}", "return", "count", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "boolean", "[", "]", "[", "]", "initialState", "=", "new", "boolean", "[", "<NUM_LIT:10>", "]", "[", "<NUM_LIT:10>", "]", ";", "initialState", "[", "<NUM_LIT:3>", "]", "[", "<NUM_LIT:6>", "]", "=", "true", ";", "initialState", "[", "<NUM_LIT:4>", "]", "[", "<NUM_LIT:6>", "]", "=", "true", ";", "initialState", "[", "<NUM_LIT:5>", "]", "[", "<NUM_LIT:6>", "]", "=", "true", ";", "initialState", "[", "<NUM_LIT:5>", "]", "[", "<NUM_LIT:7>", "]", "=", "true", ";", "initialState", "[", "<NUM_LIT:5>", "]", "[", "<NUM_LIT:8>", "]", "=", "true", ";", "GameOfLife", "gol", "=", "new", "GameOfLife", "(", "initialState", ")", ";", "gol", ".", "printState", "(", ")", ";", "gol", ".", "nextOptimized", "(", ")", ";", "gol", ".", "printState", "(", ")", ";", "gol", ".", "nextOptimized", "(", ")", ";", "gol", ".", "printState", "(", ")", ";", "gol", ".", "nextOptimized", "(", ")", ";", "gol", ".", "printState", "(", ")", ";", "gol", ".", "nextOptimized", "(", ")", ";", "gol", ".", "printState", "(", ")", ";", "}", "</s>"]
["<s>", "public", "void", "fill", "(", "int", "input", "[", "]", "[", "]", ")", "{", "boolean", "row", "[", "]", "=", "new", "boolean", "[", "input", ".", "length", "]", ";", "boolean", "col", "[", "]", "=", "new", "boolean", "[", "input", "[", "0", "]", ".", "length", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "input", "[", "i", "]", ".", "length", ";", "j", "+", "+", ")", "{", "if", "(", "input", "[", "i", "]", "[", "j", "]", "=", "=", "1", ")", "{", "row", "[", "i", "]", "=", "true", ";", "col", "[", "j", "]", "=", "true", ";", "}", "}", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "input", "[", "i", "]", ".", "length", ";", "j", "+", "+", ")", "{", "if", "(", "row", "[", "i", "]", "|", "|", "col", "[", "j", "]", ")", "{", "input", "[", "i", "]", "[", "j", "]", "=", "1", ";", "}", "}", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input", "[", "]", "[", "]", "=", "{", "{", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", "}", ",", "{", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "}", ",", "{", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "}", "}", ";", "Fill2DMatrixWith1", "fd", "=", "new", "Fill2DMatrixWith1", "(", ")", ";", "fd", ".", "fill", "(", "input", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "input", "[", "i", "]", ".", "length", ";", "j", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "input", "[", "i", "]", "[", "j", "]", "+", "\"", "\"", ")", ";", "}", "System", ".", "out", ".", "println", "(", ")", ";", "}", "}", "</s>"]
["<s>", "Position", "(", "int", "x", ",", "int", "y", ")", "{", "this", ".", "x", "=", "x", ";", "this", ".", "y", "=", "y", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "int", "hashCode", "(", ")", "{", "final", "int", "prime", "=", "<NUM_LIT:31>", ";", "int", "result", "=", "1", ";", "result", "=", "prime", "*", "result", "+", "x", ";", "result", "=", "prime", "*", "result", "+", "y", ";", "return", "result", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "boolean", "equals", "(", "Object", "obj", ")", "{", "if", "(", "this", "=", "=", "obj", ")", "return", "true", ";", "if", "(", "obj", "=", "=", "null", ")", "return", "false", ";", "if", "(", "getClass", "(", ")", "!", "=", "obj", ".", "getClass", "(", ")", ")", "return", "false", ";", "Position", "other", "=", "(", "Position", ")", "obj", ";", "if", "(", "x", "!", "=", "other", ".", "x", ")", "return", "false", ";", "if", "(", "y", "!", "=", "other", ".", "y", ")", "return", "false", ";", "return", "true", ";", "}", "</s>"]
["<s>", "public", "char", "[", "]", "[", "]", "fit", "(", "int", "size", ",", "Position", "missingPosition", ")", "{", "char", "matrix", "[", "]", "[", "]", "=", "new", "char", "[", "size", "]", "[", "size", "]", ";", "matrix", "[", "missingPosition", ".", "x", "]", "[", "missingPosition", ".", "y", "]", "=", "<CHAR_LIT>", ";", "fit", "(", "matrix", ",", "new", "Position", "(", "0", ",", "0", ")", ",", "matrix", ".", "length", ",", "missingPosition", ")", ";", "return", "matrix", ";", "}", "</s>"]
["<s>", "private", "void", "fit", "(", "char", "matrix", "[", "]", "[", "]", ",", "Position", "topLeft", ",", "int", "size", ",", "Position", "missingPosition", ")", "{", "if", "(", "size", "=", "=", "<NUM_LIT:2>", ")", "{", "updateMatrix", "(", "matrix", ",", "topLeft", ",", "missingPosition", ")", ";", "return", ";", "}", "Position", "alreadyFilledQuadrantPosition", "=", "determineQuadrant", "(", "topLeft", ",", "size", ",", "missingPosition", ")", ";", "updateMatrix", "(", "matrix", ",", "new", "Position", "(", "topLeft", ".", "x", "+", "size", "/", "<NUM_LIT:2>", "-", "1", ",", "topLeft", ".", "y", "+", "size", "/", "<NUM_LIT:2>", "-", "1", ")", ",", "alreadyFilledQuadrantPosition", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "<NUM_LIT:2>", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "<NUM_LIT:2>", ";", "j", "+", "+", ")", "{", "Position", "newMissingPosition", "=", "new", "Position", "(", "topLeft", ".", "x", "+", "size", "/", "<NUM_LIT:2>", "-", "1", "+", "i", ",", "topLeft", ".", "y", "+", "size", "/", "<NUM_LIT:2>", "-", "1", "+", "j", ")", ";", "if", "(", "newMissingPosition", ".", "equals", "(", "alreadyFilledQuadrantPosition", ")", ")", "{", "fit", "(", "matrix", ",", "new", "Position", "(", "topLeft", ".", "x", "+", "i", "*", "size", "/", "<NUM_LIT:2>", ",", "topLeft", ".", "y", "+", "j", "*", "size", "/", "<NUM_LIT:2>", ")", ",", "size", "/", "<NUM_LIT:2>", ",", "missingPosition", ")", ";", "}", "else", "{", "fit", "(", "matrix", ",", "new", "Position", "(", "topLeft", ".", "x", "+", "i", "*", "size", "/", "<NUM_LIT:2>", ",", "topLeft", ".", "y", "+", "j", "*", "size", "/", "<NUM_LIT:2>", ")", ",", "size", "/", "<NUM_LIT:2>", ",", "newMissingPosition", ")", ";", "}", "}", "}", "}", "</s>"]
["<s>", "private", "Position", "determineQuadrant", "(", "Position", "topLeft", ",", "int", "size", ",", "Position", "missingPosition", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "<NUM_LIT:2>", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "<NUM_LIT:2>", ";", "j", "+", "+", ")", "{", "if", "(", "missingPosition", ".", "x", ">", "=", "topLeft", ".", "x", "+", "i", "*", "size", "/", "<NUM_LIT:2>", "&", "&", "missingPosition", ".", "x", "<", "=", "topLeft", ".", "x", "+", "i", "*", "size", "/", "<NUM_LIT:2>", "+", "size", "/", "<NUM_LIT:2>", "-", "1", "&", "&", "missingPosition", ".", "y", ">", "=", "topLeft", ".", "y", "+", "j", "*", "size", "/", "<NUM_LIT:2>", "&", "&", "missingPosition", ".", "y", "<", "=", "topLeft", ".", "y", "+", "j", "*", "size", "/", "<NUM_LIT:2>", "+", "size", "/", "<NUM_LIT:2>", "-", "1", ")", "{", "return", "new", "Position", "(", "topLeft", ".", "x", "+", "size", "/", "<NUM_LIT:2>", "-", "1", "+", "i", ",", "topLeft", ".", "y", "+", "size", "/", "<NUM_LIT:2>", "-", "1", "+", "j", ")", ";", "}", "}", "}", "throw", "new", "IllegalArgumentException", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "</s>"]
["<s>", "private", "void", "updateMatrix", "(", "char", "matrix", "[", "]", "[", "]", ",", "Position", "topLeft", ",", "Position", "missingPosition", ")", "{", "for", "(", "int", "i", "=", "topLeft", ".", "x", ";", "i", "<", "topLeft", ".", "x", "+", "<NUM_LIT:2>", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "topLeft", ".", "y", ";", "j", "<", "topLeft", ".", "y", "+", "<NUM_LIT:2>", ";", "j", "+", "+", ")", "{", "if", "(", "i", "=", "=", "missingPosition", ".", "x", "&", "&", "j", "=", "=", "missingPosition", ".", "y", ")", "{", "continue", ";", "}", "matrix", "[", "i", "]", "[", "j", "]", "=", "tileCount", ";", "}", "}", "tileCount", "+", "+", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "TilingProblem", "tp", "=", "new", "TilingProblem", "(", ")", ";", "Position", "p", "=", "new", "Position", "(", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ")", ";", "char", "matrix", "[", "]", "[", "]", "=", "tp", ".", "fit", "(", "<NUM_LIT:8>", ",", "p", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "matrix", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "matrix", "[", "0", "]", ".", "length", ";", "j", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "matrix", "[", "i", "]", "[", "j", "]", "+", "\"", "\"", ")", ";", "}", "System", ".", "out", ".", "println", "(", ")", ";", "}", "}", "</s>"]
["<s>", "public", "char", "[", "]", "[", "]", "create", "(", "int", "n", ",", "int", "m", ")", "{", "char", "[", "]", "[", "]", "matrix", "=", "new", "char", "[", "n", "]", "[", "m", "]", ";", "int", "r", "=", "0", ";", "char", "ch", "=", "<CHAR_LIT>", ";", "int", "high", "=", "Math", ".", "min", "(", "n", ",", "m", ")", ";", "high", "=", "(", "int", ")", "Math", ".", "ceil", "(", "high", "*", "<NUM_LIT:1.0>", "/", "<NUM_LIT:2>", ")", ";", "while", "(", "r", "<", "high", ")", "{", "for", "(", "int", "i", "=", "r", ";", "i", "<", "m", "-", "r", ";", "i", "+", "+", ")", "{", "matrix", "[", "r", "]", "[", "i", "]", "=", "ch", ";", "}", "for", "(", "int", "i", "=", "r", ";", "i", "<", "n", "-", "r", ";", "i", "+", "+", ")", "{", "matrix", "[", "i", "]", "[", "m", "-", "r", "-", "1", "]", "=", "ch", ";", "}", "for", "(", "int", "i", "=", "m", "-", "r", "-", "1", ";", "i", ">", "=", "r", ";", "i", "-", "-", ")", "{", "matrix", "[", "n", "-", "r", "-", "1", "]", "[", "i", "]", "=", "ch", ";", "}", "for", "(", "int", "i", "=", "n", "-", "r", "-", "1", ";", "i", ">", "=", "r", ";", "i", "-", "-", ")", "{", "matrix", "[", "i", "]", "[", "r", "]", "=", "ch", ";", "}", "if", "(", "ch", "=", "=", "<CHAR_LIT>", ")", "{", "ch", "=", "<CHAR_LIT>", ";", "}", "else", "{", "ch", "=", "<CHAR_LIT>", ";", "}", "r", "+", "+", ";", "}", "return", "matrix", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "MatrixOf0sAnd1s", "mos", "=", "new", "MatrixOf0sAnd1s", "(", ")", ";", "char", "matrix", "[", "]", "[", "]", "=", "mos", ".", "create", "(", "<NUM_LIT:4>", ",", "<NUM_LIT:7>", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "matrix", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "matrix", "[", "i", "]", ".", "length", ";", "j", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "matrix", "[", "i", "]", "[", "j", "]", "+", "\"", "\"", ")", ";", "}", "System", ".", "out", ".", "println", "(", ")", ";", "}", "}", "</s>"]
["<s>", "public", "String", "[", "]", "[", "]", "crossMultiply", "(", "String", "[", "]", "[", "]", "str", ")", "{", "int", "cols", "=", "1", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "str", ".", "length", ";", "i", "+", "+", ")", "{", "cols", "=", "cols", "*", "str", "[", "i", "]", ".", "length", ";", "}", "String", "[", "]", "[", "]", "result", "=", "new", "String", "[", "str", "[", "0", "]", ".", "length", "]", "[", "cols", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "str", "[", "0", "]", ".", "length", ";", "i", "+", "+", ")", "{", "StringBuffer", "buffer", "=", "new", "StringBuffer", "(", ")", ";", "r", "=", "0", ";", "buffer", ".", "append", "(", "str", "[", "0", "]", "[", "i", "]", ")", ";", "recur", "(", "buffer", ",", "result", ",", "str", ",", "1", ",", "i", ")", ";", "}", "return", "result", ";", "}", "</s>"]
["<s>", "private", "void", "recur", "(", "StringBuffer", "buffer", ",", "String", "[", "]", "[", "]", "result", ",", "String", "[", "]", "[", "]", "str", ",", "int", "currentRow", ",", "int", "mainCol", ")", "{", "if", "(", "currentRow", "=", "=", "str", ".", "length", ")", "{", "result", "[", "mainCol", "]", "[", "r", "+", "+", "]", "=", "buffer", ".", "toString", "(", ")", ";", "return", ";", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "str", "[", "currentRow", "]", ".", "length", ";", "i", "+", "+", ")", "{", "StringBuffer", "tempBuffer", "=", "new", "StringBuffer", "(", "buffer", ")", ";", "buffer", ".", "append", "(", "str", "[", "currentRow", "]", "[", "i", "]", ")", ";", "recur", "(", "buffer", ",", "result", ",", "str", ",", "currentRow", "+", "1", ",", "mainCol", ")", ";", "buffer", "=", "tempBuffer", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "MatrixCalculation", "mc", "=", "new", "MatrixCalculation", "(", ")", ";", "String", "[", "]", "[", "]", "str", "=", "{", "{", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", "}", ",", "{", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", "}", ",", "{", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", "}", ",", "{", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", "}", "}", ";", "String", "[", "]", "[", "]", "result", "=", "mc", ".", "crossMultiply", "(", "str", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "result", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "result", "[", "i", "]", ".", "length", ";", "j", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "result", "[", "i", "]", "[", "j", "]", "+", "\"", "\"", ")", ";", "}", "System", ".", "out", ".", "println", "(", ")", ";", "}", "}", "</s>"]
["<s>", "Cell", "(", "int", "x", ",", "int", "y", ")", "{", "this", ".", "x", "=", "x", ";", "this", ".", "y", "=", "y", ";", "}", "</s>"]
["<s>", "public", "boolean", "isAllCellTraversed", "(", "Cell", "grid", "[", "]", "[", "]", ")", "{", "boolean", "[", "]", "[", "]", "visited", "=", "new", "boolean", "[", "grid", ".", "length", "]", "[", "grid", "[", "0", "]", ".", "length", "]", ";", "int", "total", "=", "grid", ".", "length", "*", "grid", "[", "0", "]", ".", "length", ";", "int", "startx", "=", "grid", "[", "0", "]", "[", "0", "]", ".", "x", ";", "int", "starty", "=", "grid", "[", "0", "]", "[", "0", "]", ".", "y", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "total", "-", "<NUM_LIT:2>", ";", "i", "+", "+", ")", "{", "if", "(", "grid", "[", "startx", "]", "[", "starty", "]", "=", "=", "null", ")", "{", "return", "false", ";", "}", "if", "(", "visited", "[", "startx", "]", "[", "starty", "]", "=", "=", "true", ")", "{", "return", "false", ";", "}", "visited", "[", "startx", "]", "[", "starty", "]", "=", "true", ";", "int", "x", "=", "grid", "[", "startx", "]", "[", "starty", "]", ".", "x", ";", "int", "y", "=", "grid", "[", "startx", "]", "[", "starty", "]", ".", "y", ";", "startx", "=", "x", ";", "starty", "=", "y", ";", "}", "if", "(", "grid", "[", "startx", "]", "[", "starty", "]", "=", "=", "null", ")", "{", "return", "true", ";", "}", "return", "false", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "Cell", "cell", "[", "]", "[", "]", "=", "new", "Cell", "[", "<NUM_LIT:3>", "]", "[", "<NUM_LIT:2>", "]", ";", "cell", "[", "0", "]", "[", "0", "]", "=", "new", "Cell", "(", "0", ",", "1", ")", ";", "cell", "[", "0", "]", "[", "1", "]", "=", "new", "Cell", "(", "<NUM_LIT:2>", ",", "0", ")", ";", "cell", "[", "1", "]", "[", "0", "]", "=", "null", ";", "cell", "[", "1", "]", "[", "1", "]", "=", "new", "Cell", "(", "1", ",", "0", ")", ";", "cell", "[", "<NUM_LIT:2>", "]", "[", "0", "]", "=", "new", "Cell", "(", "<NUM_LIT:2>", ",", "1", ")", ";", "cell", "[", "<NUM_LIT:2>", "]", "[", "1", "]", "=", "new", "Cell", "(", "1", ",", "1", ")", ";", "MoveCellPerCellValue", "mcp", "=", "new", "MoveCellPerCellValue", "(", ")", ";", "System", ".", "out", ".", "println", "(", "mcp", ".", "isAllCellTraversed", "(", "cell", ")", ")", ";", "}", "</s>"]
["<s>", "public", "void", "printMatrix", "(", "int", "[", "]", "[", "]", "matrix", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "matrix", ".", "length", ";", "i", "+", "+", ")", "{", "int", "start", "=", "i", ";", "int", "end", "=", "0", ";", "while", "(", "start", ">", "=", "0", "&", "&", "end", "<", "matrix", "[", "0", "]", ".", "length", ")", "{", "System", ".", "out", ".", "print", "(", "matrix", "[", "start", "]", "[", "end", "]", "+", "\"", "\"", ")", ";", "start", "-", "-", ";", "end", "+", "+", ";", "}", "System", ".", "out", ".", "print", "(", "\"", "<STR_LIT>", "<STR_LIT>", "\"", ")", ";", "}", "for", "(", "int", "i", "=", "1", ";", "i", "<", "matrix", "[", "0", "]", ".", "length", ";", "i", "+", "+", ")", "{", "int", "start", "=", "matrix", ".", "length", "-", "1", ";", "int", "end", "=", "i", ";", "while", "(", "start", ">", "=", "0", "&", "&", "end", "<", "matrix", "[", "0", "]", ".", "length", ")", "{", "System", ".", "out", ".", "print", "(", "matrix", "[", "start", "]", "[", "end", "]", "+", "\"", "\"", ")", ";", "start", "-", "-", ";", "end", "+", "+", ";", "}", "System", ".", "out", ".", "print", "(", "\"", "<STR_LIT>", "<STR_LIT>", "\"", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "arr", "[", "]", "[", "]", "=", "{", "{", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", "}", ",", "{", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", "}", ",", "{", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", "}", ",", "{", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", "}", ",", "{", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", "}", "}", ";", "MatrixInDiagonalOrder", "mdo", "=", "new", "MatrixInDiagonalOrder", "(", ")", ";", "mdo", ".", "printMatrix", "(", "arr", ")", ";", "}", "</s>"]
["<s>", "public", "void", "printSumOfAllSquareMatrix", "(", "int", "input", "[", "]", "[", "]", ")", "{", "for", "(", "int", "len", "=", "1", ";", "len", "<", "=", "input", ".", "length", ";", "len", "+", "+", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", "-", "len", "+", "1", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "input", "[", "i", "]", ".", "length", "-", "len", "+", "1", ";", "j", "+", "+", ")", "{", "int", "sum", "=", "0", ";", "for", "(", "int", "k", "=", "i", ";", "k", "<", "i", "+", "len", ";", "k", "+", "+", ")", "{", "for", "(", "int", "m", "=", "j", ";", "m", "<", "j", "+", "len", ";", "m", "+", "+", ")", "{", "sum", "+", "=", "input", "[", "k", "]", "[", "m", "]", ";", "}", "}", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", "+", "i", "+", "\"", "\"", "+", "j", "+", "\"", "<STR_LIT>", "\"", "+", "len", "+", "\"", "<STR_LIT>", "\"", "+", "sum", ")", ";", "}", "}", "}", "}", "</s>"]
["<s>", "public", "void", "printSumOfAllRectangleMatrix", "(", "int", "input", "[", "]", "[", "]", ")", "{", "for", "(", "int", "rlen", "=", "1", ";", "rlen", "<", "=", "input", ".", "length", ";", "rlen", "+", "+", ")", "{", "for", "(", "int", "clen", "=", "1", ";", "clen", "<", "=", "input", "[", "0", "]", ".", "length", ";", "clen", "+", "+", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", "-", "rlen", "+", "1", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "input", "[", "i", "]", ".", "length", "-", "clen", "+", "1", ";", "j", "+", "+", ")", "{", "int", "sum", "=", "0", ";", "for", "(", "int", "k", "=", "i", ";", "k", "<", "i", "+", "rlen", ";", "k", "+", "+", ")", "{", "for", "(", "int", "m", "=", "j", ";", "m", "<", "j", "+", "clen", ";", "m", "+", "+", ")", "{", "sum", "+", "=", "input", "[", "k", "]", "[", "m", "]", ";", "}", "}", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", "+", "i", "+", "\"", "\"", "+", "j", "+", "\"", "<STR_LIT>", "\"", "+", "(", "i", "+", "rlen", "-", "1", ")", "+", "\"", "\"", "+", "(", "j", "+", "clen", "-", "1", ")", "+", "\"", "<STR_LIT>", "\"", "+", "sum", ")", ";", "}", "}", "}", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input", "[", "]", "[", "]", "=", "{", "{", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", "}", ",", "{", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", "}", ",", "{", "<NUM_LIT:7>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:9>", "}", "}", ";", "MatrixFindAllSubSquareRectangleMatrix", "mal", "=", "new", "MatrixFindAllSubSquareRectangleMatrix", "(", ")", ";", "mal", ".", "printSumOfAllRectangleMatrix", "(", "input", ")", ";", "}", "</s>"]
["<s>", "public", "void", "print", "(", "int", "matrix", "[", "]", "[", "]", ")", "{", "if", "(", "matrix", "=", "=", "null", "|", "|", "matrix", ".", "length", "=", "=", "0", "|", "|", "matrix", "[", "0", "]", ".", "length", "=", "=", "0", ")", "{", "return", ";", "}", "int", "left", "=", "0", ";", "int", "right", "=", "matrix", "[", "0", "]", ".", "length", "-", "1", ";", "int", "up", "=", "0", ";", "int", "down", "=", "matrix", ".", "length", "-", "1", ";", "while", "(", "left", "<", "right", "&", "&", "up", "<", "down", ")", "{", "for", "(", "int", "i", "=", "left", ";", "i", "<", "=", "right", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "matrix", "[", "up", "]", "[", "i", "]", "+", "\"", "\"", ")", ";", "}", "up", "+", "+", ";", "for", "(", "int", "i", "=", "up", ";", "i", "<", "=", "down", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "matrix", "[", "i", "]", "[", "right", "]", "+", "\"", "\"", ")", ";", "}", "right", "-", "-", ";", "for", "(", "int", "i", "=", "right", ";", "i", ">", "=", "left", ";", "i", "-", "-", ")", "{", "System", ".", "out", ".", "print", "(", "matrix", "[", "down", "]", "[", "i", "]", "+", "\"", "\"", ")", ";", "}", "down", "-", "-", ";", "for", "(", "int", "i", "=", "down", ";", "i", ">", "=", "up", ";", "i", "-", "-", ")", "{", "System", ".", "out", ".", "print", "(", "matrix", "[", "i", "]", "[", "left", "]", "+", "\"", "\"", ")", ";", "}", "left", "+", "+", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "SpiralPrinting", "sp", "=", "new", "SpiralPrinting", "(", ")", ";", "int", "matrix", "[", "]", "[", "]", "=", "{", "{", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", "}", ",", "{", "<NUM_LIT:6>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:10>", "}", ",", "{", "<NUM_LIT:11>", ",", "<NUM_LIT:12>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT:15>", "}", ",", "{", "<NUM_LIT:16>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT:20>", "}", "}", ";", "sp", ".", "print", "(", "matrix", ")", ";", "}", "</s>"]
["<s>", "public", "int", "longestConsecutiveInteger", "(", "int", "input", "[", "]", "[", "]", ")", "{", "boolean", "visited", "[", "]", "[", "]", "=", "new", "boolean", "[", "input", ".", "length", "]", "[", "input", "[", "0", "]", ".", "length", "]", ";", "int", "max", "=", "1", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "input", "[", "i", "]", ".", "length", ";", "j", "+", "+", ")", "{", "int", "r", "=", "DFS", "(", "input", ",", "i", ",", "j", ",", "visited", ",", "-", "<NUM_LIT>", ")", ";", "if", "(", "r", ">", "max", ")", "{", "max", "=", "r", ";", "}", "}", "}", "return", "max", ";", "}", "</s>"]
["<s>", "private", "int", "DFS", "(", "int", "input", "[", "]", "[", "]", ",", "int", "i", ",", "int", "j", ",", "boolean", "visited", "[", "]", "[", "]", ",", "int", "lastNum", ")", "{", "if", "(", "i", ">", "=", "input", ".", "length", "|", "|", "i", "<", "0", "|", "|", "j", "<", "0", "|", "|", "j", ">", "=", "input", "[", "0", "]", ".", "length", ")", "{", "return", "0", ";", "}", "if", "(", "visited", "[", "i", "]", "[", "j", "]", ")", "{", "return", "0", ";", "}", "if", "(", "lastNum", "!", "=", "-", "<NUM_LIT>", "&", "&", "input", "[", "i", "]", "[", "j", "]", "+", "1", "!", "=", "lastNum", ")", "{", "return", "0", ";", "}", "visited", "[", "i", "]", "[", "j", "]", "=", "true", ";", "int", "r1", "=", "DFS", "(", "input", ",", "i", "+", "1", ",", "j", ",", "visited", ",", "input", "[", "i", "]", "[", "j", "]", ")", ";", "int", "r2", "=", "DFS", "(", "input", ",", "i", "-", "1", ",", "j", ",", "visited", ",", "input", "[", "i", "]", "[", "j", "]", ")", ";", "int", "r3", "=", "DFS", "(", "input", ",", "i", ",", "j", "+", "1", ",", "visited", ",", "input", "[", "i", "]", "[", "j", "]", ")", ";", "int", "r4", "=", "DFS", "(", "input", ",", "i", ",", "j", "-", "1", ",", "visited", ",", "input", "[", "i", "]", "[", "j", "]", ")", ";", "visited", "[", "i", "]", "[", "j", "]", "=", "false", ";", "return", "Math", ".", "max", "(", "Math", ".", "max", "(", "r1", ",", "r2", ")", ",", "Math", ".", "max", "(", "r3", ",", "r4", ")", ")", "+", "1", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "LongestConsecutiveIntegerInUnsorted2DArray", "lci", "=", "new", "LongestConsecutiveIntegerInUnsorted2DArray", "(", ")", ";", "int", "input", "[", "]", "[", "]", "=", "{", "{", "<NUM_LIT:3>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:5>", "}", ",", "{", "<NUM_LIT:4>", ",", "1", ",", "<NUM_LIT:4>", "}", ",", "{", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:5>", "}", "}", ";", "System", ".", "out", ".", "println", "(", "lci", ".", "longestConsecutiveInteger", "(", "input", ")", ")", ";", "}", "</s>"]
["<s>", "public", "void", "replace", "(", "String", "str", ")", "{", "Pattern", "pattern", "=", "Pattern", ".", "compile", "(", "\"", "<STR_LIT>", "\"", ")", ";", "Matcher", "matcher", "=", "pattern", ".", "matcher", "(", "str", ")", ";", "System", ".", "out", ".", "println", "(", "matcher", ".", "replaceAll", "(", "\"", "\"", ")", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "String", "str", "=", "\"", "<STR_LIT>", "\"", ";", "MultiSpaceReplacement", "mrs", "=", "new", "MultiSpaceReplacement", "(", ")", ";", "mrs", ".", "replace", "(", "str", ")", ";", "}", "</s>"]
["<s>", "int", "baseN", "(", "int", "num", ",", "int", "base", ")", "{", "if", "(", "base", ">", "<NUM_LIT:10>", ")", "{", "throw", "new", "IllegalArgumentException", "(", ")", ";", "}", "int", "result", "=", "0", ";", "int", "pow", "=", "1", ";", "while", "(", "num", ">", "0", ")", "{", "result", "+", "=", "pow", "*", "(", "num", "%", "base", ")", ";", "pow", "=", "pow", "*", "<NUM_LIT:10>", ";", "num", "/", "=", "base", ";", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "ConvertToBaseN", "ctb", "=", "new", "ConvertToBaseN", "(", ")", ";", "System", ".", "out", ".", "println", "(", "ctb", ".", "baseN", "(", "<NUM_LIT>", ",", "<NUM_LIT:9>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "[", "]", "getNextInt", "(", "int", "[", "]", "input", ")", "{", "int", "result", "[", "]", "=", "new", "int", "[", "input", ".", "length", "]", ";", "boolean", "flag", "=", "getNextInt", "(", "input", ",", "result", ",", "0", ")", ";", "if", "(", "flag", ")", "{", "return", "result", ";", "}", "else", "{", "result", "=", "new", "int", "[", "input", ".", "length", "+", "1", "]", ";", "fillRestOfArray", "(", "result", ",", "0", ",", "(", "input", "[", "0", "]", "+", "1", ")", "%", "<NUM_LIT:9>", ")", ";", "return", "result", ";", "}", "}", "</s>"]
["<s>", "private", "boolean", "getNextInt", "(", "int", "input", "[", "]", ",", "int", "result", "[", "]", ",", "int", "pos", ")", "{", "if", "(", "pos", "=", "=", "input", ".", "length", "-", "1", ")", "{", "int", "higher", "=", "getHigherNumber", "(", "input", "[", "pos", "]", "+", "1", ",", "pos", ",", "input", ".", "length", ")", ";", "if", "(", "higher", "=", "=", "-", "1", ")", "{", "return", "false", ";", "}", "else", "{", "result", "[", "pos", "]", "=", "input", "[", "pos", "]", "+", "1", ";", "return", "true", ";", "}", "}", "if", "(", "pos", "!", "=", "0", "&", "&", "input", "[", "pos", "]", "<", "=", "input", "[", "pos", "-", "1", "]", ")", "{", "int", "higher", "=", "getHigherNumber", "(", "input", "[", "pos", "-", "1", "]", "+", "1", ",", "pos", ",", "input", ".", "length", ")", ";", "if", "(", "higher", "=", "=", "-", "1", ")", "{", "return", "false", ";", "}", "else", "{", "fillRestOfArray", "(", "result", ",", "pos", ",", "input", "[", "pos", "-", "1", "]", "+", "1", ")", ";", "return", "true", ";", "}", "}", "if", "(", "input", "[", "pos", "]", "+", "(", "input", ".", "length", "-", "1", "-", "pos", ")", "<", "=", "<NUM_LIT:9>", ")", "{", "result", "[", "pos", "]", "=", "input", "[", "pos", "]", ";", "boolean", "flag", "=", "getNextInt", "(", "input", ",", "result", ",", "pos", "+", "1", ")", ";", "if", "(", "flag", ")", "{", "return", "true", ";", "}", "int", "higher", "=", "getHigherNumber", "(", "input", "[", "pos", "]", "+", "1", ",", "pos", ",", "input", ".", "length", ")", ";", "if", "(", "higher", "=", "=", "-", "1", ")", "{", "return", "false", ";", "}", "else", "{", "fillRestOfArray", "(", "result", ",", "pos", ",", "input", "[", "pos", "]", "+", "1", ")", ";", "return", "true", ";", "}", "}", "else", "{", "return", "false", ";", "}", "}", "</s>"]
["<s>", "private", "void", "fillRestOfArray", "(", "int", "result", "[", "]", ",", "int", "pos", ",", "int", "val", ")", "{", "for", "(", "int", "i", "=", "pos", ";", "i", "<", "result", ".", "length", ";", "i", "+", "+", ")", "{", "result", "[", "i", "]", "=", "val", ";", "val", "+", "+", ";", "}", "}", "</s>"]
["<s>", "private", "int", "getHigherNumber", "(", "int", "input", ",", "int", "i", ",", "int", "len", ")", "{", "if", "(", "input", "+", "len", "-", "i", "-", "1", "<", "=", "<NUM_LIT:9>", ")", "{", "return", "input", ";", "}", "return", "-", "1", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "arr", "[", "]", "=", "{", "<NUM_LIT:2>", ",", "<NUM_LIT:6>", "}", ";", "SmallestNumberGreaterThanGiveNumberIncreasingSequence", "sm", "=", "new", "SmallestNumberGreaterThanGiveNumberIncreasingSequence", "(", ")", ";", "int", "result", "[", "]", "=", "sm", ".", "getNextInt", "(", "arr", ")", ";", "for", "(", "int", "i", ":", "result", ")", "{", "System", ".", "out", ".", "print", "(", "i", ")", ";", "}", "}", "</s>"]
["<s>", "public", "int", "count", "(", "int", "n", ")", "{", "if", "(", "n", "<", "<NUM_LIT:4>", ")", "{", "return", "n", ";", "}", "if", "(", "n", ">", "=", "<NUM_LIT:4>", "&", "&", "n", "<", "=", "<NUM_LIT:10>", ")", "{", "return", "n", "-", "1", ";", "}", "int", "pow", "=", "1", ";", "while", "(", "n", "/", "pow", ">", "<NUM_LIT:9>", ")", "{", "pow", "=", "pow", "*", "<NUM_LIT:10>", ";", "}", "int", "msd", "=", "n", "/", "pow", ";", "if", "(", "msd", "=", "=", "<NUM_LIT:4>", ")", "{", "return", "count", "(", "msd", "*", "pow", "-", "1", ")", ";", "}", "else", "{", "return", "count", "(", "msd", ")", "*", "count", "(", "pow", "-", "1", ")", "+", "count", "(", "msd", ")", "+", "count", "(", "n", "%", "pow", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "CountNumbersNotIncluding4", "cn", "=", "new", "CountNumbersNotIncluding4", "(", ")", ";", "int", "c", "=", "cn", ".", "count", "(", "<NUM_LIT>", ")", ";", "System", ".", "out", ".", "print", "(", "c", ")", ";", "}", "</s>"]
["<s>", "public", "int", "trailing0s", "(", "int", "num", ")", "{", "int", "pow", "=", "<NUM_LIT:5>", ";", "int", "count", "=", "0", ";", "while", "(", "pow", "<", "=", "num", ")", "{", "count", "+", "=", "num", "/", "pow", ";", "pow", "*", "=", "<NUM_LIT:5>", ";", "}", "return", "count", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "Trailing0sinFactorial", "t0", "=", "new", "Trailing0sinFactorial", "(", ")", ";", "System", ".", "out", ".", "println", "(", "t0", ".", "trailing0s", "(", "<NUM_LIT>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "t0", ".", "trailing0s", "(", "<NUM_LIT>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "t0", ".", "trailing0s", "(", "<NUM_LIT>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "t0", ".", "trailing0s", "(", "<NUM_LIT>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "[", "]", "find", "(", "int", "n", ",", "int", "m", ")", "{", "boolean", "used", "[", "]", "=", "new", "boolean", "[", "n", "]", ";", "int", "result", "[", "]", "=", "new", "int", "[", "n", "]", ";", "find", "(", "result", ",", "used", ",", "0", ",", "n", ",", "m", ")", ";", "return", "result", ";", "}", "</s>"]
["<s>", "private", "void", "find", "(", "int", "result", "[", "]", ",", "boolean", "used", "[", "]", ",", "int", "start", ",", "int", "n", ",", "int", "m", ")", "{", "if", "(", "1", "=", "=", "m", ")", "{", "fillupRemaining", "(", "result", ",", "used", ",", "start", ")", ";", "return", ";", "}", "int", "index", "=", "binarySearch", "(", "m", ",", "start", "+", "1", ",", "n", ",", "factorial", "(", "n", "-", "start", "-", "1", ")", ")", ";", "int", "i", "=", "nthUnused", "(", "used", ",", "index", ")", ";", "used", "[", "i", "]", "=", "true", ";", "result", "[", "start", "]", "=", "i", "+", "1", ";", "find", "(", "result", ",", "used", ",", "start", "+", "1", ",", "n", ",", "m", "-", "(", "index", "-", "1", ")", "*", "factorial", "(", "n", "-", "start", "-", "1", ")", ")", ";", "}", "</s>"]
["<s>", "private", "int", "binarySearch", "(", "int", "m", ",", "int", "start", ",", "int", "end", ",", "int", "factorial", ")", "{", "int", "i", "=", "1", ";", "int", "j", "=", "end", "-", "start", "+", "1", ";", "while", "(", "i", "<", "=", "j", ")", "{", "int", "middle", "=", "(", "i", "+", "j", ")", "/", "<NUM_LIT:2>", ";", "if", "(", "factorial", "*", "(", "middle", ")", ">", "=", "m", "&", "&", "factorial", "*", "(", "middle", "-", "1", ")", "<", "m", ")", "{", "return", "middle", ";", "}", "else", "if", "(", "factorial", "*", "middle", "<", "m", ")", "{", "i", "=", "middle", "+", "1", ";", "}", "else", "{", "j", "=", "middle", "-", "1", ";", "}", "}", "throw", "new", "IllegalArgumentException", "(", ")", ";", "}", "</s>"]
["<s>", "private", "void", "fillupRemaining", "(", "int", "result", "[", "]", ",", "boolean", "used", "[", "]", ",", "int", "index", ")", "{", "int", "j", "=", "0", ";", "for", "(", "int", "i", "=", "index", ";", "i", "<", "result", ".", "length", ";", "i", "+", "+", ")", "{", "while", "(", "true", ")", "{", "if", "(", "!", "used", "[", "j", "]", ")", "{", "result", "[", "i", "]", "=", "j", "+", "1", ";", "used", "[", "j", "]", "=", "true", ";", "break", ";", "}", "j", "+", "+", ";", "}", "}", "}", "</s>"]
["<s>", "private", "int", "nthUnused", "(", "boolean", "used", "[", "]", ",", "int", "n", ")", "{", "int", "unused", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "used", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "!", "used", "[", "i", "]", ")", "{", "unused", "+", "+", ";", "if", "(", "unused", "=", "=", "n", ")", "{", "return", "i", ";", "}", "}", "}", "throw", "new", "IllegalArgumentException", "(", ")", ";", "}", "</s>"]
["<s>", "private", "int", "factorial", "(", "int", "n", ")", "{", "int", "result", "=", "1", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "=", "n", ";", "i", "+", "+", ")", "{", "result", "=", "result", "*", "i", ";", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "MthNumberInNSizeArray", "mn", "=", "new", "MthNumberInNSizeArray", "(", ")", ";", "int", "n", "=", "<NUM_LIT:5>", ";", "int", "m", "=", "<NUM_LIT>", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "=", "m", ";", "i", "+", "+", ")", "{", "int", "result", "[", "]", "=", "mn", ".", "find", "(", "n", ",", "i", ")", ";", "Arrays", ".", "stream", "(", "result", ")", ".", "forEach", "(", "r", "-", ">", "System", ".", "out", ".", "print", "(", "r", "+", "\"", "\"", ")", ")", ";", "System", ".", "out", ".", "print", "(", "\"", "<STR_LIT>", "<STR_LIT>", "\"", ")", ";", "}", "}", "</s>"]
["<s>", "public", "void", "nextPalindrome", "(", "int", "num", "[", "]", ")", "{", "int", "mid", "=", "num", ".", "length", "/", "<NUM_LIT:2>", ";", "int", "i", "=", "mid", "-", "1", ";", "int", "j", "=", "num", ".", "length", "%", "<NUM_LIT:2>", "=", "=", "0", "?", "mid", ":", "mid", "+", "1", ";", "while", "(", "i", ">", "=", "0", "&", "&", "j", "<", "=", "num", ".", "length", "-", "1", "&", "&", "num", "[", "i", "]", "=", "=", "num", "[", "j", "]", ")", "{", "i", "-", "-", ";", "j", "+", "+", ";", "}", "boolean", "leftSmaller", "=", "false", ";", "if", "(", "i", "<", "0", "|", "|", "num", "[", "i", "]", "<", "num", "[", "j", "]", ")", "{", "leftSmaller", "=", "true", ";", "}", "if", "(", "!", "leftSmaller", ")", "{", "while", "(", "i", ">", "=", "0", ")", "{", "num", "[", "j", "]", "=", "num", "[", "i", "]", ";", "i", "-", "-", ";", "j", "+", "+", ";", "}", "}", "else", "{", "int", "carry", "=", "0", ";", "if", "(", "num", ".", "length", "%", "<NUM_LIT:2>", "!", "=", "0", ")", "{", "num", "[", "mid", "]", "=", "num", "[", "mid", "]", "+", "1", ";", "carry", "=", "num", "[", "mid", "]", "/", "<NUM_LIT:10>", ";", "num", "[", "mid", "]", "=", "num", "[", "mid", "]", "%", "<NUM_LIT:10>", ";", "j", "=", "mid", "+", "1", ";", "}", "else", "{", "j", "=", "mid", ";", "carry", "=", "1", ";", "}", "i", "=", "mid", "-", "1", ";", "while", "(", "i", ">", "=", "0", ")", "{", "num", "[", "i", "]", "=", "carry", "+", "num", "[", "i", "]", ";", "carry", "=", "num", "[", "i", "]", "/", "<NUM_LIT:10>", ";", "num", "[", "i", "]", "=", "num", "[", "i", "]", "%", "<NUM_LIT:10>", ";", "num", "[", "j", "]", "=", "num", "[", "i", "]", ";", "i", "-", "-", ";", "j", "+", "+", ";", "}", "}", "}", "</s>"]
["<s>", "public", "void", "printArray", "(", "int", "num", "[", "]", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "num", ".", "length", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "num", "[", "i", "]", "+", "\"", "\"", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "NextLargestPalindrome", "nextLargestPalindrom", "=", "new", "NextLargestPalindrome", "(", ")", ";", "int", "num", "[", "]", "=", "{", "<NUM_LIT:6>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", "}", ";", "nextLargestPalindrom", ".", "nextPalindrome", "(", "num", ")", ";", "nextLargestPalindrom", ".", "printArray", "(", "num", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "isLuck", "(", "int", "n", ",", "int", "counter", ")", "{", "if", "(", "n", "<", "counter", ")", "{", "return", "true", ";", "}", "if", "(", "n", "%", "counter", "=", "=", "0", ")", "{", "return", "false", ";", "}", "return", "isLuck", "(", "n", "-", "n", "/", "counter", ",", "counter", "+", "1", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "LuckyNumbers", "ln", "=", "new", "LuckyNumbers", "(", ")", ";", "System", ".", "out", ".", "println", "(", "ln", ".", "isLuck", "(", "<NUM_LIT>", ",", "<NUM_LIT:2>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "void", "rearrange", "(", "Integer", "arr", "[", "]", ")", "{", "IntegerComparator", "comparator", "=", "new", "IntegerComparator", "(", ")", ";", "Arrays", ".", "sort", "(", "arr", ",", "comparator", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "RearrangeNumberInArrayToFormLargestNumber", "rni", "=", "new", "RearrangeNumberInArrayToFormLargestNumber", "(", ")", ";", "Integer", "arr", "[", "]", "=", "{", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT>", "}", ";", "rni", ".", "rearrange", "(", "arr", ")", ";", "for", "(", "int", "a", ":", "arr", ")", "{", "System", ".", "out", ".", "print", "(", "a", "+", "\"", "\"", ")", ";", "}", "}", "</s>"]
["<s>", "@", "Override", "public", "int", "compare", "(", "Integer", "o1", ",", "Integer", "o2", ")", "{", "int", "pow1", "=", "1", ";", "while", "(", "pow1", "<", "=", "o1", ")", "{", "pow1", "*", "=", "<NUM_LIT:10>", ";", "}", "int", "pow2", "=", "1", ";", "while", "(", "pow2", "<", "=", "o2", ")", "{", "pow2", "*", "=", "<NUM_LIT:10>", ";", "}", "if", "(", "o1", "*", "pow2", "+", "o2", ">", "=", "o2", "*", "pow1", "+", "o1", ")", "{", "return", "-", "1", ";", "}", "else", "{", "return", "1", ";", "}", "}", "</s>"]
["<s>", "public", "int", "calculate", "(", "int", "n", ",", "int", "k", ")", "{", "if", "(", "k", ">", "n", "-", "k", ")", "{", "k", "=", "n", "-", "k", ";", "}", "int", "result", "=", "1", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "k", ";", "i", "+", "+", ")", "{", "result", "*", "=", "(", "n", "-", "i", ")", ";", "result", "/", "=", "(", "i", "+", "1", ")", ";", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "BinomialCoefficient", "bc", "=", "new", "BinomialCoefficient", "(", ")", ";", "System", ".", "out", ".", "print", "(", "bc", ".", "calculate", "(", "<NUM_LIT:8>", ",", "<NUM_LIT:3>", ")", ")", ";", "}", "</s>"]
["<s>", "double", "findRoot", "(", "int", "num", ")", "{", "double", "start", "=", "0", ";", "double", "end", "=", "num", ";", "while", "(", "Math", ".", "abs", "(", "start", "-", "end", ")", ">", "<NUM_LIT>", ")", "{", "end", "=", "(", "start", "+", "end", ")", "/", "<NUM_LIT:2>", ";", "start", "=", "num", "/", "end", ";", "}", "return", "end", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "SquareRoot", "sr", "=", "new", "SquareRoot", "(", ")", ";", "System", ".", "out", ".", "println", "(", "sr", ".", "findRoot", "(", "<NUM_LIT>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "numberOfWays", "(", "int", "n", ",", "int", "k", ")", "{", "if", "(", "k", "<", "<NUM_LIT:2>", ")", "{", "throw", "new", "IllegalArgumentException", "(", ")", ";", "}", "LinkedList", "<", "Integer", ">", "queue", "=", "new", "LinkedList", "<", "Integer", ">", "(", ")", ";", "queue", ".", "add", "(", "1", ")", ";", "queue", ".", "add", "(", "<NUM_LIT:2>", ")", ";", "int", "count", "=", "0", ";", "for", "(", "int", "i", "=", "<NUM_LIT:2>", ";", "i", "<", "k", ";", "i", "+", "+", ")", "{", "Iterator", "<", "Integer", ">", "itr", "=", "queue", ".", "iterator", "(", ")", ";", "count", "=", "0", ";", "while", "(", "itr", ".", "hasNext", "(", ")", ")", "{", "count", "+", "=", "itr", ".", "next", "(", ")", ";", "}", "queue", ".", "offerLast", "(", "count", ")", ";", "}", "for", "(", "int", "i", "=", "k", ";", "i", "<", "n", ";", "i", "+", "+", ")", "{", "Iterator", "<", "Integer", ">", "itr", "=", "queue", ".", "iterator", "(", ")", ";", "count", "=", "0", ";", "while", "(", "itr", ".", "hasNext", "(", ")", ")", "{", "count", "+", "=", "itr", ".", "next", "(", ")", ";", "}", "queue", ".", "pollFirst", "(", ")", ";", "queue", ".", "offerLast", "(", "count", ")", ";", "}", "return", "queue", ".", "pollLast", "(", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "NumberOfCombinationsForStairs", "noc", "=", "new", "NumberOfCombinationsForStairs", "(", ")", ";", "System", ".", "out", ".", "println", "(", "noc", ".", "numberOfWays", "(", "<NUM_LIT:7>", ",", "<NUM_LIT:4>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "void", "swap", "(", "int", "input", "[", "]", ",", "int", "i", ",", "int", "j", ")", "{", "int", "temp", "=", "input", "[", "i", "]", ";", "input", "[", "i", "]", "=", "input", "[", "j", "]", ";", "input", "[", "j", "]", "=", "temp", ";", "}", "</s>"]
["<s>", "private", "void", "reverse", "(", "int", "input", "[", "]", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", "/", "<NUM_LIT:2>", ";", "i", "+", "+", ")", "{", "swap", "(", "input", ",", "i", ",", "input", ".", "length", "-", "1", "-", "i", ")", ";", "}", "}", "</s>"]
["<s>", "public", "int", "[", "]", "largestMultiple", "(", "int", "input", "[", "]", ")", "{", "Arrays", ".", "sort", "(", "input", ")", ";", "int", "output", "[", "]", ";", "Queue", "<", "Integer", ">", "q0", "=", "new", "LinkedList", "<", "Integer", ">", "(", ")", ";", "Queue", "<", "Integer", ">", "q1", "=", "new", "LinkedList", "<", "Integer", ">", "(", ")", ";", "Queue", "<", "Integer", ">", "q2", "=", "new", "LinkedList", "<", "Integer", ">", "(", ")", ";", "int", "sum", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "input", "[", "i", "]", "%", "<NUM_LIT:3>", "=", "=", "0", ")", "{", "q0", ".", "add", "(", "input", "[", "i", "]", ")", ";", "}", "if", "(", "input", "[", "i", "]", "%", "<NUM_LIT:3>", "=", "=", "1", ")", "{", "q1", ".", "add", "(", "input", "[", "i", "]", ")", ";", "}", "if", "(", "input", "[", "i", "]", "%", "<NUM_LIT:3>", "=", "=", "<NUM_LIT:2>", ")", "{", "q2", ".", "add", "(", "input", "[", "i", "]", ")", ";", "}", "sum", "+", "=", "input", "[", "i", "]", ";", "}", "if", "(", "sum", "%", "<NUM_LIT:3>", "=", "=", "0", ")", "{", "output", "=", "new", "int", "[", "input", ".", "length", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "output", "[", "input", ".", "length", "-", "1", "-", "i", "]", "=", "input", "[", "i", "]", ";", "}", "return", "output", ";", "}", "else", "if", "(", "sum", "%", "<NUM_LIT:3>", "=", "=", "1", ")", "{", "int", "len", "=", "input", ".", "length", ";", "if", "(", "q1", ".", "size", "(", ")", ">", "0", ")", "{", "q1", ".", "poll", "(", ")", ";", "len", "-", "-", ";", "}", "else", "if", "(", "q2", ".", "size", "(", ")", ">", "1", ")", "{", "q2", ".", "poll", "(", ")", ";", "q2", ".", "poll", "(", ")", ";", "len", "-", "=", "<NUM_LIT:2>", ";", "}", "else", "{", "return", "null", ";", "}", "output", "=", "new", "int", "[", "len", "]", ";", "int", "i", "=", "0", ";", "while", "(", "q0", ".", "size", "(", ")", ">", "0", ")", "{", "output", "[", "i", "]", "=", "q0", ".", "poll", "(", ")", ";", "i", "+", "+", ";", "}", "while", "(", "q1", ".", "size", "(", ")", ">", "0", ")", "{", "output", "[", "i", "]", "=", "q1", ".", "poll", "(", ")", ";", "i", "+", "+", ";", "}", "while", "(", "q2", ".", "size", "(", ")", ">", "0", ")", "{", "output", "[", "i", "]", "=", "q2", ".", "poll", "(", ")", ";", "i", "+", "+", ";", "}", "Arrays", ".", "sort", "(", "output", ")", ";", "reverse", "(", "output", ")", ";", "}", "else", "{", "int", "len", "=", "input", ".", "length", ";", "if", "(", "q2", ".", "size", "(", ")", ">", "0", ")", "{", "q2", ".", "poll", "(", ")", ";", "len", "-", "-", ";", "}", "else", "if", "(", "q1", ".", "size", "(", ")", ">", "1", ")", "{", "q1", ".", "poll", "(", ")", ";", "q1", ".", "poll", "(", ")", ";", "len", "-", "=", "<NUM_LIT:2>", ";", "}", "else", "{", "return", "null", ";", "}", "output", "=", "new", "int", "[", "len", "]", ";", "int", "i", "=", "0", ";", "while", "(", "q0", ".", "size", "(", ")", ">", "0", ")", "{", "output", "[", "i", "]", "=", "q0", ".", "poll", "(", ")", ";", "i", "+", "+", ";", "}", "while", "(", "q1", ".", "size", "(", ")", ">", "0", ")", "{", "output", "[", "i", "]", "=", "q1", ".", "poll", "(", ")", ";", "i", "+", "+", ";", "}", "while", "(", "q2", ".", "size", "(", ")", ">", "0", ")", "{", "output", "[", "i", "]", "=", "q2", ".", "poll", "(", ")", ";", "i", "+", "+", ";", "}", "Arrays", ".", "sort", "(", "output", ")", ";", "reverse", "(", "output", ")", ";", "}", "return", "output", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input", "[", "]", "=", "{", "<NUM_LIT:8>", ",", "<NUM_LIT:9>", ",", "0", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:2>", "}", ";", "LargestMultipleOf3inArray", "lma", "=", "new", "LargestMultipleOf3inArray", "(", ")", ";", "int", "output", "[", "]", "=", "lma", ".", "largestMultiple", "(", "input", ")", ";", "for", "(", "int", "a", ":", "output", ")", "{", "System", ".", "out", ".", "print", "(", "a", "+", "\"", "\"", ")", ";", "}", "}", "</s>"]
["<s>", "public", "int", "gcd", "(", "int", "num1", ",", "int", "num2", ")", "{", "if", "(", "num1", ">", "num2", ")", "{", "int", "temp", "=", "num1", ";", "num1", "=", "num2", ";", "num2", "=", "temp", ";", "}", "while", "(", "num1", "!", "=", "0", ")", "{", "int", "temp", "=", "num1", ";", "num1", "=", "num2", "%", "num1", ";", "num2", "=", "temp", ";", "}", "return", "num2", ";", "}", "</s>"]
["<s>", "public", "int", "gcdRec", "(", "int", "num1", ",", "int", "num2", ")", "{", "if", "(", "num1", "=", "=", "0", ")", "{", "return", "num2", ";", "}", "return", "gcdRec", "(", "num2", "%", "num1", ",", "num1", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "EuclideanAlgoForGCD", "ea", "=", "new", "EuclideanAlgoForGCD", "(", ")", ";", "int", "gcd", "=", "ea", ".", "gcd", "(", "<NUM_LIT>", ",", "<NUM_LIT>", ")", ";", "if", "(", "gcd", "=", "=", "1", ")", "{", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "else", "{", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", "+", "gcd", ")", ";", "}", "}", "</s>"]
["<s>", "public", "boolean", "exists", "(", "int", "input", "[", "]", ")", "{", "for", "(", "int", "i", "=", "1", ";", "i", "<", "input", ".", "length", "-", "1", ";", "i", "+", "+", ")", "{", "int", "j", "=", "i", "-", "1", ";", "int", "k", "=", "i", "+", "1", ";", "while", "(", "j", ">", "=", "0", "&", "&", "k", "<", "=", "input", ".", "length", "-", "1", ")", "{", "if", "(", "input", "[", "i", "]", "*", "<NUM_LIT:2>", "=", "=", "input", "[", "j", "]", "+", "input", "[", "k", "]", ")", "{", "return", "true", ";", "}", "else", "if", "(", "input", "[", "i", "]", "*", "<NUM_LIT:2>", ">", "input", "[", "j", "]", "+", "input", "[", "k", "]", ")", "{", "k", "+", "+", ";", "}", "else", "{", "j", "-", "-", ";", "}", "}", "}", "return", "false", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input", "[", "]", "=", "{", "1", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT:15>", "}", ";", "ArithemeticProgressionExists", "ape", "=", "new", "ArithemeticProgressionExists", "(", ")", ";", "System", ".", "out", ".", "println", "(", "ape", ".", "exists", "(", "input", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "[", "]", "findBiggerNumber", "(", "int", "src", "[", "]", ",", "int", "dest", "[", "]", ")", "{", "int", "result", "[", "]", "=", "new", "int", "[", "src", ".", "length", "]", ";", "boolean", "[", "]", "used", "=", "new", "boolean", "[", "src", ".", "length", "]", ";", "boolean", "r", "=", "findNumber", "(", "src", ",", "dest", ",", "result", ",", "0", ",", "used", ")", ";", "if", "(", "!", "r", ")", "{", "return", "null", ";", "}", "return", "result", ";", "}", "</s>"]
["<s>", "private", "void", "sortRemaining", "(", "int", "src", "[", "]", ",", "int", "result", "[", "]", ",", "boolean", "used", "[", "]", ",", "int", "pos", ")", "{", "int", "pos1", "=", "pos", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "src", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "!", "used", "[", "i", "]", ")", "{", "result", "[", "pos1", "]", "=", "src", "[", "i", "]", ";", "pos1", "+", "+", ";", "}", "}", "Arrays", ".", "sort", "(", "result", ",", "pos", ",", "result", ".", "length", ")", ";", "}", "</s>"]
["<s>", "private", "boolean", "findNumber", "(", "int", "src", "[", "]", ",", "int", "dest", "[", "]", ",", "int", "result", "[", "]", ",", "int", "pos", ",", "boolean", "used", "[", "]", ")", "{", "if", "(", "pos", "=", "=", "result", ".", "length", ")", "{", "return", "false", ";", "}", "boolean", "hasEqual", "=", "false", ";", "int", "nextGreaterIndex", "=", "-", "1", ";", "int", "equalIndex", "=", "-", "1", ";", "int", "nextGreaterDiff", "=", "Integer", ".", "MAX_VALUE", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "src", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "used", "[", "i", "]", ")", "{", "continue", ";", "}", "if", "(", "dest", "[", "pos", "]", "=", "=", "src", "[", "i", "]", ")", "{", "hasEqual", "=", "true", ";", "equalIndex", "=", "i", ";", "continue", ";", "}", "if", "(", "src", "[", "i", "]", ">", "dest", "[", "pos", "]", ")", "{", "if", "(", "src", "[", "i", "]", "-", "dest", "[", "pos", "]", "<", "nextGreaterDiff", ")", "{", "nextGreaterIndex", "=", "i", ";", "nextGreaterDiff", "=", "src", "[", "i", "]", "-", "dest", "[", "pos", "]", ";", "}", "}", "}", "if", "(", "hasEqual", ")", "{", "used", "[", "equalIndex", "]", "=", "true", ";", "result", "[", "pos", "]", "=", "src", "[", "equalIndex", "]", ";", "if", "(", "findNumber", "(", "src", ",", "dest", ",", "result", ",", "pos", "+", "1", ",", "used", ")", ")", "{", "return", "true", ";", "}", "used", "[", "equalIndex", "]", "=", "false", ";", "}", "if", "(", "nextGreaterIndex", "!", "=", "-", "1", ")", "{", "used", "[", "nextGreaterIndex", "]", "=", "true", ";", "result", "[", "pos", "]", "=", "src", "[", "nextGreaterIndex", "]", ";", "sortRemaining", "(", "src", ",", "result", ",", "used", ",", "pos", "+", "1", ")", ";", "return", "true", ";", "}", "return", "false", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "src", "[", "]", "=", "{", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:8>", "}", ";", "int", "dest", "[", "]", "=", "{", "<NUM_LIT:5>", ",", "<NUM_LIT:8>", ",", "1", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:8>", "}", ";", "PermutationLargerThanGivenArray", "nld", "=", "new", "PermutationLargerThanGivenArray", "(", ")", ";", "int", "result", "[", "]", "=", "nld", ".", "findBiggerNumber", "(", "src", ",", "dest", ")", ";", "if", "(", "result", "!", "=", "null", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "result", ".", "length", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "result", "[", "i", "]", "+", "\"", "\"", ")", ";", "}", "}", "else", "{", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "}", "</s>"]
["<s>", "public", "int", "power", "(", "int", "n", ",", "int", "m", ")", "{", "if", "(", "m", "=", "=", "0", ")", "{", "return", "1", ";", "}", "int", "pow", "=", "power", "(", "n", ",", "m", "/", "<NUM_LIT:2>", ")", ";", "if", "(", "m", "%", "<NUM_LIT:2>", "=", "=", "0", ")", "{", "return", "pow", "*", "pow", ";", "}", "else", "{", "return", "n", "*", "pow", "*", "pow", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "PowerFunction", "pf", "=", "new", "PowerFunction", "(", ")", ";", "long", "pow", "=", "pf", ".", "power", "(", "<NUM_LIT:3>", ",", "<NUM_LIT:5>", ")", ";", "System", ".", "out", ".", "print", "(", "pow", ")", ";", "}", "</s>"]
["<s>", "public", "void", "partition", "(", "int", "n", ")", "{", "List", "<", "Integer", ">", "result", "=", "new", "ArrayList", "<", "Integer", ">", "(", ")", ";", "partition", "(", "n", ",", "n", ",", "result", ")", ";", "}", "</s>"]
["<s>", "private", "void", "partition", "(", "int", "n", ",", "int", "max", ",", "List", "<", "Integer", ">", "result", ")", "{", "if", "(", "n", "<", "0", ")", "{", "return", ";", "}", "if", "(", "n", "=", "=", "0", ")", "{", "result", ".", "forEach", "(", "i", "-", ">", "System", ".", "out", ".", "print", "(", "i", "+", "\"", "\"", ")", ")", ";", "System", ".", "out", ".", "println", "(", ")", ";", "return", ";", "}", "for", "(", "int", "i", "=", "Math", ".", "min", "(", "n", ",", "max", ")", ";", "i", ">", "0", "&", "&", "i", "<", "=", "max", ";", "i", "-", "-", ")", "{", "result", ".", "add", "(", "i", ")", ";", "partition", "(", "n", "-", "i", ",", "i", ",", "result", ")", ";", "result", ".", "remove", "(", "result", ".", "size", "(", ")", "-", "1", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "UniquePartitionOfInteger", "upi", "=", "new", "UniquePartitionOfInteger", "(", ")", ";", "upi", ".", "partition", "(", "<NUM_LIT:12>", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "isAggregate", "(", "int", "[", "]", "number", ")", "{", "if", "(", "number", ".", "length", "<", "<NUM_LIT:3>", ")", "{", "return", "false", ";", "}", "int", "prev", "=", "0", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "=", "number", ".", "length", "/", "<NUM_LIT:2>", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "i", ";", "j", "+", "+", ")", "{", "int", "num1", "=", "getNumber", "(", "number", ",", "prev", ",", "j", ")", ";", "int", "num2", "=", "getNumber", "(", "number", ",", "j", "+", "1", ",", "i", ")", ";", "int", "start", "=", "i", "+", "1", ";", "boolean", "flag", "=", "false", ";", "int", "k", "=", "start", ";", "for", "(", ";", "k", "<", "number", ".", "length", ";", "k", "+", "+", ")", "{", "int", "num3", "=", "getNumber", "(", "number", ",", "start", ",", "k", ")", ";", "if", "(", "num1", "+", "num2", "<", "num3", ")", "{", "break", ";", "}", "if", "(", "num1", "+", "num2", "=", "=", "num3", ")", "{", "num1", "=", "num2", ";", "num2", "=", "num3", ";", "flag", "=", "true", ";", "start", "=", "k", "+", "1", ";", "}", "else", "{", "flag", "=", "false", ";", "}", "}", "if", "(", "k", "=", "=", "number", ".", "length", "&", "&", "flag", ")", "{", "return", "true", ";", "}", "flag", "=", "false", ";", "}", "}", "return", "false", ";", "}", "</s>"]
["<s>", "private", "int", "getNumber", "(", "int", "[", "]", "number", ",", "int", "start", ",", "int", "end", ")", "{", "int", "total", "=", "0", ";", "for", "(", "int", "i", "=", "start", ";", "i", "<", "=", "end", ";", "i", "+", "+", ")", "{", "total", "*", "=", "<NUM_LIT:10>", ";", "total", "+", "=", "number", "[", "i", "]", ";", "}", "return", "total", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "AggregateNumber", "an", "=", "new", "AggregateNumber", "(", ")", ";", "int", "number", "[", "]", "=", "{", "1", ",", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:8>", ",", "1", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:3>", "}", ";", "int", "number1", "[", "]", "=", "{", "1", ",", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:8>", ",", "1", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:4>", "}", ";", "int", "number2", "[", "]", "=", "{", "1", ",", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", "}", ";", "int", "number3", "[", "]", "=", "{", "1", ",", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:7>", "}", ";", "System", ".", "out", ".", "println", "(", "an", ".", "isAggregate", "(", "number", ")", ")", ";", "System", ".", "out", ".", "println", "(", "an", ".", "isAggregate", "(", "number1", ")", ")", ";", "System", ".", "out", ".", "println", "(", "an", ".", "isAggregate", "(", "number2", ")", ")", ";", "System", ".", "out", ".", "println", "(", "an", ".", "isAggregate", "(", "number3", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "median", "(", "int", "arr", "[", "]", ")", "{", "int", "l", "=", "0", ";", "int", "h", "=", "<NUM_LIT:2>", ";", "int", "m", "=", "1", ";", "if", "(", "arr", "[", "m", "]", ">", "=", "arr", "[", "l", "]", ")", "{", "if", "(", "arr", "[", "m", "]", "<", "=", "arr", "[", "h", "]", ")", "{", "return", "arr", "[", "m", "]", ";", "}", "else", "if", "(", "arr", "[", "l", "]", ">", "=", "arr", "[", "h", "]", ")", "{", "return", "arr", "[", "l", "]", ";", "}", "}", "else", "{", "if", "(", "arr", "[", "l", "]", "<", "=", "arr", "[", "h", "]", ")", "{", "return", "arr", "[", "l", "]", ";", "}", "else", "if", "(", "arr", "[", "m", "]", ">", "=", "arr", "[", "h", "]", ")", "{", "return", "arr", "[", "m", "]", ";", "}", "}", "return", "arr", "[", "h", "]", ";", "}", "</s>"]
["<s>", "public", "int", "median2Comparison", "(", "int", "arr", "[", "]", ")", "{", "int", "l", "=", "0", ";", "int", "h", "=", "<NUM_LIT:2>", ";", "int", "m", "=", "1", ";", "if", "(", "(", "arr", "[", "l", "]", "-", "arr", "[", "m", "]", ")", "*", "(", "arr", "[", "h", "]", "-", "arr", "[", "l", "]", ")", ">", "=", "0", ")", "{", "return", "arr", "[", "l", "]", ";", "}", "else", "if", "(", "(", "arr", "[", "m", "]", "-", "arr", "[", "l", "]", ")", "*", "(", "arr", "[", "h", "]", "-", "arr", "[", "m", "]", ")", ">", "=", "0", ")", "{", "return", "arr", "[", "m", "]", ";", "}", "else", "{", "return", "arr", "[", "h", "]", ";", "}", "}", "</s>"]
["<s>", "public", "int", "medianXORMethod", "(", "int", "arr", "[", "]", ")", "{", "int", "a", "=", "arr", "[", "0", "]", "<", "=", "arr", "[", "1", "]", "?", "arr", "[", "0", "]", ":", "arr", "[", "1", "]", ";", "int", "b", "=", "arr", "[", "1", "]", "<", "=", "arr", "[", "<NUM_LIT:2>", "]", "?", "arr", "[", "1", "]", ":", "arr", "[", "<NUM_LIT:2>", "]", ";", "int", "c", "=", "arr", "[", "0", "]", "<", "=", "arr", "[", "<NUM_LIT:2>", "]", "?", "arr", "[", "0", "]", ":", "arr", "[", "<NUM_LIT:2>", "]", ";", "return", "a", "^", "b", "^", "c", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "MedianOf3Number", "mn", "=", "new", "MedianOf3Number", "(", ")", ";", "int", "arr", "[", "]", "=", "{", "<NUM_LIT:2>", ",", "0", ",", "1", "}", ";", "System", ".", "out", ".", "println", "(", "mn", ".", "medianXORMethod", "(", "arr", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "count2s", "(", "int", "n", ")", "{", "if", "(", "n", "<", "<NUM_LIT:2>", ")", "{", "return", "0", ";", "}", "else", "if", "(", "n", "<", "=", "<NUM_LIT:9>", ")", "{", "return", "1", ";", "}", "int", "pow", "=", "1", ";", "while", "(", "pow", "<", "=", "n", ")", "{", "pow", "*", "=", "<NUM_LIT:10>", ";", "}", "pow", "=", "pow", "/", "<NUM_LIT:10>", ";", "if", "(", "n", "/", "pow", "=", "=", "<NUM_LIT:2>", ")", "{", "return", "1", "+", "n", "%", "pow", "+", "count2s", "(", "n", "%", "pow", ")", "+", "count2s", "(", "(", "n", "/", "pow", ")", "*", "pow", "-", "1", ")", ";", "}", "else", "{", "return", "pow", "*", "count2s", "(", "n", "/", "pow", ")", "+", "count2s", "(", "n", "%", "pow", ")", "+", "(", "n", "/", "pow", ")", "*", "count2s", "(", "pow", "-", "1", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "CountNoOf2s", "cn2", "=", "new", "CountNoOf2s", "(", ")", ";", "System", ".", "out", ".", "println", "(", "cn2", ".", "count2s", "(", "<NUM_LIT:255>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "calculate", "(", "int", "result", "[", "]", ",", "int", "n", ")", "{", "assert", "n", ">", "=", "0", ";", "result", "[", "0", "]", "=", "1", ";", "int", "size", "=", "1", ";", "for", "(", "int", "i", "=", "<NUM_LIT:2>", ";", "i", "<", "=", "n", ";", "i", "+", "+", ")", "{", "size", "=", "multiply", "(", "result", ",", "i", ",", "size", ")", ";", "}", "return", "size", ";", "}", "</s>"]
["<s>", "private", "int", "multiply", "(", "int", "result", "[", "]", ",", "int", "x", ",", "int", "size", ")", "{", "int", "carry", "=", "0", ";", "int", "prod", "=", "0", ";", "int", "i", "=", "0", ";", "for", "(", ";", "i", "<", "size", ";", "i", "+", "+", ")", "{", "prod", "=", "result", "[", "i", "]", "*", "x", "+", "carry", ";", "result", "[", "i", "]", "=", "prod", "%", "<NUM_LIT:10>", ";", "carry", "=", "prod", "/", "<NUM_LIT:10>", ";", "}", "while", "(", "carry", "!", "=", "0", ")", "{", "result", "[", "i", "]", "=", "carry", "%", "<NUM_LIT:10>", ";", "carry", "=", "carry", "/", "<NUM_LIT:10>", ";", "i", "+", "+", ";", "}", "return", "i", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "FactorialOfLargeNumber", "fol", "=", "new", "FactorialOfLargeNumber", "(", ")", ";", "int", "result", "[", "]", "=", "new", "int", "[", "<NUM_LIT>", "]", ";", "int", "size", "=", "fol", ".", "calculate", "(", "result", ",", "<NUM_LIT>", ")", ";", "for", "(", "int", "i", "=", "size", "-", "1", ";", "i", ">", "=", "0", ";", "i", "-", "-", ")", "{", "System", ".", "out", ".", "print", "(", "result", "[", "i", "]", ")", ";", "}", "}", "</s>"]
["<s>", "public", "Pair", "divide", "(", "int", "number", ",", "int", "divisor", ")", "{", "int", "divident", "=", "0", ";", "while", "(", "number", ">", "=", "divisor", ")", "{", "number", "-", "=", "divisor", ";", "divident", "+", "+", ";", "}", "Pair", "p", "=", "new", "Pair", "(", ")", ";", "p", ".", "quotient", "=", "divident", ";", "p", ".", "remainder", "=", "number", ";", "return", "p", ";", "}", "</s>"]
["<s>", "public", "int", "divideRec", "(", "int", "number", ",", "int", "divisor", ")", "{", "if", "(", "number", "<", "divisor", ")", "{", "return", "0", ";", "}", "return", "divideRec", "(", "number", "-", "divisor", ",", "divisor", ")", "+", "1", ";", "}", "</s>"]
["<s>", "public", "Pair", "efficientDivide", "(", "int", "divident", ",", "int", "divisor", ")", "{", "int", "quotient", "=", "1", ";", "int", "currentDivisor", "=", "divisor", ";", "int", "currentDivident", "=", "divident", ";", "int", "q", "=", "0", ";", "while", "(", "divisor", "<", "divident", ")", "{", "currentDivisor", "=", "divisor", ";", "currentDivident", "=", "divident", ";", "quotient", "=", "1", ";", "while", "(", "currentDivisor", "<", "=", "currentDivident", ")", "{", "currentDivisor", "*", "=", "<NUM_LIT:2>", ";", "quotient", "*", "=", "<NUM_LIT:2>", ";", "}", "currentDivisor", "=", "currentDivisor", ">", ">", "1", ";", "quotient", "=", "quotient", ">", ">", "1", ";", "divident", "=", "divident", "-", "currentDivisor", ";", "q", "+", "=", "quotient", ";", "}", "Pair", "p", "=", "new", "Pair", "(", ")", ";", "p", ".", "quotient", "=", "q", ";", "p", ".", "remainder", "=", "divident", ";", "return", "p", ";", "}", "</s>"]
["<s>", "public", "int", "efficientDivideRec", "(", "int", "divident", ",", "int", "divisor", ")", "{", "if", "(", "divisor", ">", "divident", ")", "{", "return", "0", ";", "}", "int", "tempDivisor", "=", "divisor", ";", "int", "quotient", "=", "1", ";", "while", "(", "divisor", "<", "=", "divident", ")", "{", "divisor", "=", "divisor", "*", "<NUM_LIT:2>", ";", "quotient", "*", "=", "<NUM_LIT:2>", ";", "}", "divisor", "=", "divisor", ">", ">", "1", ";", "quotient", "=", "quotient", ">", ">", "1", ";", "return", "quotient", "+", "efficientDivideRec", "(", "divident", "-", "divisor", ",", "tempDivisor", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "DivisionWithoutDivisionOperator", "dd", "=", "new", "DivisionWithoutDivisionOperator", "(", ")", ";", "Pair", "p", "=", "dd", ".", "efficientDivide", "(", "<NUM_LIT>", ",", "<NUM_LIT:4>", ")", ";", "System", ".", "out", ".", "println", "(", "p", ".", "quotient", "+", "\"", "\"", "+", "p", ".", "remainder", ")", ";", "System", ".", "out", ".", "print", "(", "dd", ".", "efficientDivideRec", "(", "<NUM_LIT>", ",", "<NUM_LIT:12>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "[", "]", "multiplyDivideAndConquer", "(", "int", "arr1", "[", "]", ",", "int", "arr2", "[", "]", ",", "int", "low1", ",", "int", "high1", ",", "int", "low2", ",", "int", "high2", ")", "{", "if", "(", "low1", "=", "=", "high1", "|", "|", "low2", "=", "=", "high2", ")", "{", "return", "simpleMultiplication", "(", "arr1", ",", "arr2", ",", "low1", ",", "high1", ",", "low2", ",", "high2", ")", ";", "}", "int", "mid1", "=", "(", "low1", "+", "high1", ")", "/", "<NUM_LIT:2>", ";", "int", "mid2", "=", "(", "low2", "+", "high2", ")", "/", "<NUM_LIT:2>", ";", "int", "r1", "[", "]", "=", "multiplyDivideAndConquer", "(", "arr1", ",", "arr2", ",", "low1", ",", "mid1", ",", "low2", ",", "mid2", ")", ";", "int", "shiftBy", "=", "high1", "-", "mid1", "+", "high2", "-", "mid2", ";", "r1", "=", "shift", "(", "r1", ",", "shiftBy", ")", ";", "int", "r2", "[", "]", "=", "multiplyDivideAndConquer", "(", "arr1", ",", "arr2", ",", "mid1", "+", "1", ",", "high1", ",", "mid2", "+", "1", ",", "high2", ")", ";", "int", "r3", "[", "]", "=", "multiplyDivideAndConquer", "(", "arr1", ",", "arr2", ",", "low1", ",", "mid1", ",", "mid2", "+", "1", ",", "high2", ")", ";", "shiftBy", "=", "high1", "-", "mid1", ";", "r3", "=", "shift", "(", "r3", ",", "shiftBy", ")", ";", "int", "r4", "[", "]", "=", "multiplyDivideAndConquer", "(", "arr1", ",", "arr2", ",", "mid1", "+", "1", ",", "high1", ",", "low2", ",", "mid2", ")", ";", "shiftBy", "=", "high2", "-", "mid2", ";", "r4", "=", "shift", "(", "r4", ",", "shiftBy", ")", ";", "ArrayAddition", "aa", "=", "new", "ArrayAddition", "(", ")", ";", "r1", "=", "aa", ".", "add", "(", "r1", ",", "r2", ")", ";", "r1", "=", "aa", ".", "add", "(", "r1", ",", "r3", ")", ";", "r1", "=", "aa", ".", "add", "(", "r1", ",", "r4", ")", ";", "return", "r1", ";", "}", "</s>"]
["<s>", "private", "int", "[", "]", "shift", "(", "int", "arr", "[", "]", ",", "int", "n", ")", "{", "int", "[", "]", "result", "=", "new", "int", "[", "arr", ".", "length", "+", "n", "]", ";", "int", "i", "=", "0", ";", "for", "(", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "result", "[", "i", "]", "=", "arr", "[", "i", "]", ";", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "int", "[", "]", "simpleMultiplication", "(", "int", "arr1", "[", "]", ",", "int", "arr2", "[", "]", ",", "int", "low1", ",", "int", "high1", ",", "int", "low2", ",", "int", "high2", ")", "{", "int", "[", "]", "result", "=", "new", "int", "[", "high1", "-", "low1", "+", "high2", "-", "low2", "+", "<NUM_LIT:2>", "]", ";", "int", "m", "=", "0", ";", "int", "c", "=", "0", ";", "int", "n", "=", "0", ";", "int", "index", "=", "result", ".", "length", "-", "1", ";", "int", "temp", "[", "]", "=", "new", "int", "[", "Math", ".", "max", "(", "high1", "-", "low1", "+", "1", ",", "high2", "-", "low2", "+", "1", ")", "+", "1", "]", ";", "for", "(", "int", "i", "=", "high1", ";", "i", ">", "=", "low1", ";", "i", "-", "-", ")", "{", "int", "l", "=", "temp", ".", "length", "-", "1", ";", "for", "(", "int", "j", "=", "high2", ";", "j", ">", "=", "low2", ";", "j", "-", "-", ")", "{", "m", "=", "arr1", "[", "i", "]", "*", "arr2", "[", "j", "]", "+", "c", ";", "n", "=", "m", "%", "<NUM_LIT:10>", ";", "temp", "[", "l", "-", "-", "]", "=", "n", ";", "c", "=", "m", "/", "<NUM_LIT:10>", ";", "}", "temp", "[", "l", "]", "=", "c", ";", "addToResult", "(", "result", ",", "temp", ",", "index", ")", ";", "index", "-", "-", ";", "c", "=", "0", ";", "for", "(", "int", "t", "=", "0", ";", "t", "<", "temp", ".", "length", ";", "t", "+", "+", ")", "{", "temp", "[", "t", "]", "=", "0", ";", "}", "}", "return", "result", ";", "}", "</s>"]
["<s>", "private", "void", "addToResult", "(", "int", "[", "]", "result", ",", "int", "temp", "[", "]", ",", "int", "start", ")", "{", "int", "c", "=", "0", ";", "for", "(", "int", "i", "=", "temp", ".", "length", "-", "1", ";", "i", ">", "=", "0", ";", "i", "-", "-", ")", "{", "if", "(", "start", "=", "=", "-", "1", ")", "{", "break", ";", "}", "int", "m", "=", "result", "[", "start", "]", "+", "temp", "[", "i", "]", "+", "c", ";", "result", "[", "start", "-", "-", "]", "=", "m", "%", "<NUM_LIT:10>", ";", "c", "=", "m", "/", "<NUM_LIT:10>", ";", "}", "}", "</s>"]
["<s>", "public", "int", "multiplicationImproved", "(", "int", "x", ",", "int", "y", ",", "int", "len", ")", "{", "if", "(", "len", "=", "=", "1", ")", "{", "return", "x", "*", "y", ";", "}", "len", "=", "len", "/", "<NUM_LIT:2>", ";", "int", "div", "=", "power", "(", "len", ")", ";", "int", "result1", "=", "multiplicationImproved", "(", "x", "/", "div", ",", "y", "/", "div", ",", "len", ")", ";", "int", "result2", "=", "multiplicationImproved", "(", "x", "%", "div", ",", "y", "%", "div", ",", "len", ")", ";", "int", "result3", "=", "multiplicationImproved", "(", "x", "/", "div", "+", "x", "%", "div", ",", "y", "/", "div", "+", "y", "%", "div", ",", "len", ")", ";", "return", "result1", "*", "div", "*", "(", "div", "-", "1", ")", "+", "result3", "*", "div", "-", "result2", "*", "(", "div", "-", "1", ")", ";", "}", "</s>"]
["<s>", "private", "int", "power", "(", "int", "n", ")", "{", "return", "(", "int", ")", "Math", ".", "pow", "(", "<NUM_LIT:10>", ",", "n", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "arr2", "[", "]", "=", "{", "<NUM_LIT:9>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:9>", "}", ";", "int", "arr1", "[", "]", "=", "{", "<NUM_LIT:9>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:2>", ",", "1", "}", ";", "ArrayMultiplication", "am", "=", "new", "ArrayMultiplication", "(", ")", ";", "int", "result", "[", "]", "=", "am", ".", "multiplyDivideAndConquer", "(", "arr1", ",", "arr2", ",", "0", ",", "arr1", ".", "length", "-", "1", ",", "0", ",", "arr2", ".", "length", "-", "1", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "result", ".", "length", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "\"", "\"", "+", "result", "[", "i", "]", ")", ";", "}", "System", ".", "out", ".", "print", "(", "\"", "<STR_LIT>", "<STR_LIT>", "\"", "+", "am", ".", "multiplicationImproved", "(", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT:2>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "pair", "(", "int", "input", "[", "]", ",", "int", "k", ")", "{", "int", "count", "[", "]", "=", "new", "int", "[", "k", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "count", "[", "input", "[", "i", "]", "%", "k", "]", "+", "+", ";", "}", "if", "(", "count", "[", "0", "]", "%", "<NUM_LIT:2>", "!", "=", "0", ")", "{", "return", "false", ";", "}", "if", "(", "k", "%", "<NUM_LIT:2>", "=", "=", "0", ")", "{", "if", "(", "count", "[", "k", "/", "<NUM_LIT:2>", "]", "%", "<NUM_LIT:2>", "!", "=", "0", ")", "{", "return", "false", ";", "}", "}", "for", "(", "int", "i", "=", "1", ";", "i", "<", "=", "k", "/", "<NUM_LIT:2>", ";", "i", "+", "+", ")", "{", "if", "(", "count", "[", "i", "]", "!", "=", "count", "[", "k", "-", "i", "]", ")", "{", "return", "false", ";", "}", "}", "return", "true", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "input", "[", "]", "=", "{", "<NUM_LIT:5>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:4>", "}", ";", "NBy2PairSumToK", "nb", "=", "new", "NBy2PairSumToK", "(", ")", ";", "System", ".", "out", ".", "println", "(", "nb", ".", "pair", "(", "input", ",", "<NUM_LIT:6>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "void", "nextPermutation", "(", "int", "[", "]", "nums", ")", "{", "int", "i", ";", "for", "(", "i", "=", "nums", ".", "length", "-", "<NUM_LIT:2>", ";", "i", ">", "=", "0", ";", "i", "-", "-", ")", "{", "if", "(", "nums", "[", "i", "]", "<", "nums", "[", "i", "+", "1", "]", ")", "{", "break", ";", "}", "}", "if", "(", "i", "!", "=", "-", "1", ")", "{", "int", "pos", "=", "ceiling", "(", "nums", "[", "i", "]", ",", "i", "+", "1", ",", "nums", ".", "length", "-", "1", ",", "nums", ")", ";", "int", "t", "=", "nums", "[", "pos", "]", ";", "nums", "[", "pos", "]", "=", "nums", "[", "i", "]", ";", "nums", "[", "i", "]", "=", "t", ";", "}", "reverse", "(", "nums", ",", "i", "+", "1", ",", "nums", ".", "length", "-", "1", ")", ";", "}", "</s>"]
["<s>", "private", "void", "reverse", "(", "int", "nums", "[", "]", ",", "int", "start", ",", "int", "end", ")", "{", "while", "(", "start", "<", "=", "end", ")", "{", "int", "t", "=", "nums", "[", "start", "]", ";", "nums", "[", "start", "]", "=", "nums", "[", "end", "]", ";", "nums", "[", "end", "]", "=", "t", ";", "start", "+", "+", ";", "end", "-", "-", ";", "}", "}", "</s>"]
["<s>", "private", "int", "ceiling", "(", "int", "val", ",", "int", "start", ",", "int", "end", ",", "int", "[", "]", "nums", ")", "{", "while", "(", "start", "<", "=", "end", ")", "{", "int", "middle", "=", "(", "start", "+", "end", ")", "/", "<NUM_LIT:2>", ";", "if", "(", "nums", "[", "middle", "]", ">", "val", "&", "&", "(", "middle", "+", "1", "=", "=", "nums", ".", "length", "|", "|", "nums", "[", "middle", "+", "1", "]", "<", "=", "val", ")", ")", "{", "return", "middle", ";", "}", "else", "if", "(", "nums", "[", "middle", "]", ">", "val", ")", "{", "start", "=", "middle", "+", "1", ";", "}", "else", "{", "end", "=", "middle", "-", "1", ";", "}", "}", "throw", "new", "IllegalArgumentException", "(", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "PermutationBiggerThanNumber", "pb", "=", "new", "PermutationBiggerThanNumber", "(", ")", ";", "int", "arr", "[", "]", "=", "{", "1", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:4>", "}", ";", "pb", ".", "nextPermutation", "(", "arr", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "arr", "[", "i", "]", "+", "\"", "\"", ")", ";", "}", "}", "</s>"]
["<s>", "public", "int", "[", "]", "generate", "(", "char", "input", "[", "]", ")", "{", "Pair", "p", "=", "kadane", "(", "input", ")", ";", "int", "result", "[", "]", "=", "new", "int", "[", "input", ".", "length", "+", "1", "]", ";", "if", "(", "p", ".", "start", "=", "=", "-", "1", ")", "{", "fillResult", "(", "input", ",", "result", ",", "1", ")", ";", "return", "result", ";", "}", "int", "count", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "p", ".", "start", ";", "i", "+", "+", ")", "{", "if", "(", "input", "[", "i", "]", "=", "=", "<CHAR_LIT>", ")", "{", "count", "+", "+", ";", "}", "else", "{", "count", "-", "-", ";", "}", "}", "fillResult", "(", "input", ",", "result", ",", "count", "<", "p", ".", "size", "?", "p", ".", "size", "-", "count", "+", "1", ":", "1", ")", ";", "return", "result", ";", "}", "</s>"]
["<s>", "private", "void", "fillResult", "(", "char", "input", "[", "]", ",", "int", "result", "[", "]", ",", "int", "start", ")", "{", "result", "[", "0", "]", "=", "start", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "input", "[", "i", "]", "=", "=", "<CHAR_LIT>", ")", "{", "result", "[", "i", "+", "1", "]", "=", "result", "[", "i", "]", "-", "1", ";", "}", "else", "{", "result", "[", "i", "+", "1", "]", "=", "result", "[", "i", "]", "+", "1", ";", "}", "}", "}", "</s>"]
["<s>", "private", "Pair", "kadane", "(", "char", "input", "[", "]", ")", "{", "int", "max", "=", "-", "1", ";", "int", "index", "=", "0", ";", "int", "val", "=", "0", ";", "int", "sum", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "val", "=", "input", "[", "i", "]", "=", "=", "<CHAR_LIT>", "?", "1", ":", "-", "1", ";", "sum", "+", "=", "val", ";", "if", "(", "sum", "<", "=", "0", ")", "{", "sum", "=", "0", ";", "index", "=", "i", "+", "1", ";", "continue", ";", "}", "if", "(", "max", "<", "sum", ")", "{", "max", "=", "sum", ";", "}", "}", "Pair", "p", "=", "new", "Pair", "(", ")", ";", "p", ".", "size", "=", "max", ";", "p", ".", "start", "=", "index", ";", "return", "p", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "String", "input", "=", "\"", "<STR_LIT>", "\"", ";", "GenerateSignature", "gs", "=", "new", "GenerateSignature", "(", ")", ";", "int", "result", "[", "]", "=", "gs", ".", "generate", "(", "input", ".", "toCharArray", "(", ")", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "result", ".", "length", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "result", "[", "i", "]", "+", "\"", "\"", ")", ";", "}", "}", "</s>"]
["<s>", "public", "int", "multiply", "(", "int", "a", ",", "int", "b", ")", "{", "int", "res", "=", "0", ";", "while", "(", "b", ">", "0", ")", "{", "if", "(", "b", "%", "<NUM_LIT:2>", "!", "=", "0", ")", "{", "res", "+", "=", "a", ";", "}", "a", "=", "a", "<", "<", "1", ";", "b", "=", "b", ">", ">", "1", ";", "}", "return", "res", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "RussianPeasantMultiplication", "rpm", "=", "new", "RussianPeasantMultiplication", "(", ")", ";", "System", ".", "out", ".", "println", "(", "rpm", ".", "multiply", "(", "<NUM_LIT:7>", ",", "<NUM_LIT>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "number", "(", "int", "chinaNumber", ")", "{", "int", "result", "=", "0", ";", "int", "mul", "=", "1", ";", "while", "(", "chinaNumber", ">", "0", ")", "{", "int", "r", "=", "chinaNumber", "%", "<NUM_LIT:10>", ";", "chinaNumber", "/", "=", "<NUM_LIT:10>", ";", "if", "(", "r", "=", "=", "<NUM_LIT:4>", ")", "{", "throw", "new", "IllegalArgumentException", "(", ")", ";", "}", "if", "(", "r", ">", "=", "<NUM_LIT:5>", ")", "{", "r", "-", "-", ";", "}", "result", "+", "=", "r", "*", "mul", ";", "mul", "=", "mul", "*", "<NUM_LIT:9>", ";", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "NotIncluding4", "ni", "=", "new", "NotIncluding4", "(", ")", ";", "System", ".", "out", ".", "print", "(", "ni", ".", "number", "(", "<NUM_LIT:16>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "void", "print", "(", "double", "num", ")", "{", "if", "(", "num", ">", "1", "|", "|", "num", "<", "0", ")", "{", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", ")", ";", "return", ";", "}", "StringBuilder", "stringBuilder", "=", "new", "StringBuilder", "(", ")", ";", "stringBuilder", ".", "append", "(", "\"", "<STR_LIT>", "\"", ")", ";", "while", "(", "num", ">", "0", ")", "{", "num", "=", "num", "*", "<NUM_LIT:2>", ";", "int", "r", "=", "(", "int", ")", "num", ";", "stringBuilder", ".", "append", "(", "r", ")", ";", "num", "=", "num", "-", "r", ";", "if", "(", "stringBuilder", ".", "length", "(", ")", ">", "<NUM_LIT:32>", ")", "{", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", ")", ";", "return", ";", "}", "}", "System", ".", "out", ".", "println", "(", "stringBuilder", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "RealNumberToBinary", "rnb", "=", "new", "RealNumberToBinary", "(", ")", ";", "rnb", ".", "print", "(", "<NUM_LIT>", ")", ";", "rnb", ".", "print", "(", "<NUM_LIT>", ")", ";", "}", "</s>"]
["<s>", "public", "int", "swap", "(", "int", "num", ")", "{", "int", "mask1", "=", "<NUM_LIT>", ";", "int", "mask2", "=", "<NUM_LIT>", ";", "return", "(", "num", "<", "<", "1", "&", "mask1", ")", "|", "(", "num", ">", ">", "1", "&", "mask2", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "SwapOddEvenBits", "soe", "=", "new", "SwapOddEvenBits", "(", ")", ";", "System", ".", "out", ".", "println", "(", "soe", ".", "swap", "(", "<NUM_LIT>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "void", "draw", "(", "byte", "[", "]", "screen", ",", "int", "width", ",", "int", "x1", ",", "int", "x2", ",", "int", "y", ")", "{", "int", "pos1", "=", "y", "*", "width", "+", "x1", ";", "int", "pos2", "=", "y", "*", "width", "+", "x2", ";", "int", "start", "=", "pos1", ";", "while", "(", "start", "<", "=", "pos2", ")", "{", "int", "row", "=", "start", "/", "<NUM_LIT:8>", ";", "int", "col", "=", "start", "%", "<NUM_LIT:8>", ";", "screen", "[", "row", "]", "=", "(", "byte", ")", "(", "screen", "[", "row", "]", "|", "1", "<", "<", "col", ")", ";", "start", "+", "+", ";", "}", "printScreen", "(", "screen", ",", "width", ")", ";", "}", "</s>"]
["<s>", "public", "void", "drawFaster", "(", "byte", "[", "]", "screen", ",", "int", "width", ",", "int", "x1", ",", "int", "x2", ",", "int", "y", ")", "{", "int", "pos1", "=", "y", "*", "width", "+", "x1", ";", "int", "pos2", "=", "y", "*", "width", "+", "x2", ";", "int", "row1", "=", "pos1", "/", "<NUM_LIT:8>", ";", "int", "col1", "=", "pos1", "%", "<NUM_LIT:8>", ";", "int", "row2", "=", "pos2", "/", "<NUM_LIT:8>", ";", "int", "col2", "=", "pos2", "%", "<NUM_LIT:8>", ";", "int", "mask", "=", "~", "(", "(", "1", "<", "<", "col1", ")", "-", "1", ")", ";", "screen", "[", "row1", "]", "=", "(", "byte", ")", "(", "screen", "[", "row1", "]", "|", "mask", ")", ";", "mask", "=", "(", "(", "1", "<", "<", "(", "col2", "+", "1", ")", ")", "-", "1", ")", ";", "screen", "[", "row2", "]", "=", "(", "byte", ")", "(", "screen", "[", "row2", "]", "|", "mask", ")", ";", "while", "(", "row1", "+", "1", "<", "row2", ")", "{", "screen", "[", "row1", "+", "1", "]", "=", "(", "byte", ")", "(", "screen", "[", "row1", "+", "1", "]", "|", "<NUM_LIT>", ")", ";", "row1", "+", "+", ";", "}", "printScreen", "(", "screen", ",", "width", ")", ";", "}", "</s>"]
["<s>", "private", "void", "printScreen", "(", "byte", "[", "]", "screen", ",", "int", "width", ")", "{", "int", "w", "=", "width", "/", "<NUM_LIT:8>", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "screen", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "i", "%", "w", "=", "=", "0", ")", "{", "System", ".", "out", ".", "println", "(", ")", ";", "}", "for", "(", "int", "j", "=", "0", ";", "j", "<", "<NUM_LIT:8>", ";", "j", "+", "+", ")", "{", "if", "(", "(", "screen", "[", "i", "]", "&", "1", "<", "<", "j", ")", "!", "=", "0", ")", "{", "System", ".", "out", ".", "print", "(", "\"", "<STR_LIT:*>", "\"", ")", ";", "}", "else", "{", "System", ".", "out", ".", "print", "(", "\"", "<STR_LIT:+>", "\"", ")", ";", "}", "}", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "byte", "[", "]", "screen", "=", "{", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "}", ";", "DrawHorizontalLine", "dwl", "=", "new", "DrawHorizontalLine", "(", ")", ";", "dwl", ".", "drawFaster", "(", "screen", ",", "<NUM_LIT:24>", ",", "1", ",", "<NUM_LIT>", ",", "1", ")", ";", "}", "</s>"]
["<s>", "public", "int", "oneNumberOccuringOddTimes", "(", "int", "arr", "[", "]", ")", "{", "int", "r", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "r", "=", "r", "^", "arr", "[", "i", "]", ";", "}", "return", "r", ";", "}", "</s>"]
["<s>", "public", "Pair", "twoNumbersOccuringOddTimes", "(", "int", "arr", "[", "]", ")", "{", "int", "r", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "r", "=", "r", "^", "arr", "[", "i", "]", ";", "}", "r", "=", "r", "&", "~", "(", "r", "-", "1", ")", ";", "int", "r1", "=", "0", ";", "int", "r2", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "(", "r", "&", "arr", "[", "i", "]", ")", "=", "=", "0", ")", "{", "r1", "=", "r1", "^", "arr", "[", "i", "]", ";", "}", "else", "{", "r2", "=", "r2", "^", "arr", "[", "i", "]", ";", "}", "}", "Pair", "p", "=", "new", "Pair", "(", ")", ";", "p", ".", "a", "=", "r1", ";", "p", ".", "b", "=", "r2", ";", "return", "p", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "NumberOccuringOddTimes", "noot", "=", "new", "NumberOccuringOddTimes", "(", ")", ";", "int", "arr", "[", "]", "=", "{", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:2>", ",", "1", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:2>", ",", "1", ",", "<NUM_LIT:9>", ",", "1", "}", ";", "Pair", "p", "=", "noot", ".", "twoNumbersOccuringOddTimes", "(", "arr", ")", ";", "System", ".", "out", ".", "print", "(", "p", ".", "a", "+", "\"", "\"", "+", "p", ".", "b", ")", ";", "}", "</s>"]
["<s>", "public", "int", "square", "(", "int", "n", ")", "{", "if", "(", "n", "<", "0", ")", "{", "n", "=", "-", "n", ";", "}", "int", "result", "=", "0", ";", "int", "k", "=", "n", ";", "while", "(", "(", "k", "&", "(", "k", "-", "1", ")", ")", "!", "=", "0", ")", "{", "result", "+", "=", "n", ";", "k", "-", "-", ";", "}", "while", "(", "k", ">", "1", ")", "{", "n", "=", "n", "<", "<", "1", ";", "k", "=", "k", ">", ">", "1", ";", "}", "return", "result", "+", "n", ";", "}", "</s>"]
["<s>", "public", "int", "fastSquare", "(", "int", "n", ")", "{", "return", "fastSquareRec", "(", "n", ",", "n", ")", ";", "}", "</s>"]
["<s>", "private", "int", "fastSquareRec", "(", "int", "n", ",", "int", "leftToMultiply", ")", "{", "if", "(", "leftToMultiply", "<", "=", "0", ")", "{", "return", "0", ";", "}", "int", "k", "=", "1", ";", "int", "count", "=", "0", ";", "while", "(", "k", "<", "=", "leftToMultiply", ")", "{", "k", "=", "k", "<", "<", "1", ";", "count", "+", "+", ";", "}", "k", "=", "k", ">", ">", "1", ";", "count", "-", "-", ";", "return", "(", "n", "<", "<", "count", ")", "+", "fastSquareRec", "(", "n", ",", "leftToMultiply", "-", "k", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "SquareOfNumber", "sn", "=", "new", "SquareOfNumber", "(", ")", ";", "System", ".", "out", ".", "println", "(", "sn", ".", "square", "(", "<NUM_LIT:9>", ")", "+", "\"", "\"", "+", "sn", ".", "fastSquare", "(", "<NUM_LIT:9>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "sn", ".", "square", "(", "<NUM_LIT>", ")", "+", "\"", "\"", "+", "sn", ".", "fastSquare", "(", "<NUM_LIT>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "sn", ".", "square", "(", "<NUM_LIT>", ")", "+", "\"", "\"", "+", "sn", ".", "fastSquare", "(", "<NUM_LIT>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "sn", ".", "square", "(", "<NUM_LIT>", ")", "+", "\"", "\"", "+", "sn", ".", "fastSquare", "(", "<NUM_LIT>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "reverse", "(", "int", "num", ")", "{", "int", "result", "=", "0", ";", "int", "r1", "=", "1", ";", "for", "(", "int", "i", "=", "<NUM_LIT:31>", ";", "i", ">", "=", "0", ";", "i", "-", "-", ",", "r1", "<", "<", "=", "1", ")", "{", "if", "(", "(", "num", "&", "1", "<", "<", "i", ")", "!", "=", "0", ")", "{", "result", "=", "result", "|", "r1", ";", "}", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "ReverseBits", "rb", "=", "new", "ReverseBits", "(", ")", ";", "System", ".", "out", ".", "println", "(", "rb", ".", "reverse", "(", "<NUM_LIT>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "nextPowerOf2", "(", "int", "num", ")", "{", "if", "(", "num", "=", "=", "0", ")", "{", "return", "1", ";", "}", "if", "(", "num", ">", "0", "&", "&", "(", "num", "&", "(", "num", "-", "1", ")", ")", "=", "=", "0", ")", "{", "return", "num", ";", "}", "while", "(", "(", "num", "&", "(", "num", "-", "1", ")", ")", ">", "0", ")", "{", "num", "=", "num", "&", "(", "num", "-", "1", ")", ";", "}", "return", "num", "<", "<", "1", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "NextPowerOf2", "np", "=", "new", "NextPowerOf2", "(", ")", ";", "System", ".", "out", ".", "println", "(", "np", ".", "nextPowerOf2", "(", "<NUM_LIT:4>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "insert", "(", "int", "M", ",", "int", "N", ",", "int", "i", ",", "int", "j", ")", "{", "int", "mask", "=", "1", "<", "<", "(", "j", "+", "1", ")", "-", "1", ";", "mask", "=", "mask", "<", "<", "i", ";", "mask", "=", "~", "mask", ";", "N", "=", "N", "&", "mask", ";", "N", "=", "N", "|", "M", "<", "<", "i", ";", "return", "N", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "N", "=", "0", ";", "int", "M", "=", "<NUM_LIT>", ";", "InsertMintoNiTojBits", "imn", "=", "new", "InsertMintoNiTojBits", "(", ")", ";", "int", "result", "=", "imn", ".", "insert", "(", "M", ",", "N", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:8>", ")", ";", "System", ".", "out", ".", "println", "(", "result", ")", ";", "}", "</s>"]
["<s>", "void", "useByteAsBoolean", "(", "boolean", "[", "]", "visited", ")", "{", "byte", "[", "]", "bytes", "=", "new", "byte", "[", "(", "int", ")", "(", "Math", ".", "ceil", "(", "visited", ".", "length", "*", "<NUM_LIT:1.0>", "/", "<NUM_LIT:8>", ")", ")", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "visited", ".", "length", ";", "i", "+", "+", ")", "{", "int", "row", "=", "i", "/", "<NUM_LIT:8>", ";", "int", "col", "=", "i", "%", "<NUM_LIT:8>", ";", "if", "(", "visited", "[", "i", "]", ")", "{", "bytes", "[", "row", "]", "=", "(", "byte", ")", "(", "bytes", "[", "row", "]", "|", "(", "byte", ")", "(", "1", "<", "<", "col", ")", ")", ";", "}", "else", "{", "bytes", "[", "row", "]", "=", "(", "byte", ")", "(", "bytes", "[", "row", "]", "&", "~", "(", "byte", ")", "(", "1", "<", "<", "col", ")", ")", ";", "}", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "visited", ".", "length", ";", "i", "+", "+", ")", "{", "int", "row", "=", "i", "/", "<NUM_LIT:8>", ";", "int", "col", "=", "i", "%", "<NUM_LIT:8>", ";", "if", "(", "(", "bytes", "[", "row", "]", "&", "1", "<", "<", "col", ")", ">", "=", "1", ")", "{", "System", ".", "out", ".", "print", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "else", "{", "System", ".", "out", ".", "print", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "boolean", "visited", "[", "]", "=", "{", "true", ",", "false", ",", "true", ",", "true", ",", "false", "}", ";", "ByteAsStorage", "bas", "=", "new", "ByteAsStorage", "(", ")", ";", "bas", ".", "useByteAsBoolean", "(", "visited", ")", ";", "}", "</s>"]
["<s>", "public", "int", "winner", "(", "int", "n", ")", "{", "int", "sum", "=", "0", ";", "int", "i", "=", "1", ";", "int", "result", "=", "0", ";", "while", "(", "i", "<", "=", "n", ")", "{", "i", "=", "i", "*", "<NUM_LIT:2>", ";", "}", "i", "=", "i", "/", "<NUM_LIT:2>", ";", "while", "(", "i", ">", "0", ")", "{", "if", "(", "(", "n", "&", "i", ")", "!", "=", "0", ")", "{", "sum", "+", "+", ";", "}", "else", "{", "result", "+", "=", "sum", ";", "}", "i", "=", "i", "/", "<NUM_LIT:2>", ";", "}", "if", "(", "result", "%", "<NUM_LIT:2>", "=", "=", "0", ")", "{", "return", "<NUM_LIT:2>", ";", "}", "else", "{", "return", "1", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "WinnerWithBeautifulNumber", "wwb", "=", "new", "WinnerWithBeautifulNumber", "(", ")", ";", "System", ".", "out", ".", "println", "(", "wwb", ".", "winner", "(", "<NUM_LIT>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "wwb", ".", "winner", "(", "<NUM_LIT:10>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "getNumberOccurringOnce", "(", "int", "arr", "[", "]", ")", "{", "int", "result", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "<NUM_LIT:32>", ";", "i", "+", "+", ")", "{", "int", "sum", "=", "0", ";", "for", "(", "int", "j", "=", "0", ";", "j", "<", "arr", ".", "length", ";", "j", "+", "+", ")", "{", "sum", "+", "=", "(", "arr", "[", "j", "]", "&", "1", "<", "<", "i", ")", ">", ">", "i", ";", "}", "result", "=", "result", "|", "(", "sum", "%", "<NUM_LIT:3>", ")", "<", "<", "i", ";", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "FindNumberOccurringOnceOtherNumbers3Times", "fno", "=", "new", "FindNumberOccurringOnceOtherNumbers3Times", "(", ")", ";", "int", "arr", "[", "]", "=", "{", "1", ",", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ",", "1", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:2>", "}", ";", "System", ".", "out", ".", "println", "(", "fno", ".", "getNumberOccurringOnce", "(", "arr", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "nextHigher", "(", "int", "n", ")", "{", "int", "i", "=", "1", ";", "int", "first1", "=", "0", ";", "while", "(", "(", "n", "&", "i", ")", "=", "=", "0", ")", "{", "i", "=", "i", "<", "<", "1", ";", "first1", "+", "+", ";", "}", "int", "count1s", "=", "0", ";", "while", "(", "(", "n", "&", "i", ")", ">", "0", ")", "{", "i", "=", "i", "<", "<", "1", ";", "count1s", "+", "+", ";", "}", "count1s", "-", "-", ";", "n", "=", "n", "^", "i", ";", "n", "=", "n", "^", "(", "i", ">", ">", "1", ")", ";", "int", "mask", "=", "~", "(", "1", "<", "<", "(", "first1", "+", "count1s", ")", "-", "1", ")", ";", "n", "=", "mask", "&", "n", ";", "n", "=", "n", "|", "(", "(", "1", "<", "<", "count1s", ")", "-", "1", ")", ";", "return", "n", ";", "}", "</s>"]
["<s>", "public", "int", "nextLower", "(", "int", "n", ")", "{", "if", "(", "n", "=", "=", "0", ")", "{", "return", "0", ";", "}", "int", "i", "=", "1", ";", "int", "first0", "=", "0", ";", "while", "(", "(", "n", "&", "i", ")", ">", "0", ")", "{", "i", "=", "i", "<", "<", "1", ";", "first0", "+", "+", ";", "}", "int", "count0s", "=", "0", ";", "while", "(", "(", "n", "&", "i", ")", "=", "=", "0", ")", "{", "i", "=", "i", "<", "<", "1", ";", "count0s", "+", "+", ";", "}", "count0s", "-", "-", ";", "n", "=", "n", "^", "i", ";", "n", "=", "n", "^", "(", "i", ">", ">", "1", ")", ";", "int", "mask", "=", "(", "1", "<", "<", "first0", ")", "-", "1", ";", "n", "=", "n", "^", "mask", ";", "n", "=", "n", "|", "(", "mask", "<", "<", "count0s", ")", ";", "return", "n", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "NextHigherAndNextLowerWithSameNumberBits", "nhn", "=", "new", "NextHigherAndNextLowerWithSameNumberBits", "(", ")", ";", "System", ".", "out", ".", "println", "(", "nhn", ".", "nextHigher", "(", "<NUM_LIT>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "nhn", ".", "nextLower", "(", "<NUM_LIT:10>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "swap", "(", "int", "num", ",", "int", "i", ",", "int", "j", ")", "{", "int", "t1", "=", "(", "num", "&", "1", "<", "<", "j", ")", "!", "=", "0", "?", "1", ":", "0", ";", "int", "t2", "=", "(", "num", "&", "1", "<", "<", "i", ")", "!", "=", "0", "?", "1", ":", "0", ";", "num", "=", "num", "&", "~", "(", "1", "<", "<", "j", ")", ";", "num", "=", "num", "&", "~", "(", "1", "<", "<", "i", ")", ";", "num", "=", "num", "|", "t1", "<", "<", "i", ";", "num", "=", "num", "|", "t2", "<", "<", "j", ";", "return", "num", ";", "}", "</s>"]
["<s>", "public", "int", "betterSwap", "(", "int", "num", ",", "int", "i", ",", "int", "j", ")", "{", "if", "(", "(", "(", "num", "&", "1", "<", "<", "i", ")", ">", ">", "i", "^", "(", "num", "&", "1", "<", "<", "j", ")", ">", ">", "j", ")", "!", "=", "0", ")", "{", "num", "^", "=", "1", "<", "<", "i", ";", "num", "^", "=", "1", "<", "<", "j", ";", "}", "return", "num", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "SwapTwoBits", "stb", "=", "new", "SwapTwoBits", "(", ")", ";", "System", ".", "out", ".", "println", "(", "stb", ".", "betterSwap", "(", "<NUM_LIT>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:4>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "CountBits", "(", ")", "{", "preCalculate", "(", ")", ";", "}", "</s>"]
["<s>", "public", "int", "countBits", "(", "int", "num", ")", "{", "int", "count", "=", "0", ";", "while", "(", "num", ">", "0", ")", "{", "num", "&", "=", "num", "-", "1", ";", "count", "+", "+", ";", "}", "return", "count", ";", "}", "</s>"]
["<s>", "void", "preCalculate", "(", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "<NUM_LIT>", ";", "i", "+", "+", ")", "{", "count", "[", "i", "]", "=", "countBits", "(", "i", ")", ";", "}", "}", "</s>"]
["<s>", "public", "int", "countBitsFaster", "(", "int", "num", ")", "{", "int", "total", "=", "0", ";", "int", "mask", "=", "(", "1", "<", "<", "<NUM_LIT:8>", ")", "-", "1", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "<NUM_LIT:4>", ";", "i", "+", "+", ")", "{", "total", "+", "=", "count", "[", "num", "&", "mask", "]", ";", "num", "=", "num", ">", ">", ">", "<NUM_LIT:8>", ";", "}", "return", "total", ";", "}", "</s>"]
["<s>", "public", "int", "countBitsEvenFaster", "(", "int", "x", ")", "{", "x", "=", "x", "-", "(", "(", "x", ">", ">", "1", ")", "&", "<NUM_LIT>", ")", ";", "x", "=", "(", "x", "&", "<NUM_LIT>", ")", "+", "(", "(", "x", ">", ">", "<NUM_LIT:2>", ")", "&", "<NUM_LIT>", ")", ";", "x", "=", "x", "+", "(", "x", ">", ">", "<NUM_LIT:4>", ")", ";", "x", "&", "=", "<NUM_LIT>", ";", "return", "(", "x", "*", "<NUM_LIT>", ")", ">", ">", "<NUM_LIT:24>", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "CountBits", "cb", "=", "new", "CountBits", "(", ")", ";", "System", ".", "out", ".", "println", "(", "cb", ".", "countBits", "(", "<NUM_LIT>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "cb", ".", "countBitsFaster", "(", "<NUM_LIT>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "cb", ".", "countBitsEvenFaster", "(", "<NUM_LIT>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "number", "(", "int", "m", ",", "int", "n", ")", "{", "int", "r", "=", "n", "^", "m", ";", "int", "count", "=", "0", ";", "while", "(", "r", "!", "=", "0", ")", "{", "r", "=", "r", "&", "(", "r", "-", "1", ")", ";", "count", "+", "+", ";", "}", "return", "count", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "NumberOfBitsFlipToConvertNToM", "nb", "=", "new", "NumberOfBitsFlipToConvertNToM", "(", ")", ";", "System", ".", "out", ".", "println", "(", "nb", ".", "number", "(", "<NUM_LIT:31>", ",", "<NUM_LIT>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "Pair", "findMissingAndRepeated", "(", "int", "arr", "[", "]", ",", "int", "n", ")", "{", "int", "xor", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "xor", "=", "xor", "^", "arr", "[", "i", "]", ";", "}", "for", "(", "int", "i", "=", "1", ";", "i", "<", "=", "n", ";", "i", "+", "+", ")", "{", "xor", "=", "xor", "^", "i", ";", "}", "xor", "=", "xor", "&", "~", "(", "xor", "-", "1", ")", ";", "int", "set1", "=", "0", ";", "int", "set2", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "(", "arr", "[", "i", "]", "&", "xor", ")", ">", "0", ")", "{", "set1", "^", "=", "arr", "[", "i", "]", ";", "}", "else", "{", "set2", "^", "=", "arr", "[", "i", "]", ";", "}", "}", "Pair", "p", "=", "new", "Pair", "(", ")", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "=", "n", ";", "i", "+", "+", ")", "{", "if", "(", "(", "i", "&", "xor", ")", ">", "0", ")", "{", "set1", "^", "=", "i", ";", "}", "else", "{", "set2", "^", "=", "i", ";", "}", "}", "p", ".", "x", "=", "set1", ";", "p", ".", "y", "=", "set2", ";", "return", "p", ";", "}", "</s>"]
["<s>", "public", "Pair", "findTwoMissingNumber", "(", "int", "arr", "[", "]", ",", "int", "n", ")", "{", "int", "xor", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "xor", "=", "xor", "^", "arr", "[", "i", "]", ";", "}", "for", "(", "int", "i", "=", "1", ";", "i", "<", "=", "n", ";", "i", "+", "+", ")", "{", "xor", "=", "xor", "^", "i", ";", "}", "xor", "=", "xor", "&", "~", "(", "xor", "-", "1", ")", ";", "int", "set1", "=", "0", ";", "int", "set2", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "(", "arr", "[", "i", "]", "&", "xor", ")", ">", "0", ")", "{", "set1", "^", "=", "arr", "[", "i", "]", ";", "}", "else", "{", "set2", "^", "=", "arr", "[", "i", "]", ";", "}", "}", "Pair", "p", "=", "new", "Pair", "(", ")", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "=", "n", ";", "i", "+", "+", ")", "{", "if", "(", "(", "i", "&", "xor", ")", ">", "0", ")", "{", "set1", "^", "=", "i", ";", "}", "else", "{", "set2", "^", "=", "i", ";", "}", "}", "p", ".", "x", "=", "set1", ";", "p", ".", "y", "=", "set2", ";", "return", "p", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "MissingNumbers", "mn", "=", "new", "MissingNumbers", "(", ")", ";", "int", "arr", "[", "]", "=", "{", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:5>", "}", ";", "Pair", "p", "=", "mn", ".", "findMissingAndRepeated", "(", "arr", ",", "<NUM_LIT:5>", ")", ";", "System", ".", "out", ".", "println", "(", "p", ".", "x", "+", "\"", "\"", "+", "p", ".", "y", ")", ";", "int", "arr1", "[", "]", "=", "{", "1", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:6>", "}", ";", "p", "=", "mn", ".", "findMissingAndRepeated", "(", "arr1", ",", "<NUM_LIT:6>", ")", ";", "System", ".", "out", ".", "println", "(", "p", ".", "x", "+", "\"", "\"", "+", "p", ".", "y", ")", ";", "}", "</s>"]
["<s>", "public", "int", "add", "(", "char", "[", "]", "num1", ",", "char", "[", "]", "num2", ")", "{", "int", "index1", "=", "num1", ".", "length", "-", "1", ";", "int", "index2", "=", "num2", ".", "length", "-", "1", ";", "int", "carry", "=", "0", ";", "int", "result", "=", "0", ";", "int", "index", "=", "0", ";", "while", "(", "index1", ">", "=", "0", "&", "&", "index2", ">", "=", "0", ")", "{", "int", "r1", "=", "num1", "[", "index1", "]", "-", "<CHAR_LIT:0>", ";", "int", "r2", "=", "num2", "[", "index2", "]", "-", "<CHAR_LIT:0>", ";", "result", "=", "result", "|", "(", "r1", "^", "r2", "^", "carry", ")", "<", "<", "index", ";", "index1", "-", "-", ";", "index2", "-", "-", ";", "index", "+", "+", ";", "carry", "=", "r1", "&", "carry", "|", "r2", "&", "carry", "|", "r1", "&", "r2", ";", "}", "while", "(", "index1", ">", "=", "0", ")", "{", "int", "r1", "=", "num1", "[", "index1", "]", "-", "<CHAR_LIT:0>", ";", "result", "=", "result", "|", "(", "r1", "^", "carry", ")", "<", "<", "index", ";", "index1", "-", "-", ";", "index", "+", "+", ";", "carry", "=", "r1", "&", "carry", ";", "}", "while", "(", "index2", ">", "=", "0", ")", "{", "int", "r2", "=", "num1", "[", "index2", "]", "-", "<CHAR_LIT:0>", ";", "result", "=", "result", "|", "(", "r2", "^", "carry", ")", "<", "<", "index", ";", "index2", "-", "-", ";", "index", "+", "+", ";", "carry", "=", "r2", "&", "carry", ";", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "int", "addTwoNumbersWithoutArithmeticOperator", "(", "int", "num1", ",", "int", "num2", ")", "{", "int", "carry", "=", "0", ";", "int", "result", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "=", "<NUM_LIT:31>", ";", "i", "+", "+", ")", "{", "int", "r1", "=", "(", "num1", "&", "1", "<", "<", "i", ")", "!", "=", "0", "?", "1", ":", "0", ";", "int", "r2", "=", "(", "num2", "&", "1", "<", "<", "i", ")", "!", "=", "0", "?", "1", ":", "0", ";", "result", "=", "result", "|", "(", "r1", "^", "r2", "^", "carry", ")", "<", "<", "i", ";", "if", "(", "(", "r1", "&", "r2", ")", "!", "=", "0", "|", "|", "(", "r1", "&", "carry", ")", "!", "=", "0", "|", "|", "(", "r2", "&", "carry", ")", "!", "=", "0", ")", "{", "carry", "=", "1", ";", "}", "else", "{", "carry", "=", "0", ";", "}", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "int", "addTwoNumbersWithoutArithmeticOperatorFaster", "(", "int", "num1", ",", "int", "num2", ")", "{", "while", "(", "num2", "!", "=", "0", ")", "{", "int", "carry", "=", "num1", "&", "num2", ";", "num1", "=", "num1", "^", "num2", ";", "num2", "=", "carry", "<", "<", "1", ";", "}", "return", "num1", ";", "}", "</s>"]
["<s>", "public", "void", "printResult", "(", "int", "num", ")", "{", "for", "(", "int", "i", "=", "1", "<", "<", "<NUM_LIT:31>", ";", "i", "!", "=", "0", ";", "i", "=", "i", ">", ">", ">", "1", ")", "{", "if", "(", "(", "num", "&", "i", ")", ">", "0", ")", "{", "System", ".", "out", ".", "print", "(", "\"", "<STR_LIT:1>", "\"", ")", ";", "}", "else", "{", "System", ".", "out", ".", "print", "(", "\"", "<STR_LIT:0>", "\"", ")", ";", "}", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "AddTwoNumberInBinaryRepresentation", "anp", "=", "new", "AddTwoNumberInBinaryRepresentation", "(", ")", ";", "char", "num1", "[", "]", "=", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ";", "char", "num2", "[", "]", "=", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ";", "int", "result", "=", "anp", ".", "add", "(", "num1", ",", "num2", ")", ";", "System", ".", "out", ".", "println", "(", "anp", ".", "addTwoNumbersWithoutArithmeticOperator", "(", "<NUM_LIT>", ",", "<NUM_LIT>", ")", ")", ";", "System", ".", "out", ".", "println", "(", "anp", ".", "addTwoNumbersWithoutArithmeticOperatorFaster", "(", "<NUM_LIT>", ",", "<NUM_LIT>", ")", ")", ";", "anp", ".", "printResult", "(", "result", ")", ";", "}", "</s>"]
["<s>", "public", "byte", "rotateLeft", "(", "byte", "num", ",", "int", "d", ")", "{", "return", "(", "byte", ")", "(", "(", "num", "<", "<", "d", ")", "|", "(", "num", ">", ">", ">", "(", "<NUM_LIT:8>", "-", "d", ")", ")", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "BitRotation", "br", "=", "new", "BitRotation", "(", ")", ";", "System", ".", "out", ".", "println", "(", "br", ".", "rotateLeft", "(", "(", "byte", ")", "<NUM_LIT>", ",", "<NUM_LIT:2>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "void", "insert", "(", "String", "data", ")", "{", "Node", "root", "=", "insert", "(", "this", ".", "root", ",", "data", ",", "0", ")", ";", "this", ".", "root", "=", "root", ";", "}", "</s>"]
["<s>", "public", "boolean", "search", "(", "String", "data", ")", "{", "return", "search", "(", "root", ",", "data", ",", "0", ")", ";", "}", "</s>"]
["<s>", "private", "boolean", "search", "(", "Node", "root", ",", "String", "data", ",", "int", "pos", ")", "{", "if", "(", "pos", "=", "=", "data", ".", "length", "(", ")", ")", "{", "return", "true", ";", "}", "if", "(", "root", "=", "=", "null", ")", "{", "return", "false", ";", "}", "if", "(", "root", ".", "data", "=", "=", "data", ".", "charAt", "(", "pos", ")", ")", "{", "boolean", "result", "=", "search", "(", "root", ".", "eq", ",", "data", ",", "pos", "+", "1", ")", ";", "if", "(", "pos", "=", "=", "data", ".", "length", "(", ")", "-", "1", ")", "{", "return", "result", "&", "&", "root", ".", "isLeaf", ";", "}", "return", "result", ";", "}", "else", "if", "(", "root", ".", "data", "<", "data", ".", "charAt", "(", "pos", ")", ")", "{", "return", "search", "(", "root", ".", "right", ",", "data", ",", "pos", ")", ";", "}", "else", "{", "return", "search", "(", "root", ".", "left", ",", "data", ",", "pos", ")", ";", "}", "}", "</s>"]
["<s>", "private", "Node", "insert", "(", "Node", "root", ",", "String", "data", ",", "int", "pos", ")", "{", "if", "(", "pos", "=", "=", "data", ".", "length", "(", ")", ")", "{", "return", "root", ";", "}", "if", "(", "root", "=", "=", "null", ")", "{", "root", "=", "new", "Node", "(", ")", ";", "root", ".", "data", "=", "data", ".", "charAt", "(", "pos", ")", ";", "root", ".", "eq", "=", "insert", "(", "root", ".", "eq", ",", "data", ",", "pos", "+", "1", ")", ";", "if", "(", "pos", "=", "=", "(", "data", ".", "length", "(", ")", "-", "1", ")", ")", "{", "root", ".", "isLeaf", "=", "true", ";", "}", "}", "else", "{", "if", "(", "root", ".", "data", "=", "=", "data", ".", "charAt", "(", "pos", ")", ")", "{", "root", ".", "eq", "=", "insert", "(", "root", ".", "eq", ",", "data", ",", "pos", "+", "1", ")", ";", "if", "(", "pos", "=", "=", "(", "data", ".", "length", "(", ")", "-", "1", ")", ")", "{", "root", ".", "isLeaf", "=", "true", ";", "}", "}", "else", "if", "(", "root", ".", "data", "<", "data", ".", "charAt", "(", "pos", ")", ")", "{", "root", ".", "right", "=", "insert", "(", "root", ".", "right", ",", "data", ",", "pos", ")", ";", "}", "else", "{", "root", ".", "left", "=", "insert", "(", "root", ".", "left", ",", "data", ",", "pos", ")", ";", "}", "}", "return", "root", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "TernaryTree", "tt", "=", "new", "TernaryTree", "(", ")", ";", "tt", ".", "insert", "(", "\"", "<STR_LIT>", "\"", ")", ";", "tt", ".", "insert", "(", "\"", "<STR_LIT>", "\"", ")", ";", "tt", ".", "insert", "(", "\"", "<STR_LIT>", "\"", ")", ";", "tt", ".", "insert", "(", "\"", "<STR_LIT>", "\"", ")", ";", "tt", ".", "insert", "(", "\"", "<STR_LIT>", "\"", ")", ";", "tt", ".", "insert", "(", "\"", "<STR_LIT>", "\"", ")", ";", "tt", ".", "insert", "(", "\"", "<STR_LIT>", "\"", ")", ";", "tt", ".", "insert", "(", "\"", "<STR_LIT>", "\"", ")", ";", "System", ".", "out", ".", "println", "(", "tt", ".", "search", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "System", ".", "out", ".", "println", "(", "tt", ".", "search", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "System", ".", "out", ".", "println", "(", "tt", ".", "search", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "System", ".", "out", ".", "println", "(", "tt", ".", "search", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "System", ".", "out", ".", "println", "(", "tt", ".", "search", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "}", "</s>"]
["<s>", "public", "SuffixSort", "(", "char", "str", "[", "]", ")", "{", "this", ".", "str", "=", "str", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "int", "compare", "(", "Integer", "i1", ",", "Integer", "i2", ")", "{", "while", "(", "i1", "<", "str", ".", "length", "&", "&", "i2", "<", "str", ".", "length", "&", "&", "str", "[", "i1", "]", "=", "=", "str", "[", "i2", "]", ")", "{", "i1", "+", "+", ";", "i2", "+", "+", ";", "}", "if", "(", "i2", "=", "=", "str", ".", "length", "&", "&", "i1", "=", "=", "str", ".", "length", ")", "{", "return", "0", ";", "}", "else", "if", "(", "i1", "=", "=", "str", ".", "length", ")", "{", "return", "-", "1", ";", "}", "else", "if", "(", "i2", "=", "=", "str", ".", "length", ")", "{", "return", "1", ";", "}", "else", "return", "str", "[", "i1", "]", "<", "str", "[", "i2", "]", "?", "-", "1", ":", "1", ";", "}", "</s>"]
["<s>", "public", "Integer", "[", "]", "createSuffixArray", "(", "char", "str", "[", "]", ")", "{", "SuffixSort", "sort", "=", "new", "SuffixSort", "(", "str", ")", ";", "Integer", "suffix", "[", "]", "=", "new", "Integer", "[", "str", ".", "length", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "suffix", ".", "length", ";", "i", "+", "+", ")", "{", "suffix", "[", "i", "]", "=", "i", ";", "}", "Arrays", ".", "sort", "(", "suffix", ",", "sort", ")", ";", "return", "suffix", ";", "}", "</s>"]
["<s>", "private", "int", "stringCompare", "(", "char", "str", "[", "]", ",", "char", "subString", "[", "]", ",", "int", "pos", ")", "{", "int", "i", "=", "0", ";", "while", "(", "pos", "<", "str", ".", "length", "&", "&", "i", "<", "subString", ".", "length", "&", "&", "str", "[", "pos", "]", "=", "=", "subString", "[", "i", "]", ")", "{", "pos", "+", "+", ";", "i", "+", "+", ";", "}", "if", "(", "i", "=", "=", "subString", ".", "length", ")", "{", "return", "0", ";", "}", "if", "(", "pos", "=", "=", "str", ".", "length", ")", "{", "return", "-", "1", ";", "}", "return", "str", "[", "pos", "]", "<", "subString", "[", "i", "]", "?", "-", "1", ":", "1", ";", "}", "</s>"]
["<s>", "public", "int", "subStringSearch", "(", "char", "str", "[", "]", ",", "char", "subString", "[", "]", ",", "Integer", "suffix", "[", "]", ")", "{", "int", "low", "=", "0", ";", "int", "high", "=", "suffix", ".", "length", "-", "1", ";", "while", "(", "low", "<", "=", "high", ")", "{", "int", "mid", "=", "(", "low", "+", "high", ")", "/", "<NUM_LIT:2>", ";", "int", "result", "=", "stringCompare", "(", "str", ",", "subString", ",", "suffix", "[", "mid", "]", ")", ";", "if", "(", "result", "=", "=", "0", ")", "{", "return", "suffix", "[", "mid", "]", ";", "}", "if", "(", "result", ">", "0", ")", "{", "high", "=", "mid", "-", "1", ";", "}", "else", "{", "low", "=", "mid", "+", "1", ";", "}", "}", "return", "-", "1", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "SuffixArray", "suffix", "=", "new", "SuffixArray", "(", ")", ";", "String", "str", "=", "\"", "<STR_LIT>", "\"", ";", "Integer", "result", "[", "]", "=", "suffix", ".", "createSuffixArray", "(", "str", ".", "toCharArray", "(", ")", ")", ";", "System", ".", "out", ".", "print", "(", "suffix", ".", "subStringSearch", "(", "str", ".", "toCharArray", "(", ")", ",", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ",", "result", ")", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "SuffixTree", "st", "=", "new", "SuffixTree", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ";", "st", ".", "build", "(", ")", ";", "st", ".", "dfsTraversal", "(", ")", ";", "System", ".", "out", ".", "println", "(", "st", ".", "validate", "(", ")", ")", ";", "}", "</s>"]
["<s>", "public", "SuffixTree", "(", "char", "input", "[", "]", ")", "{", "this", ".", "input", "=", "new", "char", "[", "input", ".", "length", "+", "1", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "this", ".", "input", "[", "i", "]", "=", "input", "[", "i", "]", ";", "}", "this", ".", "input", "[", "input", ".", "length", "]", "=", "UNIQUE_CHAR", ";", "}", "</s>"]
["<s>", "public", "void", "build", "(", ")", "{", "root", "=", "SuffixNode", ".", "createNode", "(", "1", ",", "new", "End", "(", "0", ")", ")", ";", "root", ".", "index", "=", "-", "1", ";", "active", "=", "new", "Active", "(", "root", ")", ";", "this", ".", "end", "=", "new", "End", "(", "-", "1", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "startPhase", "(", "i", ")", ";", "}", "setIndexUsingDfs", "(", "root", ",", "0", ",", "input", ".", "length", ")", ";", "}", "</s>"]
["<s>", "private", "void", "startPhase", "(", "int", "i", ")", "{", "SuffixNode", "lastCreatedInternalNode", "=", "null", ";", "end", ".", "end", "+", "+", ";", "remainingSuffixCount", "+", "+", ";", "while", "(", "remainingSuffixCount", ">", "0", ")", "{", "if", "(", "active", ".", "activeLength", "=", "=", "0", ")", "{", "if", "(", "selectNode", "(", "i", ")", "!", "=", "null", ")", "{", "active", ".", "activeEdge", "=", "selectNode", "(", "i", ")", ".", "start", ";", "active", ".", "activeLength", "+", "+", ";", "break", ";", "}", "else", "{", "root", ".", "child", "[", "input", "[", "i", "]", "]", "=", "SuffixNode", ".", "createNode", "(", "i", ",", "end", ")", ";", "remainingSuffixCount", "-", "-", ";", "}", "}", "else", "{", "try", "{", "char", "ch", "=", "nextChar", "(", "i", ")", ";", "if", "(", "ch", "=", "=", "input", "[", "i", "]", ")", "{", "if", "(", "lastCreatedInternalNode", "!", "=", "null", ")", "{", "lastCreatedInternalNode", ".", "suffixLink", "=", "selectNode", "(", ")", ";", "}", "walkDown", "(", "i", ")", ";", "break", ";", "}", "else", "{", "SuffixNode", "node", "=", "selectNode", "(", ")", ";", "int", "oldStart", "=", "node", ".", "start", ";", "node", ".", "start", "=", "node", ".", "start", "+", "active", ".", "activeLength", ";", "SuffixNode", "newInternalNode", "=", "SuffixNode", ".", "createNode", "(", "oldStart", ",", "new", "End", "(", "oldStart", "+", "active", ".", "activeLength", "-", "1", ")", ")", ";", "SuffixNode", "newLeafNode", "=", "SuffixNode", ".", "createNode", "(", "i", ",", "this", ".", "end", ")", ";", "newInternalNode", ".", "child", "[", "input", "[", "newInternalNode", ".", "start", "+", "active", ".", "activeLength", "]", "]", "=", "node", ";", "newInternalNode", ".", "child", "[", "input", "[", "i", "]", "]", "=", "newLeafNode", ";", "newInternalNode", ".", "index", "=", "-", "1", ";", "active", ".", "activeNode", ".", "child", "[", "input", "[", "newInternalNode", ".", "start", "]", "]", "=", "newInternalNode", ";", "if", "(", "lastCreatedInternalNode", "!", "=", "null", ")", "{", "lastCreatedInternalNode", ".", "suffixLink", "=", "newInternalNode", ";", "}", "lastCreatedInternalNode", "=", "newInternalNode", ";", "newInternalNode", ".", "suffixLink", "=", "root", ";", "if", "(", "active", ".", "activeNode", "!", "=", "root", ")", "{", "active", ".", "activeNode", "=", "active", ".", "activeNode", ".", "suffixLink", ";", "}", "else", "{", "active", ".", "activeEdge", "=", "active", ".", "activeEdge", "+", "1", ";", "active", ".", "activeLength", "-", "-", ";", "}", "remainingSuffixCount", "-", "-", ";", "}", "}", "catch", "(", "EndOfPathException", "e", ")", "{", "SuffixNode", "node", "=", "selectNode", "(", ")", ";", "node", ".", "child", "[", "input", "[", "i", "]", "]", "=", "SuffixNode", ".", "createNode", "(", "i", ",", "end", ")", ";", "if", "(", "active", ".", "activeNode", "!", "=", "root", ")", "{", "active", ".", "activeNode", "=", "active", ".", "activeNode", ".", "suffixLink", ";", "}", "else", "{", "active", ".", "activeEdge", "=", "active", ".", "activeEdge", "+", "1", ";", "active", ".", "activeLength", "-", "-", ";", "}", "remainingSuffixCount", "-", "-", ";", "}", "}", "}", "}", "</s>"]
["<s>", "private", "void", "walkDown", "(", "int", "index", ")", "{", "SuffixNode", "node", "=", "selectNode", "(", ")", ";", "if", "(", "diff", "(", "node", ")", "<", "active", ".", "activeLength", ")", "{", "active", ".", "activeNode", "=", "node", ";", "active", ".", "activeLength", "=", "active", ".", "activeLength", "-", "diff", "(", "node", ")", ";", "active", ".", "activeEdge", "=", "node", ".", "child", "[", "input", "[", "index", "]", "]", ".", "start", ";", "}", "else", "{", "active", ".", "activeLength", "+", "+", ";", "}", "}", "</s>"]
["<s>", "private", "char", "nextChar", "(", "int", "i", ")", "throws", "EndOfPathException", "{", "SuffixNode", "node", "=", "selectNode", "(", ")", ";", "if", "(", "diff", "(", "node", ")", ">", "=", "active", ".", "activeLength", ")", "{", "return", "input", "[", "active", ".", "activeNode", ".", "child", "[", "input", "[", "active", ".", "activeEdge", "]", "]", ".", "start", "+", "active", ".", "activeLength", "]", ";", "}", "if", "(", "diff", "(", "node", ")", "+", "1", "=", "=", "active", ".", "activeLength", ")", "{", "if", "(", "node", ".", "child", "[", "input", "[", "i", "]", "]", "!", "=", "null", ")", "{", "return", "input", "[", "i", "]", ";", "}", "}", "else", "{", "active", ".", "activeNode", "=", "node", ";", "active", ".", "activeLength", "=", "active", ".", "activeLength", "-", "diff", "(", "node", ")", "-", "1", ";", "active", ".", "activeEdge", "=", "active", ".", "activeEdge", "+", "diff", "(", "node", ")", "+", "1", ";", "return", "input", "[", "active", ".", "activeNode", ".", "child", "[", "input", "[", "active", ".", "activeEdge", "]", "]", ".", "start", "+", "active", ".", "activeLength", "]", ";", "}", "throw", "new", "EndOfPathException", "(", ")", ";", "}", "</s>"]
["<s>", "private", "SuffixNode", "selectNode", "(", ")", "{", "return", "active", ".", "activeNode", ".", "child", "[", "input", "[", "active", ".", "activeEdge", "]", "]", ";", "}", "</s>"]
["<s>", "private", "SuffixNode", "selectNode", "(", "int", "index", ")", "{", "return", "active", ".", "activeNode", ".", "child", "[", "input", "[", "index", "]", "]", ";", "}", "</s>"]
["<s>", "private", "int", "diff", "(", "SuffixNode", "node", ")", "{", "return", "node", ".", "end", ".", "end", "-", "node", ".", "start", ";", "}", "</s>"]
["<s>", "private", "void", "setIndexUsingDfs", "(", "SuffixNode", "root", ",", "int", "val", ",", "int", "size", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", ";", "}", "val", "+", "=", "root", ".", "end", ".", "end", "-", "root", ".", "start", "+", "1", ";", "if", "(", "root", ".", "index", "!", "=", "-", "1", ")", "{", "root", ".", "index", "=", "size", "-", "val", ";", "return", ";", "}", "for", "(", "SuffixNode", "node", ":", "root", ".", "child", ")", "{", "setIndexUsingDfs", "(", "node", ",", "val", ",", "size", ")", ";", "}", "}", "</s>"]
["<s>", "public", "void", "dfsTraversal", "(", ")", "{", "List", "<", "Character", ">", "result", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "for", "(", "SuffixNode", "node", ":", "root", ".", "child", ")", "{", "dfsTraversal", "(", "node", ",", "result", ")", ";", "}", "}", "</s>"]
["<s>", "private", "void", "dfsTraversal", "(", "SuffixNode", "root", ",", "List", "<", "Character", ">", "result", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", ";", "}", "if", "(", "root", ".", "index", "!", "=", "-", "1", ")", "{", "for", "(", "int", "i", "=", "root", ".", "start", ";", "i", "<", "=", "root", ".", "end", ".", "end", ";", "i", "+", "+", ")", "{", "result", ".", "add", "(", "input", "[", "i", "]", ")", ";", "}", "result", ".", "stream", "(", ")", ".", "forEach", "(", "System", ".", "out", ":", ":", "print", ")", ";", "System", ".", "out", ".", "println", "(", "\"", "\"", "+", "root", ".", "index", ")", ";", "for", "(", "int", "i", "=", "root", ".", "start", ";", "i", "<", "=", "root", ".", "end", ".", "end", ";", "i", "+", "+", ")", "{", "result", ".", "remove", "(", "result", ".", "size", "(", ")", "-", "1", ")", ";", "}", "return", ";", "}", "for", "(", "int", "i", "=", "root", ".", "start", ";", "i", "<", "=", "root", ".", "end", ".", "end", ";", "i", "+", "+", ")", "{", "result", ".", "add", "(", "input", "[", "i", "]", ")", ";", "}", "for", "(", "SuffixNode", "node", ":", "root", ".", "child", ")", "{", "dfsTraversal", "(", "node", ",", "result", ")", ";", "}", "for", "(", "int", "i", "=", "root", ".", "start", ";", "i", "<", "=", "root", ".", "end", ".", "end", ";", "i", "+", "+", ")", "{", "result", ".", "remove", "(", "result", ".", "size", "(", ")", "-", "1", ")", ";", "}", "}", "</s>"]
["<s>", "private", "boolean", "validate", "(", "SuffixNode", "root", ",", "char", "[", "]", "input", ",", "int", "index", ",", "int", "curr", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", "+", "curr", "+", "\"", "<STR_LIT>", "\"", "+", "index", ")", ";", "return", "false", ";", "}", "if", "(", "root", ".", "index", "!", "=", "-", "1", ")", "{", "if", "(", "root", ".", "index", "!", "=", "index", ")", "{", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", "+", "curr", "+", "\"", "<STR_LIT>", "\"", "+", "index", ")", ";", "return", "false", ";", "}", "else", "{", "return", "true", ";", "}", "}", "if", "(", "curr", ">", "=", "input", ".", "length", ")", "{", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", "+", "curr", "+", "\"", "<STR_LIT>", "\"", "+", "index", ")", ";", "return", "false", ";", "}", "SuffixNode", "node", "=", "root", ".", "child", "[", "input", "[", "curr", "]", "]", ";", "if", "(", "node", "=", "=", "null", ")", "{", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", "+", "curr", "+", "\"", "<STR_LIT>", "\"", "+", "index", ")", ";", "return", "false", ";", "}", "int", "j", "=", "0", ";", "for", "(", "int", "i", "=", "node", ".", "start", ";", "i", "<", "=", "node", ".", "end", ".", "end", ";", "i", "+", "+", ")", "{", "if", "(", "input", "[", "curr", "+", "j", "]", "!", "=", "input", "[", "i", "]", ")", "{", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", "+", "input", "[", "curr", "+", "j", "]", "+", "\"", "\"", "+", "input", "[", "i", "]", ")", ";", "return", "false", ";", "}", "j", "+", "+", ";", "}", "curr", "+", "=", "node", ".", "end", ".", "end", "-", "node", ".", "start", "+", "1", ";", "return", "validate", "(", "node", ",", "input", ",", "index", ",", "curr", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "validate", "(", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "this", ".", "input", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "!", "validate", "(", "this", ".", "root", ",", "this", ".", "input", ",", "i", ",", "i", ")", ")", "{", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", ")", ";", "return", "false", ";", "}", "}", "return", "true", ";", "}", "</s>"]
["<s>", "private", "SuffixNode", "(", ")", "{", "}", "</s>"]
["<s>", "public", "static", "SuffixNode", "createNode", "(", "int", "start", ",", "End", "end", ")", "{", "SuffixNode", "node", "=", "new", "SuffixNode", "(", ")", ";", "node", ".", "start", "=", "start", ";", "node", ".", "end", "=", "end", ";", "return", "node", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "String", "toString", "(", ")", "{", "StringBuffer", "buffer", "=", "new", "StringBuffer", "(", ")", ";", "int", "i", "=", "0", ";", "for", "(", "SuffixNode", "node", ":", "child", ")", "{", "if", "(", "node", "!", "=", "null", ")", "{", "buffer", ".", "append", "(", "(", "char", ")", "i", "+", "\"", "\"", ")", ";", "}", "i", "+", "+", ";", "}", "return", "\"", "<STR_LIT>", "\"", "+", "start", "+", "\"", "<STR_LIT:]>", "\"", "+", "\"", "\"", "+", "buffer", ".", "toString", "(", ")", ";", "}", "</s>"]
["<s>", "public", "End", "(", "int", "end", ")", "{", "this", ".", "end", "=", "end", ";", "}", "</s>"]
["<s>", "Active", "(", "SuffixNode", "node", ")", "{", "activeLength", "=", "0", ";", "activeNode", "=", "node", ";", "activeEdge", "=", "-", "1", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "String", "toString", "(", ")", "{", "return", "\"", "<STR_LIT>", "\"", "+", "activeNode", "+", "\"", "<STR_LIT>", "\"", "+", "activeEdge", "+", "\"", "<STR_LIT>", "\"", "+", "activeLength", "+", "\"", "<STR_LIT:]>", "\"", ";", "}", "</s>"]
["<s>", "public", "TrieNode", "(", ")", "{", "}", "</s>"]
["<s>", "public", "Trie", "(", ")", "{", "root", "=", "new", "TrieNode", "(", ")", ";", "}", "</s>"]
["<s>", "public", "void", "insert", "(", "String", "word", ")", "{", "TrieNode", "current", "=", "root", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "word", ".", "length", "(", ")", ";", "i", "+", "+", ")", "{", "char", "ch", "=", "(", "char", ")", "(", "word", ".", "charAt", "(", "i", ")", "-", "<CHAR_LIT:a>", ")", ";", "if", "(", "current", ".", "child", "[", "ch", "]", "=", "=", "null", ")", "{", "current", ".", "child", "[", "ch", "]", "=", "new", "TrieNode", "(", ")", ";", "}", "current", "=", "current", ".", "child", "[", "ch", "]", ";", "}", "current", ".", "isWord", "=", "true", ";", "}", "</s>"]
["<s>", "public", "boolean", "search", "(", "String", "word", ")", "{", "TrieNode", "current", "=", "root", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "word", ".", "length", "(", ")", ";", "i", "+", "+", ")", "{", "char", "ch", "=", "(", "char", ")", "(", "word", ".", "charAt", "(", "i", ")", "-", "<CHAR_LIT:a>", ")", ";", "if", "(", "current", ".", "child", "[", "ch", "]", "=", "=", "null", ")", "{", "return", "false", ";", "}", "current", "=", "current", ".", "child", "[", "ch", "]", ";", "}", "return", "current", ".", "isWord", ";", "}", "</s>"]
["<s>", "public", "boolean", "startsWith", "(", "String", "prefix", ")", "{", "TrieNode", "current", "=", "root", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "prefix", ".", "length", "(", ")", ";", "i", "+", "+", ")", "{", "char", "ch", "=", "(", "char", ")", "(", "prefix", ".", "charAt", "(", "i", ")", "-", "<CHAR_LIT:a>", ")", ";", "if", "(", "current", ".", "child", "[", "ch", "]", "=", "=", "null", ")", "{", "return", "false", ";", "}", "current", "=", "current", ".", "child", "[", "ch", "]", ";", "}", "return", "true", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "Trie", "t", "=", "new", "Trie", "(", ")", ";", "t", ".", "insert", "(", "\"", "<STR_LIT>", "\"", ")", ";", "System", ".", "out", ".", "println", "(", "t", ".", "startsWith", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "middle", "(", "Node", "head", ")", "{", "if", "(", "head", "=", "=", "null", "|", "|", "head", ".", "next", "=", "=", "null", ")", "{", "return", "head", ".", "data", ";", "}", "Node", "slow", "=", "head", ";", "Node", "fast", "=", "head", ".", "next", ";", "while", "(", "fast", "!", "=", "null", "&", "&", "fast", ".", "next", "!", "=", "null", ")", "{", "slow", "=", "slow", ".", "next", ";", "fast", "=", "fast", ".", "next", ".", "next", ";", "}", "return", "slow", ".", "data", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "MiddleElementOfLinkList", "mle", "=", "new", "MiddleElementOfLinkList", "(", ")", ";", "LinkList", "ll", "=", "new", "LinkList", "(", ")", ";", "Node", "head", "=", "null", ";", "head", "=", "ll", ".", "addNode", "(", "1", ",", "head", ")", ";", "System", ".", "out", ".", "println", "(", "mle", ".", "middle", "(", "head", ")", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:2>", ",", "head", ")", ";", "System", ".", "out", ".", "println", "(", "mle", ".", "middle", "(", "head", ")", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:3>", ",", "head", ")", ";", "System", ".", "out", ".", "println", "(", "mle", ".", "middle", "(", "head", ")", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:4>", ",", "head", ")", ";", "System", ".", "out", ".", "println", "(", "mle", ".", "middle", "(", "head", ")", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:5>", ",", "head", ")", ";", "System", ".", "out", ".", "println", "(", "mle", ".", "middle", "(", "head", ")", ")", ";", "}", "</s>"]
["<s>", "public", "Node", "sort", "(", "Node", "head", ")", "{", "Node", "result", "=", "null", ";", "Node", "start", "=", "head", ";", "while", "(", "head", "!", "=", "null", "&", "&", "head", ".", "next", "!", "=", "null", ")", "{", "if", "(", "head", ".", "data", "<", "head", ".", "next", ".", "data", ")", "{", "head", "=", "head", ".", "next", ";", "}", "else", "{", "Node", "temp", "=", "head", ".", "next", ";", "head", ".", "next", "=", "null", ";", "result", "=", "mergeSort", "(", "result", ",", "start", ")", ";", "head", "=", "temp", ";", "start", "=", "temp", ";", "}", "}", "result", "=", "mergeSort", "(", "result", ",", "start", ")", ";", "return", "result", ";", "}", "</s>"]
["<s>", "private", "Node", "mergeSort", "(", "Node", "head1", ",", "Node", "head2", ")", "{", "if", "(", "head1", "=", "=", "null", ")", "{", "return", "head2", ";", "}", "if", "(", "head2", "=", "=", "null", ")", "{", "return", "head1", ";", "}", "if", "(", "head1", ".", "data", "<", "=", "head2", ".", "data", ")", "{", "head1", ".", "next", "=", "mergeSort", "(", "head1", ".", "next", ",", "head2", ")", ";", "return", "head1", ";", "}", "else", "{", "head2", ".", "next", "=", "mergeSort", "(", "head1", ",", "head2", ".", "next", ")", ";", "return", "head2", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "LinkList", "ll", "=", "new", "LinkList", "(", ")", ";", "Node", "head", "=", "null", ";", "head", "=", "ll", ".", "addNode", "(", "1", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:2>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:3>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:7>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:5>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:6>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:11>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:12>", ",", "head", ")", ";", "SortNearlySortedList", "sns", "=", "new", "SortNearlySortedList", "(", ")", ";", "head", "=", "sns", ".", "sort", "(", "head", ")", ";", "ll", ".", "printList", "(", "head", ")", ";", "}", "</s>"]
["<s>", "public", "LRUCacheLeetCode", "(", "int", "capacity", ")", "{", "this", ".", "capacity", "=", "capacity", ";", "this", ".", "map", "=", "new", "MyMap", "(", "capacity", ")", ";", "}", "</s>"]
["<s>", "public", "int", "get", "(", "int", "key", ")", "{", "Integer", "val", "=", "map", ".", "get", "(", "key", ")", ";", "return", "val", "=", "=", "null", "?", "-", "1", ":", "val", ";", "}", "</s>"]
["<s>", "public", "void", "set", "(", "int", "key", ",", "int", "value", ")", "{", "map", ".", "put", "(", "key", ",", "value", ")", ";", "}", "</s>"]
["<s>", "MyMap", "(", "int", "capacity", ")", "{", "super", "(", "capacity", ",", "<NUM_LIT>", ",", "true", ")", ";", "this", ".", "capacity", "=", "capacity", ";", "}", "</s>"]
["<s>", "@", "Override", "protected", "boolean", "removeEldestEntry", "(", "Map", ".", "Entry", "<", "Integer", ",", "Integer", ">", "entry", ")", "{", "return", "size", "(", ")", ">", "capacity", ";", "}", "</s>"]
["<s>", "public", "void", "next", "(", ")", "{", "node", "=", "node", ".", "next", ";", "}", "</s>"]
["<s>", "public", "static", "Node", "newNode", "(", "int", "data", ",", "Object", ".", ".", ".", "obj", ")", "{", "Node", "n", "=", "new", "Node", "(", ")", ";", "n", ".", "data", "=", "data", ";", "n", ".", "next", "=", "null", ";", "n", ".", "before", "=", "null", ";", "if", "(", "obj", ".", "length", ">", "0", ")", "{", "n", ".", "obj", "=", "obj", "[", "0", "]", ";", "}", "return", "n", ";", "}", "</s>"]
["<s>", "public", "Node", "addNode", "(", "int", "data", ",", "Node", "head", ",", "Object", ".", ".", ".", "obj", ")", "{", "Node", "temp", "=", "head", ";", "Node", "n", "=", "null", ";", "if", "(", "obj", ".", "length", ">", "0", ")", "{", "n", "=", "Node", ".", "newNode", "(", "data", ",", "obj", "[", "0", "]", ")", ";", "}", "else", "{", "n", "=", "Node", ".", "newNode", "(", "data", ")", ";", "}", "if", "(", "head", "=", "=", "null", ")", "{", "return", "n", ";", "}", "while", "(", "head", ".", "next", "!", "=", "null", ")", "{", "head", "=", "head", ".", "next", ";", "}", "head", ".", "next", "=", "n", ";", "return", "temp", ";", "}", "</s>"]
["<s>", "public", "Node", "addAtFront", "(", "Node", "node", ",", "Node", "head", ")", "{", "if", "(", "head", "=", "=", "null", ")", "{", "return", "node", ";", "}", "node", ".", "next", "=", "head", ";", "return", "node", ";", "}", "</s>"]
["<s>", "public", "Node", "reverse", "(", "Node", "head", ")", "{", "Node", "front", "=", "null", ";", "Node", "middle", "=", "head", ";", "Node", "end", "=", "null", ";", "while", "(", "middle", "!", "=", "null", ")", "{", "end", "=", "middle", ".", "next", ";", "middle", ".", "next", "=", "front", ";", "front", "=", "middle", ";", "middle", "=", "end", ";", "}", "return", "front", ";", "}", "</s>"]
["<s>", "public", "Node", "reverseRecursiveEasy", "(", "Node", "head", ")", "{", "if", "(", "head", "=", "=", "null", "|", "|", "head", ".", "next", "=", "=", "null", ")", "{", "return", "head", ";", "}", "Node", "reversedList", "=", "reverseRecursiveEasy", "(", "head", ".", "next", ")", ";", "head", ".", "next", ".", "next", "=", "head", ";", "head", ".", "next", "=", "null", ";", "return", "reversedList", ";", "}", "</s>"]
["<s>", "public", "void", "reverseRecursive", "(", "NodeRef", "headRef", ")", "{", "if", "(", "headRef", ".", "node", "=", "=", "null", ")", "{", "return", ";", "}", "Node", "first", "=", "headRef", ".", "node", ";", "Node", "last", "=", "headRef", ".", "node", ".", "next", ";", "if", "(", "last", "=", "=", "null", ")", "{", "return", ";", "}", "NodeRef", "lastHeadRef", "=", "new", "NodeRef", "(", ")", ";", "lastHeadRef", ".", "node", "=", "last", ";", "reverseRecursive", "(", "lastHeadRef", ")", ";", "first", ".", "next", ".", "next", "=", "first", ";", "first", ".", "next", "=", "null", ";", "headRef", ".", "node", "=", "lastHeadRef", ".", "node", ";", "}", "</s>"]
["<s>", "public", "Node", "addAtFront", "(", "int", "data", ",", "Node", "head", ")", "{", "Node", "node", "=", "Node", ".", "newNode", "(", "data", ")", ";", "return", "addAtFront", "(", "node", ",", "head", ")", ";", "}", "</s>"]
["<s>", "public", "void", "printList", "(", "Node", "head", ")", "{", "while", "(", "head", "!", "=", "null", ")", "{", "System", ".", "out", ".", "println", "(", "head", ".", "data", ")", ";", "head", "=", "head", ".", "next", ";", "}", "}", "</s>"]
["<s>", "public", "Node", "find", "(", "Node", "head", ",", "int", "data", ")", "{", "while", "(", "head", "!", "=", "null", ")", "{", "if", "(", "head", ".", "data", "=", "=", "data", ")", "{", "return", "head", ";", "}", "head", "=", "head", ".", "next", ";", "}", "return", "null", ";", "}", "</s>"]
["<s>", "public", "int", "size", "(", "Node", "head", ")", "{", "int", "size", "=", "0", ";", "while", "(", "head", "!", "=", "null", ")", "{", "size", "+", "+", ";", "head", "=", "head", ".", "next", ";", "}", "return", "size", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "LinkList", "ll", "=", "new", "LinkList", "(", ")", ";", "Node", "head", "=", "null", ";", "head", "=", "ll", ".", "addNode", "(", "1", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:2>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:3>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:4>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:5>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:6>", ",", "head", ")", ";", "ll", ".", "printList", "(", "head", ")", ";", "System", ".", "out", ".", "println", "(", ")", ";", "head", "=", "ll", ".", "reverseRecursiveEasy", "(", "head", ")", ";", "ll", ".", "printList", "(", "head", ")", ";", "}", "</s>"]
["<s>", "private", "Node", "addWithCarry", "(", "Node", "head1", ",", "Node", "head2", ")", "{", "if", "(", "head1", "=", "=", "null", ")", "{", "return", "null", ";", "}", "Node", "result", "=", "Node", ".", "newNode", "(", "0", ")", ";", "result", ".", "next", "=", "addWithCarry", "(", "head1", ".", "next", ",", "head2", ".", "next", ")", ";", "int", "r", "=", "head1", ".", "data", "+", "head2", ".", "data", "+", "carry", ";", "result", ".", "data", "=", "r", "%", "<NUM_LIT:10>", ";", "carry", "=", "r", "/", "<NUM_LIT:10>", ";", "return", "result", ";", "}", "</s>"]
["<s>", "private", "Node", "addRemaining", "(", "Node", "start", ",", "Node", "stop", ")", "{", "if", "(", "start", "!", "=", "stop", ")", "{", "Node", "result", "=", "Node", ".", "newNode", "(", "0", ")", ";", "result", ".", "next", "=", "addRemaining", "(", "start", ".", "next", ",", "stop", ")", ";", "result", ".", "data", "=", "(", "start", ".", "data", "+", "carry", ")", "%", "<NUM_LIT:10>", ";", "carry", "=", "(", "start", ".", "data", "+", "carry", ")", "/", "<NUM_LIT:10>", ";", "return", "result", ";", "}", "else", "{", "return", "null", ";", "}", "}", "</s>"]
["<s>", "public", "Node", "add", "(", "Node", "head1", ",", "Node", "head2", ")", "{", "if", "(", "head1", "=", "=", "null", "|", "|", "head2", "=", "=", "null", ")", "{", "throw", "new", "IllegalArgumentException", "(", ")", ";", "}", "LinkList", "ll", "=", "new", "LinkList", "(", ")", ";", "int", "size1", "=", "ll", ".", "size", "(", "head1", ")", ";", "int", "size2", "=", "ll", ".", "size", "(", "head2", ")", ";", "Node", "larger", "=", "null", ";", "Node", "smaller", "=", "null", ";", "if", "(", "size1", ">", "=", "size2", ")", "{", "larger", "=", "head1", ";", "smaller", "=", "head2", ";", "}", "else", "{", "larger", "=", "head2", ";", "smaller", "=", "head1", ";", "}", "int", "diff", "=", "Math", ".", "abs", "(", "size1", "-", "size2", ")", ";", "Node", "largerStart", "=", "larger", ";", "while", "(", "diff", ">", "0", ")", "{", "largerStart", "=", "largerStart", ".", "next", ";", "diff", "-", "-", ";", "}", "Node", "result", "=", "addWithCarry", "(", "largerStart", ",", "smaller", ")", ";", "Node", "result1", "=", "addRemaining", "(", "larger", ",", "largerStart", ")", ";", "if", "(", "carry", "!", "=", "0", ")", "{", "Node", "top", "=", "Node", ".", "newNode", "(", "carry", ")", ";", "result1", "=", "ll", ".", "addAtFront", "(", "top", ",", "result1", ")", ";", "}", "if", "(", "result1", "!", "=", "null", ")", "{", "Node", "tail", "=", "result1", ";", "while", "(", "tail", ".", "next", "!", "=", "null", ")", "{", "tail", "=", "tail", ".", "next", ";", "}", "tail", ".", "next", "=", "result", ";", "return", "result1", ";", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "LinkList", "ll", "=", "new", "LinkList", "(", ")", ";", "Node", "head", "=", "null", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:9>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:4>", ",", "head", ")", ";", "Node", "head1", "=", "null", ";", "head1", "=", "ll", ".", "addNode", "(", "<NUM_LIT:3>", ",", "head1", ")", ";", "head1", "=", "ll", ".", "addNode", "(", "1", ",", "head1", ")", ";", "head1", "=", "ll", ".", "addNode", "(", "<NUM_LIT:2>", ",", "head1", ")", ";", "AddNumberRepresentedByLinkList", "anr", "=", "new", "AddNumberRepresentedByLinkList", "(", ")", ";", "Node", "result", "=", "anr", ".", "add", "(", "head", ",", "head1", ")", ";", "ll", ".", "printList", "(", "result", ")", ";", "}", "</s>"]
["<s>", "public", "void", "push", "(", "int", "data", ")", "{", "if", "(", "head", "=", "=", "null", ")", "{", "head", "=", "Node", ".", "newNode", "(", "data", ")", ";", "middle", "=", "head", ";", "size", "+", "+", ";", "return", ";", "}", "size", "+", "+", ";", "Node", "node", "=", "Node", ".", "newNode", "(", "data", ")", ";", "node", ".", "next", "=", "head", ";", "head", ".", "before", "=", "node", ";", "head", "=", "node", ";", "if", "(", "size", "%", "<NUM_LIT:2>", "=", "=", "0", ")", "{", "middle", "=", "middle", ".", "before", ";", "}", "}", "</s>"]
["<s>", "public", "boolean", "hasMore", "(", ")", "{", "if", "(", "size", ">", "0", ")", "{", "return", "true", ";", "}", "else", "{", "return", "false", ";", "}", "}", "</s>"]
["<s>", "public", "int", "size", "(", ")", "{", "return", "size", ";", "}", "</s>"]
["<s>", "public", "int", "pop", "(", ")", "{", "if", "(", "size", "=", "=", "0", ")", "{", "throw", "new", "IllegalArgumentException", "(", ")", ";", "}", "size", "-", "-", ";", "if", "(", "size", "%", "<NUM_LIT:2>", "!", "=", "0", "|", "|", "size", "=", "=", "0", ")", "{", "middle", "=", "middle", ".", "next", ";", "}", "int", "data", "=", "head", ".", "data", ";", "head", "=", "head", ".", "next", ";", "head", ".", "before", "=", "null", ";", "return", "data", ";", "}", "</s>"]
["<s>", "public", "int", "top", "(", ")", "{", "if", "(", "size", "=", "=", "0", ")", "{", "throw", "new", "IllegalArgumentException", "(", ")", ";", "}", "return", "head", ".", "data", ";", "}", "</s>"]
["<s>", "public", "int", "middle", "(", ")", "{", "if", "(", "size", "=", "=", "0", ")", "{", "throw", "new", "IllegalArgumentException", "(", ")", ";", "}", "return", "middle", ".", "data", ";", "}", "</s>"]
["<s>", "public", "int", "deleteMiddle", "(", ")", "{", "if", "(", "size", "=", "=", "0", ")", "{", "throw", "new", "IllegalArgumentException", "(", ")", ";", "}", "size", "-", "-", ";", "if", "(", "middle", "=", "=", "head", ")", "{", "int", "data", "=", "middle", ".", "data", ";", "middle", "=", "middle", ".", "next", ";", "head", "=", "head", ".", "next", ";", "if", "(", "head", "!", "=", "null", ")", "{", "head", ".", "before", "=", "null", ";", "}", "return", "data", ";", "}", "if", "(", "size", "%", "<NUM_LIT:2>", "=", "=", "0", ")", "{", "int", "data", "=", "middle", ".", "data", ";", "Node", "next", "=", "middle", ".", "next", ";", "middle", "=", "middle", ".", "before", ";", "middle", ".", "next", "=", "next", ";", "if", "(", "next", "!", "=", "null", ")", "{", "next", ".", "before", "=", "middle", ";", "}", "return", "data", ";", "}", "else", "{", "int", "data", "=", "middle", ".", "data", ";", "Node", "before", "=", "middle", ".", "before", ";", "middle", "=", "middle", ".", "next", ";", "middle", ".", "before", "=", "before", ";", "if", "(", "before", "!", "=", "null", ")", "{", "before", ".", "next", "=", "middle", ";", "}", "return", "data", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "StackWithLinkListMiddleOperation", "swl", "=", "new", "StackWithLinkListMiddleOperation", "(", ")", ";", "swl", ".", "push", "(", "1", ")", ";", "System", ".", "out", ".", "println", "(", "swl", ".", "top", "(", ")", "+", "\"", "\"", "+", "swl", ".", "middle", "(", ")", ")", ";", "swl", ".", "push", "(", "<NUM_LIT:2>", ")", ";", "System", ".", "out", ".", "println", "(", "swl", ".", "top", "(", ")", "+", "\"", "\"", "+", "swl", ".", "middle", "(", ")", ")", ";", "swl", ".", "push", "(", "<NUM_LIT:3>", ")", ";", "System", ".", "out", ".", "println", "(", "swl", ".", "top", "(", ")", "+", "\"", "\"", "+", "swl", ".", "middle", "(", ")", ")", ";", "swl", ".", "push", "(", "<NUM_LIT:4>", ")", ";", "System", ".", "out", ".", "println", "(", "swl", ".", "top", "(", ")", "+", "\"", "\"", "+", "swl", ".", "middle", "(", ")", ")", ";", "swl", ".", "push", "(", "<NUM_LIT:5>", ")", ";", "System", ".", "out", ".", "println", "(", "swl", ".", "top", "(", ")", "+", "\"", "\"", "+", "swl", ".", "middle", "(", ")", ")", ";", "swl", ".", "push", "(", "<NUM_LIT:6>", ")", ";", "System", ".", "out", ".", "println", "(", "swl", ".", "top", "(", ")", "+", "\"", "\"", "+", "swl", ".", "middle", "(", ")", ")", ";", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "<STR_LIT>", "<STR_LIT>", "<STR_LIT>", "\"", ")", ";", "swl", ".", "pop", "(", ")", ";", "System", ".", "out", ".", "println", "(", "swl", ".", "top", "(", ")", "+", "\"", "\"", "+", "swl", ".", "middle", "(", ")", ")", ";", "swl", ".", "deleteMiddle", "(", ")", ";", "System", ".", "out", ".", "println", "(", "swl", ".", "top", "(", ")", "+", "\"", "\"", "+", "swl", ".", "middle", "(", ")", ")", ";", "swl", ".", "pop", "(", ")", ";", "System", ".", "out", ".", "println", "(", "swl", ".", "top", "(", ")", "+", "\"", "\"", "+", "swl", ".", "middle", "(", ")", ")", ";", "swl", ".", "deleteMiddle", "(", ")", ";", "System", ".", "out", ".", "println", "(", "swl", ".", "top", "(", ")", "+", "\"", "\"", "+", "swl", ".", "middle", "(", ")", ")", ";", "swl", ".", "pop", "(", ")", ";", "System", ".", "out", ".", "println", "(", "swl", ".", "top", "(", ")", "+", "\"", "\"", "+", "swl", ".", "middle", "(", ")", ")", ";", "swl", ".", "deleteMiddle", "(", ")", ";", "}", "</s>"]
["<s>", "public", "Node", "quickSort", "(", "Node", "head", ")", "{", "if", "(", "head", "=", "=", "null", "|", "|", "head", ".", "next", "=", "=", "null", ")", "{", "return", "head", ";", "}", "Node", "smaller", "=", "null", ";", "Node", "larger", "=", "null", ";", "Node", "pivot", "=", "head", ";", "Node", "temp", "=", "head", ".", "next", ";", "pivot", ".", "next", "=", "null", ";", "LinkList", "ll", "=", "new", "LinkList", "(", ")", ";", "while", "(", "temp", "!", "=", "null", ")", "{", "Node", "next", "=", "temp", ".", "next", ";", "temp", ".", "next", "=", "null", ";", "if", "(", "temp", ".", "data", "<", "pivot", ".", "data", ")", "{", "smaller", "=", "ll", ".", "addAtFront", "(", "temp", ",", "smaller", ")", ";", "}", "else", "{", "larger", "=", "ll", ".", "addAtFront", "(", "temp", ",", "larger", ")", ";", "}", "temp", "=", "next", ";", "}", "smaller", "=", "quickSort", "(", "smaller", ")", ";", "larger", "=", "quickSort", "(", "larger", ")", ";", "Node", "tail1", "=", "smaller", ";", "while", "(", "tail1", "!", "=", "null", "&", "&", "tail1", ".", "next", "!", "=", "null", ")", "{", "tail1", "=", "tail1", ".", "next", ";", "}", "if", "(", "smaller", "!", "=", "null", ")", "{", "tail1", ".", "next", "=", "pivot", ";", "pivot", ".", "next", "=", "larger", ";", "return", "smaller", ";", "}", "else", "{", "pivot", ".", "next", "=", "larger", ";", "return", "pivot", ";", "}", "}", "</s>"]
["<s>", "public", "Node", "quickSortFaster", "(", "Node", "head", ")", "{", "HeadTail", "result", "=", "quickSortUtil", "(", "head", ")", ";", "return", "result", ".", "head", ";", "}", "</s>"]
["<s>", "private", "HeadTail", "quickSortUtil", "(", "Node", "head", ")", "{", "if", "(", "head", "=", "=", "null", "|", "|", "head", ".", "next", "=", "=", "null", ")", "{", "HeadTail", "headTail", "=", "new", "HeadTail", "(", ")", ";", "headTail", ".", "head", "=", "head", ";", "headTail", ".", "tail", "=", "head", ";", "return", "headTail", ";", "}", "LinkList", "ll", "=", "new", "LinkList", "(", ")", ";", "Node", "leftHead", "=", "null", ";", "Node", "rightHead", "=", "null", ";", "Node", "curr", "=", "head", ".", "next", ";", "head", ".", "next", "=", "null", ";", "Node", "next", "=", "null", ";", "while", "(", "curr", "!", "=", "null", ")", "{", "next", "=", "curr", ".", "next", ";", "curr", ".", "next", "=", "null", ";", "if", "(", "curr", ".", "data", "<", "head", ".", "data", ")", "{", "leftHead", "=", "ll", ".", "addAtFront", "(", "curr", ",", "leftHead", ")", ";", "}", "else", "{", "rightHead", "=", "ll", ".", "addAtFront", "(", "curr", ",", "rightHead", ")", ";", "}", "curr", "=", "next", ";", "}", "HeadTail", "leftSide", "=", "quickSortUtil", "(", "leftHead", ")", ";", "HeadTail", "rightSide", "=", "quickSortUtil", "(", "rightHead", ")", ";", "head", ".", "next", "=", "rightSide", ".", "head", ";", "HeadTail", "result", "=", "new", "HeadTail", "(", ")", ";", "result", ".", "head", "=", "head", ";", "result", ".", "tail", "=", "head", ";", "if", "(", "leftSide", ".", "tail", "!", "=", "null", ")", "{", "leftSide", ".", "tail", ".", "next", "=", "head", ";", "result", ".", "head", "=", "leftSide", ".", "head", ";", "}", "if", "(", "rightSide", ".", "head", "!", "=", "null", ")", "{", "head", ".", "next", "=", "rightSide", ".", "head", ";", "result", ".", "tail", "=", "rightSide", ".", "tail", ";", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "QuickSortSingleLinkList", "qss", "=", "new", "QuickSortSingleLinkList", "(", ")", ";", "LinkList", "ll", "=", "new", "LinkList", "(", ")", ";", "Node", "head", "=", "null", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:11>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:2>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "-", "1", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "-", "<NUM_LIT:5>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:10>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:8>", ",", "head", ")", ";", "head", "=", "qss", ".", "quickSortFaster", "(", "head", ")", ";", "ll", ".", "printList", "(", "head", ")", ";", "}", "</s>"]
["<s>", "public", "Node", "toBalancedBST", "(", "Node", "head", ")", "{", "LinkList", "ll", "=", "new", "LinkList", "(", ")", ";", "int", "size", "=", "ll", ".", "size", "(", "head", ")", ";", "NodeRef", "headRef", "=", "new", "NodeRef", "(", ")", ";", "headRef", ".", "node", "=", "head", ";", "return", "toBalancedBST", "(", "headRef", ",", "size", ")", ";", "}", "</s>"]
["<s>", "private", "Node", "toBalancedBST", "(", "NodeRef", "headRef", ",", "int", "size", ")", "{", "if", "(", "size", "<", "=", "0", ")", "{", "return", "null", ";", "}", "Node", "left", "=", "toBalancedBST", "(", "headRef", ",", "size", "/", "<NUM_LIT:2>", ")", ";", "Node", "head", "=", "headRef", ".", "node", ";", "headRef", ".", "next", "(", ")", ";", "Node", "right", "=", "toBalancedBST", "(", "headRef", ",", "size", "-", "size", "/", "<NUM_LIT:2>", "-", "1", ")", ";", "head", ".", "before", "=", "left", ";", "head", ".", "next", "=", "right", ";", "return", "head", ";", "}", "</s>"]
["<s>", "public", "void", "printTreeInOrder", "(", "Node", "head", ")", "{", "if", "(", "head", "=", "=", "null", ")", "{", "return", ";", "}", "printTreeInOrder", "(", "head", ".", "before", ")", ";", "System", ".", "out", ".", "println", "(", "head", ".", "data", ")", ";", "printTreeInOrder", "(", "head", ".", "next", ")", ";", "}", "</s>"]
["<s>", "public", "void", "printTreePreOrder", "(", "Node", "head", ")", "{", "if", "(", "head", "=", "=", "null", ")", "{", "return", ";", "}", "System", ".", "out", ".", "println", "(", "head", ".", "data", ")", ";", "printTreePreOrder", "(", "head", ".", "before", ")", ";", "printTreePreOrder", "(", "head", ".", "next", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "LinkList", "ll", "=", "new", "LinkList", "(", ")", ";", "Node", "head", "=", "null", ";", "head", "=", "ll", ".", "addNode", "(", "1", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:2>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:3>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:4>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:5>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:6>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:7>", ",", "head", ")", ";", "SortedLLToBalancedBST", "sll", "=", "new", "SortedLLToBalancedBST", "(", ")", ";", "head", "=", "sll", ".", "toBalancedBST", "(", "head", ")", ";", "sll", ".", "printTreeInOrder", "(", "head", ")", ";", "sll", ".", "printTreePreOrder", "(", "head", ")", ";", "}", "</s>"]
["<s>", "public", "void", "act", "(", "Node", "head", ")", "{", "Node", "result", "=", "null", ";", "LinkList", "ll", "=", "new", "LinkList", "(", ")", ";", "while", "(", "head", "!", "=", "null", "&", "&", "head", ".", "next", "!", "=", "null", ")", "{", "Node", "temp", "=", "head", ".", "next", ";", "head", ".", "next", "=", "head", ".", "next", ".", "next", ";", "temp", ".", "next", "=", "null", ";", "result", "=", "ll", ".", "addAtFront", "(", "temp", ",", "result", ")", ";", "if", "(", "head", ".", "next", "=", "=", "null", ")", "{", "break", ";", "}", "head", "=", "head", ".", "next", ";", "}", "head", ".", "next", "=", "result", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "LinkList", "ll", "=", "new", "LinkList", "(", ")", ";", "Node", "head", "=", "null", ";", "head", "=", "ll", ".", "addNode", "(", "1", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:2>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:3>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:4>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:5>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:6>", ",", "head", ")", ";", "ReverseAlternateNodeAndAppendAtEnd", "ran", "=", "new", "ReverseAlternateNodeAndAppendAtEnd", "(", ")", ";", "ran", ".", "act", "(", "head", ")", ";", "ll", ".", "printList", "(", "head", ")", ";", "}", "</s>"]
["<s>", "public", "Node", "multiply", "(", "Node", "head1", ",", "Node", "head2", ")", "{", "LinkList", "ll", "=", "new", "LinkList", "(", ")", ";", "head1", "=", "ll", ".", "reverse", "(", "head1", ")", ";", "head2", "=", "ll", ".", "reverse", "(", "head2", ")", ";", "DoubleLinkList", "dll", "=", "new", "DoubleLinkList", "(", ")", ";", "Node", "result", "=", "null", ";", "Node", "resultStart", "=", "null", ";", "Node", "currentResult", "=", "null", ";", "Node", "currentTail", "=", "null", ";", "while", "(", "head2", "!", "=", "null", ")", "{", "Node", "current", "=", "head1", ";", "int", "carry", "=", "0", ";", "while", "(", "current", "!", "=", "null", ")", "{", "int", "r", "=", "current", ".", "data", "*", "head2", ".", "data", ";", "r", "+", "=", "carry", ";", "carry", "=", "r", "/", "<NUM_LIT:10>", ";", "r", "=", "r", "%", "<NUM_LIT:10>", ";", "if", "(", "currentResult", "=", "=", "null", ")", "{", "currentResult", "=", "dll", ".", "addAtFront", "(", "currentResult", ",", "r", ")", ";", "currentTail", "=", "currentResult", ";", "}", "else", "{", "currentResult", "=", "dll", ".", "addAtFront", "(", "currentResult", ",", "r", ")", ";", "}", "current", "=", "current", ".", "next", ";", "}", "if", "(", "carry", "!", "=", "0", ")", "{", "currentResult", "=", "dll", ".", "addAtFront", "(", "currentResult", ",", "carry", ")", ";", "}", "currentResult", "=", "null", ";", "if", "(", "result", "=", "=", "null", ")", "{", "result", "=", "add", "(", "resultStart", ",", "currentTail", ")", ";", "resultStart", "=", "result", ";", "}", "else", "{", "result", "=", "add", "(", "resultStart", ",", "currentTail", ")", ";", "resultStart", "=", "resultStart", ".", "before", ";", "}", "head2", "=", "head2", ".", "next", ";", "}", "while", "(", "result", ".", "before", "!", "=", "null", ")", "{", "result", "=", "result", ".", "before", ";", "}", "head1", "=", "ll", ".", "reverse", "(", "head1", ")", ";", "head2", "=", "ll", ".", "reverse", "(", "head2", ")", ";", "return", "result", ";", "}", "</s>"]
["<s>", "private", "Node", "add", "(", "Node", "result", ",", "Node", "currentResult", ")", "{", "if", "(", "currentResult", "=", "=", "null", ")", "{", "return", "result", ";", "}", "if", "(", "result", "=", "=", "null", ")", "{", "return", "currentResult", ";", "}", "Node", "r1", "=", "result", ".", "before", ";", "Node", "addResult", "=", "null", ";", "int", "carry", "=", "0", ";", "while", "(", "r1", "!", "=", "null", "&", "&", "currentResult", "!", "=", "null", ")", "{", "int", "r", "=", "r1", ".", "data", "+", "currentResult", ".", "data", "+", "carry", ";", "Node", "newNode", "=", "Node", ".", "newNode", "(", "r", "%", "<NUM_LIT:10>", ")", ";", "if", "(", "addResult", "=", "=", "null", ")", "{", "addResult", "=", "newNode", ";", "}", "else", "{", "addResult", ".", "before", "=", "newNode", ";", "newNode", ".", "next", "=", "addResult", ";", "addResult", "=", "addResult", ".", "before", ";", "}", "carry", "=", "r", "/", "<NUM_LIT:10>", ";", "r1", "=", "r1", ".", "before", ";", "currentResult", "=", "currentResult", ".", "before", ";", "}", "while", "(", "r1", "!", "=", "null", ")", "{", "int", "r", "=", "r1", ".", "data", "+", "carry", ";", "Node", "newNode", "=", "Node", ".", "newNode", "(", "r", "%", "<NUM_LIT:10>", ")", ";", "if", "(", "addResult", "=", "=", "null", ")", "{", "addResult", "=", "newNode", ";", "}", "else", "{", "addResult", ".", "before", "=", "newNode", ";", "newNode", ".", "next", "=", "addResult", ";", "addResult", "=", "addResult", ".", "before", ";", "}", "carry", "=", "r", "/", "<NUM_LIT:10>", ";", "r1", "=", "r1", ".", "before", ";", "}", "while", "(", "currentResult", "!", "=", "null", ")", "{", "int", "r", "=", "currentResult", ".", "data", "+", "carry", ";", "Node", "newNode", "=", "Node", ".", "newNode", "(", "r", "%", "<NUM_LIT:10>", ")", ";", "if", "(", "addResult", "=", "=", "null", ")", "{", "addResult", "=", "newNode", ";", "}", "else", "{", "addResult", ".", "before", "=", "newNode", ";", "newNode", ".", "next", "=", "addResult", ";", "addResult", "=", "addResult", ".", "before", ";", "}", "carry", "=", "r", "/", "<NUM_LIT:10>", ";", "currentResult", "=", "currentResult", ".", "before", ";", "}", "if", "(", "carry", "!", "=", "0", ")", "{", "Node", "newNode", "=", "Node", ".", "newNode", "(", "carry", ")", ";", "addResult", ".", "before", "=", "newNode", ";", "newNode", ".", "next", "=", "addResult", ";", "addResult", "=", "addResult", ".", "before", ";", "}", "while", "(", "addResult", ".", "next", "!", "=", "null", ")", "{", "addResult", "=", "addResult", ".", "next", ";", "}", "addResult", ".", "next", "=", "result", ";", "result", ".", "before", "=", "addResult", ";", "return", "result", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "MultiplyTwoNumbersLinkList", "mtn", "=", "new", "MultiplyTwoNumbersLinkList", "(", ")", ";", "LinkList", "ll", "=", "new", "LinkList", "(", ")", ";", "Node", "head1", "=", "null", ";", "head1", "=", "ll", ".", "addNode", "(", "<NUM_LIT:2>", ",", "head1", ")", ";", "head1", "=", "ll", ".", "addNode", "(", "<NUM_LIT:3>", ",", "head1", ")", ";", "head1", "=", "ll", ".", "addNode", "(", "<NUM_LIT:5>", ",", "head1", ")", ";", "head1", "=", "ll", ".", "addNode", "(", "0", ",", "head1", ")", ";", "head1", "=", "ll", ".", "addNode", "(", "1", ",", "head1", ")", ";", "Node", "head2", "=", "null", ";", "head2", "=", "ll", ".", "addNode", "(", "<NUM_LIT:5>", ",", "head2", ")", ";", "head2", "=", "ll", ".", "addNode", "(", "<NUM_LIT:7>", ",", "head2", ")", ";", "head2", "=", "ll", ".", "addNode", "(", "<NUM_LIT:8>", ",", "head2", ")", ";", "Node", "result", "=", "mtn", ".", "multiply", "(", "head1", ",", "head2", ")", ";", "ll", ".", "printList", "(", "result", ")", ";", "}", "</s>"]
["<s>", "public", "void", "deleteNAfterMNodes", "(", "Node", "head", ",", "int", "m", ",", "int", "n", ")", "{", "if", "(", "head", "=", "=", "null", ")", "{", "return", ";", "}", "while", "(", "head", "!", "=", "null", ")", "{", "int", "i", "=", "0", ";", "while", "(", "head", "!", "=", "null", "&", "&", "i", "<", "m", "-", "1", ")", "{", "head", "=", "head", ".", "next", ";", "i", "+", "+", ";", "}", "if", "(", "head", "=", "=", "null", ")", "{", "break", ";", "}", "Node", "temp", "=", "head", ".", "next", ";", "i", "=", "0", ";", "while", "(", "temp", "!", "=", "null", "&", "&", "i", "<", "n", ")", "{", "temp", "=", "temp", ".", "next", ";", "i", "+", "+", ";", "}", "head", ".", "next", "=", "temp", ";", "head", "=", "temp", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "DeleteNAfterMNodes", "daf", "=", "new", "DeleteNAfterMNodes", "(", ")", ";", "LinkList", "ll", "=", "new", "LinkList", "(", ")", ";", "Node", "head", "=", "null", ";", "head", "=", "ll", ".", "addNode", "(", "1", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:2>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:3>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:4>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:5>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:6>", ",", "head", ")", ";", "daf", ".", "deleteNAfterMNodes", "(", "head", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:2>", ")", ";", "ll", ".", "printList", "(", "head", ")", ";", "}", "</s>"]
["<s>", "public", "Node", "addNode", "(", "Node", "head", ",", "int", "data", ")", "{", "if", "(", "head", "=", "=", "null", ")", "{", "head", "=", "Node", ".", "newNode", "(", "data", ")", ";", "return", "head", ";", "}", "Node", "newNode", "=", "Node", ".", "newNode", "(", "data", ")", ";", "Node", "current", "=", "head", ";", "while", "(", "current", ".", "next", "!", "=", "null", ")", "{", "current", "=", "current", ".", "next", ";", "}", "current", ".", "next", "=", "newNode", ";", "newNode", ".", "before", "=", "current", ";", "return", "head", ";", "}", "</s>"]
["<s>", "public", "Node", "addAtFront", "(", "Node", "head", ",", "int", "data", ")", "{", "Node", "newNode", "=", "Node", ".", "newNode", "(", "data", ")", ";", "if", "(", "head", "=", "=", "null", ")", "{", "return", "newNode", ";", "}", "newNode", ".", "next", "=", "head", ";", "head", ".", "before", "=", "newNode", ";", "return", "newNode", ";", "}", "</s>"]
["<s>", "public", "void", "print", "(", "Node", "head", ")", "{", "while", "(", "head", "!", "=", "null", ")", "{", "System", ".", "out", ".", "print", "(", "head", ".", "data", "+", "\"", "\"", ")", ";", "head", "=", "head", ".", "next", ";", "}", "}", "</s>"]
["<s>", "public", "void", "printFrontBack", "(", "Node", "head", ")", "{", "Node", "prev", "=", "null", ";", "while", "(", "head", "!", "=", "null", ")", "{", "System", ".", "out", ".", "print", "(", "head", ".", "data", "+", "\"", "\"", ")", ";", "prev", "=", "head", ";", "head", "=", "head", ".", "next", ";", "}", "System", ".", "out", ".", "println", "(", ")", ";", "while", "(", "prev", "!", "=", "null", ")", "{", "System", ".", "out", ".", "print", "(", "prev", ".", "data", "+", "\"", "\"", ")", ";", "prev", "=", "prev", ".", "before", ";", "}", "}", "</s>"]
["<s>", "public", "Node", "find", "(", "Node", "head", ",", "int", "data", ")", "{", "while", "(", "head", "!", "=", "null", ")", "{", "if", "(", "head", ".", "data", "=", "=", "data", ")", "{", "return", "head", ";", "}", "head", "=", "head", ".", "next", ";", "}", "return", "null", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "DoubleLinkList", "dll", "=", "new", "DoubleLinkList", "(", ")", ";", "Node", "head", "=", "null", ";", "head", "=", "dll", ".", "addNode", "(", "head", ",", "1", ")", ";", "head", "=", "dll", ".", "addNode", "(", "head", ",", "<NUM_LIT:2>", ")", ";", "head", "=", "dll", ".", "addNode", "(", "head", ",", "<NUM_LIT:3>", ")", ";", "head", "=", "dll", ".", "addNode", "(", "head", ",", "<NUM_LIT:4>", ")", ";", "head", "=", "dll", ".", "addNode", "(", "head", ",", "<NUM_LIT:5>", ")", ";", "dll", ".", "print", "(", "head", ")", ";", "}", "</s>"]
["<s>", "Point", "(", "int", "x", ",", "int", "y", ")", "{", "this", ".", "x", "=", "x", ";", "this", ".", "y", "=", "y", ";", "}", "</s>"]
["<s>", "public", "void", "remove", "(", "Node", "head", ")", "{", "if", "(", "head", "=", "=", "null", "|", "|", "head", ".", "next", "=", "=", "null", ")", "{", "return", ";", "}", "Node", "curr", "=", "head", ";", "Node", "next", "=", "head", ".", "next", ";", "Node", "nextNext", "=", "head", ".", "next", ".", "next", ";", "while", "(", "nextNext", "!", "=", "null", ")", "{", "Point", "pcurr", "=", "(", "Point", ")", "curr", ".", "obj", ";", "Point", "pnext", "=", "(", "Point", ")", "nextNext", ".", "obj", ";", "if", "(", "pcurr", ".", "x", "=", "=", "pnext", ".", "x", "|", "|", "pcurr", ".", "y", "=", "=", "pnext", ".", "y", ")", "{", "curr", ".", "next", "=", "nextNext", ";", "next", "=", "nextNext", ";", "nextNext", "=", "nextNext", ".", "next", ";", "}", "else", "{", "curr", "=", "curr", ".", "next", ";", "next", "=", "next", ".", "next", ";", "nextNext", "=", "nextNext", ".", "next", ";", "}", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "Node", "head1", "=", "null", ";", "LinkList", "ll", "=", "new", "LinkList", "(", ")", ";", "head1", "=", "ll", ".", "addNode", "(", "1", ",", "head1", ",", "new", "Point", "(", "0", ",", "<NUM_LIT:10>", ")", ")", ";", "head1", "=", "ll", ".", "addNode", "(", "<NUM_LIT:2>", ",", "head1", ",", "new", "Point", "(", "1", ",", "<NUM_LIT:10>", ")", ")", ";", "head1", "=", "ll", ".", "addNode", "(", "<NUM_LIT:3>", ",", "head1", ",", "new", "Point", "(", "<NUM_LIT:5>", ",", "<NUM_LIT:10>", ")", ")", ";", "head1", "=", "ll", ".", "addNode", "(", "<NUM_LIT:4>", ",", "head1", ",", "new", "Point", "(", "<NUM_LIT:7>", ",", "<NUM_LIT:10>", ")", ")", ";", "head1", "=", "ll", ".", "addNode", "(", "<NUM_LIT:5>", ",", "head1", ",", "new", "Point", "(", "<NUM_LIT:7>", ",", "<NUM_LIT:5>", ")", ")", ";", "head1", "=", "ll", ".", "addNode", "(", "<NUM_LIT:6>", ",", "head1", ",", "new", "Point", "(", "<NUM_LIT:20>", ",", "<NUM_LIT:5>", ")", ")", ";", "head1", "=", "ll", ".", "addNode", "(", "<NUM_LIT:7>", ",", "head1", ",", "new", "Point", "(", "<NUM_LIT>", ",", "<NUM_LIT:5>", ")", ")", ";", "head1", "=", "ll", ".", "addNode", "(", "<NUM_LIT:8>", ",", "head1", ",", "new", "Point", "(", "<NUM_LIT>", ",", "<NUM_LIT:8>", ")", ")", ";", "RemoveMiddleElementsOfLineSegment", "rme", "=", "new", "RemoveMiddleElementsOfLineSegment", "(", ")", ";", "rme", ".", "remove", "(", "head1", ")", ";", "ll", ".", "printList", "(", "head1", ")", ";", "}", "</s>"]
["<s>", "public", "void", "printTriplet", "(", "Node", "head1", ",", "Node", "head2", ",", "Node", "head3", ",", "int", "sum", ")", "{", "if", "(", "head1", "=", "=", "null", "|", "|", "head2", "=", "=", "null", "|", "|", "head3", "=", "=", "null", ")", "{", "return", ";", "}", "MergeSortLinkList", "msll", "=", "new", "MergeSortLinkList", "(", ")", ";", "head2", "=", "msll", ".", "sort", "(", "head2", ",", "true", ")", ";", "head3", "=", "msll", ".", "sort", "(", "head3", ",", "false", ")", ";", "while", "(", "head1", "!", "=", "null", ")", "{", "int", "newSum", "=", "sum", "-", "head1", ".", "data", ";", "Node", "tempHead2", "=", "head2", ";", "Node", "tempHead3", "=", "head3", ";", "while", "(", "tempHead2", "!", "=", "null", "&", "&", "tempHead3", "!", "=", "null", ")", "{", "if", "(", "tempHead2", ".", "data", "+", "tempHead3", ".", "data", "=", "=", "newSum", ")", "{", "System", ".", "out", ".", "println", "(", "head1", ".", "data", "+", "\"", "\"", "+", "tempHead2", ".", "data", "+", "\"", "\"", "+", "tempHead3", ".", "data", ")", ";", "break", ";", "}", "else", "if", "(", "tempHead2", ".", "data", "+", "tempHead3", ".", "data", "<", "newSum", ")", "{", "tempHead2", "=", "tempHead2", ".", "next", ";", "}", "else", "{", "tempHead3", "=", "tempHead3", ".", "next", ";", "}", "}", "head1", "=", "head1", ".", "next", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "LinkList", "ll", "=", "new", "LinkList", "(", ")", ";", "Node", "head", "=", "null", ";", "head", "=", "ll", ".", "addNode", "(", "1", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:8>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "-", "<NUM_LIT:3>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT>", ",", "head", ")", ";", "Node", "head1", "=", "null", ";", "head1", "=", "ll", ".", "addNode", "(", "-", "1", ",", "head1", ")", ";", "head1", "=", "ll", ".", "addNode", "(", "<NUM_LIT>", ",", "head1", ")", ";", "head1", "=", "ll", ".", "addNode", "(", "<NUM_LIT:31>", ",", "head1", ")", ";", "head1", "=", "ll", ".", "addNode", "(", "<NUM_LIT:11>", ",", "head1", ")", ";", "Node", "head2", "=", "null", ";", "head2", "=", "ll", ".", "addNode", "(", "<NUM_LIT:5>", ",", "head2", ")", ";", "head2", "=", "ll", ".", "addNode", "(", "<NUM_LIT:7>", ",", "head2", ")", ";", "head2", "=", "ll", ".", "addNode", "(", "<NUM_LIT:3>", ",", "head2", ")", ";", "head2", "=", "ll", ".", "addNode", "(", "1", ",", "head2", ")", ";", "TripletToSumInLinkList", "tts", "=", "new", "TripletToSumInLinkList", "(", ")", ";", "tts", ".", "printTriplet", "(", "head", ",", "head1", ",", "head2", ",", "<NUM_LIT:20>", ")", ";", "}", "</s>"]
["<s>", "public", "Node", "deleteNodes", "(", "Node", "head", ")", "{", "if", "(", "head", "=", "=", "null", ")", "{", "return", "null", ";", "}", "Node", "nextNode", "=", "deleteNodes", "(", "head", ".", "next", ")", ";", "if", "(", "head", ".", "data", ">", "maxFound", ")", "{", "maxFound", "=", "head", ".", "data", ";", "}", "if", "(", "maxFound", ">", "head", ".", "data", ")", "{", "return", "nextNode", ";", "}", "head", ".", "next", "=", "nextNode", ";", "return", "head", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "DeleteNodeWithGreaterValueOnRight", "dng", "=", "new", "DeleteNodeWithGreaterValueOnRight", "(", ")", ";", "LinkList", "ll", "=", "new", "LinkList", "(", ")", ";", "Node", "head", "=", "null", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:12>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:15>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:10>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:11>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:5>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:6>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:2>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:3>", ",", "head", ")", ";", "head", "=", "dng", ".", "deleteNodes", "(", "head", ")", ";", "ll", ".", "printList", "(", "head", ")", ";", "}", "</s>"]
["<s>", "public", "Node", "reverse", "(", "Node", "head", ",", "int", "k", ")", "{", "if", "(", "head", "=", "=", "null", ")", "{", "return", "null", ";", "}", "Node", "front", "=", "null", ";", "Node", "middle", "=", "head", ";", "Node", "end", "=", "null", ";", "int", "i", "=", "0", ";", "while", "(", "middle", "!", "=", "null", "&", "&", "i", "<", "k", ")", "{", "end", "=", "middle", ".", "next", ";", "middle", ".", "next", "=", "front", ";", "front", "=", "middle", ";", "middle", "=", "end", ";", "i", "+", "+", ";", "}", "head", ".", "next", "=", "reverse", "(", "middle", ",", "k", ")", ";", "return", "front", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "LinkList", "ll", "=", "new", "LinkList", "(", ")", ";", "Node", "head", "=", "null", ";", "head", "=", "ll", ".", "addNode", "(", "1", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:2>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:3>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:4>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:5>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:6>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:7>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:8>", ",", "head", ")", ";", "ReverseKNodes", "rn", "=", "new", "ReverseKNodes", "(", ")", ";", "head", "=", "rn", ".", "reverse", "(", "head", ",", "<NUM_LIT:3>", ")", ";", "ll", ".", "printList", "(", "head", ")", ";", "}", "</s>"]
["<s>", "Node", "maxChain", "(", "Node", "head1", ",", "Node", "head2", ")", "{", "if", "(", "head1", "=", "=", "null", ")", "{", "return", "head2", ";", "}", "if", "(", "head2", "=", "=", "null", ")", "{", "return", "head1", ";", "}", "Node", "curr1", "=", "head1", ";", "Node", "curr2", "=", "head2", ";", "int", "sum1", "=", "0", ";", "int", "sum2", "=", "0", ";", "Node", "result", "=", "null", ";", "Node", "prev", "=", "null", ";", "while", "(", "curr1", "!", "=", "null", "&", "&", "curr2", "!", "=", "null", ")", "{", "if", "(", "curr1", ".", "data", "=", "=", "curr2", ".", "data", ")", "{", "sum1", "+", "=", "curr1", ".", "data", ";", "sum2", "+", "=", "curr2", ".", "data", ";", "if", "(", "sum1", "<", "=", "sum2", ")", "{", "if", "(", "result", "=", "=", "null", ")", "{", "result", "=", "head2", ";", "prev", "=", "curr2", ";", "}", "else", "{", "prev", ".", "next", "=", "head2", ".", "next", ";", "prev", "=", "curr2", ";", "}", "}", "else", "{", "if", "(", "result", "=", "=", "null", ")", "{", "result", "=", "head1", ";", "prev", "=", "curr1", ";", "}", "else", "{", "prev", ".", "next", "=", "head1", ".", "next", ";", "prev", "=", "curr1", ";", "}", "}", "head1", "=", "curr1", ";", "head2", "=", "curr2", ";", "sum1", "=", "0", ";", "sum2", "=", "0", ";", "curr1", "=", "curr1", ".", "next", ";", "curr2", "=", "curr2", ".", "next", ";", "}", "else", "if", "(", "curr1", ".", "data", "<", "curr2", ".", "data", ")", "{", "sum1", "+", "=", "curr1", ".", "data", ";", "curr1", "=", "curr1", ".", "next", ";", "}", "else", "{", "sum2", "+", "=", "curr2", ".", "data", ";", "curr2", "=", "curr2", ".", "next", ";", "}", "}", "while", "(", "curr1", "!", "=", "null", ")", "{", "sum1", "+", "=", "curr1", ".", "data", ";", "curr1", "=", "curr1", ".", "next", ";", "}", "while", "(", "curr2", "!", "=", "null", ")", "{", "sum2", "+", "=", "curr2", ".", "data", ";", "curr2", "=", "curr2", ".", "next", ";", "}", "if", "(", "result", "!", "=", "null", ")", "{", "if", "(", "sum1", "<", "=", "sum2", ")", "{", "prev", ".", "next", "=", "head2", ".", "next", ";", "}", "else", "{", "prev", ".", "next", "=", "head1", ".", "next", ";", "}", "}", "else", "{", "if", "(", "sum1", "<", "=", "sum2", ")", "{", "result", "=", "head2", ";", "}", "else", "{", "result", "=", "head1", ";", "}", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "LinkList", "ll", "=", "new", "LinkList", "(", ")", ";", "Node", "head1", "=", "null", ";", "head1", "=", "ll", ".", "addNode", "(", "1", ",", "head1", ")", ";", "head1", "=", "ll", ".", "addNode", "(", "<NUM_LIT:3>", ",", "head1", ")", ";", "head1", "=", "ll", ".", "addNode", "(", "<NUM_LIT:30>", ",", "head1", ")", ";", "head1", "=", "ll", ".", "addNode", "(", "<NUM_LIT>", ",", "head1", ")", ";", "head1", "=", "ll", ".", "addNode", "(", "<NUM_LIT>", ",", "head1", ")", ";", "head1", "=", "ll", ".", "addNode", "(", "<NUM_LIT>", ",", "head1", ")", ";", "head1", "=", "ll", ".", "addNode", "(", "<NUM_LIT>", ",", "head1", ")", ";", "head1", "=", "ll", ".", "addNode", "(", "<NUM_LIT>", ",", "head1", ")", ";", "head1", "=", "ll", ".", "addNode", "(", "<NUM_LIT>", ",", "head1", ")", ";", "Node", "head2", "=", "null", ";", "head2", "=", "ll", ".", "addNode", "(", "0", ",", "head2", ")", ";", "head2", "=", "ll", ".", "addNode", "(", "<NUM_LIT:3>", ",", "head2", ")", ";", "head2", "=", "ll", ".", "addNode", "(", "<NUM_LIT:12>", ",", "head2", ")", ";", "head2", "=", "ll", ".", "addNode", "(", "<NUM_LIT:32>", ",", "head2", ")", ";", "head2", "=", "ll", ".", "addNode", "(", "<NUM_LIT>", ",", "head2", ")", ";", "head2", "=", "ll", ".", "addNode", "(", "<NUM_LIT>", ",", "head2", ")", ";", "head2", "=", "ll", ".", "addNode", "(", "<NUM_LIT>", ",", "head2", ")", ";", "head2", "=", "ll", ".", "addNode", "(", "<NUM_LIT>", ",", "head2", ")", ";", "head2", "=", "ll", ".", "addNode", "(", "<NUM_LIT>", ",", "head2", ")", ";", "head2", "=", "ll", ".", "addNode", "(", "<NUM_LIT>", ",", "head2", ")", ";", "MergeForLargestSum", "mls", "=", "new", "MergeForLargestSum", "(", ")", ";", "Node", "result", "=", "mls", ".", "maxChain", "(", "head1", ",", "head2", ")", ";", "ll", ".", "printList", "(", "result", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "isPalindrome", "(", "NodeRef", "head", ",", "Node", "end", ")", "{", "if", "(", "end", "=", "=", "null", ")", "{", "return", "true", ";", "}", "boolean", "r", "=", "isPalindrome", "(", "head", ",", "end", ".", "next", ")", ";", "r", "=", "r", "&", "&", "head", ".", "node", ".", "data", "=", "=", "end", ".", "data", ";", "head", ".", "next", "(", ")", ";", "return", "r", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "LinkList", "ll", "=", "new", "LinkList", "(", ")", ";", "Node", "head", "=", "null", ";", "head", "=", "ll", ".", "addNode", "(", "1", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:2>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:3>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:4>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:3>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:2>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "1", ",", "head", ")", ";", "NodeRef", "nodeRef", "=", "new", "NodeRef", "(", ")", ";", "nodeRef", ".", "node", "=", "head", ";", "LinkListIsPalindrome", "llp", "=", "new", "LinkListIsPalindrome", "(", ")", ";", "System", ".", "out", ".", "println", "(", "llp", ".", "isPalindrome", "(", "nodeRef", ",", "head", ")", ")", ";", "}", "</s>"]
["<s>", "public", "LRUCache", "(", "int", "size", ")", "{", "MAX_SIZE", "=", "size", ";", "}", "</s>"]
["<s>", "public", "void", "used", "(", "int", "data", ")", "{", "if", "(", "containsInCache", "(", "data", ")", ")", "{", "Node", "node", "=", "map", ".", "get", "(", "data", ")", ";", "if", "(", "node", "!", "=", "head", ")", "{", "deleteFromCache", "(", "data", ")", ";", "node", ".", "next", "=", "head", ";", "head", ".", "before", "=", "node", ";", "head", "=", "node", ";", "map", ".", "put", "(", "data", ",", "node", ")", ";", "}", "}", "else", "{", "addIntoCache", "(", "data", ")", ";", "}", "}", "</s>"]
["<s>", "public", "void", "addIntoCache", "(", "int", "data", ")", "{", "size", "+", "+", ";", "if", "(", "head", "=", "=", "null", ")", "{", "head", "=", "Node", ".", "newNode", "(", "data", ")", ";", "tail", "=", "head", ";", "return", ";", "}", "if", "(", "size", ">", "MAX_SIZE", ")", "{", "tail", "=", "tail", ".", "before", ";", "Node", "next", "=", "tail", ".", "next", ";", "tail", ".", "next", "=", "null", ";", "next", ".", "before", "=", "null", ";", "map", ".", "remove", "(", "next", ".", "data", ")", ";", "}", "Node", "newNode", "=", "Node", ".", "newNode", "(", "data", ")", ";", "newNode", ".", "next", "=", "head", ";", "if", "(", "head", "!", "=", "null", ")", "{", "head", ".", "before", "=", "newNode", ";", "}", "head", "=", "newNode", ";", "map", ".", "put", "(", "data", ",", "newNode", ")", ";", "return", ";", "}", "</s>"]
["<s>", "public", "void", "printCache", "(", ")", "{", "Node", "temp", "=", "head", ";", "while", "(", "temp", "!", "=", "null", ")", "{", "System", ".", "out", ".", "print", "(", "temp", ".", "data", "+", "\"", "\"", ")", ";", "temp", "=", "temp", ".", "next", ";", "}", "System", ".", "out", ".", "println", "(", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "containsInCache", "(", "int", "data", ")", "{", "return", "map", ".", "containsKey", "(", "data", ")", ";", "}", "</s>"]
["<s>", "public", "void", "deleteFromCache", "(", "int", "data", ")", "{", "Node", "node", "=", "map", ".", "get", "(", "data", ")", ";", "if", "(", "node", "=", "=", "null", ")", "{", "return", ";", "}", "map", ".", "remove", "(", "data", ")", ";", "if", "(", "size", "=", "=", "1", ")", "{", "head", "=", "null", ";", "tail", "=", "null", ";", "}", "else", "if", "(", "node", "=", "=", "head", ")", "{", "head", "=", "head", ".", "next", ";", "if", "(", "head", "!", "=", "null", ")", "{", "head", ".", "before", "=", "null", ";", "}", "node", ".", "next", "=", "null", ";", "}", "else", "if", "(", "node", "=", "=", "tail", ")", "{", "tail", "=", "tail", ".", "before", ";", "tail", ".", "next", "=", "null", ";", "}", "else", "{", "Node", "before", "=", "node", ".", "before", ";", "Node", "next", "=", "node", ".", "next", ";", "before", ".", "next", "=", "next", ";", "next", ".", "before", "=", "before", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "LRUCache", "lruCache", "=", "new", "LRUCache", "(", "<NUM_LIT:5>", ")", ";", "lruCache", ".", "used", "(", "<NUM_LIT:4>", ")", ";", "lruCache", ".", "used", "(", "<NUM_LIT:5>", ")", ";", "lruCache", ".", "printCache", "(", ")", ";", "lruCache", ".", "used", "(", "<NUM_LIT:6>", ")", ";", "lruCache", ".", "printCache", "(", ")", ";", "lruCache", ".", "used", "(", "<NUM_LIT:5>", ")", ";", "lruCache", ".", "printCache", "(", ")", ";", "lruCache", ".", "used", "(", "<NUM_LIT:9>", ")", ";", "lruCache", ".", "printCache", "(", ")", ";", "lruCache", ".", "used", "(", "<NUM_LIT:10>", ")", ";", "lruCache", ".", "printCache", "(", ")", ";", "lruCache", ".", "used", "(", "<NUM_LIT:11>", ")", ";", "lruCache", ".", "printCache", "(", ")", ";", "lruCache", ".", "used", "(", "<NUM_LIT:16>", ")", ";", "lruCache", ".", "printCache", "(", ")", ";", "lruCache", ".", "used", "(", "<NUM_LIT:10>", ")", ";", "lruCache", ".", "printCache", "(", ")", ";", "lruCache", ".", "deleteFromCache", "(", "<NUM_LIT:10>", ")", ";", "lruCache", ".", "printCache", "(", ")", ";", "lruCache", ".", "deleteFromCache", "(", "<NUM_LIT:9>", ")", ";", "lruCache", ".", "printCache", "(", ")", ";", "}", "</s>"]
["<s>", "public", "Node", "sort", "(", "Node", "head", ",", "boolean", "isAscending", ")", "{", "if", "(", "head", "=", "=", "null", "|", "|", "head", ".", "next", "=", "=", "null", ")", "{", "return", "head", ";", "}", "Node", "head1", "=", "frontBackSplit", "(", "head", ")", ";", "head", "=", "sort", "(", "head", ",", "isAscending", ")", ";", "head1", "=", "sort", "(", "head1", ",", "isAscending", ")", ";", "return", "sortedMerge", "(", "head", ",", "head1", ",", "isAscending", ")", ";", "}", "</s>"]
["<s>", "private", "Node", "sortedMerge", "(", "Node", "head1", ",", "Node", "head2", ",", "boolean", "isAscending", ")", "{", "if", "(", "head1", "=", "=", "null", ")", "{", "return", "head2", ";", "}", "if", "(", "head2", "=", "=", "null", ")", "{", "return", "head1", ";", "}", "if", "(", "isAscending", ")", "{", "if", "(", "head1", ".", "data", "<", "=", "head2", ".", "data", ")", "{", "head1", ".", "next", "=", "sortedMerge", "(", "head1", ".", "next", ",", "head2", ",", "isAscending", ")", ";", "return", "head1", ";", "}", "else", "{", "head2", ".", "next", "=", "sortedMerge", "(", "head1", ",", "head2", ".", "next", ",", "isAscending", ")", ";", "return", "head2", ";", "}", "}", "else", "{", "if", "(", "head1", ".", "data", ">", "=", "head2", ".", "data", ")", "{", "head1", ".", "next", "=", "sortedMerge", "(", "head1", ".", "next", ",", "head2", ",", "isAscending", ")", ";", "return", "head1", ";", "}", "else", "{", "head2", ".", "next", "=", "sortedMerge", "(", "head1", ",", "head2", ".", "next", ",", "isAscending", ")", ";", "return", "head2", ";", "}", "}", "}", "</s>"]
["<s>", "private", "Node", "frontBackSplit", "(", "Node", "head", ")", "{", "if", "(", "head", "=", "=", "null", ")", "{", "return", "null", ";", "}", "Node", "slow", "=", "head", ";", "Node", "fast", "=", "head", ".", "next", ";", "while", "(", "fast", "!", "=", "null", "&", "&", "fast", ".", "next", "!", "=", "null", ")", "{", "slow", "=", "slow", ".", "next", ";", "fast", "=", "fast", ".", "next", ".", "next", ";", "}", "Node", "newHead", "=", "slow", ".", "next", ";", "slow", ".", "next", "=", "null", ";", "return", "newHead", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "MergeSortLinkList", "msll", "=", "new", "MergeSortLinkList", "(", ")", ";", "LinkList", "ll", "=", "new", "LinkList", "(", ")", ";", "Node", "head", "=", "null", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:11>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:12>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "-", "<NUM_LIT:3>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:5>", ",", "head", ")", ";", "head", "=", "msll", ".", "sort", "(", "head", ",", "false", ")", ";", "ll", ".", "printList", "(", "head", ")", ";", "}", "</s>"]
["<s>", "private", "Node", "insert", "(", "Node", "head", ",", "Node", "curr", ")", "{", "if", "(", "head", "=", "=", "null", ")", "{", "return", "curr", ";", "}", "Node", "prev", "=", "null", ";", "Node", "start", "=", "head", ";", "while", "(", "start", "!", "=", "null", "&", "&", "curr", ".", "data", ">", "=", "start", ".", "data", ")", "{", "prev", "=", "start", ";", "start", "=", "start", ".", "next", ";", "}", "if", "(", "prev", "=", "=", "null", ")", "{", "curr", ".", "next", "=", "head", ";", "head", "=", "curr", ";", "}", "else", "{", "prev", ".", "next", "=", "curr", ";", "curr", ".", "next", "=", "start", ";", "}", "return", "head", ";", "}", "</s>"]
["<s>", "public", "Node", "sort", "(", "Node", "head", ")", "{", "Node", "result", "=", "null", ";", "Node", "curr", "=", "head", ";", "Node", "prevCurr", "=", "null", ";", "while", "(", "curr", "!", "=", "null", ")", "{", "prevCurr", "=", "curr", ";", "curr", "=", "curr", ".", "next", ";", "prevCurr", ".", "next", "=", "null", ";", "result", "=", "insert", "(", "result", ",", "prevCurr", ")", ";", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "LinkList", "ll", "=", "new", "LinkList", "(", ")", ";", "Node", "head", "=", "null", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:11>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:12>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "-", "<NUM_LIT:3>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:5>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT>", ",", "head", ")", ";", "InsertionSortLinkList", "isll", "=", "new", "InsertionSortLinkList", "(", ")", ";", "head", "=", "isll", ".", "sort", "(", "head", ")", ";", "ll", ".", "printList", "(", "head", ")", ";", "}", "</s>"]
["<s>", "public", "void", "removeDuplicates", "(", "Node", "head", ")", "{", "if", "(", "head", "=", "=", "null", ")", "{", "return", ";", "}", "Node", "current", "=", "head", ";", "while", "(", "current", "!", "=", "null", "&", "&", "current", ".", "next", "!", "=", "null", ")", "{", "if", "(", "current", ".", "data", "=", "=", "current", ".", "next", ".", "data", ")", "{", "current", ".", "next", "=", "current", ".", "next", ".", "next", ";", "}", "else", "{", "current", "=", "current", ".", "next", ";", "}", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "LinkList", "ll", "=", "new", "LinkList", "(", ")", ";", "Node", "head", "=", "null", ";", "head", "=", "ll", ".", "addNode", "(", "1", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "1", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "1", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:4>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:4>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:5>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:6>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:6>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:6>", ",", "head", ")", ";", "RemoveDuplicatesSortedList", "rds", "=", "new", "RemoveDuplicatesSortedList", "(", ")", ";", "rds", ".", "removeDuplicates", "(", "head", ")", ";", "ll", ".", "printList", "(", "head", ")", ";", "}", "</s>"]
["<s>", "public", "Node", "shuffleMergeRecursive", "(", "Node", "head1", ",", "Node", "head2", ")", "{", "if", "(", "head1", "=", "=", "null", ")", "{", "return", "head2", ";", "}", "if", "(", "head2", "=", "=", "null", ")", "{", "return", "head1", ";", "}", "Node", "recur", "=", "null", ";", "recur", "=", "shuffleMergeRecursive", "(", "head1", ".", "next", ",", "head2", ".", "next", ")", ";", "head1", ".", "next", "=", "head2", ";", "head2", ".", "next", "=", "recur", ";", "return", "head1", ";", "}", "</s>"]
["<s>", "public", "Node", "shuffleMerge", "(", "Node", "head1", ",", "Node", "head2", ")", "{", "if", "(", "head1", "=", "=", "null", "|", "|", "head2", "=", "=", "null", ")", "{", "return", "head2", ";", "}", "Node", "tempHead", "=", "head1", ";", "Node", "prev", "=", "null", ";", "while", "(", "head1", "!", "=", "null", "&", "&", "head2", "!", "=", "null", ")", "{", "Node", "temp", "=", "head1", ".", "next", ";", "Node", "temp1", "=", "head2", ".", "next", ";", "head1", ".", "next", "=", "head2", ";", "head2", ".", "next", "=", "temp", ";", "prev", "=", "head2", ";", "head2", "=", "temp1", ";", "head1", "=", "temp", ";", "}", "if", "(", "head2", "!", "=", "null", ")", "{", "prev", ".", "next", "=", "head2", ";", "}", "return", "tempHead", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "LinkList", "ll", "=", "new", "LinkList", "(", ")", ";", "Node", "head1", "=", "null", ";", "Node", "head2", "=", "null", ";", "head1", "=", "ll", ".", "addNode", "(", "1", ",", "head1", ")", ";", "head1", "=", "ll", ".", "addNode", "(", "<NUM_LIT:3>", ",", "head1", ")", ";", "head1", "=", "ll", ".", "addNode", "(", "<NUM_LIT:5>", ",", "head1", ")", ";", "head1", "=", "ll", ".", "addNode", "(", "<NUM_LIT:7>", ",", "head1", ")", ";", "head1", "=", "ll", ".", "addNode", "(", "<NUM_LIT:9>", ",", "head1", ")", ";", "head2", "=", "ll", ".", "addNode", "(", "<NUM_LIT:2>", ",", "head2", ")", ";", "head2", "=", "ll", ".", "addNode", "(", "<NUM_LIT:4>", ",", "head2", ")", ";", "head2", "=", "ll", ".", "addNode", "(", "<NUM_LIT:6>", ",", "head2", ")", ";", "head2", "=", "ll", ".", "addNode", "(", "<NUM_LIT:8>", ",", "head2", ")", ";", "head2", "=", "ll", ".", "addNode", "(", "<NUM_LIT:10>", ",", "head2", ")", ";", "head2", "=", "ll", ".", "addNode", "(", "<NUM_LIT:12>", ",", "head2", ")", ";", "head2", "=", "ll", ".", "addNode", "(", "<NUM_LIT>", ",", "head2", ")", ";", "ShuffleMerge", "sm", "=", "new", "ShuffleMerge", "(", ")", ";", "Node", "result", "=", "sm", ".", "shuffleMerge", "(", "head1", ",", "head2", ")", ";", "ll", ".", "printList", "(", "result", ")", ";", "}", "</s>"]
["<s>", "public", "void", "convert", "(", "Node", "head", ")", "{", "if", "(", "head", "=", "=", "null", ")", "{", "return", ";", "}", "Queue", "<", "Node", ">", "queue", "=", "new", "LinkedList", "<", ">", "(", ")", ";", "queue", ".", "add", "(", "head", ")", ";", "head", "=", "head", ".", "next", ";", "while", "(", "head", "!", "=", "null", ")", "{", "Node", "top", "=", "queue", ".", "poll", "(", ")", ";", "top", ".", "before", "=", "head", ";", "head", "=", "head", ".", "next", ";", "if", "(", "head", "!", "=", "null", ")", "{", "top", ".", "next", "=", "head", ";", "head", "=", "head", ".", "next", ";", "top", ".", "before", ".", "next", "=", "null", ";", "top", ".", "next", ".", "next", "=", "null", ";", "queue", ".", "add", "(", "top", ".", "before", ")", ";", "queue", ".", "add", "(", "top", ".", "next", ")", ";", "}", "else", "{", "break", ";", "}", "}", "}", "</s>"]
["<s>", "public", "void", "inorder", "(", "Node", "head", ")", "{", "if", "(", "head", "=", "=", "null", ")", "{", "return", ";", "}", "inorder", "(", "head", ".", "before", ")", ";", "System", ".", "out", ".", "print", "(", "head", ".", "data", "+", "\"", "\"", ")", ";", "inorder", "(", "head", ".", "next", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "LinkList", "ll", "=", "new", "LinkList", "(", ")", ";", "Node", "head", "=", "null", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:10>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:12>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:15>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:30>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT>", ",", "head", ")", ";", "LinkListToCompleteBinaryTree", "llct", "=", "new", "LinkListToCompleteBinaryTree", "(", ")", ";", "llct", ".", "convert", "(", "head", ")", ";", "llct", ".", "inorder", "(", "head", ")", ";", "}", "</s>"]
["<s>", "public", "Node", "reverse", "(", "Node", "head", ",", "int", "k", ",", "boolean", "reverse", ")", "{", "if", "(", "k", "<", "=", "1", ")", "{", "return", "head", ";", "}", "if", "(", "head", "=", "=", "null", ")", "{", "return", "null", ";", "}", "if", "(", "reverse", ")", "{", "int", "i", "=", "0", ";", "Node", "front", "=", "null", ";", "Node", "middle", "=", "head", ";", "Node", "end", "=", "null", ";", "while", "(", "middle", "!", "=", "null", "&", "&", "i", "<", "k", ")", "{", "end", "=", "middle", ".", "next", ";", "middle", ".", "next", "=", "front", ";", "front", "=", "middle", ";", "middle", "=", "end", ";", "i", "+", "+", ";", "}", "head", ".", "next", "=", "reverse", "(", "middle", ",", "k", ",", "!", "reverse", ")", ";", "head", "=", "front", ";", "}", "else", "{", "int", "i", "=", "0", ";", "Node", "temp", "=", "head", ";", "while", "(", "i", "<", "k", "-", "1", "&", "&", "head", "!", "=", "null", ")", "{", "head", "=", "head", ".", "next", ";", "i", "+", "+", ";", "}", "if", "(", "head", "!", "=", "null", ")", "{", "head", ".", "next", "=", "reverse", "(", "head", ".", "next", ",", "k", ",", "!", "reverse", ")", ";", "}", "head", "=", "temp", ";", "}", "return", "head", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "LinkList", "ll", "=", "new", "LinkList", "(", ")", ";", "Node", "head", "=", "null", ";", "head", "=", "ll", ".", "addNode", "(", "1", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:2>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:3>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:4>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:5>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:6>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:7>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:8>", ",", "head", ")", ";", "ReverseAlternateKNodes", "ra", "=", "new", "ReverseAlternateKNodes", "(", ")", ";", "head", "=", "ra", ".", "reverse", "(", "head", ",", "<NUM_LIT:3>", ",", "false", ")", ";", "ll", ".", "printList", "(", "head", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "loopExists", "(", "Node", "head", ")", "{", "if", "(", "head", "=", "=", "null", ")", "{", "return", "false", ";", "}", "Node", "slow", "=", "head", ";", "Node", "fast", "=", "head", ".", "next", ";", "while", "(", "slow", "!", "=", "fast", "&", "&", "fast", "!", "=", "null", "&", "&", "fast", ".", "next", "!", "=", "null", ")", "{", "slow", "=", "slow", ".", "next", ";", "fast", "=", "fast", ".", "next", ".", "next", ";", "}", "if", "(", "slow", "=", "=", "fast", ")", "{", "return", "true", ";", "}", "else", "{", "return", "false", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "LinkList", "ll", "=", "new", "LinkList", "(", ")", ";", "Node", "head", "=", "null", ";", "head", "=", "ll", ".", "addNode", "(", "1", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:2>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:3>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:4>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:5>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:6>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:7>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:8>", ",", "head", ")", ";", "Node", "node1", "=", "ll", ".", "find", "(", "head", ",", "<NUM_LIT:8>", ")", ";", "Node", "node2", "=", "ll", ".", "find", "(", "head", ",", "<NUM_LIT:4>", ")", ";", "node1", ".", "next", "=", "node2", ";", "LoopInLinkList", "lll", "=", "new", "LoopInLinkList", "(", ")", ";", "System", ".", "out", ".", "println", "(", "lll", ".", "loopExists", "(", "head", ")", ")", ";", "node2", ".", "next", "=", "null", ";", "System", ".", "out", ".", "println", "(", "lll", ".", "loopExists", "(", "head", ")", ")", ";", "node1", "=", "ll", ".", "find", "(", "head", ",", "<NUM_LIT:3>", ")", ";", "node2", ".", "next", "=", "node1", ";", "System", ".", "out", ".", "println", "(", "lll", ".", "loopExists", "(", "head", ")", ")", ";", "}", "</s>"]
["<s>", "public", "Node", "copy", "(", "Node", "head", ")", "{", "if", "(", "head", "=", "=", "null", ")", "{", "return", "null", ";", "}", "Node", "current", "=", "head", ";", "while", "(", "current", "!", "=", "null", ")", "{", "Node", "newNode", "=", "Node", ".", "newNode", "(", "current", ".", "data", ")", ";", "newNode", ".", "next", "=", "current", ".", "next", ";", "newNode", ".", "child", "=", "current", ".", "child", ";", "current", ".", "next", "=", "newNode", ";", "current", "=", "newNode", ".", "next", ";", "}", "current", "=", "head", ";", "while", "(", "current", "!", "=", "null", ")", "{", "current", ".", "next", ".", "child", "=", "current", ".", "child", ".", "next", ";", "current", "=", "current", ".", "next", ".", "next", ";", "}", "Node", "newHead", "=", "null", ";", "Node", "newCurrent", "=", "null", ";", "current", "=", "head", ";", "while", "(", "current", "!", "=", "null", ")", "{", "if", "(", "newHead", "=", "=", "null", ")", "{", "newHead", "=", "current", ".", "next", ";", "current", ".", "next", "=", "current", ".", "next", ".", "next", ";", "newCurrent", "=", "newHead", ";", "}", "else", "{", "newCurrent", ".", "next", "=", "current", ".", "next", ";", "current", ".", "next", "=", "current", ".", "next", ".", "next", ";", "newCurrent", "=", "newCurrent", ".", "next", ";", "}", "current", "=", "current", ".", "next", ";", "}", "return", "newHead", ";", "}", "</s>"]
["<s>", "public", "void", "printList", "(", "Node", "head", ")", "{", "while", "(", "head", "!", "=", "null", ")", "{", "System", ".", "out", ".", "println", "(", "head", ".", "data", "+", "\"", "\"", "+", "head", ".", "child", ".", "data", ")", ";", "head", "=", "head", ".", "next", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "LinkList", "ll", "=", "new", "LinkList", "(", ")", ";", "Node", "head", "=", "null", ";", "head", "=", "ll", ".", "addNode", "(", "1", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:2>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:3>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:4>", ",", "head", ")", ";", "Node", "n1", "=", "ll", ".", "find", "(", "head", ",", "1", ")", ";", "Node", "n2", "=", "ll", ".", "find", "(", "head", ",", "<NUM_LIT:2>", ")", ";", "Node", "n3", "=", "ll", ".", "find", "(", "head", ",", "<NUM_LIT:3>", ")", ";", "Node", "n4", "=", "ll", ".", "find", "(", "head", ",", "<NUM_LIT:4>", ")", ";", "n1", ".", "child", "=", "n2", ";", "n2", ".", "child", "=", "n4", ";", "n3", ".", "child", "=", "n1", ";", "n4", ".", "child", "=", "n1", ";", "CopyLinkListWIthArbitPointer", "cll", "=", "new", "CopyLinkListWIthArbitPointer", "(", ")", ";", "Node", "newHead", "=", "cll", ".", "copy", "(", "head", ")", ";", "cll", ".", "printList", "(", "head", ")", ";", "cll", ".", "printList", "(", "newHead", ")", ";", "}", "</s>"]
["<s>", "public", "void", "flatten", "(", "Node", "head", ")", "{", "Node", "tail", "=", "getTail", "(", "head", ")", ";", "while", "(", "head", "!", "=", "null", ")", "{", "if", "(", "head", ".", "child", "!", "=", "null", ")", "{", "tail", ".", "next", "=", "head", ".", "child", ";", "tail", "=", "getTail", "(", "tail", ".", "next", ")", ";", "head", ".", "child", "=", "null", ";", "}", "head", "=", "head", ".", "next", ";", "}", "}", "</s>"]
["<s>", "private", "Node", "getTail", "(", "Node", "head", ")", "{", "if", "(", "head", "=", "=", "null", ")", "{", "return", "null", ";", "}", "while", "(", "head", ".", "next", "!", "=", "null", ")", "{", "head", "=", "head", ".", "next", ";", "}", "return", "head", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "LinkList", "ll", "=", "new", "LinkList", "(", ")", ";", "Node", "head", "=", "null", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:10>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:5>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:12>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:7>", ",", "head", ")", ";", "head", "=", "ll", ".", "addNode", "(", "<NUM_LIT:11>", ",", "head", ")", ";", "Node", "head1", "=", "null", ";", "head1", "=", "ll", ".", "addNode", "(", "<NUM_LIT:4>", ",", "head1", ")", ";", "head1", "=", "ll", ".", "addNode", "(", "<NUM_LIT:20>", ",", "head1", ")", ";", "head1", "=", "ll", ".", "addNode", "(", "<NUM_LIT>", ",", "head1", ")", ";", "Node", "head2", "=", "null", ";", "head2", "=", "ll", ".", "addNode", "(", "<NUM_LIT:2>", ",", "head2", ")", ";", "head2", "=", "ll", ".", "addNode", "(", "<NUM_LIT:8>", ",", "head2", ")", ";", "Node", "head4", "=", "null", ";", "head4", "=", "ll", ".", "addNode", "(", "<NUM_LIT>", ",", "head4", ")", ";", "head4", "=", "ll", ".", "addNode", "(", "<NUM_LIT:6>", ",", "head4", ")", ";", "Node", "head5", "=", "null", ";", "head5", "=", "ll", ".", "addNode", "(", "<NUM_LIT:9>", ",", "head5", ")", ";", "head5", "=", "ll", ".", "addNode", "(", "<NUM_LIT:8>", ",", "head5", ")", ";", "head5", "=", "ll", ".", "addNode", "(", "<NUM_LIT:15>", ",", "head5", ")", ";", "Node", "f1", "=", "ll", ".", "find", "(", "head", ",", "<NUM_LIT:10>", ")", ";", "f1", ".", "child", "=", "head1", ";", "f1", "=", "ll", ".", "find", "(", "head", ",", "<NUM_LIT:7>", ")", ";", "f1", ".", "child", "=", "head4", ";", "f1", "=", "ll", ".", "find", "(", "head4", ",", "<NUM_LIT>", ")", ";", "f1", ".", "child", "=", "head5", ";", "f1", "=", "ll", ".", "find", "(", "head1", ",", "<NUM_LIT:20>", ")", ";", "f1", ".", "child", "=", "head2", ";", "FlattenLinkList", "fll", "=", "new", "FlattenLinkList", "(", ")", ";", "fll", ".", "flatten", "(", "head", ")", ";", "ll", ".", "printList", "(", "head", ")", ";", "}", "</s>"]
["<s>", "public", "Node", "add", "(", "Node", "head", ",", "int", "data", ")", "{", "if", "(", "head", "=", "=", "null", ")", "{", "head", "=", "Node", ".", "newNode", "(", "data", ")", ";", "head", ".", "next", "=", "head", ";", "return", "head", ";", "}", "Node", "node", "=", "Node", ".", "newNode", "(", "data", ")", ";", "Node", "tail", "=", "getTail", "(", "head", ")", ";", "if", "(", "node", ".", "data", "<", "head", ".", "data", ")", "{", "node", ".", "next", "=", "head", ";", "tail", ".", "next", "=", "node", ";", "return", "node", ";", "}", "Node", "current", "=", "head", ";", "Node", "pre", "=", "null", ";", "while", "(", "current", "!", "=", "tail", "&", "&", "node", ".", "data", ">", "=", "current", ".", "data", ")", "{", "pre", "=", "current", ";", "current", "=", "current", ".", "next", ";", "}", "if", "(", "node", ".", "data", "<", "current", ".", "data", ")", "{", "node", ".", "next", "=", "current", ";", "pre", ".", "next", "=", "node", ";", "}", "else", "{", "node", ".", "next", "=", "tail", ".", "next", ";", "tail", ".", "next", "=", "node", ";", "}", "return", "head", ";", "}", "</s>"]
["<s>", "private", "Node", "getTail", "(", "Node", "head", ")", "{", "Node", "temp", "=", "head", ";", "while", "(", "temp", ".", "next", "!", "=", "head", ")", "{", "temp", "=", "temp", ".", "next", ";", "}", "return", "temp", ";", "}", "</s>"]
["<s>", "public", "void", "printList", "(", "Node", "head", ")", "{", "if", "(", "head", "=", "=", "null", ")", "{", "return", ";", "}", "Node", "current", "=", "head", ".", "next", ";", "System", ".", "out", ".", "println", "(", "head", ".", "data", ")", ";", "while", "(", "current", "!", "=", "head", ")", "{", "System", ".", "out", ".", "println", "(", "current", ".", "data", ")", ";", "current", "=", "current", ".", "next", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "SortedCircularLinkList", "scll", "=", "new", "SortedCircularLinkList", "(", ")", ";", "Node", "head", "=", "null", ";", "head", "=", "scll", ".", "add", "(", "head", ",", "<NUM_LIT:10>", ")", ";", "head", "=", "scll", ".", "add", "(", "head", ",", "<NUM_LIT:12>", ")", ";", "head", "=", "scll", ".", "add", "(", "head", ",", "-", "1", ")", ";", "head", "=", "scll", ".", "add", "(", "head", ",", "-", "<NUM_LIT:5>", ")", ";", "head", "=", "scll", ".", "add", "(", "head", ",", "<NUM_LIT:11>", ")", ";", "head", "=", "scll", ".", "add", "(", "head", ",", "<NUM_LIT:7>", ")", ";", "scll", ".", "printList", "(", "head", ")", ";", "}", "</s>"]
["<s>", "public", "void", "swap", "(", "Node", "nodeA", ",", "Node", "nodeB", ")", "{", "if", "(", "nodeA", "=", "=", "null", "|", "|", "nodeB", "=", "=", "null", ")", "{", "throw", "new", "IllegalArgumentException", "(", ")", ";", "}", "if", "(", "nodeA", ".", "next", "=", "=", "nodeB", ")", "{", "if", "(", "nodeA", ".", "before", "!", "=", "null", ")", "{", "nodeA", ".", "before", ".", "next", "=", "nodeB", ";", "nodeB", ".", "before", "=", "nodeA", ".", "before", ";", "}", "else", "{", "nodeB", ".", "before", "=", "null", ";", "}", "if", "(", "nodeB", ".", "next", "!", "=", "null", ")", "{", "nodeB", ".", "next", ".", "before", "=", "nodeA", ";", "nodeA", ".", "next", "=", "nodeB", ".", "next", ";", "}", "else", "{", "nodeA", ".", "next", "=", "null", ";", "}", "nodeB", ".", "next", "=", "nodeA", ";", "nodeA", ".", "before", "=", "nodeB", ";", "}", "else", "if", "(", "nodeB", ".", "next", "=", "=", "nodeA", ")", "{", "if", "(", "nodeB", ".", "before", "!", "=", "null", ")", "{", "nodeB", ".", "before", ".", "next", "=", "nodeA", ";", "nodeA", ".", "before", "=", "nodeB", ".", "before", ";", "}", "else", "{", "nodeA", ".", "before", "=", "null", ";", "}", "if", "(", "nodeA", ".", "next", "!", "=", "null", ")", "{", "nodeA", ".", "next", ".", "before", "=", "nodeB", ";", "nodeB", ".", "next", "=", "nodeA", ".", "next", ";", "}", "else", "{", "nodeB", ".", "next", "=", "null", ";", "}", "nodeA", ".", "next", "=", "nodeB", ";", "nodeB", ".", "before", "=", "nodeA", ";", "}", "else", "{", "if", "(", "nodeA", ".", "before", "!", "=", "null", ")", "{", "nodeA", ".", "before", ".", "next", "=", "nodeB", ";", "}", "if", "(", "nodeA", ".", "next", "!", "=", "null", ")", "{", "nodeA", ".", "next", ".", "before", "=", "nodeB", ";", "}", "Node", "next", "=", "nodeB", ".", "next", ";", "Node", "before", "=", "nodeB", ".", "before", ";", "nodeB", ".", "before", "=", "nodeA", ".", "before", ";", "nodeB", ".", "next", "=", "nodeA", ".", "next", ";", "if", "(", "next", "!", "=", "null", ")", "{", "next", ".", "before", "=", "nodeA", ";", "}", "if", "(", "before", "!", "=", "null", ")", "{", "before", ".", "next", "=", "nodeA", ";", "}", "nodeA", ".", "before", "=", "before", ";", "nodeA", ".", "next", "=", "next", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "DoubleLinkList", "dll", "=", "new", "DoubleLinkList", "(", ")", ";", "Node", "head", "=", "null", ";", "head", "=", "dll", ".", "addNode", "(", "head", ",", "1", ")", ";", "head", "=", "dll", ".", "addNode", "(", "head", ",", "<NUM_LIT:2>", ")", ";", "head", "=", "dll", ".", "addNode", "(", "head", ",", "<NUM_LIT:3>", ")", ";", "head", "=", "dll", ".", "addNode", "(", "head", ",", "<NUM_LIT:4>", ")", ";", "head", "=", "dll", ".", "addNode", "(", "head", ",", "<NUM_LIT:5>", ")", ";", "SwapTwoNodesInDoubleLL", "snt", "=", "new", "SwapTwoNodesInDoubleLL", "(", ")", ";", "Node", "nodeA", "=", "dll", ".", "find", "(", "head", ",", "<NUM_LIT:3>", ")", ";", "Node", "nodeB", "=", "dll", ".", "find", "(", "head", ",", "<NUM_LIT:5>", ")", ";", "snt", ".", "swap", "(", "nodeA", ",", "nodeB", ")", ";", "dll", ".", "printFrontBack", "(", "head", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "match", "(", "char", "[", "]", "str", ",", "char", "[", "]", "pattern", ")", "{", "return", "match", "(", "str", ",", "pattern", ",", "0", ",", "0", ")", ";", "}", "</s>"]
["<s>", "private", "boolean", "match", "(", "char", "text", "[", "]", ",", "char", "pattern", "[", "]", ",", "int", "pos1", ",", "int", "pos2", ")", "{", "if", "(", "pos2", "=", "=", "pattern", ".", "length", ")", "{", "return", "pos1", "=", "=", "text", ".", "length", ";", "}", "if", "(", "pos2", "=", "=", "pattern", ".", "length", "-", "1", "|", "|", "pattern", "[", "pos2", "+", "1", "]", "!", "=", "<CHAR_LIT>", ")", "{", "return", "(", "pos1", "<", "text", ".", "length", "&", "&", "(", "text", "[", "pos1", "]", "=", "=", "pattern", "[", "pos2", "]", "|", "|", "pattern", "[", "pos2", "]", "=", "=", "<CHAR_LIT:.>", ")", ")", "&", "&", "match", "(", "text", ",", "pattern", ",", "pos1", "+", "1", ",", "pos2", "+", "1", ")", ";", "}", "if", "(", "match", "(", "text", ",", "pattern", ",", "pos1", ",", "pos2", "+", "<NUM_LIT:2>", ")", ")", "{", "return", "true", ";", "}", "while", "(", "pos1", "<", "text", ".", "length", "&", "&", "(", "text", "[", "pos1", "]", "=", "=", "pattern", "[", "pos2", "]", "|", "|", "pattern", "[", "pos2", "]", "=", "=", "<CHAR_LIT:.>", ")", ")", "{", "if", "(", "match", "(", "text", ",", "pattern", ",", "pos1", "+", "1", ",", "pos2", "+", "<NUM_LIT:2>", ")", ")", "{", "return", "true", ";", "}", "pos1", "+", "+", ";", "}", "return", "false", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "RegexMatching", "rm", "=", "new", "RegexMatching", "(", ")", ";", "System", ".", "out", ".", "println", "(", "rm", ".", "match", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ",", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ")", ";", "System", ".", "out", ".", "println", "(", "rm", ".", "match", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ",", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ")", ";", "System", ".", "out", ".", "println", "(", "rm", ".", "match", "(", "\"", "\"", ".", "toCharArray", "(", ")", ",", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ")", ";", "System", ".", "out", ".", "println", "(", "rm", ".", "match", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ",", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ")", ";", "System", ".", "out", ".", "println", "(", "rm", ".", "match", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ",", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ")", ";", "System", ".", "out", ".", "println", "(", "rm", ".", "match", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ",", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ")", ";", "System", ".", "out", ".", "println", "(", "rm", ".", "match", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ",", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ")", ";", "System", ".", "out", ".", "println", "(", "rm", ".", "match", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ",", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ")", ";", "System", ".", "out", ".", "println", "(", "rm", ".", "match", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ",", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ")", ";", "}", "</s>"]
["<s>", "private", "void", "reverse", "(", "char", "[", "]", "str", ",", "int", "low", ",", "int", "high", ")", "{", "while", "(", "low", "<", "high", ")", "{", "swap", "(", "str", ",", "low", ",", "high", ")", ";", "low", "+", "+", ";", "high", "-", "-", ";", "}", "}", "</s>"]
["<s>", "private", "void", "swap", "(", "char", "str", "[", "]", ",", "int", "index1", ",", "int", "index2", ")", "{", "char", "temp", "=", "str", "[", "index1", "]", ";", "str", "[", "index1", "]", "=", "str", "[", "index2", "]", ";", "str", "[", "index2", "]", "=", "temp", ";", "}", "</s>"]
["<s>", "public", "void", "cycleLeaderIteration", "(", "char", "[", "]", "str", ",", "int", "start", ",", "int", "end", ")", "{", "int", "power", "=", "1", ";", "int", "index", "=", "start", ",", "new_index", ";", "int", "len", "=", "end", "-", "start", "+", "1", ";", "char", "temp", ",", "temp1", ";", "while", "(", "power", "<", "len", ")", "{", "index", "=", "start", "+", "power", ";", "new_index", "=", "start", ";", "temp", "=", "str", "[", "index", "]", ";", "while", "(", "new_index", "!", "=", "power", "+", "start", ")", "{", "if", "(", "index", "%", "<NUM_LIT:2>", "=", "=", "0", ")", "{", "new_index", "=", "(", "index", "+", "start", ")", "/", "<NUM_LIT:2>", ";", "}", "else", "{", "new_index", "=", "len", "/", "<NUM_LIT:2>", "+", "(", "index", "+", "start", ")", "/", "<NUM_LIT:2>", ";", "}", "temp1", "=", "str", "[", "new_index", "]", ";", "str", "[", "new_index", "]", "=", "temp", ";", "temp", "=", "temp1", ";", "index", "=", "new_index", ";", "}", "power", "*", "=", "<NUM_LIT:3>", ";", "}", "}", "</s>"]
["<s>", "public", "void", "inPlaceTransformationImproved", "(", "char", "str", "[", "]", ")", "{", "int", "low", "=", "0", ";", "int", "size", "=", "str", ".", "length", ";", "while", "(", "size", ">", "0", ")", "{", "int", "end", "=", "get3PowerK1", "(", "size", ")", ";", "size", "=", "size", "-", "end", ";", "CycleLeaderIteration", "cli", "=", "new", "CycleLeaderIteration", "(", ")", ";", "cli", ".", "iterate", "(", "str", ",", "low", ",", "end", "+", "low", "-", "1", ")", ";", "low", "=", "low", "+", "end", ";", "}", "size", "=", "str", ".", "length", ";", "low", "=", "0", ";", "int", "end", "=", "get3PowerK1", "(", "size", ")", ";", "while", "(", "end", "<", "str", ".", "length", ")", "{", "int", "nextEnd", "=", "get3PowerK1", "(", "str", ".", "length", "-", "end", ")", ";", "reverse", "(", "str", ",", "end", "/", "<NUM_LIT:2>", ",", "end", "-", "1", ")", ";", "reverse", "(", "str", ",", "end", "/", "<NUM_LIT:2>", ",", "end", "+", "nextEnd", "/", "<NUM_LIT:2>", "-", "1", ")", ";", "reverse", "(", "str", ",", "end", "/", "<NUM_LIT:2>", ",", "end", "/", "<NUM_LIT:2>", "+", "nextEnd", "/", "<NUM_LIT:2>", "-", "1", ")", ";", "end", "=", "end", "+", "nextEnd", ";", "}", "}", "</s>"]
["<s>", "private", "int", "get3PowerK1", "(", "int", "size", ")", "{", "int", "power", "=", "1", ";", "while", "(", "(", "power", "*", "<NUM_LIT:3>", "+", "1", ")", "<", "=", "size", ")", "{", "power", "=", "power", "*", "<NUM_LIT:3>", ";", "}", "return", "power", "+", "1", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "char", "str", "[", "]", "=", "{", "<CHAR_LIT:a>", ",", "<CHAR_LIT:1>", ",", "<CHAR_LIT:b>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT:c>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT:e>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT:9>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT:A>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", ",", "<CHAR_LIT>", "}", ";", "InPlaceTransformationOfString", "ip", "=", "new", "InPlaceTransformationOfString", "(", ")", ";", "ip", ".", "inPlaceTransformationImproved", "(", "str", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "str", ".", "length", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "str", "[", "i", "]", ")", ";", "}", "}", "</s>"]
["<s>", "public", "boolean", "hasSubstring", "(", "char", "[", "]", "text", ",", "char", "[", "]", "pattern", ")", "{", "int", "i", "=", "0", ";", "int", "j", "=", "0", ";", "int", "k", "=", "0", ";", "while", "(", "i", "<", "text", ".", "length", "&", "&", "j", "<", "pattern", ".", "length", ")", "{", "if", "(", "text", "[", "i", "]", "=", "=", "pattern", "[", "j", "]", ")", "{", "i", "+", "+", ";", "j", "+", "+", ";", "}", "else", "{", "j", "=", "0", ";", "k", "+", "+", ";", "i", "=", "k", ";", "}", "}", "if", "(", "j", "=", "=", "pattern", ".", "length", ")", "{", "return", "true", ";", "}", "return", "false", ";", "}", "</s>"]
["<s>", "private", "int", "[", "]", "computeTemporaryArray", "(", "char", "pattern", "[", "]", ")", "{", "int", "[", "]", "lps", "=", "new", "int", "[", "pattern", ".", "length", "]", ";", "int", "index", "=", "0", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "pattern", ".", "length", ";", ")", "{", "if", "(", "pattern", "[", "i", "]", "=", "=", "pattern", "[", "index", "]", ")", "{", "lps", "[", "i", "]", "=", "index", "+", "1", ";", "index", "+", "+", ";", "i", "+", "+", ";", "}", "else", "{", "if", "(", "index", "!", "=", "0", ")", "{", "index", "=", "lps", "[", "index", "-", "1", "]", ";", "}", "else", "{", "lps", "[", "i", "]", "=", "0", ";", "i", "+", "+", ";", "}", "}", "}", "return", "lps", ";", "}", "</s>"]
["<s>", "public", "boolean", "KMP", "(", "char", "[", "]", "text", ",", "char", "[", "]", "pattern", ")", "{", "int", "lps", "[", "]", "=", "computeTemporaryArray", "(", "pattern", ")", ";", "int", "i", "=", "0", ";", "int", "j", "=", "0", ";", "while", "(", "i", "<", "text", ".", "length", "&", "&", "j", "<", "pattern", ".", "length", ")", "{", "if", "(", "text", "[", "i", "]", "=", "=", "pattern", "[", "j", "]", ")", "{", "i", "+", "+", ";", "j", "+", "+", ";", "}", "else", "{", "if", "(", "j", "!", "=", "0", ")", "{", "j", "=", "lps", "[", "j", "-", "1", "]", ";", "}", "else", "{", "i", "+", "+", ";", "}", "}", "}", "if", "(", "j", "=", "=", "pattern", ".", "length", ")", "{", "return", "true", ";", "}", "return", "false", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "String", "str", "=", "\"", "<STR_LIT>", "\"", ";", "String", "subString", "=", "\"", "<STR_LIT>", "\"", ";", "SubstringSearch", "ss", "=", "new", "SubstringSearch", "(", ")", ";", "boolean", "result", "=", "ss", ".", "KMP", "(", "str", ".", "toCharArray", "(", ")", ",", "subString", ".", "toCharArray", "(", ")", ")", ";", "System", ".", "out", ".", "print", "(", "result", ")", ";", "}", "</s>"]
["<s>", "public", "int", "removeDuplicates", "(", "char", "input", "[", "]", ")", "{", "int", "slow", "=", "0", ";", "int", "fast", "=", "0", ";", "int", "index", "=", "0", ";", "while", "(", "fast", "<", "input", ".", "length", ")", "{", "while", "(", "fast", "<", "input", ".", "length", "&", "&", "input", "[", "slow", "]", "=", "=", "input", "[", "fast", "]", ")", "{", "fast", "+", "+", ";", "}", "input", "[", "index", "+", "+", "]", "=", "input", "[", "slow", "]", ";", "slow", "=", "fast", ";", "}", "return", "index", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "String", "str", "=", "\"", "<STR_LIT>", "\"", ";", "char", "input", "[", "]", "=", "str", ".", "toCharArray", "(", ")", ";", "RemoveConsecutiveDuplicate", "rcd", "=", "new", "RemoveConsecutiveDuplicate", "(", ")", ";", "int", "len", "=", "rcd", ".", "removeDuplicates", "(", "input", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "len", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "input", "[", "i", "]", "+", "\"", "\"", ")", ";", "}", "}", "</s>"]
["<s>", "private", "int", "[", "]", "calculateZ", "(", "char", "input", "[", "]", ")", "{", "int", "Z", "[", "]", "=", "new", "int", "[", "input", ".", "length", "]", ";", "int", "left", "=", "0", ";", "int", "right", "=", "0", ";", "for", "(", "int", "k", "=", "1", ";", "k", "<", "input", ".", "length", ";", "k", "+", "+", ")", "{", "if", "(", "k", ">", "right", ")", "{", "left", "=", "right", "=", "k", ";", "while", "(", "right", "<", "input", ".", "length", "&", "&", "input", "[", "right", "]", "=", "=", "input", "[", "right", "-", "left", "]", ")", "{", "right", "+", "+", ";", "}", "Z", "[", "k", "]", "=", "right", "-", "left", ";", "right", "-", "-", ";", "}", "else", "{", "int", "k1", "=", "k", "-", "left", ";", "if", "(", "Z", "[", "k1", "]", "<", "right", "-", "k", "+", "1", ")", "{", "Z", "[", "k", "]", "=", "Z", "[", "k1", "]", ";", "}", "else", "{", "left", "=", "k", ";", "while", "(", "right", "<", "input", ".", "length", "&", "&", "input", "[", "right", "]", "=", "=", "input", "[", "right", "-", "left", "]", ")", "{", "right", "+", "+", ";", "}", "Z", "[", "k", "]", "=", "right", "-", "left", ";", "right", "-", "-", ";", "}", "}", "}", "return", "Z", ";", "}", "</s>"]
["<s>", "public", "List", "<", "Integer", ">", "matchPattern", "(", "char", "text", "[", "]", ",", "char", "pattern", "[", "]", ")", "{", "char", "newString", "[", "]", "=", "new", "char", "[", "text", ".", "length", "+", "pattern", ".", "length", "+", "1", "]", ";", "int", "i", "=", "0", ";", "for", "(", "char", "ch", ":", "pattern", ")", "{", "newString", "[", "i", "]", "=", "ch", ";", "i", "+", "+", ";", "}", "newString", "[", "i", "]", "=", "<CHAR_LIT>", ";", "i", "+", "+", ";", "for", "(", "char", "ch", ":", "text", ")", "{", "newString", "[", "i", "]", "=", "ch", ";", "i", "+", "+", ";", "}", "List", "<", "Integer", ">", "result", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "int", "Z", "[", "]", "=", "calculateZ", "(", "newString", ")", ";", "for", "(", "i", "=", "0", ";", "i", "<", "Z", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "Z", "[", "i", "]", "=", "=", "pattern", ".", "length", ")", "{", "result", ".", "add", "(", "i", "-", "pattern", ".", "length", "-", "1", ")", ";", "}", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "String", "text", "=", "\"", "<STR_LIT>", "\"", ";", "String", "pattern", "=", "\"", "<STR_LIT>", "\"", ";", "ZAlgorithm", "zAlgorithm", "=", "new", "ZAlgorithm", "(", ")", ";", "List", "<", "Integer", ">", "result", "=", "zAlgorithm", ".", "matchPattern", "(", "text", ".", "toCharArray", "(", ")", ",", "pattern", ".", "toCharArray", "(", ")", ")", ";", "result", ".", "forEach", "(", "System", ".", "out", ":", ":", "println", ")", ";", "}", "</s>"]
["<s>", "public", "int", "lengthOfLongestSubstring", "(", "String", "s", ")", "{", "Set", "<", "Character", ">", "uniqueSet", "=", "new", "HashSet", "<", ">", "(", ")", ";", "int", "maxSize", "=", "0", ";", "int", "start", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "s", ".", "length", "(", ")", ";", "i", "+", "+", ")", "{", "if", "(", "!", "uniqueSet", ".", "contains", "(", "s", ".", "charAt", "(", "i", ")", ")", ")", "{", "uniqueSet", ".", "add", "(", "s", ".", "charAt", "(", "i", ")", ")", ";", "if", "(", "uniqueSet", ".", "size", "(", ")", ">", "maxSize", ")", "{", "maxSize", "=", "uniqueSet", ".", "size", "(", ")", ";", "}", "}", "else", "{", "while", "(", "s", ".", "charAt", "(", "start", ")", "!", "=", "s", ".", "charAt", "(", "i", ")", ")", "{", "uniqueSet", ".", "remove", "(", "s", ".", "charAt", "(", "start", ")", ")", ";", "start", "+", "+", ";", "}", "start", "+", "+", ";", "}", "}", "return", "maxSize", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "LongestSubstringWithoutRepetingCharacter", "lsw", "=", "new", "LongestSubstringWithoutRepetingCharacter", "(", ")", ";", "System", ".", "out", ".", "println", "(", "lsw", ".", "lengthOfLongestSubstring", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "longestPalindromeSubstringEasy", "(", "char", "arr", "[", "]", ")", "{", "int", "longest_substring", "=", "1", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "int", "x", ",", "y", ";", "int", "palindrome", ";", "x", "=", "i", ";", "y", "=", "i", "+", "1", ";", "palindrome", "=", "0", ";", "while", "(", "x", ">", "=", "0", "&", "&", "y", "<", "arr", ".", "length", "&", "&", "arr", "[", "x", "]", "=", "=", "arr", "[", "y", "]", ")", "{", "x", "-", "-", ";", "y", "+", "+", ";", "palindrome", "+", "=", "<NUM_LIT:2>", ";", "}", "longest_substring", "=", "Math", ".", "max", "(", "longest_substring", ",", "palindrome", ")", ";", "x", "=", "i", "-", "1", ";", "y", "=", "i", "+", "1", ";", "palindrome", "=", "1", ";", "while", "(", "x", ">", "=", "0", "&", "&", "y", "<", "arr", ".", "length", "&", "&", "arr", "[", "x", "]", "=", "=", "arr", "[", "y", "]", ")", "{", "x", "-", "-", ";", "y", "+", "+", ";", "palindrome", "+", "=", "<NUM_LIT:2>", ";", "}", "longest_substring", "=", "Math", ".", "max", "(", "longest_substring", ",", "palindrome", ")", ";", "}", "return", "longest_substring", ";", "}", "</s>"]
["<s>", "public", "int", "longestPalindromicSubstringLinear", "(", "char", "input", "[", "]", ")", "{", "int", "index", "=", "0", ";", "char", "newInput", "[", "]", "=", "new", "char", "[", "<NUM_LIT:2>", "*", "input", ".", "length", "+", "1", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "newInput", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "i", "%", "<NUM_LIT:2>", "!", "=", "0", ")", "{", "newInput", "[", "i", "]", "=", "input", "[", "index", "+", "+", "]", ";", "}", "else", "{", "newInput", "[", "i", "]", "=", "<CHAR_LIT>", ";", "}", "}", "int", "T", "[", "]", "=", "new", "int", "[", "newInput", ".", "length", "]", ";", "int", "start", "=", "0", ";", "int", "end", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "newInput", ".", "length", ";", ")", "{", "while", "(", "start", ">", "0", "&", "&", "end", "<", "newInput", ".", "length", "-", "1", "&", "&", "newInput", "[", "start", "-", "1", "]", "=", "=", "newInput", "[", "end", "+", "1", "]", ")", "{", "start", "-", "-", ";", "end", "+", "+", ";", "}", "T", "[", "i", "]", "=", "end", "-", "start", "+", "1", ";", "if", "(", "end", "=", "=", "T", ".", "length", "-", "1", ")", "{", "break", ";", "}", "int", "newCenter", "=", "end", "+", "(", "i", "%", "<NUM_LIT:2>", "=", "=", "0", "?", "1", ":", "0", ")", ";", "for", "(", "int", "j", "=", "i", "+", "1", ";", "j", "<", "=", "end", ";", "j", "+", "+", ")", "{", "T", "[", "j", "]", "=", "Math", ".", "min", "(", "T", "[", "i", "-", "(", "j", "-", "i", ")", "]", ",", "<NUM_LIT:2>", "*", "(", "end", "-", "j", ")", "+", "1", ")", ";", "if", "(", "j", "+", "T", "[", "i", "-", "(", "j", "-", "i", ")", "]", "/", "<NUM_LIT:2>", "=", "=", "end", ")", "{", "newCenter", "=", "j", ";", "break", ";", "}", "}", "i", "=", "newCenter", ";", "end", "=", "i", "+", "T", "[", "i", "]", "/", "<NUM_LIT:2>", ";", "start", "=", "i", "-", "T", "[", "i", "]", "/", "<NUM_LIT:2>", ";", "}", "int", "max", "=", "Integer", ".", "MIN_VALUE", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "T", ".", "length", ";", "i", "+", "+", ")", "{", "int", "val", ";", "val", "=", "T", "[", "i", "]", "/", "<NUM_LIT:2>", ";", "if", "(", "max", "<", "val", ")", "{", "max", "=", "val", ";", "}", "}", "return", "max", ";", "}", "</s>"]
["<s>", "public", "int", "longestPalindromeDynamic", "(", "char", "[", "]", "str", ")", "{", "boolean", "T", "[", "]", "[", "]", "=", "new", "boolean", "[", "str", ".", "length", "]", "[", "str", ".", "length", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "T", ".", "length", ";", "i", "+", "+", ")", "{", "T", "[", "i", "]", "[", "i", "]", "=", "true", ";", "}", "int", "max", "=", "1", ";", "for", "(", "int", "l", "=", "<NUM_LIT:2>", ";", "l", "<", "=", "str", ".", "length", ";", "l", "+", "+", ")", "{", "int", "len", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "str", ".", "length", "-", "l", "+", "1", ";", "i", "+", "+", ")", "{", "int", "j", "=", "i", "+", "l", "-", "1", ";", "len", "=", "0", ";", "if", "(", "l", "=", "=", "<NUM_LIT:2>", ")", "{", "if", "(", "str", "[", "i", "]", "=", "=", "str", "[", "j", "]", ")", "{", "T", "[", "i", "]", "[", "j", "]", "=", "true", ";", "len", "=", "<NUM_LIT:2>", ";", "}", "}", "else", "{", "if", "(", "str", "[", "i", "]", "=", "=", "str", "[", "j", "]", "&", "&", "T", "[", "i", "+", "1", "]", "[", "j", "-", "1", "]", ")", "{", "T", "[", "i", "]", "[", "j", "]", "=", "true", ";", "len", "=", "j", "-", "i", "+", "1", ";", "}", "}", "if", "(", "len", ">", "max", ")", "{", "max", "=", "len", ";", "}", "}", "}", "return", "max", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "LongestPalindromeSubstring", "lps", "=", "new", "LongestPalindromeSubstring", "(", ")", ";", "System", ".", "out", ".", "println", "(", "lps", ".", "longestPalindromicSubstringLinear", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ")", ";", "System", ".", "out", ".", "println", "(", "lps", ".", "longestPalindromicSubstringLinear", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ")", ";", "System", ".", "out", ".", "println", "(", "lps", ".", "longestPalindromicSubstringLinear", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ")", ";", "System", ".", "out", ".", "println", "(", "lps", ".", "longestPalindromicSubstringLinear", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "isSubString", "(", "char", "str1", "[", "]", ",", "char", "str2", "[", "]", ")", "{", "int", "index", "=", "0", ";", "int", "curLen", "=", "0", ";", "Map", "<", "Character", ",", "Integer", ">", "count", "=", "new", "HashMap", "<", "Character", ",", "Integer", ">", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "str1", ".", "length", ";", "i", "+", "+", ")", "{", "incrementCount", "(", "str1", "[", "i", "]", ",", "count", ")", ";", "}", "Map", "<", "Character", ",", "Integer", ">", "currentCount", "=", "new", "HashMap", "<", "Character", ",", "Integer", ">", "(", ")", ";", "Map", "<", "Character", ",", "Integer", ">", "pos", "=", "new", "HashMap", "<", "Character", ",", "Integer", ">", "(", ")", ";", "while", "(", "index", "<", "str2", ".", "length", ")", "{", "if", "(", "containsAndUpdate", "(", "currentCount", ",", "count", ",", "str2", "[", "index", "]", ",", "pos", ",", "index", ")", ")", "{", "index", "+", "+", ";", "curLen", "+", "+", ";", "}", "else", "{", "Integer", "p", "=", "pos", ".", "get", "(", "str2", "[", "index", "]", ")", ";", "if", "(", "p", "!", "=", "null", ")", "{", "curLen", "=", "index", "-", "p", ";", "index", "=", "p", ";", "}", "else", "{", "index", "+", "+", ";", "}", "currentCount", ".", "clear", "(", ")", ";", "pos", ".", "clear", "(", ")", ";", "}", "if", "(", "curLen", "=", "=", "str1", ".", "length", ")", "{", "return", "true", ";", "}", "}", "return", "false", ";", "}", "</s>"]
["<s>", "private", "boolean", "containsAndUpdate", "(", "Map", "<", "Character", ",", "Integer", ">", "currentCount", ",", "Map", "<", "Character", ",", "Integer", ">", "count", ",", "Character", "ch", ",", "Map", "<", "Character", ",", "Integer", ">", "pos", ",", "int", "index", ")", "{", "if", "(", "count", ".", "containsKey", "(", "ch", ")", ")", "{", "if", "(", "currentCount", ".", "containsKey", "(", "ch", ")", ")", "{", "if", "(", "currentCount", ".", "get", "(", "ch", ")", "<", "count", ".", "get", "(", "ch", ")", ")", "{", "if", "(", "currentCount", ".", "get", "(", "ch", ")", "=", "=", "1", ")", "{", "pos", ".", "put", "(", "ch", ",", "index", ")", ";", "}", "currentCount", ".", "put", "(", "ch", ",", "currentCount", ".", "get", "(", "ch", ")", "+", "1", ")", ";", "return", "true", ";", "}", "}", "else", "{", "currentCount", ".", "put", "(", "ch", ",", "1", ")", ";", "pos", ".", "put", "(", "ch", ",", "index", ")", ";", "return", "true", ";", "}", "}", "return", "false", ";", "}", "</s>"]
["<s>", "private", "void", "incrementCount", "(", "Character", "ch", ",", "Map", "<", "Character", ",", "Integer", ">", "count", ")", "{", "if", "(", "count", ".", "containsKey", "(", "ch", ")", ")", "{", "int", "c", "=", "count", ".", "get", "(", "ch", ")", ";", "count", ".", "put", "(", "ch", ",", "c", "+", "1", ")", ";", "}", "else", "{", "count", ".", "put", "(", "ch", ",", "1", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "char", "str1", "[", "]", "=", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ";", "char", "str2", "[", "]", "=", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ";", "AnagramOfFirstAsSubstring", "ana", "=", "new", "AnagramOfFirstAsSubstring", "(", ")", ";", "System", ".", "out", ".", "println", "(", "ana", ".", "isSubString", "(", "str1", ",", "str2", ")", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "match", "(", "char", "str", "[", "]", ")", "{", "int", "kmp", "[", "]", "=", "buildKMP", "(", "str", ")", ";", "int", "index", "=", "kmp", "[", "str", ".", "length", "-", "1", "]", ";", "int", "end", "=", "str", ".", "length", "-", "index", "-", "1", ";", "if", "(", "end", ">", "=", "str", ".", "length", "/", "<NUM_LIT:2>", ")", "{", "return", "false", ";", "}", "int", "j", "=", "end", "+", "1", ";", "int", "i", "=", "0", ";", "while", "(", "j", "<", "str", ".", "length", ")", "{", "if", "(", "str", "[", "i", "]", "!", "=", "str", "[", "j", "]", ")", "{", "return", "false", ";", "}", "i", "=", "(", "i", "+", "1", ")", "%", "(", "end", "+", "1", ")", ";", "j", "+", "+", ";", "}", "if", "(", "i", "=", "=", "0", ")", "{", "return", "true", ";", "}", "return", "false", ";", "}", "</s>"]
["<s>", "private", "int", "[", "]", "buildKMP", "(", "char", "str", "[", "]", ")", "{", "int", "result", "[", "]", "=", "new", "int", "[", "str", ".", "length", "]", ";", "int", "i", "=", "1", ";", "result", "[", "0", "]", "=", "0", ";", "int", "len", "=", "0", ";", "while", "(", "i", "<", "str", ".", "length", ")", "{", "if", "(", "str", "[", "i", "]", "=", "=", "str", "[", "len", "]", ")", "{", "len", "+", "+", ";", "result", "[", "i", "]", "=", "len", ";", "i", "+", "+", ";", "}", "else", "{", "if", "(", "len", "!", "=", "0", ")", "{", "len", "=", "result", "[", "len", "-", "1", "]", ";", "}", "else", "{", "len", "=", "0", ";", "result", "[", "i", "]", "=", "0", ";", "i", "+", "+", ";", "}", "}", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "NTMatch", "ntMatch", "=", "new", "NTMatch", "(", ")", ";", "System", ".", "out", ".", "println", "(", "ntMatch", ".", "match", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ")", ";", "}", "</s>"]
["<s>", "public", "void", "print", "(", "String", "[", "]", "string", ")", "{", "Map", "<", "String", ",", "List", "<", "Integer", ">", ">", "invertedIndex", "=", "new", "HashMap", "<", "String", ",", "List", "<", "Integer", ">", ">", "(", ")", ";", "int", "index", "=", "0", ";", "for", "(", "String", "str", ":", "string", ")", "{", "char", "[", "]", "charArray", "=", "str", ".", "toCharArray", "(", ")", ";", "Arrays", ".", "sort", "(", "charArray", ")", ";", "String", "newString", "=", "new", "String", "(", "charArray", ")", ";", "if", "(", "invertedIndex", ".", "containsKey", "(", "newString", ")", ")", "{", "List", "<", "Integer", ">", "pos", "=", "invertedIndex", ".", "get", "(", "newString", ")", ";", "pos", ".", "add", "(", "index", ")", ";", "}", "else", "{", "List", "<", "Integer", ">", "pos", "=", "new", "ArrayList", "<", "Integer", ">", "(", ")", ";", "pos", ".", "add", "(", "index", ")", ";", "invertedIndex", ".", "put", "(", "newString", ",", "pos", ")", ";", "}", "index", "+", "+", ";", "}", "for", "(", "List", "<", "Integer", ">", "result", ":", "invertedIndex", ".", "values", "(", ")", ")", "{", "for", "(", "Integer", "i", ":", "result", ")", "{", "System", ".", "out", ".", "println", "(", "string", "[", "i", "]", ")", ";", "}", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "String", "str", "[", "]", "=", "{", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", "}", ";", "PrintAnagramTogether", "pat", "=", "new", "PrintAnagramTogether", "(", ")", ";", "pat", ".", "print", "(", "str", ")", ";", "}", "</s>"]
["<s>", "public", "int", "patternSearch", "(", "char", "[", "]", "text", ",", "char", "[", "]", "pattern", ")", "{", "int", "m", "=", "pattern", ".", "length", ";", "int", "n", "=", "text", ".", "length", ";", "long", "patternHash", "=", "createHash", "(", "pattern", ",", "m", "-", "1", ")", ";", "long", "textHash", "=", "createHash", "(", "text", ",", "m", "-", "1", ")", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "=", "n", "-", "m", "+", "1", ";", "i", "+", "+", ")", "{", "if", "(", "patternHash", "=", "=", "textHash", "&", "&", "checkEqual", "(", "text", ",", "i", "-", "1", ",", "i", "+", "m", "-", "<NUM_LIT:2>", ",", "pattern", ",", "0", ",", "m", "-", "1", ")", ")", "{", "return", "i", "-", "1", ";", "}", "if", "(", "i", "<", "n", "-", "m", "+", "1", ")", "{", "textHash", "=", "recalculateHash", "(", "text", ",", "i", "-", "1", ",", "i", "+", "m", "-", "1", ",", "textHash", ",", "m", ")", ";", "}", "}", "return", "-", "1", ";", "}", "</s>"]
["<s>", "private", "long", "recalculateHash", "(", "char", "[", "]", "str", ",", "int", "oldIndex", ",", "int", "newIndex", ",", "long", "oldHash", ",", "int", "patternLen", ")", "{", "long", "newHash", "=", "oldHash", "-", "str", "[", "oldIndex", "]", ";", "newHash", "=", "newHash", "/", "prime", ";", "newHash", "+", "=", "str", "[", "newIndex", "]", "*", "Math", ".", "pow", "(", "prime", ",", "patternLen", "-", "1", ")", ";", "return", "newHash", ";", "}", "</s>"]
["<s>", "private", "long", "createHash", "(", "char", "[", "]", "str", ",", "int", "end", ")", "{", "long", "hash", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "=", "end", ";", "i", "+", "+", ")", "{", "hash", "+", "=", "str", "[", "i", "]", "*", "Math", ".", "pow", "(", "prime", ",", "i", ")", ";", "}", "return", "hash", ";", "}", "</s>"]
["<s>", "private", "boolean", "checkEqual", "(", "char", "str1", "[", "]", ",", "int", "start1", ",", "int", "end1", ",", "char", "str2", "[", "]", ",", "int", "start2", ",", "int", "end2", ")", "{", "if", "(", "end1", "-", "start1", "!", "=", "end2", "-", "start2", ")", "{", "return", "false", ";", "}", "while", "(", "start1", "<", "=", "end1", "&", "&", "start2", "<", "=", "end2", ")", "{", "if", "(", "str1", "[", "start1", "]", "!", "=", "str2", "[", "start2", "]", ")", "{", "return", "false", ";", "}", "start1", "+", "+", ";", "start2", "+", "+", ";", "}", "return", "true", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "RabinKarpSearch", "rks", "=", "new", "RabinKarpSearch", "(", ")", ";", "System", ".", "out", ".", "println", "(", "rks", ".", "patternSearch", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ",", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ")", ";", "System", ".", "out", ".", "println", "(", "rks", ".", "patternSearch", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ",", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ")", ";", "System", ".", "out", ".", "println", "(", "rks", ".", "patternSearch", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ",", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ")", ";", "System", ".", "out", ".", "println", "(", "rks", ".", "patternSearch", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ",", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ")", ";", "System", ".", "out", ".", "println", "(", "rks", ".", "patternSearch", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ",", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ")", ";", "}", "</s>"]
["<s>", "public", "List", "<", "Integer", ">", "findSubstring", "(", "String", "s", ",", "String", "[", "]", "words", ")", "{", "Map", "<", "String", ",", "Integer", ">", "actual", "=", "new", "HashMap", "<", ">", "(", ")", ";", "Map", "<", "String", ",", "Integer", ">", "used", "=", "new", "HashMap", "<", ">", "(", ")", ";", "set", "(", "actual", ",", "words", ")", ";", "List", "<", "Integer", ">", "output", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "int", "len", "=", "words", "[", "0", "]", ".", "length", "(", ")", ";", "int", "count", "=", "words", ".", "length", ";", "int", "k", "=", "words", ".", "length", "*", "len", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "=", "s", ".", "length", "(", ")", "-", "k", ";", "i", "+", "+", ")", "{", "int", "j", "=", "i", ";", "int", "currentCount", "=", "0", ";", "while", "(", "true", ")", "{", "if", "(", "j", "+", "len", ">", "s", ".", "length", "(", ")", ")", "{", "break", ";", "}", "String", "sub", "=", "s", ".", "substring", "(", "j", ",", "j", "+", "len", ")", ";", "Integer", "actualCount", "=", "actual", ".", "get", "(", "sub", ")", ";", "if", "(", "actualCount", "!", "=", "null", ")", "{", "Integer", "usedCount", "=", "used", ".", "get", "(", "sub", ")", ";", "if", "(", "usedCount", "=", "=", "null", ")", "{", "usedCount", "=", "0", ";", "}", "if", "(", "actualCount", ">", "usedCount", ")", "{", "j", "=", "j", "+", "len", ";", "currentCount", "+", "+", ";", "used", ".", "put", "(", "sub", ",", "usedCount", "+", "1", ")", ";", "}", "else", "{", "break", ";", "}", "}", "else", "{", "break", ";", "}", "if", "(", "currentCount", "=", "=", "count", ")", "{", "break", ";", "}", "}", "used", ".", "clear", "(", ")", ";", "if", "(", "currentCount", "=", "=", "count", ")", "{", "output", ".", "add", "(", "i", ")", ";", "}", "}", "return", "output", ";", "}", "</s>"]
["<s>", "private", "void", "set", "(", "Map", "<", "String", ",", "Integer", ">", "actual", ",", "String", "[", "]", "words", ")", "{", "for", "(", "String", "word", ":", "words", ")", "{", "if", "(", "actual", ".", "containsKey", "(", "word", ")", ")", "{", "actual", ".", "put", "(", "word", ",", "actual", ".", "get", "(", "word", ")", "+", "1", ")", ";", "}", "else", "{", "actual", ".", "put", "(", "word", ",", "1", ")", ";", "}", "}", "}", "</s>"]
["<s>", "public", "void", "shorten", "(", "char", "input", "[", "]", ")", "{", "for", "(", "int", "i", "=", "1", ";", "i", "<", "input", ".", "length", "-", "1", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "i", ";", "j", "<", "input", ".", "length", "-", "1", ";", "j", "+", "+", ")", "{", "for", "(", "int", "k", "=", "0", ";", "k", "<", "i", ";", "k", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "input", "[", "k", "]", ")", ";", "}", "System", ".", "out", ".", "print", "(", "j", "-", "i", "+", "1", ")", ";", "for", "(", "int", "k", "=", "j", "+", "1", ";", "k", "<", "input", ".", "length", ";", "k", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "input", "[", "k", "]", ")", ";", "}", "System", ".", "out", ".", "println", "(", ")", ";", "}", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "WordAbbreviationCombination", "ssc", "=", "new", "WordAbbreviationCombination", "(", ")", ";", "ssc", ".", "shorten", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "int", "hashCode", "(", ")", "{", "final", "int", "prime", "=", "<NUM_LIT:31>", ";", "int", "result", "=", "1", ";", "result", "=", "prime", "*", "result", "+", "getOuterType", "(", ")", ".", "hashCode", "(", ")", ";", "result", "=", "prime", "*", "result", "+", "ch", ";", "return", "result", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "boolean", "equals", "(", "Object", "obj", ")", "{", "if", "(", "this", "=", "=", "obj", ")", "return", "true", ";", "if", "(", "obj", "=", "=", "null", ")", "return", "false", ";", "if", "(", "getClass", "(", ")", "!", "=", "obj", ".", "getClass", "(", ")", ")", "return", "false", ";", "CharCount", "other", "=", "(", "CharCount", ")", "obj", ";", "if", "(", "!", "getOuterType", "(", ")", ".", "equals", "(", "other", ".", "getOuterType", "(", ")", ")", ")", "return", "false", ";", "if", "(", "ch", "!", "=", "other", ".", "ch", ")", "return", "false", ";", "return", "true", ";", "}", "</s>"]
["<s>", "private", "RearrangeDuplicateCharsdDistanceAway", "getOuterType", "(", ")", "{", "return", "RearrangeDuplicateCharsdDistanceAway", ".", "this", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "String", "toString", "(", ")", "{", "return", "\"", "<STR_LIT>", "\"", "+", "ch", "+", "\"", "<STR_LIT>", "\"", "+", "count", "+", "\"", "<STR_LIT:]>", "\"", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "int", "compareTo", "(", "CharCount", "cc", ")", "{", "if", "(", "this", ".", "count", ">", "=", "cc", ".", "count", ")", "{", "return", "-", "1", ";", "}", "else", "{", "return", "1", ";", "}", "}", "</s>"]
["<s>", "public", "boolean", "rearrangeExactKDistanceAway", "(", "char", "input", "[", "]", ",", "int", "d", ")", "{", "PriorityQueue", "<", "CharCount", ">", "heap", "=", "new", "PriorityQueue", "<", "CharCount", ">", "(", ")", ";", "Map", "<", "Character", ",", "Integer", ">", "map", "=", "new", "HashMap", "<", "Character", ",", "Integer", ">", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "int", "count", "=", "1", ";", "if", "(", "map", ".", "containsKey", "(", "input", "[", "i", "]", ")", ")", "{", "count", "=", "map", ".", "get", "(", "input", "[", "i", "]", ")", ";", "count", "+", "+", ";", "}", "map", ".", "put", "(", "input", "[", "i", "]", ",", "count", ")", ";", "input", "[", "i", "]", "=", "0", ";", "}", "for", "(", "Character", "ch", ":", "map", ".", "keySet", "(", ")", ")", "{", "CharCount", "cc", "=", "new", "CharCount", "(", ")", ";", "cc", ".", "ch", "=", "ch", ";", "cc", ".", "count", "=", "map", ".", "get", "(", "ch", ")", ";", "heap", ".", "add", "(", "cc", ")", ";", "}", "while", "(", "heap", ".", "size", "(", ")", ">", "0", ")", "{", "CharCount", "cc", "=", "heap", ".", "poll", "(", ")", ";", "int", "i", ";", "for", "(", "i", "=", "0", ";", "i", "<", "input", ".", "length", "&", "&", "input", "[", "i", "]", "!", "=", "0", ";", "i", "+", "+", ")", ";", "if", "(", "i", "=", "=", "input", ".", "length", ")", "{", "return", "false", ";", "}", "while", "(", "cc", ".", "count", ">", "0", "&", "&", "i", "<", "input", ".", "length", ")", "{", "input", "[", "i", "]", "=", "cc", ".", "ch", ";", "i", "=", "i", "+", "d", ";", "cc", ".", "count", "-", "-", ";", "}", "if", "(", "cc", ".", "count", ">", "0", ")", "{", "return", "false", ";", "}", "}", "return", "true", ";", "}", "</s>"]
["<s>", "private", "void", "getAllFeasibleCharacters", "(", "char", "output", "[", "]", ",", "int", "k", ",", "int", "pos", ",", "Set", "<", "Character", ">", "allChars", ")", "{", "for", "(", "int", "i", "=", "pos", "-", "1", ";", "i", ">", "pos", "-", "k", "&", "&", "i", ">", "=", "0", ";", "i", "-", "-", ")", "{", "allChars", ".", "remove", "(", "output", "[", "i", "]", ")", ";", "}", "}", "</s>"]
["<s>", "public", "boolean", "rearrangeAtleastkDistanceAway", "(", "char", "input", "[", "]", ",", "int", "k", ")", "{", "Map", "<", "Character", ",", "Integer", ">", "map", "=", "new", "HashMap", "<", "Character", ",", "Integer", ">", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "int", "count", "=", "1", ";", "if", "(", "map", ".", "containsKey", "(", "input", "[", "i", "]", ")", ")", "{", "count", "=", "map", ".", "get", "(", "input", "[", "i", "]", ")", ";", "count", "+", "+", ";", "}", "map", ".", "put", "(", "input", "[", "i", "]", ",", "count", ")", ";", "input", "[", "i", "]", "=", "0", ";", "}", "return", "rearrangeAtleastkDistanceAway", "(", "map", ",", "input", ",", "0", ",", "k", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "rearrangeAtleastkDistanceAway", "(", "Map", "<", "Character", ",", "Integer", ">", "charCount", ",", "char", "output", "[", "]", ",", "int", "pos", ",", "int", "k", ")", "{", "if", "(", "pos", "=", "=", "output", ".", "length", "&", "&", "charCount", ".", "size", "(", ")", "=", "=", "0", ")", "{", "return", "true", ";", "}", "Set", "<", "Character", ">", "allChars", "=", "new", "HashSet", "<", "Character", ">", "(", ")", ";", "for", "(", "char", "ch", ":", "charCount", ".", "keySet", "(", ")", ")", "{", "allChars", ".", "add", "(", "ch", ")", ";", "}", "getAllFeasibleCharacters", "(", "output", ",", "k", ",", "pos", ",", "allChars", ")", ";", "for", "(", "char", "ch", ":", "allChars", ")", "{", "output", "[", "pos", "]", "=", "ch", ";", "int", "c", "=", "charCount", ".", "get", "(", "ch", ")", ";", "if", "(", "c", "-", "1", "=", "=", "0", ")", "{", "charCount", ".", "remove", "(", "ch", ")", ";", "}", "else", "{", "charCount", ".", "put", "(", "ch", ",", "c", "-", "1", ")", ";", "}", "boolean", "r", "=", "rearrangeAtleastkDistanceAway", "(", "charCount", ",", "output", ",", "pos", "+", "1", ",", "k", ")", ";", "if", "(", "r", ")", "{", "return", "true", ";", "}", "charCount", ".", "put", "(", "ch", ",", "c", ")", ";", "}", "return", "false", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "String", "str", "=", "\"", "<STR_LIT>", "\"", ";", "char", "input", "[", "]", "=", "str", ".", "toCharArray", "(", ")", ";", "RearrangeDuplicateCharsdDistanceAway", "rdc", "=", "new", "RearrangeDuplicateCharsdDistanceAway", "(", ")", ";", "boolean", "r", "=", "rdc", ".", "rearrangeAtleastkDistanceAway", "(", "input", ",", "<NUM_LIT:3>", ")", ";", "if", "(", "r", ")", "{", "for", "(", "char", "ch", ":", "input", ")", "{", "System", ".", "out", ".", "print", "(", "ch", "+", "\"", "\"", ")", ";", "}", "}", "else", "{", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", ")", ";", "}", "}", "</s>"]
["<s>", "public", "void", "iterate", "(", "char", "str", "[", "]", ",", "int", "start", ",", "int", "end", ")", "{", "int", "len", "=", "end", "-", "start", "+", "1", ";", "int", "power", "=", "1", ";", "while", "(", "power", "<", "len", ")", "{", "int", "index", "=", "power", ";", "int", "newIndex", "=", "-", "1", ";", "char", "temp", "=", "str", "[", "start", "+", "index", "]", ";", "char", "temp1", ";", "while", "(", "newIndex", "!", "=", "power", ")", "{", "if", "(", "index", "%", "<NUM_LIT:2>", "=", "=", "0", ")", "{", "newIndex", "=", "index", "/", "<NUM_LIT:2>", ";", "}", "else", "{", "newIndex", "=", "len", "/", "<NUM_LIT:2>", "+", "index", "/", "<NUM_LIT:2>", ";", "}", "temp1", "=", "str", "[", "start", "+", "newIndex", "]", ";", "str", "[", "start", "+", "newIndex", "]", "=", "temp", ";", "temp", "=", "temp1", ";", "index", "=", "newIndex", ";", "}", "power", "=", "power", "*", "<NUM_LIT:3>", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "String", "str", "=", "\"", "<STR_LIT>", "\"", ";", "char", "[", "]", "str1", "=", "str", ".", "toCharArray", "(", ")", ";", "CycleLeaderIteration", "cli", "=", "new", "CycleLeaderIteration", "(", ")", ";", "cli", ".", "iterate", "(", "str1", ",", "0", ",", "str1", ".", "length", ")", ";", "for", "(", "char", "ch", ":", "str1", ")", "{", "System", ".", "out", ".", "print", "(", "ch", "+", "\"", "\"", ")", ";", "}", "}", "</s>"]
["<s>", "private", "int", "findNumberOfSmallerCharactersOnRight", "(", "int", "index", ",", "char", "[", "]", "str", ")", "{", "int", "count", "=", "0", ";", "for", "(", "int", "i", "=", "index", "+", "1", ";", "i", "<", "str", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "str", "[", "i", "]", "<", "str", "[", "index", "]", ")", "{", "count", "+", "+", ";", "}", "}", "return", "count", ";", "}", "</s>"]
["<s>", "private", "int", "factorial", "(", "int", "n", ")", "{", "int", "fact", "=", "1", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "=", "n", ";", "i", "+", "+", ")", "{", "fact", "=", "i", "*", "fact", ";", "}", "return", "fact", ";", "}", "</s>"]
["<s>", "public", "int", "rank", "(", "char", "[", "]", "str", ")", "{", "int", "rank", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "str", ".", "length", ";", "i", "+", "+", ")", "{", "int", "num", "=", "findNumberOfSmallerCharactersOnRight", "(", "i", ",", "str", ")", ";", "rank", "+", "=", "factorial", "(", "str", ".", "length", "-", "i", "-", "1", ")", "*", "num", ";", "}", "return", "rank", "+", "1", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "LexicographicRankInPermutation", "lrp", "=", "new", "LexicographicRankInPermutation", "(", ")", ";", "int", "rank", "=", "lrp", ".", "rank", "(", "\"", "<STR_LIT>", "\"", ".", "toCharArray", "(", ")", ")", ";", "System", ".", "out", ".", "println", "(", "rank", ")", ";", "}", "</s>"]
["<s>", "private", "int", "updateCounter", "(", "char", "[", "]", "result", ",", "int", "current", ",", "int", "counter", ")", "{", "int", "tempCounter", "=", "counter", ";", "int", "len", "=", "1", ";", "while", "(", "tempCounter", ">", "0", ")", "{", "len", "=", "len", "*", "<NUM_LIT:10>", ";", "tempCounter", "/", "=", "<NUM_LIT:10>", ";", "}", "len", "=", "len", "/", "<NUM_LIT:10>", ";", "while", "(", "counter", ">", "0", ")", "{", "result", "[", "current", "+", "+", "]", "=", "(", "char", ")", "(", "(", "counter", "/", "len", ")", "+", "<CHAR_LIT:0>", ")", ";", "counter", "=", "counter", "%", "len", ";", "len", "/", "=", "<NUM_LIT:10>", ";", "}", "return", "current", ";", "}", "</s>"]
["<s>", "public", "int", "encoding", "(", "char", "[", "]", "str", ",", "char", "[", "]", "result", ")", "{", "char", "pickedChar", "=", "str", "[", "0", "]", ";", "int", "current", "=", "0", ";", "int", "counter", "=", "1", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "str", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "str", "[", "i", "]", "=", "=", "pickedChar", ")", "{", "counter", "+", "+", ";", "}", "else", "{", "result", "[", "current", "+", "+", "]", "=", "pickedChar", ";", "current", "=", "updateCounter", "(", "result", ",", "current", ",", "counter", ")", ";", "pickedChar", "=", "str", "[", "i", "]", ";", "counter", "=", "1", ";", "}", "}", "result", "[", "current", "+", "+", "]", "=", "pickedChar", ";", "current", "=", "updateCounter", "(", "result", ",", "current", ",", "counter", ")", ";", "return", "current", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "String", "str", "=", "\"", "<STR_LIT>", "\"", ";", "char", "result", "[", "]", "=", "new", "char", "[", "str", ".", "length", "(", ")", "*", "<NUM_LIT:2>", "]", ";", "RunLengthEncoding", "rle", "=", "new", "RunLengthEncoding", "(", ")", ";", "int", "current", "=", "rle", ".", "encoding", "(", "str", ".", "toCharArray", "(", ")", ",", "result", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "current", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "result", "[", "i", "]", ")", ";", "}", "}", "</s>"]
["<s>", "public", "String", "minWindow", "(", "String", "s", ",", "String", "t", ")", "{", "Map", "<", "Character", ",", "Integer", ">", "countMap", "=", "new", "HashMap", "<", ">", "(", ")", ";", "for", "(", "char", "s1", ":", "t", ".", "toCharArray", "(", ")", ")", "{", "countMap", ".", "compute", "(", "s1", ",", "(", "key", ",", "val", ")", "-", ">", "{", "if", "(", "val", "=", "=", "null", ")", "{", "return", "1", ";", "}", "return", "val", "+", "1", ";", "}", ")", ";", "}", "Map", "<", "Character", ",", "Integer", ">", "foundMap", "=", "new", "HashMap", "<", ">", "(", ")", ";", "for", "(", "char", "s1", ":", "t", ".", "toCharArray", "(", ")", ")", "{", "foundMap", ".", "put", "(", "s1", ",", "0", ")", ";", "}", "int", "startWindow", ";", "int", "charsFound", "=", "0", ";", "for", "(", "startWindow", "=", "0", ";", "startWindow", "<", "s", ".", "length", "(", ")", ";", "startWindow", "+", "+", ")", "{", "if", "(", "countMap", ".", "containsKey", "(", "s", ".", "charAt", "(", "startWindow", ")", ")", ")", "{", "break", ";", "}", "}", "int", "minWindowStart", "=", "Integer", ".", "MIN_VALUE", ";", "int", "minWindowEnd", "=", "-", "1", ";", "int", "totalCharacters", "=", "t", ".", "length", "(", ")", ";", "for", "(", "int", "i", "=", "startWindow", ";", "i", "<", "s", ".", "length", "(", ")", ";", "i", "+", "+", ")", "{", "char", "ch", "=", "s", ".", "charAt", "(", "i", ")", ";", "Integer", "count", "=", "countMap", ".", "get", "(", "ch", ")", ";", "if", "(", "count", "!", "=", "null", ")", "{", "Integer", "actualCount", "=", "foundMap", ".", "get", "(", "ch", ")", ";", "foundMap", ".", "put", "(", "ch", ",", "actualCount", "+", "1", ")", ";", "if", "(", "actualCount", "<", "count", ")", "{", "charsFound", "+", "+", ";", "if", "(", "charsFound", "=", "=", "totalCharacters", ")", "{", "if", "(", "i", "-", "startWindow", "<", "minWindowEnd", "-", "minWindowStart", ")", "{", "minWindowStart", "=", "startWindow", ";", "minWindowEnd", "=", "i", ";", "}", "ShrinkResult", "sr", "=", "shrinkWindow", "(", "countMap", ",", "foundMap", ",", "startWindow", ",", "s", ",", "i", ")", ";", "if", "(", "sr", ".", "fullStartWindow", "!", "=", "-", "1", ")", "{", "if", "(", "i", "-", "sr", ".", "fullStartWindow", "<", "minWindowEnd", "-", "minWindowStart", ")", "{", "minWindowStart", "=", "sr", ".", "fullStartWindow", ";", "minWindowEnd", "=", "i", ";", "}", "}", "startWindow", "=", "sr", ".", "startWindow", ";", "charsFound", "-", "-", ";", "}", "}", "}", "}", "if", "(", "minWindowEnd", "=", "=", "-", "1", ")", "{", "return", "\"", "\"", ";", "}", "else", "{", "return", "s", ".", "substring", "(", "minWindowStart", ",", "minWindowEnd", "+", "1", ")", ";", "}", "}", "</s>"]
["<s>", "private", "ShrinkResult", "shrinkWindow", "(", "Map", "<", "Character", ",", "Integer", ">", "countMap", ",", "Map", "<", "Character", ",", "Integer", ">", "foundMap", ",", "int", "startWindow", ",", "String", "s", ",", "int", "end", ")", "{", "boolean", "firstViolation", "=", "false", ";", "int", "diff", "=", "-", "1", ";", "int", "i", ";", "for", "(", "i", "=", "startWindow", ";", "i", "<", "=", "end", ";", "i", "+", "+", ")", "{", "if", "(", "!", "firstViolation", ")", "{", "diff", "=", "i", ";", "}", "char", "ch", "=", "s", ".", "charAt", "(", "i", ")", ";", "Integer", "count", "=", "countMap", ".", "get", "(", "ch", ")", ";", "if", "(", "count", "!", "=", "null", ")", "{", "int", "actualCount", "=", "foundMap", ".", "get", "(", "ch", ")", ";", "if", "(", "firstViolation", ")", "{", "if", "(", "actualCount", "<", "=", "count", ")", "{", "break", ";", "}", "}", "else", "{", "if", "(", "actualCount", "=", "=", "count", ")", "{", "firstViolation", "=", "true", ";", "}", "}", "foundMap", ".", "compute", "(", "ch", ",", "(", "key", ",", "val", ")", "-", ">", "val", "-", "1", ")", ";", "}", "}", "ShrinkResult", "sr", "=", "new", "ShrinkResult", "(", ")", ";", "sr", ".", "fullStartWindow", "=", "diff", ";", "sr", ".", "startWindow", "=", "i", ";", "return", "sr", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "String", "str", "=", "\"", "<STR_LIT>", "\"", ";", "String", "subString", "=", "\"", "<STR_LIT>", "\"", ";", "SmallestWindowContaingAllCharacters", "swcac", "=", "new", "SmallestWindowContaingAllCharacters", "(", ")", ";", "String", "result", "=", "swcac", ".", "minWindow", "(", "str", ",", "subString", ")", ";", "System", ".", "out", ".", "println", "(", "result", ")", ";", "}", "</s>"]
["<s>", "Point", "(", "int", "x", ",", "int", "y", ")", "{", "this", ".", "x", "=", "x", ";", "this", ".", "y", "=", "y", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "int", "compare", "(", "Point", "o1", ",", "Point", "o2", ")", "{", "if", "(", "o1", ".", "x", "<", "o2", ".", "x", ")", "{", "return", "-", "1", ";", "}", "else", "{", "return", "1", ";", "}", "}", "</s>"]
["<s>", "@", "Override", "public", "int", "compare", "(", "Point", "o1", ",", "Point", "o2", ")", "{", "if", "(", "o1", ".", "y", "<", "o2", ".", "y", ")", "{", "return", "-", "1", ";", "}", "else", "{", "return", "1", ";", "}", "}", "</s>"]
["<s>", "public", "double", "closestPairOfPoints", "(", "Point", "[", "]", "points", ")", "{", "if", "(", "points", ".", "length", "<", "<NUM_LIT:2>", ")", "{", "throw", "new", "IllegalArgumentException", "(", ")", ";", "}", "Point", "[", "]", "px", "=", "new", "Point", "[", "points", ".", "length", "]", ";", "Point", "[", "]", "py", "=", "new", "Point", "[", "points", ".", "length", "]", ";", "int", "i", "=", "0", ";", "for", "(", "Point", "point", ":", "points", ")", "{", "px", "[", "i", "+", "+", "]", "=", "point", ";", "}", "i", "=", "0", ";", "for", "(", "Point", "point", ":", "points", ")", "{", "py", "[", "i", "+", "+", "]", "=", "point", ";", "}", "XCoordinatorSorter", "xSorter", "=", "new", "XCoordinatorSorter", "(", ")", ";", "YCoordinatorSorter", "ySorter", "=", "new", "YCoordinatorSorter", "(", ")", ";", "Arrays", ".", "sort", "(", "px", ",", "xSorter", ")", ";", "Arrays", ".", "sort", "(", "py", ",", "ySorter", ")", ";", "int", "minDistance", "=", "closestPairOfPoints", "(", "px", ",", "py", ",", "0", ",", "points", ".", "length", "-", "1", ")", ";", "return", "Math", ".", "sqrt", "(", "minDistance", ")", ";", "}", "</s>"]
["<s>", "private", "int", "closestPairOfPoints", "(", "Point", "[", "]", "px", ",", "Point", "[", "]", "py", ",", "int", "start", ",", "int", "end", ")", "{", "if", "(", "end", "-", "start", "<", "<NUM_LIT:3>", ")", "{", "return", "computeMinDistance", "(", "px", ",", "start", ",", "end", ")", ";", "}", "int", "mid", "=", "(", "start", "+", "end", ")", "/", "<NUM_LIT:2>", ";", "Point", "[", "]", "pyLeft", "=", "new", "Point", "[", "mid", "-", "start", "+", "1", "]", ";", "Point", "[", "]", "pyRight", "=", "new", "Point", "[", "end", "-", "mid", "]", ";", "int", "i", "=", "0", ",", "j", "=", "0", ";", "for", "(", "Point", "p", ":", "px", ")", "{", "if", "(", "p", ".", "x", "<", "=", "px", "[", "mid", "]", ".", "x", ")", "{", "pyLeft", "[", "i", "+", "+", "]", "=", "p", ";", "}", "else", "{", "pyRight", "[", "j", "+", "+", "]", "=", "p", ";", "}", "}", "int", "d1", "=", "closestPairOfPoints", "(", "px", ",", "pyLeft", ",", "start", ",", "mid", ")", ";", "int", "d2", "=", "closestPairOfPoints", "(", "px", ",", "pyRight", ",", "mid", "+", "1", ",", "end", ")", ";", "int", "d", "=", "Math", ".", "min", "(", "d1", ",", "d2", ")", ";", "List", "<", "Point", ">", "deltaPoints", "=", "new", "ArrayList", "<", "Point", ">", "(", ")", ";", "for", "(", "Point", "p", ":", "px", ")", "{", "if", "(", "Math", ".", "sqrt", "(", "distance", "(", "p", ",", "px", "[", "mid", "]", ")", ")", "<", "Math", ".", "sqrt", "(", "d", ")", ")", "{", "deltaPoints", ".", "add", "(", "p", ")", ";", "}", "}", "int", "d3", "=", "closest", "(", "deltaPoints", ")", ";", "return", "Math", ".", "min", "(", "d3", ",", "d", ")", ";", "}", "</s>"]
["<s>", "private", "int", "closest", "(", "List", "<", "Point", ">", "deltaPoints", ")", "{", "int", "minDistance", "=", "Integer", ".", "MAX_VALUE", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "deltaPoints", ".", "size", "(", ")", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "i", "+", "1", ";", "j", "<", "=", "i", "+", "SIZE", "&", "&", "j", "<", "deltaPoints", ".", "size", "(", ")", ";", "j", "+", "+", ")", "{", "int", "distance", "=", "distance", "(", "deltaPoints", ".", "get", "(", "i", ")", ",", "deltaPoints", ".", "get", "(", "j", ")", ")", ";", "if", "(", "minDistance", "<", "distance", ")", "{", "minDistance", "=", "distance", ";", "}", "}", "}", "return", "minDistance", ";", "}", "</s>"]
["<s>", "private", "int", "distance", "(", "Point", "p1", ",", "Point", "p2", ")", "{", "return", "(", "p1", ".", "x", "-", "p2", ".", "x", ")", "*", "(", "p1", ".", "x", "-", "p2", ".", "x", ")", "+", "(", "p1", ".", "y", "-", "p2", ".", "y", ")", "*", "(", "p1", ".", "y", "-", "p2", ".", "y", ")", ";", "}", "</s>"]
["<s>", "private", "int", "computeMinDistance", "(", "Point", "[", "]", "points", ",", "int", "start", ",", "int", "end", ")", "{", "if", "(", "end", "-", "start", "=", "=", "1", ")", "{", "Point", "p1", "=", "points", "[", "start", "]", ";", "Point", "p2", "=", "points", "[", "end", "]", ";", "return", "(", "p1", ".", "x", "-", "p2", ".", "x", ")", "*", "(", "p1", ".", "x", "-", "p2", ".", "x", ")", "+", "(", "p1", ".", "y", "-", "p2", ".", "y", ")", "*", "(", "p1", ".", "y", "-", "p2", ".", "y", ")", ";", "}", "else", "if", "(", "end", "-", "start", "=", "=", "<NUM_LIT:2>", ")", "{", "Point", "p1", "=", "points", "[", "start", "]", ";", "Point", "p2", "=", "points", "[", "end", "-", "1", "]", ";", "Point", "p3", "=", "points", "[", "end", "]", ";", "return", "Math", ".", "min", "(", "Math", ".", "min", "(", "(", "p1", ".", "x", "-", "p2", ".", "x", ")", "*", "(", "p1", ".", "x", "-", "p2", ".", "x", ")", "+", "(", "p1", ".", "y", "-", "p2", ".", "y", ")", "*", "(", "p1", ".", "y", "-", "p2", ".", "y", ")", ",", "(", "p1", ".", "x", "-", "p3", ".", "x", ")", "*", "(", "p1", ".", "x", "-", "p3", ".", "x", ")", "+", "(", "p1", ".", "y", "-", "p3", ".", "y", ")", "*", "(", "p1", ".", "y", "-", "p3", ".", "y", ")", ")", ",", "(", "p2", ".", "x", "-", "p3", ".", "x", ")", "*", "(", "p2", ".", "x", "-", "p3", ".", "x", ")", "+", "(", "p2", ".", "y", "-", "p3", ".", "y", ")", "*", "(", "p2", ".", "y", "-", "p3", ".", "y", ")", ")", ";", "}", "else", "{", "throw", "new", "IllegalArgumentException", "(", ")", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "ClosestPairOfPoints", "cpp", "=", "new", "ClosestPairOfPoints", "(", ")", ";", "Point", "[", "]", "points", "=", "{", "new", "Point", "(", "<NUM_LIT:6>", ",", "<NUM_LIT:2>", ")", ",", "new", "Point", "(", "<NUM_LIT:4>", ",", "<NUM_LIT:6>", ")", ",", "new", "Point", "(", "<NUM_LIT:5>", ",", "<NUM_LIT:4>", ")", ",", "new", "Point", "(", "-", "<NUM_LIT:8>", ",", "<NUM_LIT:2>", ")", ",", "new", "Point", "(", "0", ",", "<NUM_LIT:2>", ")", "}", ";", "double", "minDistance", "=", "cpp", ".", "closestPairOfPoints", "(", "points", ")", ";", "System", ".", "out", ".", "println", "(", "minDistance", ")", ";", "}", "</s>"]
["<s>", "@", "Override", "public", "int", "compareTo", "(", "BuildingPoint", "o", ")", "{", "if", "(", "this", ".", "x", "!", "=", "o", ".", "x", ")", "{", "return", "this", ".", "x", "-", "o", ".", "x", ";", "}", "else", "{", "return", "(", "this", ".", "isStart", "?", "-", "this", ".", "height", ":", "this", ".", "height", ")", "-", "(", "o", ".", "isStart", "?", "-", "o", ".", "height", ":", "o", ".", "height", ")", ";", "}", "}", "</s>"]
["<s>", "public", "List", "<", "int", "[", "]", ">", "getSkyline", "(", "int", "[", "]", "[", "]", "buildings", ")", "{", "BuildingPoint", "[", "]", "buildingPoints", "=", "new", "BuildingPoint", "[", "buildings", ".", "length", "*", "<NUM_LIT:2>", "]", ";", "int", "index", "=", "0", ";", "for", "(", "int", "building", "[", "]", ":", "buildings", ")", "{", "buildingPoints", "[", "index", "]", "=", "new", "BuildingPoint", "(", ")", ";", "buildingPoints", "[", "index", "]", ".", "x", "=", "building", "[", "0", "]", ";", "buildingPoints", "[", "index", "]", ".", "isStart", "=", "true", ";", "buildingPoints", "[", "index", "]", ".", "height", "=", "building", "[", "<NUM_LIT:2>", "]", ";", "buildingPoints", "[", "index", "+", "1", "]", "=", "new", "BuildingPoint", "(", ")", ";", "buildingPoints", "[", "index", "+", "1", "]", ".", "x", "=", "building", "[", "1", "]", ";", "buildingPoints", "[", "index", "+", "1", "]", ".", "isStart", "=", "false", ";", "buildingPoints", "[", "index", "+", "1", "]", ".", "height", "=", "building", "[", "<NUM_LIT:2>", "]", ";", "index", "+", "=", "<NUM_LIT:2>", ";", "}", "Arrays", ".", "sort", "(", "buildingPoints", ")", ";", "TreeMap", "<", "Integer", ",", "Integer", ">", "queue", "=", "new", "TreeMap", "<", ">", "(", ")", ";", "queue", ".", "put", "(", "0", ",", "1", ")", ";", "int", "prevMaxHeight", "=", "0", ";", "List", "<", "int", "[", "]", ">", "result", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "for", "(", "BuildingPoint", "buildingPoint", ":", "buildingPoints", ")", "{", "if", "(", "buildingPoint", ".", "isStart", ")", "{", "queue", ".", "compute", "(", "buildingPoint", ".", "height", ",", "(", "key", ",", "value", ")", "-", ">", "{", "if", "(", "value", "!", "=", "null", ")", "{", "return", "value", "+", "1", ";", "}", "return", "1", ";", "}", ")", ";", "}", "else", "{", "queue", ".", "compute", "(", "buildingPoint", ".", "height", ",", "(", "key", ",", "value", ")", "-", ">", "{", "if", "(", "value", "=", "=", "1", ")", "{", "return", "null", ";", "}", "return", "value", "-", "1", ";", "}", ")", ";", "}", "int", "currentMaxHeight", "=", "queue", ".", "lastKey", "(", ")", ";", "if", "(", "prevMaxHeight", "!", "=", "currentMaxHeight", ")", "{", "result", ".", "add", "(", "new", "int", "[", "]", "{", "buildingPoint", ".", "x", ",", "currentMaxHeight", "}", ")", ";", "prevMaxHeight", "=", "currentMaxHeight", ";", "}", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "[", "]", "[", "]", "buildings", "=", "{", "{", "1", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", "}", ",", "{", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:4>", "}", ",", "{", "<NUM_LIT:2>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:2>", "}", ",", "{", "<NUM_LIT:8>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT:4>", "}", ",", "{", "<NUM_LIT:7>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:3>", "}", ",", "{", "<NUM_LIT:10>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT:2>", "}", "}", ";", "SkylineDrawing", "sd", "=", "new", "SkylineDrawing", "(", ")", ";", "List", "<", "int", "[", "]", ">", "criticalPoints", "=", "sd", ".", "getSkyline", "(", "buildings", ")", ";", "criticalPoints", ".", "forEach", "(", "cp", "-", ">", "System", ".", "out", ".", "println", "(", "cp", "[", "0", "]", "+", "\"", "\"", "+", "cp", "[", "1", "]", ")", ")", ";", "}", "</s>"]
["<s>", "public", "void", "shuffle", "(", "int", "arr", "[", "]", ")", "{", "for", "(", "int", "i", "=", "arr", ".", "length", "-", "1", ";", "i", ">", "=", "0", ";", "i", "-", "-", ")", "{", "int", "random", "=", "(", "int", ")", "(", "Math", ".", "random", "(", ")", "*", "(", "i", "+", "1", ")", ")", ";", "System", ".", "out", ".", "print", "(", "random", "+", "\"", "\"", ")", ";", "swap", "(", "arr", ",", "random", ",", "i", ")", ";", "}", "}", "</s>"]
["<s>", "private", "void", "swap", "(", "int", "arr", "[", "]", ",", "int", "a", ",", "int", "b", ")", "{", "int", "temp", "=", "arr", "[", "a", "]", ";", "arr", "[", "a", "]", "=", "arr", "[", "b", "]", ";", "arr", "[", "b", "]", "=", "temp", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "arr", "[", "]", "=", "{", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:8>", "}", ";", "ShuffleArray", "sa", "=", "new", "ShuffleArray", "(", ")", ";", "sa", ".", "shuffle", "(", "arr", ")", ";", "System", ".", "out", ".", "println", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "arr", "[", "i", "]", "+", "\"", "\"", ")", ";", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "println", "(", "(", "int", ")", "(", "Math", ".", "random", "(", ")", "*", "<NUM_LIT:10>", ")", "+", "1", ")", ";", "}", "}", "</s>"]
["<s>", "public", "int", "rand7", "(", ")", "{", "int", "r", "=", "(", "rand5", "(", ")", "-", "1", ")", "*", "<NUM_LIT:5>", "+", "rand5", "(", ")", ";", "while", "(", "r", ">", "<NUM_LIT>", ")", "{", "r", "=", "(", "rand5", "(", ")", "-", "1", ")", "*", "<NUM_LIT:5>", "+", "rand5", "(", ")", ";", "}", "return", "(", "r", "%", "<NUM_LIT:7>", ")", "+", "1", ";", "}", "</s>"]
["<s>", "private", "int", "rand5", "(", ")", "{", "return", "(", "int", ")", "(", "Math", ".", "ceil", "(", "Math", ".", "random", "(", ")", "*", "<NUM_LIT:5>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "Rand7UsingRand5", "rr", "=", "new", "Rand7UsingRand5", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "<NUM_LIT:10>", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "rr", ".", "rand7", "(", ")", ")", ";", "}", "}", "</s>"]
["<s>", "public", "int", "[", "]", "selectRandom", "(", "int", "arr", "[", "]", ",", "int", "m", ")", "{", "int", "result", "[", "]", "=", "new", "int", "[", "m", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "m", ";", "i", "+", "+", ")", "{", "result", "[", "i", "]", "=", "arr", "[", "i", "]", ";", "}", "for", "(", "int", "i", "=", "m", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "int", "random", "=", "(", "int", ")", "(", "Math", ".", "random", "(", ")", "*", "i", ")", "+", "1", ";", "if", "(", "random", "<", "=", "m", ")", "{", "result", "[", "random", "-", "1", "]", "=", "arr", "[", "i", "]", ";", "}", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "SelectMRandomNumbersInStream", "srn", "=", "new", "SelectMRandomNumbersInStream", "(", ")", ";", "int", "arr", "[", "]", "=", "{", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT:12>", ",", "<NUM_LIT>", "}", ";", "int", "result", "[", "]", "=", "srn", ".", "selectRandom", "(", "arr", ",", "<NUM_LIT:5>", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "result", ".", "length", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "result", "[", "i", "]", "+", "\"", "\"", ")", ";", "}", "}", "</s>"]
["<s>", "public", "int", "getRandom", "(", "int", "[", "]", "arr", ")", "{", "int", "sum", "[", "]", "=", "new", "int", "[", "arr", ".", "length", "]", ";", "sum", "[", "0", "]", "=", "arr", "[", "0", "]", ";", "int", "n", "=", "arr", "[", "0", "]", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "sum", ".", "length", ";", "i", "+", "+", ")", "{", "sum", "[", "i", "]", "=", "sum", "[", "i", "-", "1", "]", "+", "arr", "[", "i", "]", ";", "n", "+", "=", "arr", "[", "i", "]", ";", "}", "int", "ran", "=", "(", "int", ")", "(", "Math", ".", "random", "(", ")", "*", "n", "+", "1", ")", ";", "int", "low", "=", "0", ";", "int", "high", "=", "arr", ".", "length", "-", "1", ";", "int", "mid", "=", "(", "high", "+", "low", ")", "/", "<NUM_LIT:2>", ";", "while", "(", "true", ")", "{", "if", "(", "sum", "[", "mid", "]", ">", "=", "ran", "&", "&", "(", "mid", "-", "1", "=", "=", "-", "1", "|", "|", "sum", "[", "mid", "-", "1", "]", "<", "ran", ")", ")", "{", "break", ";", "}", "if", "(", "sum", "[", "mid", "]", ">", "ran", ")", "{", "high", "=", "mid", "-", "1", ";", "}", "else", "{", "low", "=", "mid", "+", "1", ";", "}", "mid", "=", "(", "high", "+", "low", ")", "/", "<NUM_LIT:2>", ";", "}", "return", "mid", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "RandomCountrySelectionByPopluation", "rcsp", "=", "new", "RandomCountrySelectionByPopluation", "(", ")", ";", "int", "arr", "[", "]", "=", "{", "<NUM_LIT:5>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:7>", ",", "1", "}", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "<NUM_LIT:10>", ";", "i", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "rcsp", ".", "getRandom", "(", "arr", ")", ")", ";", "}", "}", "</s>"]
