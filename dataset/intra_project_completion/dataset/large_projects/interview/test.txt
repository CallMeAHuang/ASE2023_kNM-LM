["<s>", "public", "int", "minCost", "(", "int", "[", "]", "[", "]", "costs", ")", "{", "if", "(", "costs", ".", "length", "=", "=", "0", "|", "|", "costs", "[", "0", "]", ".", "length", "=", "=", "0", ")", "{", "return", "0", ";", "}", "int", "[", "]", "[", "]", "dp", "=", "new", "int", "[", "costs", ".", "length", "]", "[", "costs", "[", "0", "]", ".", "length", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "costs", "[", "0", "]", ".", "length", ";", "i", "+", "+", ")", "{", "dp", "[", "0", "]", "[", "i", "]", "=", "costs", "[", "0", "]", "[", "i", "]", ";", "}", "for", "(", "int", "i", "=", "1", ";", "i", "<", "costs", ".", "length", ";", "i", "+", "+", ")", "{", "Pair", "p", "=", "findMinSecondMin", "(", "dp", "[", "i", "-", "1", "]", ")", ";", "for", "(", "int", "j", "=", "0", ";", "j", "<", "costs", "[", "0", "]", ".", "length", ";", "j", "+", "+", ")", "{", "dp", "[", "i", "]", "[", "j", "]", "=", "costs", "[", "i", "]", "[", "j", "]", ";", "if", "(", "j", "=", "=", "p", ".", "minIndex", ")", "{", "dp", "[", "i", "]", "[", "j", "]", "+", "=", "dp", "[", "i", "-", "1", "]", "[", "p", ".", "secondMinIndex", "]", ";", "}", "else", "{", "dp", "[", "i", "]", "[", "j", "]", "+", "=", "dp", "[", "i", "-", "1", "]", "[", "p", ".", "minIndex", "]", ";", "}", "}", "}", "int", "min", "=", "Integer", ".", "MAX_VALUE", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "dp", "[", "0", "]", ".", "length", ";", "i", "+", "+", ")", "{", "min", "=", "Math", ".", "min", "(", "min", ",", "dp", "[", "dp", ".", "length", "-", "1", "]", "[", "i", "]", ")", ";", "}", "return", "min", ";", "}", "</s>"]
["<s>", "private", "Pair", "findMinSecondMin", "(", "int", "[", "]", "input", ")", "{", "int", "minIndex", ";", "int", "secondMinIndex", ";", "if", "(", "input", "[", "0", "]", "<", "input", "[", "1", "]", ")", "{", "minIndex", "=", "0", ";", "secondMinIndex", "=", "1", ";", "}", "else", "{", "minIndex", "=", "1", ";", "secondMinIndex", "=", "0", ";", "}", "for", "(", "int", "i", "=", "<NUM_LIT:2>", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "input", "[", "i", "]", "<", "input", "[", "minIndex", "]", ")", "{", "secondMinIndex", "=", "minIndex", ";", "minIndex", "=", "i", ";", "}", "else", "if", "(", "input", "[", "i", "]", "<", "input", "[", "secondMinIndex", "]", ")", "{", "secondMinIndex", "=", "i", ";", "}", "}", "Pair", "p", "=", "new", "Pair", "(", ")", ";", "p", ".", "minIndex", "=", "minIndex", ";", "p", ".", "secondMinIndex", "=", "secondMinIndex", ";", "return", "p", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "PaintHouse", "ph", "=", "new", "PaintHouse", "(", ")", ";", "int", "[", "]", "[", "]", "input", "=", "{", "{", "1", ",", "<NUM_LIT:2>", ",", "1", "}", ",", "{", "1", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", "}", ",", "{", "<NUM_LIT:2>", ",", "<NUM_LIT:6>", ",", "1", "}", ",", "{", "<NUM_LIT:3>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:2>", "}", "}", ";", "System", ".", "out", ".", "println", "(", "ph", ".", "minCost", "(", "input", ")", ")", ";", "}", "</s>"]
["<s>", "public", "String", "alienOrder", "(", "String", "[", "]", "words", ")", "{", "Map", "<", "Character", ",", "Set", "<", "Character", ">", ">", "graph", "=", "buildGraph", "(", "words", ")", ";", "Deque", "<", "Character", ">", "stack", "=", "new", "LinkedList", "<", ">", "(", ")", ";", "Set", "<", "Character", ">", "visited", "=", "new", "HashSet", "<", ">", "(", ")", ";", "Set", "<", "Character", ">", "dfs", "=", "new", "HashSet", "<", ">", "(", ")", ";", "for", "(", "char", "ch", ":", "getAllChars", "(", "words", ")", ")", "{", "if", "(", "topSortUtil", "(", "ch", ",", "stack", ",", "visited", ",", "dfs", ",", "graph", ")", ")", "{", "return", "\"", "\"", ";", "}", "}", "StringBuffer", "buff", "=", "new", "StringBuffer", "(", ")", ";", "while", "(", "!", "stack", ".", "isEmpty", "(", ")", ")", "{", "buff", ".", "append", "(", "stack", ".", "pollFirst", "(", ")", ")", ";", "}", "return", "buff", ".", "toString", "(", ")", ";", "}", "</s>"]
["<s>", "private", "boolean", "topSortUtil", "(", "char", "vertex", ",", "Deque", "<", "Character", ">", "stack", ",", "Set", "<", "Character", ">", "visited", ",", "Set", "<", "Character", ">", "dfs", ",", "Map", "<", "Character", ",", "Set", "<", "Character", ">", ">", "graph", ")", "{", "if", "(", "visited", ".", "contains", "(", "vertex", ")", ")", "{", "return", "false", ";", "}", "visited", ".", "add", "(", "vertex", ")", ";", "dfs", ".", "add", "(", "vertex", ")", ";", "Set", "<", "Character", ">", "set", "=", "graph", ".", "get", "(", "vertex", ")", ";", "if", "(", "set", "!", "=", "null", ")", "{", "for", "(", "char", "neighbor", ":", "set", ")", "{", "if", "(", "dfs", ".", "contains", "(", "neighbor", ")", ")", "{", "return", "true", ";", "}", "if", "(", "topSortUtil", "(", "neighbor", ",", "stack", ",", "visited", ",", "dfs", ",", "graph", ")", ")", "{", "return", "true", ";", "}", "}", "}", "dfs", ".", "remove", "(", "vertex", ")", ";", "stack", ".", "offerFirst", "(", "vertex", ")", ";", "return", "false", ";", "}", "</s>"]
["<s>", "private", "Map", "<", "Character", ",", "Set", "<", "Character", ">", ">", "buildGraph", "(", "String", "words", "[", "]", ")", "{", "Set", "<", "Character", ">", "allCharacters", "=", "getAllChars", "(", "words", ")", ";", "Map", "<", "Character", ",", "Set", "<", "Character", ">", ">", "graph", "=", "new", "HashMap", "<", ">", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "words", ".", "length", "-", "1", ";", "i", "+", "+", ")", "{", "String", "nextWord", "=", "words", "[", "i", "+", "1", "]", ";", "for", "(", "int", "k", "=", "0", ";", "k", "<", "Math", ".", "min", "(", "words", "[", "i", "]", ".", "length", "(", ")", ",", "nextWord", ".", "length", "(", ")", ")", ";", "k", "+", "+", ")", "{", "if", "(", "words", "[", "i", "]", ".", "charAt", "(", "k", ")", "!", "=", "nextWord", ".", "charAt", "(", "(", "k", ")", ")", ")", "{", "allCharacters", ".", "remove", "(", "words", "[", "i", "]", ".", "charAt", "(", "k", ")", ")", ";", "Set", "<", "Character", ">", "set", "=", "graph", ".", "get", "(", "words", "[", "i", "]", ".", "charAt", "(", "k", ")", ")", ";", "if", "(", "set", "=", "=", "null", ")", "{", "set", "=", "new", "HashSet", "<", ">", "(", ")", ";", "graph", ".", "put", "(", "words", "[", "i", "]", ".", "charAt", "(", "k", ")", ",", "set", ")", ";", "}", "set", ".", "add", "(", "nextWord", ".", "charAt", "(", "k", ")", ")", ";", "break", ";", "}", "}", "}", "for", "(", "char", "ch", ":", "allCharacters", ")", "{", "graph", ".", "put", "(", "ch", ",", "null", ")", ";", "}", "return", "graph", ";", "}", "</s>"]
["<s>", "private", "Set", "<", "Character", ">", "getAllChars", "(", "String", "words", "[", "]", ")", "{", "Set", "<", "Character", ">", "set", "=", "new", "HashSet", "<", ">", "(", ")", ";", "for", "(", "String", "word", ":", "words", ")", "{", "for", "(", "char", "ch", ":", "word", ".", "toCharArray", "(", ")", ")", "{", "set", ".", "add", "(", "ch", ")", ";", "}", "}", "return", "set", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "AlientDictionary", "ad", "=", "new", "AlientDictionary", "(", ")", ";", "String", "[", "]", "words1", "=", "{", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", "}", ";", "String", "[", "]", "words", "=", "{", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", "}", ";", "String", "result", "=", "ad", ".", "alienOrder", "(", "words", ")", ";", "System", ".", "out", ".", "print", "(", "result", ")", ";", "}", "</s>"]
["<s>", "public", "UndirectedGraphNode", "cloneGraph", "(", "UndirectedGraphNode", "node", ")", "{", "if", "(", "node", "=", "=", "null", ")", "{", "return", "null", ";", "}", "UndirectedGraphNode", "clone", "=", "new", "UndirectedGraphNode", "(", "node", ".", "label", ")", ";", "Set", "<", "Integer", ">", "visited", "=", "new", "HashSet", "<", ">", "(", ")", ";", "Map", "<", "Integer", ",", "UndirectedGraphNode", ">", "map", "=", "new", "HashMap", "<", ">", "(", ")", ";", "map", ".", "put", "(", "clone", ".", "label", ",", "clone", ")", ";", "dfs", "(", "node", ",", "clone", ",", "map", ",", "visited", ")", ";", "return", "clone", ";", "}", "</s>"]
["<s>", "private", "void", "dfs", "(", "UndirectedGraphNode", "current", ",", "UndirectedGraphNode", "clone", ",", "Map", "<", "Integer", ",", "UndirectedGraphNode", ">", "map", ",", "Set", "<", "Integer", ">", "visited", ")", "{", "if", "(", "visited", ".", "contains", "(", "current", ".", "label", ")", ")", "{", "return", ";", "}", "visited", ".", "add", "(", "current", ".", "label", ")", ";", "for", "(", "UndirectedGraphNode", "adj", ":", "current", ".", "neighbors", ")", "{", "if", "(", "adj", ".", "label", "!", "=", "current", ".", "label", ")", "{", "UndirectedGraphNode", "adjClone", "=", "map", ".", "get", "(", "adj", ".", "label", ")", ";", "if", "(", "adjClone", "=", "=", "null", ")", "{", "adjClone", "=", "new", "UndirectedGraphNode", "(", "adj", ".", "label", ")", ";", "map", ".", "put", "(", "adjClone", ".", "label", ",", "adjClone", ")", ";", "}", "clone", ".", "neighbors", ".", "add", "(", "adjClone", ")", ";", "dfs", "(", "adj", ",", "adjClone", ",", "map", ",", "visited", ")", ";", "}", "else", "{", "clone", ".", "neighbors", ".", "add", "(", "clone", ")", ";", "}", "}", "}", "</s>"]
["<s>", "public", "List", "<", "Integer", ">", "numIslands2", "(", "int", "n", ",", "int", "m", ",", "int", "[", "]", "[", "]", "positions", ")", "{", "if", "(", "positions", ".", "length", "=", "=", "0", "|", "|", "positions", "[", "0", "]", ".", "length", "=", "=", "0", ")", "{", "return", "Collections", ".", "emptyList", "(", ")", ";", "}", "int", "count", "=", "0", ";", "DisjointSet", "ds", "=", "new", "DisjointSet", "(", ")", ";", "Set", "<", "Integer", ">", "land", "=", "new", "HashSet", "<", ">", "(", ")", ";", "List", "<", "Integer", ">", "result", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "for", "(", "int", "[", "]", "position", ":", "positions", ")", "{", "int", "index", "=", "position", "[", "0", "]", "*", "m", "+", "position", "[", "1", "]", ";", "land", ".", "add", "(", "index", ")", ";", "ds", ".", "makeSet", "(", "index", ")", ";", "count", "+", "+", ";", "int", "n1", "=", "(", "position", "[", "0", "]", "-", "1", ")", "*", "m", "+", "position", "[", "1", "]", ";", "int", "n2", "=", "(", "position", "[", "0", "]", "+", "1", ")", "*", "m", "+", "position", "[", "1", "]", ";", "int", "n3", "=", "(", "position", "[", "0", "]", ")", "*", "m", "+", "position", "[", "1", "]", "+", "1", ";", "int", "n4", "=", "(", "position", "[", "0", "]", ")", "*", "m", "+", "position", "[", "1", "]", "-", "1", ";", "if", "(", "position", "[", "0", "]", "-", "1", ">", "=", "0", "&", "&", "land", ".", "contains", "(", "n1", ")", ")", "{", "if", "(", "ds", ".", "union", "(", "index", ",", "n1", ")", ")", "{", "count", "-", "-", ";", "}", "}", "if", "(", "position", "[", "0", "]", "+", "1", "<", "n", "&", "&", "land", ".", "contains", "(", "n2", ")", ")", "{", "if", "(", "ds", ".", "union", "(", "index", ",", "n2", ")", ")", "{", "count", "-", "-", ";", "}", "}", "if", "(", "position", "[", "1", "]", "+", "1", "<", "m", "&", "&", "land", ".", "contains", "(", "n3", ")", ")", "{", "if", "(", "ds", ".", "union", "(", "index", ",", "n3", ")", ")", "{", "count", "-", "-", ";", "}", "}", "if", "(", "position", "[", "1", "]", "-", "1", ">", "=", "0", "&", "&", "land", ".", "contains", "(", "n4", ")", ")", "{", "if", "(", "ds", ".", "union", "(", "index", ",", "n4", ")", ")", "{", "count", "-", "-", ";", "}", "}", "result", ".", "add", "(", "count", ")", ";", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "NumberOfIslandDynamic", "nd", "=", "new", "NumberOfIslandDynamic", "(", ")", ";", "int", "[", "]", "[", "]", "input", "=", "{", "{", "0", ",", "1", "}", ",", "{", "1", ",", "<NUM_LIT:2>", "}", ",", "{", "<NUM_LIT:2>", ",", "1", "}", ",", "{", "1", ",", "0", "}", ",", "{", "0", ",", "<NUM_LIT:2>", "}", ",", "{", "0", ",", "0", "}", ",", "{", "1", ",", "1", "}", "}", ";", "System", ".", "out", ".", "print", "(", "nd", ".", "numIslands2", "(", "<NUM_LIT:3>", ",", "<NUM_LIT:3>", ",", "input", ")", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "validTree", "(", "int", "n", ",", "int", "[", "]", "[", "]", "edges", ")", "{", "if", "(", "n", "<", "=", "1", ")", "{", "return", "true", ";", "}", "Map", "<", "Integer", ",", "List", "<", "Integer", ">", ">", "graph", "=", "new", "HashMap", "<", ">", "(", ")", ";", "for", "(", "int", "[", "]", "edge", ":", "edges", ")", "{", "List", "<", "Integer", ">", "neighbors", "=", "graph", ".", "get", "(", "edge", "[", "0", "]", ")", ";", "if", "(", "neighbors", "=", "=", "null", ")", "{", "neighbors", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "graph", ".", "put", "(", "edge", "[", "0", "]", ",", "neighbors", ")", ";", "}", "neighbors", ".", "add", "(", "edge", "[", "1", "]", ")", ";", "neighbors", "=", "graph", ".", "get", "(", "edge", "[", "1", "]", ")", ";", "if", "(", "neighbors", "=", "=", "null", ")", "{", "neighbors", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "graph", ".", "put", "(", "edge", "[", "1", "]", ",", "neighbors", ")", ";", "}", "neighbors", ".", "add", "(", "edge", "[", "0", "]", ")", ";", "}", "boolean", "[", "]", "visited", "=", "new", "boolean", "[", "n", "]", ";", "boolean", "hasCycle", "=", "isCycle", "(", "0", ",", "graph", ",", "-", "1", ",", "visited", ")", ";", "if", "(", "hasCycle", ")", "{", "return", "false", ";", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "visited", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "!", "visited", "[", "i", "]", ")", "{", "return", "false", ";", "}", "}", "return", "true", ";", "}", "</s>"]
["<s>", "boolean", "isCycle", "(", "int", "vertex", ",", "Map", "<", "Integer", ",", "List", "<", "Integer", ">", ">", "graph", ",", "int", "parent", ",", "boolean", "[", "]", "visited", ")", "{", "if", "(", "visited", "[", "vertex", "]", ")", "{", "return", "true", ";", "}", "visited", "[", "vertex", "]", "=", "true", ";", "if", "(", "graph", ".", "get", "(", "vertex", ")", "=", "=", "null", ")", "{", "return", "false", ";", "}", "for", "(", "int", "i", ":", "graph", ".", "get", "(", "vertex", ")", ")", "{", "if", "(", "i", "=", "=", "parent", ")", "{", "continue", ";", "}", "if", "(", "isCycle", "(", "i", ",", "graph", ",", "vertex", ",", "visited", ")", ")", "{", "return", "true", ";", "}", "}", "return", "false", ";", "}", "</s>"]
["<s>", "public", "List", "<", "List", "<", "String", ">", ">", "findLadders", "(", "String", "beginWord", ",", "String", "endWord", ",", "Set", "<", "String", ">", "wordList", ")", "{", "wordList", ".", "add", "(", "endWord", ")", ";", "Set", "<", "String", ">", "visited", "=", "new", "HashSet", "<", ">", "(", ")", ";", "Deque", "<", "String", ">", "queue", "=", "new", "LinkedList", "<", ">", "(", ")", ";", "Map", "<", "String", ",", "Set", "<", "String", ">", ">", "parent", "=", "new", "HashMap", "<", ">", "(", ")", ";", "List", "<", "List", "<", "String", ">", ">", "result", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "queue", ".", "offerFirst", "(", "beginWord", ")", ";", "queue", ".", "offerFirst", "(", "null", ")", ";", "boolean", "foundEndWord", "=", "false", ";", "Set", "<", "String", ">", "levelVisited", "=", "new", "HashSet", "<", ">", "(", ")", ";", "visited", ".", "add", "(", "beginWord", ")", ";", "while", "(", "!", "queue", ".", "isEmpty", "(", ")", ")", "{", "String", "word", "=", "queue", ".", "pollLast", "(", ")", ";", "if", "(", "word", "=", "=", "null", ")", "{", "visited", ".", "addAll", "(", "levelVisited", ")", ";", "levelVisited", ".", "clear", "(", ")", ";", "if", "(", "foundEndWord", ")", "{", "break", ";", "}", "else", "if", "(", "!", "queue", ".", "isEmpty", "(", ")", ")", "{", "queue", ".", "offerFirst", "(", "null", ")", ";", "}", "continue", ";", "}", "List", "<", "String", ">", "neighbors", "=", "nextWord", "(", "visited", ",", "wordList", ",", "word", ")", ";", "for", "(", "String", "neighbor", ":", "neighbors", ")", "{", "Set", "<", "String", ">", "set", "=", "parent", ".", "get", "(", "neighbor", ")", ";", "if", "(", "set", "=", "=", "null", ")", "{", "set", "=", "new", "HashSet", "<", ">", "(", ")", ";", "}", "set", ".", "add", "(", "word", ")", ";", "parent", ".", "put", "(", "neighbor", ",", "set", ")", ";", "levelVisited", ".", "add", "(", "neighbor", ")", ";", "if", "(", "endWord", ".", "equals", "(", "neighbor", ")", ")", "{", "foundEndWord", "=", "true", ";", "}", "queue", ".", "offerFirst", "(", "neighbor", ")", ";", "}", "}", "if", "(", "!", "foundEndWord", ")", "{", "return", "Collections", ".", "emptyList", "(", ")", ";", "}", "setResult", "(", "endWord", ",", "parent", ",", "new", "ArrayList", "<", ">", "(", ")", ",", "beginWord", ",", "result", ")", ";", "return", "result", ";", "}", "</s>"]
["<s>", "private", "void", "setResult", "(", "String", "word", ",", "Map", "<", "String", ",", "Set", "<", "String", ">", ">", "map", ",", "List", "<", "String", ">", "result", ",", "String", "beginWord", ",", "List", "<", "List", "<", "String", ">", ">", "finalResult", ")", "{", "result", ".", "add", "(", "word", ")", ";", "if", "(", "beginWord", ".", "equals", "(", "word", ")", ")", "{", "List", "<", "String", ">", "r", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "r", ".", "addAll", "(", "result", ")", ";", "Collections", ".", "reverse", "(", "r", ")", ";", "finalResult", ".", "add", "(", "r", ")", ";", "result", ".", "remove", "(", "result", ".", "size", "(", ")", "-", "1", ")", ";", "return", ";", "}", "Set", "<", "String", ">", "set", "=", "map", ".", "get", "(", "word", ")", ";", "for", "(", "String", "parent", ":", "set", ")", "{", "setResult", "(", "parent", ",", "map", ",", "result", ",", "beginWord", ",", "finalResult", ")", ";", "}", "result", ".", "remove", "(", "result", ".", "size", "(", ")", "-", "1", ")", ";", "}", "</s>"]
["<s>", "private", "List", "<", "String", ">", "nextWord", "(", "Set", "<", "String", ">", "visited", ",", "Set", "<", "String", ">", "wordList", ",", "String", "word", ")", "{", "List", "<", "String", ">", "neighbors", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "char", "[", "]", "input", "=", "word", ".", "toCharArray", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "input", ".", "length", ";", "i", "+", "+", ")", "{", "char", "ch", "=", "input", "[", "i", "]", ";", "for", "(", "char", "k", "=", "<CHAR_LIT:a>", ";", "k", "<", "=", "<CHAR_LIT>", ";", "k", "+", "+", ")", "{", "if", "(", "k", "=", "=", "ch", ")", "{", "continue", ";", "}", "input", "[", "i", "]", "=", "k", ";", "String", "newString", "=", "new", "String", "(", "input", ")", ";", "if", "(", "!", "visited", ".", "contains", "(", "newString", ")", "&", "&", "wordList", ".", "contains", "(", "newString", ")", ")", "{", "neighbors", ".", "add", "(", "newString", ")", ";", "}", "}", "input", "[", "i", "]", "=", "ch", ";", "}", "return", "neighbors", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "String", "[", "]", "wordList", "=", "{", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", "}", ";", "Set", "<", "String", ">", "wordSet", "=", "new", "HashSet", "<", ">", "(", ")", ";", "wordSet", ".", "addAll", "(", "Arrays", ".", "asList", "(", "wordList", ")", ")", ";", "WordLadder", "wl", "=", "new", "WordLadder", "(", ")", ";", "List", "<", "List", "<", "String", ">", ">", "result", "=", "wl", ".", "findLadders", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "wordSet", ")", ";", "System", ".", "out", ".", "print", "(", "result", ")", ";", "}", "</s>"]
["<s>", "public", "void", "reorderList", "(", "Node", "head", ")", "{", "Node", "back", "=", "frontBackSplit", "(", "head", ")", ";", "back", "=", "reverse", "(", "back", ")", ";", "alternateMerge", "(", "head", ",", "back", ")", ";", "}", "</s>"]
["<s>", "private", "Node", "alternateMerge", "(", "Node", "head1", ",", "Node", "head2", ")", "{", "Node", "dummyHead", "=", "new", "Node", "(", ")", ";", "Node", "current", "=", "dummyHead", ";", "while", "(", "head1", "!", "=", "null", "&", "&", "head2", "!", "=", "null", ")", "{", "current", ".", "next", "=", "head1", ";", "head1", "=", "head1", ".", "next", ";", "current", "=", "current", ".", "next", ";", "current", ".", "next", "=", "head2", ";", "head2", "=", "head2", ".", "next", ";", "current", "=", "current", ".", "next", ";", "}", "current", ".", "next", "=", "head1", ";", "return", "dummyHead", ".", "next", ";", "}", "</s>"]
["<s>", "private", "Node", "reverse", "(", "Node", "head", ")", "{", "if", "(", "head", "=", "=", "null", ")", "{", "return", "null", ";", "}", "Node", "front", "=", "null", ";", "Node", "mid", "=", "head", ";", "Node", "next", "=", "null", ";", "while", "(", "mid", "!", "=", "null", ")", "{", "next", "=", "mid", ".", "next", ";", "mid", ".", "next", "=", "front", ";", "front", "=", "mid", ";", "mid", "=", "next", ";", "}", "return", "front", ";", "}", "</s>"]
["<s>", "private", "Node", "frontBackSplit", "(", "Node", "head", ")", "{", "if", "(", "head", "=", "=", "null", ")", "{", "return", "null", ";", "}", "Node", "slow", "=", "head", ";", "head", "=", "head", ".", "next", ";", "while", "(", "head", "!", "=", "null", "&", "&", "head", ".", "next", "!", "=", "null", ")", "{", "slow", "=", "slow", ".", "next", ";", "head", "=", "head", ".", "next", ".", "next", ";", "}", "Node", "next", "=", "slow", ".", "next", ";", "slow", ".", "next", "=", "null", ";", "return", "next", ";", "}", "</s>"]
["<s>", "public", "int", "bulbSwitch", "(", "int", "n", ")", "{", "int", "count", "=", "0", ";", "while", "(", "count", "*", "count", "<", "=", "n", ")", "{", "count", "+", "+", ";", "}", "return", "count", "-", "1", ";", "}", "</s>"]
["<s>", "boolean", "knows", "(", "int", "a", ",", "int", "b", ")", "{", "return", "false", ";", "}", "</s>"]
["<s>", "public", "int", "findCelebrity", "(", "int", "n", ")", "{", "int", "celebrity", "=", "0", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "n", ";", "i", "+", "+", ")", "{", "if", "(", "knows", "(", "celebrity", ",", "i", ")", ")", "{", "celebrity", "=", "i", ";", "}", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "n", ";", "i", "+", "+", ")", "{", "if", "(", "i", "=", "=", "celebrity", ")", "{", "continue", ";", "}", "if", "(", "knows", "(", "celebrity", ",", "i", ")", "|", "|", "!", "knows", "(", "i", ",", "celebrity", ")", ")", "{", "return", "-", "1", ";", "}", "}", "return", "celebrity", ";", "}", "</s>"]
["<s>", "public", "String", "getPermutation", "(", "int", "n", ",", "int", "k", ")", "{", "List", "<", "Integer", ">", "unused", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "=", "n", ";", "i", "+", "+", ")", "{", "unused", ".", "add", "(", "i", ")", ";", "}", "StringBuffer", "result", "=", "new", "StringBuffer", "(", ")", ";", "int", "fac", "=", "factorial", "(", "n", ")", ";", "int", "d", "=", "n", ";", "while", "(", "n", ">", "1", ")", "{", "fac", "=", "fac", "/", "d", ";", "d", "-", "-", ";", "int", "index", "=", "(", "int", ")", "Math", ".", "ceil", "(", "(", "double", ")", "k", "/", "fac", ")", ";", "result", ".", "append", "(", "unused", ".", "get", "(", "index", "-", "1", ")", ")", ";", "unused", ".", "remove", "(", "index", "-", "1", ")", ";", "n", "-", "-", ";", "k", "=", "k", "-", "fac", "*", "(", "index", "-", "1", ")", ";", "}", "if", "(", "n", "=", "=", "0", ")", "{", "for", "(", "int", "i", "=", "unused", ".", "size", "(", ")", "-", "1", ";", "i", ">", "=", "0", ";", "i", "-", "-", ")", "{", "result", ".", "append", "(", "unused", ".", "get", "(", "i", ")", ")", ";", "}", "}", "if", "(", "n", "=", "=", "1", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "unused", ".", "size", "(", ")", ";", "i", "+", "+", ")", "{", "result", ".", "append", "(", "unused", ".", "get", "(", "i", ")", ")", ";", "}", "}", "return", "result", ".", "toString", "(", ")", ";", "}", "</s>"]
["<s>", "private", "int", "factorial", "(", "int", "n", ")", "{", "int", "result", "=", "1", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "=", "n", ";", "i", "+", "+", ")", "{", "result", "*", "=", "i", ";", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "GetKthPermutation", "gp", "=", "new", "GetKthPermutation", "(", ")", ";", "System", ".", "out", ".", "println", "(", "gp", ".", "getPermutation", "(", "<NUM_LIT:6>", ",", "<NUM_LIT>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "List", "<", "List", "<", "Integer", ">", ">", "palindromePairs", "(", "String", "[", "]", "words", ")", "{", "Trie", "trie", "=", "new", "Trie", "(", ")", ";", "for", "(", "String", "word", ":", "words", ")", "{", "trie", ".", "insert", "(", "reverse", "(", "word", ")", ")", ";", "}", "return", "null", ";", "}", "</s>"]
["<s>", "private", "String", "reverse", "(", "String", "word", ")", "{", "return", "word", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "Trie", "t", "=", "new", "Trie", "(", ")", ";", "t", ".", "insert", "(", "\"", "<STR_LIT>", "\"", ")", ";", "System", ".", "out", ".", "println", "(", "t", ".", "startsWith", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "}", "</s>"]
["<s>", "public", "void", "update", "(", "int", "row", ",", "int", "col", ",", "int", "val", ")", "{", "int", "delta", "=", "val", "-", "matrix", "[", "row", "]", "[", "col", "]", ";", "matrix", "[", "row", "]", "[", "col", "]", "=", "val", ";", "for", "(", "int", "i", "=", "col", "+", "1", ";", "i", "<", "=", "cols", ";", "i", "+", "+", ")", "{", "prefixSum", "[", "row", "]", "[", "i", "]", "+", "=", "delta", ";", "}", "}", "</s>"]
["<s>", "public", "int", "sumRegion", "(", "int", "row1", ",", "int", "col1", ",", "int", "row2", ",", "int", "col2", ")", "{", "int", "sum", "=", "0", ";", "for", "(", "int", "i", "=", "row1", ";", "i", "<", "=", "row2", ";", "i", "+", "+", ")", "{", "sum", "+", "=", "prefixSum", "[", "i", "]", "[", "col2", "+", "1", "]", "-", "prefixSum", "[", "i", "]", "[", "col1", "]", ";", "}", "return", "sum", ";", "}", "</s>"]
["<s>", "public", "int", "shortestDistance", "(", "int", "[", "]", "[", "]", "grid", ")", "{", "int", "countBuilding", "=", "0", ";", "List", "<", "Point", ">", "buildings", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "grid", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "grid", "[", "0", "]", ".", "length", ";", "j", "+", "+", ")", "{", "if", "(", "grid", "[", "i", "]", "[", "j", "]", "=", "=", "1", ")", "{", "countBuilding", "+", "+", ";", "buildings", ".", "add", "(", "new", "Point", "(", "i", ",", "j", ",", "0", ")", ")", ";", "}", "}", "}", "if", "(", "countBuilding", "=", "=", "0", ")", "{", "return", "-", "1", ";", "}", "int", "[", "]", "[", "]", "output", "=", "new", "int", "[", "grid", ".", "length", "]", "[", "grid", "[", "0", "]", ".", "length", "]", ";", "int", "[", "]", "[", "]", "reach", "=", "new", "int", "[", "grid", ".", "length", "]", "[", "grid", "[", "0", "]", ".", "length", "]", ";", "for", "(", "Point", "building", ":", "buildings", ")", "{", "Deque", "<", "Point", ">", "queue", "=", "new", "LinkedList", "<", ">", "(", ")", ";", "queue", ".", "offerFirst", "(", "building", ")", ";", "int", "currentBuildingCount", "=", "0", ";", "boolean", "[", "]", "[", "]", "visited", "=", "new", "boolean", "[", "output", ".", "length", "]", "[", "output", "[", "0", "]", ".", "length", "]", ";", "visited", "[", "building", ".", "x", "]", "[", "building", ".", "y", "]", "=", "true", ";", "while", "(", "!", "queue", ".", "isEmpty", "(", ")", ")", "{", "Point", "p", "=", "queue", ".", "pollLast", "(", ")", ";", "output", "[", "p", ".", "x", "]", "[", "p", ".", "y", "]", "+", "=", "p", ".", "d", ";", "List", "<", "Point", ">", "neighbors", "=", "neighbors", "(", "p", ",", "grid", ".", "length", ",", "grid", "[", "0", "]", ".", "length", ")", ";", "for", "(", "Point", "neighbor", ":", "neighbors", ")", "{", "if", "(", "visited", "[", "neighbor", ".", "x", "]", "[", "neighbor", ".", "y", "]", ")", "{", "continue", ";", "}", "if", "(", "grid", "[", "neighbor", ".", "x", "]", "[", "neighbor", ".", "y", "]", "=", "=", "1", ")", "{", "currentBuildingCount", "+", "+", ";", "}", "else", "if", "(", "grid", "[", "neighbor", ".", "x", "]", "[", "neighbor", ".", "y", "]", "!", "=", "<NUM_LIT:2>", ")", "{", "queue", ".", "offerFirst", "(", "neighbor", ")", ";", "reach", "[", "neighbor", ".", "x", "]", "[", "neighbor", ".", "y", "]", "+", "=", "1", ";", "}", "visited", "[", "neighbor", ".", "x", "]", "[", "neighbor", ".", "y", "]", "=", "true", ";", "}", "}", "if", "(", "countBuilding", "-", "1", "!", "=", "currentBuildingCount", ")", "{", "return", "-", "1", ";", "}", "}", "int", "min", "=", "Integer", ".", "MAX_VALUE", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "output", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "output", "[", "0", "]", ".", "length", ";", "j", "+", "+", ")", "{", "if", "(", "reach", "[", "i", "]", "[", "j", "]", "=", "=", "countBuilding", ")", "{", "min", "=", "Math", ".", "min", "(", "min", ",", "output", "[", "i", "]", "[", "j", "]", ")", ";", "}", "}", "}", "return", "min", "=", "=", "Integer", ".", "MAX_VALUE", "?", "-", "1", ":", "min", ";", "}", "</s>"]
["<s>", "private", "List", "<", "Point", ">", "neighbors", "(", "Point", "p", ",", "int", "m", ",", "int", "n", ")", "{", "List", "<", "Point", ">", "neighbors", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "if", "(", "p", ".", "y", "<", "n", "-", "1", ")", "{", "neighbors", ".", "add", "(", "new", "Point", "(", "p", ".", "x", ",", "p", ".", "y", "+", "1", ",", "p", ".", "d", "+", "1", ")", ")", ";", "}", "if", "(", "p", ".", "x", "<", "m", "-", "1", ")", "{", "neighbors", ".", "add", "(", "new", "Point", "(", "p", ".", "x", "+", "1", ",", "p", ".", "y", ",", "p", ".", "d", "+", "1", ")", ")", ";", "}", "if", "(", "p", ".", "x", ">", "0", ")", "{", "neighbors", ".", "add", "(", "new", "Point", "(", "p", ".", "x", "-", "1", ",", "p", ".", "y", ",", "p", ".", "d", "+", "1", ")", ")", ";", "}", "if", "(", "p", ".", "y", ">", "0", ")", "{", "neighbors", ".", "add", "(", "new", "Point", "(", "p", ".", "x", ",", "p", ".", "y", "-", "1", ",", "p", ".", "d", "+", "1", ")", ")", ";", "}", "return", "neighbors", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "[", "]", "[", "]", "grid", "=", "{", "{", "1", ",", "0", ",", "<NUM_LIT:2>", ",", "0", ",", "1", "}", ",", "{", "0", ",", "0", ",", "0", ",", "0", ",", "0", "}", ",", "{", "0", ",", "0", ",", "1", ",", "0", ",", "0", "}", "}", ";", "int", "[", "]", "[", "]", "grid1", "=", "{", "{", "1", ",", "1", "}", ",", "{", "0", ",", "1", "}", "}", ";", "ShortestDistanceFromAllBuildings", "shortestDistanceFromAllBuildings", "=", "new", "ShortestDistanceFromAllBuildings", "(", ")", ";", "System", ".", "out", ".", "println", "(", "shortestDistanceFromAllBuildings", ".", "shortestDistance", "(", "grid", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "minArea", "(", "char", "[", "]", "[", "]", "image", ",", "int", "x", ",", "int", "y", ")", "{", "int", "m", "=", "image", ".", "length", ";", "int", "n", "=", "image", "[", "0", "]", ".", "length", ";", "int", "left", "=", "searchColumns", "(", "image", ",", "0", ",", "y", ",", "0", ",", "m", "-", "1", ",", "true", ")", ";", "int", "right", "=", "searchColumns", "(", "image", ",", "y", ",", "n", "-", "1", ",", "0", ",", "m", "-", "1", ",", "false", ")", ";", "int", "top", "=", "searchRows", "(", "image", ",", "0", ",", "x", ",", "left", ",", "right", ",", "true", ")", ";", "int", "bottom", "=", "searchRows", "(", "image", ",", "x", ",", "m", "-", "1", ",", "left", ",", "right", ",", "false", ")", ";", "return", "(", "right", "-", "left", "+", "1", ")", "*", "(", "bottom", "-", "top", "+", "1", ")", ";", "}", "</s>"]
["<s>", "private", "int", "searchColumns", "(", "char", "[", "]", "[", "]", "image", ",", "int", "i", ",", "int", "j", ",", "int", "top", ",", "int", "bottom", ",", "boolean", "opt", ")", "{", "int", "result", "=", "0", ";", "while", "(", "i", "<", "=", "j", ")", "{", "int", "k", "=", "top", ";", "int", "mid", "=", "(", "i", "+", "j", ")", "/", "<NUM_LIT:2>", ";", "while", "(", "k", "<", "=", "bottom", "&", "&", "image", "[", "k", "]", "[", "mid", "]", "=", "=", "<CHAR_LIT:0>", ")", "{", "k", "+", "+", ";", "}", "if", "(", "k", "!", "=", "bottom", "+", "1", ")", "{", "result", "=", "mid", ";", "}", "if", "(", "(", "k", "=", "=", "bottom", "+", "1", ")", "=", "=", "opt", ")", "{", "i", "=", "mid", "+", "1", ";", "}", "else", "{", "j", "=", "mid", "-", "1", ";", "}", "}", "return", "result", ";", "}", "</s>"]
["<s>", "private", "int", "searchRows", "(", "char", "[", "]", "[", "]", "image", ",", "int", "i", ",", "int", "j", ",", "int", "left", ",", "int", "right", ",", "boolean", "opt", ")", "{", "int", "result", "=", "0", ";", "while", "(", "i", "<", "=", "j", ")", "{", "int", "k", "=", "left", ";", "int", "mid", "=", "(", "i", "+", "j", ")", "/", "<NUM_LIT:2>", ";", "while", "(", "k", "<", "=", "right", "&", "&", "image", "[", "mid", "]", "[", "k", "]", "=", "=", "<CHAR_LIT:0>", ")", "{", "k", "+", "+", ";", "}", "if", "(", "k", "!", "=", "right", "+", "1", ")", "{", "result", "=", "mid", ";", "}", "if", "(", "(", "k", "=", "=", "right", "+", "1", ")", "=", "=", "opt", ")", "{", "i", "=", "mid", "+", "1", ";", "}", "else", "{", "j", "=", "mid", "-", "1", ";", "}", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "char", "[", "]", "[", "]", "image1", "=", "{", "{", "<CHAR_LIT:1>", "}", ",", "{", "<CHAR_LIT:1>", "}", "}", ";", "char", "[", "]", "[", "]", "image", "=", "{", "{", "<CHAR_LIT:0>", ",", "<CHAR_LIT:0>", ",", "<CHAR_LIT:1>", ",", "<CHAR_LIT:0>", "}", ",", "{", "<CHAR_LIT:0>", ",", "<CHAR_LIT:1>", ",", "<CHAR_LIT:1>", ",", "<CHAR_LIT:0>", "}", ",", "{", "<CHAR_LIT:0>", ",", "<CHAR_LIT:1>", ",", "<CHAR_LIT:0>", ",", "<CHAR_LIT:0>", "}", "}", ";", "SmallestRectangleBlackPixel", "sbp", "=", "new", "SmallestRectangleBlackPixel", "(", ")", ";", "System", ".", "out", ".", "print", "(", "sbp", ".", "minArea", "(", "image", ",", "0", ",", "<NUM_LIT:2>", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "strobogrammaticInRange", "(", "String", "low", ",", "String", "high", ")", "{", "int", "count", "=", "0", ";", "for", "(", "int", "i", "=", "low", ".", "length", "(", ")", ";", "i", "<", "=", "high", ".", "length", "(", ")", ";", "i", "+", "+", ")", "{", "char", "[", "]", "result", "=", "new", "char", "[", "i", "]", ";", "count", "+", "=", "strobogrammaticInRangeUtil", "(", "low", ",", "high", ",", "0", ",", "result", ".", "length", "-", "1", ",", "result", ")", ";", "}", "return", "count", ";", "}", "</s>"]
["<s>", "private", "int", "strobogrammaticInRangeUtil", "(", "String", "low", ",", "String", "high", ",", "int", "left", ",", "int", "right", ",", "char", "[", "]", "result", ")", "{", "if", "(", "left", ">", "right", ")", "{", "String", "r", "=", "new", "String", "(", "result", ")", ";", "if", "(", "(", "r", ".", "length", "(", ")", "=", "=", "low", ".", "length", "(", ")", "&", "&", "low", ".", "compareTo", "(", "r", ")", ">", "0", ")", "|", "|", "(", "high", ".", "length", "(", ")", "=", "=", "result", ".", "length", "&", "&", "high", ".", "compareTo", "(", "r", ")", "<", "0", ")", ")", "{", "return", "0", ";", "}", "return", "1", ";", "}", "int", "count", "=", "0", ";", "for", "(", "char", "[", "]", "pair", ":", "pairs", ")", "{", "result", "[", "left", "]", "=", "pair", "[", "0", "]", ";", "result", "[", "right", "]", "=", "pair", "[", "1", "]", ";", "if", "(", "result", ".", "length", "!", "=", "1", "&", "&", "result", "[", "0", "]", "=", "=", "<CHAR_LIT:0>", ")", "{", "continue", ";", "}", "if", "(", "(", "left", "<", "right", ")", "|", "|", "(", "left", "=", "=", "right", "&", "&", "pair", "[", "0", "]", "=", "=", "pair", "[", "1", "]", ")", ")", "{", "count", "+", "=", "strobogrammaticInRangeUtil", "(", "low", ",", "high", ",", "left", "+", "1", ",", "right", "-", "1", ",", "result", ")", ";", "}", "}", "return", "count", ";", "}", "</s>"]
["<s>", "public", "boolean", "isStrobogrammatic", "(", "String", "num", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "=", "num", ".", "length", "(", ")", "/", "<NUM_LIT:2>", ";", "i", "+", "+", ")", "{", "char", "ch1", "=", "num", ".", "charAt", "(", "i", ")", ";", "char", "ch2", "=", "num", ".", "charAt", "(", "num", ".", "length", "(", ")", "-", "i", "-", "1", ")", ";", "if", "(", "ch1", "!", "=", "ch2", ")", "{", "if", "(", "(", "ch1", "!", "=", "<CHAR_LIT:9>", "|", "|", "ch2", "!", "=", "<CHAR_LIT>", ")", "&", "&", "(", "ch1", "!", "=", "<CHAR_LIT>", "|", "|", "ch2", "!", "=", "<CHAR_LIT:9>", ")", ")", "{", "return", "false", ";", "}", "}", "else", "{", "if", "(", "ch1", "!", "=", "<CHAR_LIT:0>", "&", "&", "ch1", "!", "=", "<CHAR_LIT:1>", "&", "&", "ch1", "!", "=", "<CHAR_LIT>", ")", "{", "return", "false", ";", "}", "}", "}", "return", "true", ";", "}", "</s>"]
["<s>", "public", "Okay", "test", "(", ")", "{", "final", "int", "r", "=", "<NUM_LIT:10>", ";", "return", "random", ":", ":", "nextInt", ";", "}", "</s>"]
["<s>", "public", "void", "test1", "(", ")", "{", "random", "=", "new", "Random", "(", ")", ";", "Okay", "o1", "=", "test", "(", ")", ";", "System", ".", "out", ".", "print", "(", "o1", ".", "next", "(", ")", ")", ";", "Okay", "o2", "=", "test", "(", ")", ";", "random", "=", "null", ";", "System", ".", "out", ".", "print", "(", "o2", ".", "next", "(", ")", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "TestInnerClass", "testInnerClass", "=", "new", "TestInnerClass", "(", ")", ";", "testInnerClass", ".", "test1", "(", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "wordPatternMatch", "(", "String", "pattern", ",", "String", "str", ")", "{", "Map", "<", "Character", ",", "String", ">", "map", "=", "new", "HashMap", "<", ">", "(", ")", ";", "Set", "<", "String", ">", "set", "=", "new", "HashSet", "<", ">", "(", ")", ";", "return", "wordPatternMatch", "(", "pattern", ",", "str", ",", "0", ",", "0", ",", "map", ",", "set", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "wordPatternMatch", "(", "String", "pattern", ",", "String", "str", ",", "int", "pos1", ",", "int", "pos2", ",", "Map", "<", "Character", ",", "String", ">", "map", ",", "Set", "<", "String", ">", "set", ")", "{", "if", "(", "pos1", "=", "=", "pattern", ".", "length", "(", ")", ")", "{", "return", "pos2", "=", "=", "str", ".", "length", "(", ")", ";", "}", "char", "ch", "=", "pattern", ".", "charAt", "(", "pos1", ")", ";", "String", "val", "=", "map", ".", "get", "(", "ch", ")", ";", "if", "(", "val", "!", "=", "null", ")", "{", "return", "pos2", "+", "val", ".", "length", "(", ")", "<", "=", "str", ".", "length", "(", ")", "&", "&", "val", ".", "equals", "(", "str", ".", "substring", "(", "pos2", ",", "pos2", "+", "val", ".", "length", "(", ")", ")", ")", "&", "&", "wordPatternMatch", "(", "pattern", ",", "str", ",", "pos1", "+", "1", ",", "pos2", "+", "val", ".", "length", "(", ")", ",", "map", ",", "set", ")", ";", "}", "else", "{", "for", "(", "int", "i", "=", "pos2", ";", "i", "<", "str", ".", "length", "(", ")", "-", "(", "pattern", ".", "length", "(", ")", "-", "pos1", "-", "1", ")", ";", "i", "+", "+", ")", "{", "String", "newStr", "=", "str", ".", "substring", "(", "pos2", ",", "i", "+", "1", ")", ";", "if", "(", "set", ".", "contains", "(", "newStr", ")", ")", "{", "continue", ";", "}", "set", ".", "add", "(", "newStr", ")", ";", "map", ".", "put", "(", "ch", ",", "newStr", ")", ";", "if", "(", "wordPatternMatch", "(", "pattern", ",", "str", ",", "pos1", "+", "1", ",", "i", "+", "1", ",", "map", ",", "set", ")", ")", "{", "return", "true", ";", "}", "set", ".", "remove", "(", "newStr", ")", ";", "}", "map", ".", "remove", "(", "ch", ")", ";", "}", "return", "false", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "String", "pattern", "=", "\"", "<STR_LIT>", "\"", ";", "String", "str", "=", "\"", "<STR_LIT>", "\"", ";", "WordPattern", "wp", "=", "new", "WordPattern", "(", ")", ";", "System", ".", "out", ".", "println", "(", "wp", ".", "wordPatternMatch", "(", "pattern", ",", "str", ")", ")", ";", "}", "</s>"]
["<s>", "public", "List", "<", "List", "<", "String", ">", ">", "groupAnagrams", "(", "String", "[", "]", "strs", ")", "{", "if", "(", "strs", "=", "=", "null", "|", "|", "strs", ".", "length", "=", "=", "0", ")", "return", "new", "ArrayList", "<", "List", "<", "String", ">", ">", "(", ")", ";", "Map", "<", "String", ",", "Map", "<", "String", ",", "Integer", ">", ">", "anagramGroup", "=", "new", "HashMap", "<", ">", "(", ")", ";", "for", "(", "String", "str", ":", "strs", ")", "{", "char", "[", "]", "chars", "=", "str", ".", "toCharArray", "(", ")", ";", "Arrays", ".", "sort", "(", "chars", ")", ";", "String", "sorted", "=", "new", "String", "(", "chars", ")", ";", "if", "(", "anagramGroup", ".", "containsKey", "(", "sorted", ")", ")", "{", "Map", "<", "String", ",", "Integer", ">", "r", "=", "anagramGroup", ".", "get", "(", "sorted", ")", ";", "if", "(", "r", ".", "containsKey", "(", "str", ")", ")", "{", "r", ".", "put", "(", "str", ",", "r", ".", "get", "(", "str", ")", "+", "1", ")", ";", "}", "else", "{", "r", ".", "put", "(", "str", ",", "1", ")", ";", "}", "}", "else", "{", "Map", "<", "String", ",", "Integer", ">", "r", "=", "new", "TreeMap", "<", ">", "(", ")", ";", "r", ".", "put", "(", "str", ",", "1", ")", ";", "anagramGroup", ".", "put", "(", "sorted", ",", "r", ")", ";", "}", "}", "List", "<", "List", "<", "String", ">", ">", "result", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "for", "(", "Map", "<", "String", ",", "Integer", ">", "value", ":", "anagramGroup", ".", "values", "(", ")", ")", "{", "List", "<", "String", ">", "r", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "for", "(", "String", "k", ":", "value", ".", "keySet", "(", ")", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "value", ".", "get", "(", "k", ")", ";", "i", "+", "+", ")", "{", "r", ".", "add", "(", "k", ")", ";", "}", "}", "result", ".", "add", "(", "r", ")", ";", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "String", "multiply", "(", "String", "num1", ",", "String", "num2", ")", "{", "String", "output", "=", "multiply", "(", "num1", ",", "num2", ",", "0", ",", "num1", ".", "length", "(", ")", "-", "1", ",", "0", ",", "num2", ".", "length", "(", ")", "-", "1", ")", ";", "return", "output", ";", "}", "</s>"]
["<s>", "private", "String", "multiply", "(", "String", "num1", ",", "String", "num2", ",", "int", "start1", ",", "int", "end1", ",", "int", "start2", ",", "int", "end2", ")", "{", "if", "(", "end1", "-", "start1", "=", "=", "0", "|", "|", "end2", "-", "start2", "=", "=", "0", ")", "{", "return", "simpleMultiply", "(", "num1", ".", "substring", "(", "start1", ",", "end1", "+", "1", ")", ",", "num2", ".", "substring", "(", "start2", ",", "end2", "+", "1", ")", ")", ";", "}", "int", "mid1", "=", "(", "start1", "+", "end1", ")", "/", "<NUM_LIT:2>", ";", "int", "mid2", "=", "(", "start2", "+", "end2", ")", "/", "<NUM_LIT:2>", ";", "int", "count1", "=", "end1", "-", "mid1", ";", "int", "count2", "=", "end2", "-", "mid2", ";", "String", "v1", "=", "multiply", "(", "num1", ",", "num2", ",", "start1", ",", "mid1", ",", "start2", ",", "mid2", ")", ";", "String", "v2", "=", "multiply", "(", "num1", ",", "num2", ",", "start1", ",", "mid1", ",", "mid2", "+", "1", ",", "end2", ")", ";", "String", "v3", "=", "multiply", "(", "num1", ",", "num2", ",", "mid1", "+", "1", ",", "end1", ",", "start2", ",", "mid2", ")", ";", "String", "v4", "=", "multiply", "(", "num1", ",", "num2", ",", "mid1", "+", "1", ",", "end1", ",", "mid2", "+", "1", ",", "end2", ")", ";", "v1", "=", "append0s", "(", "v1", ",", "count1", "+", "count2", ")", ";", "v2", "=", "append0s", "(", "v2", ",", "count1", ")", ";", "v3", "=", "append0s", "(", "v3", ",", "count2", ")", ";", "v1", "=", "add", "(", "v1", ".", "toCharArray", "(", ")", ",", "v2", ".", "toCharArray", "(", ")", ")", ";", "v3", "=", "add", "(", "v3", ".", "toCharArray", "(", ")", ",", "v4", ".", "toCharArray", "(", ")", ")", ";", "return", "add", "(", "v1", ".", "toCharArray", "(", ")", ",", "v3", ".", "toCharArray", "(", ")", ")", ";", "}", "</s>"]
["<s>", "private", "String", "simpleMultiply", "(", "String", "num1", ",", "String", "num2", ")", "{", "String", "smaller", ";", "String", "larger", ";", "if", "(", "num1", ".", "length", "(", ")", "=", "=", "1", ")", "{", "smaller", "=", "num1", ";", "larger", "=", "num2", ";", "}", "else", "{", "smaller", "=", "num2", ";", "larger", "=", "num1", ";", "}", "int", "r2", "=", "smaller", ".", "charAt", "(", "0", ")", "-", "<CHAR_LIT:0>", ";", "if", "(", "r2", "=", "=", "0", ")", "{", "return", "\"", "<STR_LIT:0>", "\"", ";", "}", "int", "carry", "=", "0", ";", "StringBuffer", "stringBuffer", "=", "new", "StringBuffer", "(", ")", ";", "for", "(", "int", "i", "=", "larger", ".", "length", "(", ")", "-", "1", ";", "i", ">", "=", "0", ";", "i", "-", "-", ")", "{", "int", "r1", "=", "larger", ".", "charAt", "(", "i", ")", "-", "<CHAR_LIT:0>", ";", "int", "r", "=", "r1", "*", "r2", "+", "carry", ";", "stringBuffer", ".", "append", "(", "r", "%", "<NUM_LIT:10>", ")", ";", "carry", "=", "r", "/", "<NUM_LIT:10>", ";", "}", "if", "(", "carry", "!", "=", "0", ")", "{", "stringBuffer", ".", "append", "(", "carry", ")", ";", "}", "return", "stringBuffer", ".", "reverse", "(", ")", ".", "toString", "(", ")", ";", "}", "</s>"]
["<s>", "private", "String", "append0s", "(", "String", "v1", ",", "int", "count", ")", "{", "StringBuffer", "buff", "=", "new", "StringBuffer", "(", "v1", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "count", ";", "i", "+", "+", ")", "{", "buff", ".", "append", "(", "\"", "<STR_LIT:0>", "\"", ")", ";", "}", "return", "buff", ".", "toString", "(", ")", ";", "}", "</s>"]
["<s>", "public", "String", "add", "(", "char", "[", "]", "num1", ",", "char", "[", "]", "num2", ")", "{", "int", "index1", "=", "num1", ".", "length", "-", "1", ";", "int", "index2", "=", "num2", ".", "length", "-", "1", ";", "int", "carry", "=", "0", ";", "StringBuffer", "buffer", "=", "new", "StringBuffer", "(", ")", ";", "while", "(", "index1", ">", "=", "0", "&", "&", "index2", ">", "=", "0", ")", "{", "int", "r1", "=", "num1", "[", "index1", "]", "-", "<CHAR_LIT:0>", ";", "int", "r2", "=", "num2", "[", "index2", "]", "-", "<CHAR_LIT:0>", ";", "int", "r", "=", "r1", "+", "r2", "+", "carry", ";", "buffer", ".", "append", "(", "r", "%", "<NUM_LIT:10>", ")", ";", "carry", "=", "r", "/", "<NUM_LIT:10>", ";", "index1", "-", "-", ";", "index2", "-", "-", ";", "}", "while", "(", "index1", ">", "=", "0", ")", "{", "int", "r1", "=", "num1", "[", "index1", "]", "-", "<CHAR_LIT:0>", ";", "int", "r", "=", "r1", "+", "carry", ";", "buffer", ".", "append", "(", "r", "%", "<NUM_LIT:10>", ")", ";", "carry", "=", "r", "/", "<NUM_LIT:10>", ";", "index1", "-", "-", ";", "}", "while", "(", "index2", ">", "=", "0", ")", "{", "int", "r2", "=", "num2", "[", "index2", "]", "-", "<CHAR_LIT:0>", ";", "int", "r", "=", "r2", "+", "carry", ";", "buffer", ".", "append", "(", "r", "%", "<NUM_LIT:10>", ")", ";", "carry", "=", "r", "/", "<NUM_LIT:10>", ";", "index2", "-", "-", ";", "}", "if", "(", "carry", "!", "=", "0", ")", "{", "buffer", ".", "append", "(", "carry", ")", ";", "}", "return", "buffer", ".", "reverse", "(", ")", ".", "toString", "(", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "MultiplyStrings", "ms", "=", "new", "MultiplyStrings", "(", ")", ";", "System", ".", "out", ".", "print", "(", "ms", ".", "multiply", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "closestValue", "(", "Node", "root", ",", "double", "target", ")", "{", "int", "r", "=", "target", ">", "0", "?", "Integer", ".", "MIN_VALUE", ":", "Integer", ".", "MAX_VALUE", ";", "return", "closestValueUtil", "(", "root", ",", "target", ",", "r", ")", ";", "}", "</s>"]
["<s>", "private", "int", "closestValueUtil", "(", "Node", "root", ",", "double", "target", ",", "int", "result", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", "(", "int", ")", "result", ";", "}", "if", "(", "target", "=", "=", "root", ".", "data", ")", "{", "return", "root", ".", "data", ";", "}", "if", "(", "Math", ".", "abs", "(", "root", ".", "data", "-", "target", ")", "<", "Math", ".", "abs", "(", "result", "-", "target", ")", ")", "{", "result", "=", "root", ".", "data", ";", "}", "if", "(", "target", "<", "root", ".", "data", ")", "{", "return", "closestValueUtil", "(", "root", ".", "left", ",", "target", ",", "result", ")", ";", "}", "else", "{", "return", "closestValueUtil", "(", "root", ".", "right", ",", "target", ",", "result", ")", ";", "}", "}", "</s>"]
["<s>", "public", "Node", "buildTree", "(", "int", "[", "]", "inorder", ",", "int", "[", "]", "postorder", ")", "{", "return", "buildTree", "(", "inorder", ",", "postorder", ",", "0", ",", "inorder", ".", "length", "-", "1", ",", "postorder", ".", "length", "-", "1", ")", ";", "}", "</s>"]
["<s>", "public", "Node", "buildTree", "(", "int", "[", "]", "inorder", ",", "int", "[", "]", "postorder", ",", "int", "start", ",", "int", "end", ",", "int", "index", ")", "{", "if", "(", "start", ">", "end", ")", "{", "return", "null", ";", "}", "int", "i", ";", "for", "(", "i", "=", "start", ";", "i", "<", "=", "end", ";", "i", "+", "+", ")", "{", "if", "(", "postorder", "[", "index", "]", "=", "=", "inorder", "[", "i", "]", ")", "{", "break", ";", "}", "}", "Node", "tn", "=", "Node", ".", "newNode", "(", "postorder", "[", "index", "]", ")", ";", "tn", ".", "left", "=", "buildTree", "(", "inorder", ",", "postorder", ",", "start", ",", "i", "-", "1", ",", "index", "-", "(", "end", "-", "i", "+", "1", ")", ")", ";", "tn", ".", "right", "=", "buildTree", "(", "inorder", ",", "postorder", ",", "i", "+", "1", ",", "end", ",", "index", "-", "1", ")", ";", "return", "tn", ";", "}", "</s>"]
["<s>", "public", "int", "longestConsecutive", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", "0", ";", "}", "max", "=", "0", ";", "longestConsecutiveUtil", "(", "root", ",", "root", ".", "data", "-", "1", ",", "0", ")", ";", "return", "max", ";", "}", "</s>"]
["<s>", "public", "void", "longestConsecutiveUtil", "(", "Node", "root", ",", "int", "prevData", ",", "int", "current", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", ";", "}", "if", "(", "root", ".", "data", "=", "=", "prevData", "+", "1", ")", "{", "current", "=", "current", "+", "1", ";", "}", "else", "{", "current", "=", "1", ";", "}", "max", "=", "Math", ".", "max", "(", "current", ",", "max", ")", ";", "longestConsecutiveUtil", "(", "root", ".", "left", ",", "root", ".", "data", ",", "current", ")", ";", "longestConsecutiveUtil", "(", "root", ".", "right", ",", "root", ".", "data", ",", "current", ")", ";", "}", "</s>"]
["<s>", "public", "Node", "upsideDownBinaryTree", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", "null", ";", "}", "return", "upsideDownBinaryTree", "(", "root", ",", "null", ",", "null", ")", ";", "}", "</s>"]
["<s>", "public", "Node", "upsideDownBinaryTree", "(", "Node", "root", ",", "Node", "parent", ",", "Node", "rightChild", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", "parent", ";", "}", "Node", "left", "=", "root", ".", "left", ";", "Node", "right", "=", "root", ".", "right", ";", "root", ".", "right", "=", "parent", ";", "root", ".", "left", "=", "rightChild", ";", "return", "upsideDownBinaryTree", "(", "left", ",", "root", ",", "right", ")", ";", "}", "</s>"]
["<s>", "public", "List", "<", "List", "<", "Integer", ">", ">", "verticalOrder", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", "new", "ArrayList", "<", ">", "(", ")", ";", "}", "int", "minVal", "=", "0", ";", "int", "maxVal", "=", "0", ";", "Map", "<", "Integer", ",", "List", "<", "Integer", ">", ">", "map", "=", "new", "HashMap", "<", ">", "(", ")", ";", "Deque", "<", "Node", ">", "queue", "=", "new", "LinkedList", "<", ">", "(", ")", ";", "Deque", "<", "Integer", ">", "verticalQueue", "=", "new", "LinkedList", "<", ">", "(", ")", ";", "queue", ".", "offerFirst", "(", "root", ")", ";", "verticalQueue", ".", "offerFirst", "(", "0", ")", ";", "int", "vertical", ";", "while", "(", "!", "queue", ".", "isEmpty", "(", ")", ")", "{", "root", "=", "queue", ".", "pollFirst", "(", ")", ";", "vertical", "=", "verticalQueue", ".", "pollFirst", "(", ")", ";", "minVal", "=", "Math", ".", "min", "(", "minVal", ",", "vertical", ")", ";", "maxVal", "=", "Math", ".", "max", "(", "maxVal", ",", "vertical", ")", ";", "List", "<", "Integer", ">", "r", "=", "map", ".", "get", "(", "vertical", ")", ";", "if", "(", "r", "=", "=", "null", ")", "{", "r", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "map", ".", "put", "(", "vertical", ",", "r", ")", ";", "}", "r", ".", "add", "(", "root", ".", "data", ")", ";", "if", "(", "root", ".", "left", "!", "=", "null", ")", "{", "queue", ".", "offerLast", "(", "root", ".", "left", ")", ";", "verticalQueue", ".", "offerLast", "(", "vertical", "-", "1", ")", ";", "}", "if", "(", "root", ".", "right", "!", "=", "null", ")", "{", "queue", ".", "offerLast", "(", "root", ".", "right", ")", ";", "verticalQueue", ".", "offerLast", "(", "vertical", "+", "1", ")", ";", "}", "}", "List", "<", "List", "<", "Integer", ">", ">", "result", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "for", "(", "int", "i", "=", "minVal", ";", "i", "<", "=", "maxVal", ";", "i", "+", "+", ")", "{", "List", "<", "Integer", ">", "r", "=", "map", ".", "get", "(", "i", ")", ";", "result", ".", "add", "(", "r", ")", ";", "}", "return", "result", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testDifferentCases", "(", ")", "{", "ThreeSumSmallerThanTarget", "threeSumSmallerThanTarget", "=", "new", "ThreeSumSmallerThanTarget", "(", ")", ";", "int", "[", "]", "input", "=", "{", "-", "<NUM_LIT:2>", ",", "0", ",", "1", ",", "<NUM_LIT:3>", "}", ";", "Assert", ".", "assertEquals", "(", "<NUM_LIT:2>", ",", "threeSumSmallerThanTarget", ".", "threeSumSmaller", "(", "input", ",", "<NUM_LIT:2>", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testDifferentCases", "(", ")", "{", "int", "[", "]", "[", "]", "input", "=", "{", "{", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:6>", "}", ",", "{", "-", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:4>", "}", ",", "{", "-", "<NUM_LIT:3>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:5>", "}", "}", ";", "Mutable2DSumRangeQuery", "mutable2DSumRangeQuery", "=", "new", "Mutable2DSumRangeQuery", "(", "input", ")", ";", "int", "total", "=", "mutable2DSumRangeQuery", ".", "sumRegion", "(", "1", ",", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:2>", ")", ";", "Assert", ".", "assertEquals", "(", "<NUM_LIT>", ",", "total", ")", ";", "total", "=", "mutable2DSumRangeQuery", ".", "sumRegion", "(", "0", ",", "1", ",", "<NUM_LIT:2>", ",", "1", ")", ";", "Assert", ".", "assertEquals", "(", "<NUM_LIT:7>", ",", "total", ")", ";", "mutable2DSumRangeQuery", ".", "update", "(", "1", ",", "1", ",", "<NUM_LIT:4>", ")", ";", "total", "=", "mutable2DSumRangeQuery", ".", "sumRegion", "(", "1", ",", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:2>", ")", ";", "Assert", ".", "assertEquals", "(", "<NUM_LIT:15>", ",", "total", ")", ";", "total", "=", "mutable2DSumRangeQuery", ".", "sumRegion", "(", "0", ",", "1", ",", "<NUM_LIT:2>", ",", "1", ")", ";", "Assert", ".", "assertEquals", "(", "<NUM_LIT:9>", ",", "total", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testDifferentCases", "(", ")", "{", "AllStrobogrammaticNumber", "allStrobogrammaticNumber", "=", "new", "AllStrobogrammaticNumber", "(", ")", ";", "Assert", ".", "assertEquals", "(", "<NUM_LIT>", ",", "allStrobogrammaticNumber", ".", "strobogrammaticInRange", "(", "\"", "<STR_LIT:0>", "\"", ",", "\"", "<STR_LIT>", "\"", ")", ")", ";", "Assert", ".", "assertEquals", "(", "<NUM_LIT>", ",", "allStrobogrammaticNumber", ".", "strobogrammaticInRange", "(", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ")", ")", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testDifferentCases", "(", ")", "{", "SerializeDeserializeBinaryTree", "serializeDeserializeBinaryTree", "=", "new", "SerializeDeserializeBinaryTree", "(", ")", ";", "Node", "root", "=", "serializeDeserializeBinaryTree", ".", "deserializeLevelOrder", "(", "\"", "<STR_LIT>", "\"", ")", ";", "VerticalOrder", "verticalOrder", "=", "new", "VerticalOrder", "(", ")", ";", "List", "<", "List", "<", "Integer", ">", ">", "result", "=", "verticalOrder", ".", "verticalOrder", "(", "root", ")", ";", "List", "<", "List", "<", "Integer", ">", ">", "expected", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "expected", ".", "add", "(", "Arrays", ".", "asList", "(", "1", ",", "<NUM_LIT:2>", ")", ")", ";", "expected", ".", "add", "(", "Arrays", ".", "asList", "(", "<NUM_LIT:5>", ",", "<NUM_LIT:3>", ")", ")", ";", "expected", ".", "add", "(", "Arrays", ".", "asList", "(", "<NUM_LIT:6>", ",", "<NUM_LIT:4>", ")", ")", ";", "int", "index", "=", "0", ";", "TestUtil", "<", "Integer", ">", "t", "=", "new", "TestUtil", "<", ">", "(", ")", ";", "for", "(", "List", "<", "Integer", ">", "r", ":", "result", ")", "{", "t", ".", "compareList", "(", "expected", ".", "get", "(", "index", "+", "+", ")", ",", "r", ")", ";", "}", "expected", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "expected", ".", "add", "(", "Arrays", ".", "asList", "(", "<NUM_LIT:9>", ")", ")", ";", "expected", ".", "add", "(", "Arrays", ".", "asList", "(", "<NUM_LIT:3>", ",", "<NUM_LIT:15>", ")", ")", ";", "expected", ".", "add", "(", "Arrays", ".", "asList", "(", "<NUM_LIT:20>", ")", ")", ";", "expected", ".", "add", "(", "Arrays", ".", "asList", "(", "<NUM_LIT:7>", ")", ")", ";", "root", "=", "serializeDeserializeBinaryTree", ".", "deserializeLevelOrder", "(", "\"", "<STR_LIT>", "\"", ")", ";", "result", "=", "verticalOrder", ".", "verticalOrder", "(", "root", ")", ";", "index", "=", "0", ";", "for", "(", "List", "<", "Integer", ">", "r", ":", "result", ")", "{", "t", ".", "compareList", "(", "expected", ".", "get", "(", "index", "+", "+", ")", ",", "r", ")", ";", "}", "}", "</s>"]
["<s>", "public", "boolean", "matchRegexRecursive", "(", "char", "[", "]", "str", ",", "char", "[", "]", "pattern", ")", "{", "return", "matchRegexRecursive", "(", "str", ",", "pattern", ",", "0", ",", "0", ")", ";", "}", "</s>"]
["<s>", "public", "List", "<", "List", "<", "Integer", ">", ">", "fourSum", "(", "int", "[", "]", "nums", ",", "int", "target", ")", "{", "if", "(", "nums", ".", "length", "<", "<NUM_LIT:4>", ")", "{", "return", "Collections", ".", "EMPTY_LIST", ";", "}", "Arrays", ".", "sort", "(", "nums", ")", ";", "List", "<", "List", "<", "Integer", ">", ">", "result", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "nums", ".", "length", "-", "<NUM_LIT:3>", ";", "i", "+", "+", ")", "{", "if", "(", "i", "!", "=", "0", "&", "&", "nums", "[", "i", "]", "=", "=", "nums", "[", "i", "-", "1", "]", ")", "{", "continue", ";", "}", "if", "(", "nums", "[", "i", "]", "+", "nums", "[", "i", "+", "1", "]", "+", "nums", "[", "i", "+", "<NUM_LIT:2>", "]", "+", "nums", "[", "i", "+", "<NUM_LIT:3>", "]", ">", "target", ")", "{", "break", ";", "}", "if", "(", "nums", "[", "i", "]", "+", "nums", "[", "nums", ".", "length", "-", "<NUM_LIT:3>", "]", "+", "nums", "[", "nums", ".", "length", "-", "<NUM_LIT:2>", "]", "+", "nums", "[", "nums", ".", "length", "-", "1", "]", "<", "target", ")", "{", "continue", ";", "}", "for", "(", "int", "j", "=", "i", "+", "1", ";", "j", "<", "nums", ".", "length", "-", "<NUM_LIT:2>", ";", "j", "+", "+", ")", "{", "if", "(", "j", "!", "=", "i", "+", "1", "&", "&", "nums", "[", "j", "]", "=", "=", "nums", "[", "j", "-", "1", "]", ")", "{", "continue", ";", "}", "if", "(", "nums", "[", "i", "]", "+", "nums", "[", "j", "]", "+", "nums", "[", "j", "+", "1", "]", "+", "nums", "[", "j", "+", "<NUM_LIT:2>", "]", ">", "target", ")", "{", "break", ";", "}", "if", "(", "nums", "[", "i", "]", "+", "nums", "[", "j", "]", "+", "nums", "[", "nums", ".", "length", "-", "1", "]", "+", "nums", "[", "nums", ".", "length", "-", "1", "]", "<", "target", ")", "{", "continue", ";", "}", "int", "low", "=", "j", "+", "1", ";", "int", "high", "=", "nums", ".", "length", "-", "1", ";", "while", "(", "low", "<", "high", ")", "{", "if", "(", "low", "!", "=", "j", "+", "1", "&", "&", "nums", "[", "low", "]", "=", "=", "nums", "[", "low", "-", "1", "]", ")", "{", "low", "+", "+", ";", "continue", ";", "}", "if", "(", "high", "!", "=", "nums", ".", "length", "-", "1", "&", "&", "nums", "[", "high", "]", "=", "=", "nums", "[", "high", "+", "1", "]", ")", "{", "high", "-", "-", ";", "continue", ";", "}", "int", "sum", "=", "nums", "[", "i", "]", "+", "nums", "[", "j", "]", "+", "nums", "[", "low", "]", "+", "nums", "[", "high", "]", ";", "if", "(", "sum", "=", "=", "target", ")", "{", "List", "<", "Integer", ">", "r", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "r", ".", "add", "(", "nums", "[", "i", "]", ")", ";", "r", ".", "add", "(", "nums", "[", "j", "]", ")", ";", "r", ".", "add", "(", "nums", "[", "low", "]", ")", ";", "r", ".", "add", "(", "nums", "[", "high", "]", ")", ";", "result", ".", "add", "(", "r", ")", ";", "low", "+", "+", ";", "high", "-", "-", ";", "}", "else", "if", "(", "sum", "<", "target", ")", "{", "low", "+", "+", ";", "}", "else", "{", "high", "-", "-", ";", "}", "}", "}", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "[", "]", "nums", "=", "{", "1", ",", "1", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:11>", "}", ";", "int", "[", "]", "nums1", "=", "{", "1", ",", "0", ",", "-", "1", ",", "0", ",", "-", "<NUM_LIT:2>", ",", "<NUM_LIT:2>", "}", ";", "int", "target", "=", "0", ";", "FourSum", "fourSum", "=", "new", "FourSum", "(", ")", ";", "List", "<", "List", "<", "Integer", ">", ">", "result", "=", "fourSum", ".", "fourSum", "(", "nums1", ",", "target", ")", ";", "result", ".", "forEach", "(", "System", ".", "out", ":", ":", "print", ")", ";", "}", "</s>"]
["<s>", "public", "int", "[", "]", "searchRange", "(", "int", "[", "]", "nums", ",", "int", "target", ")", "{", "int", "first", "=", "firstOccurence", "(", "nums", ",", "target", ")", ";", "if", "(", "first", "=", "=", "-", "1", ")", "{", "return", "new", "int", "[", "]", "{", "-", "1", ",", "-", "1", "}", ";", "}", "int", "last", "=", "lastOccurence", "(", "nums", ",", "target", ")", ";", "return", "new", "int", "[", "]", "{", "first", ",", "last", "}", ";", "}", "</s>"]
["<s>", "private", "int", "firstOccurence", "(", "int", "[", "]", "nums", ",", "int", "target", ")", "{", "int", "low", "=", "0", ";", "int", "high", "=", "nums", ".", "length", "-", "1", ";", "while", "(", "low", "<", "=", "high", ")", "{", "int", "mid", "=", "low", "+", "(", "high", "-", "low", ")", "/", "<NUM_LIT:2>", ";", "if", "(", "nums", "[", "mid", "]", "=", "=", "target", "&", "&", "(", "mid", "=", "=", "0", "|", "|", "nums", "[", "mid", "-", "1", "]", "<", "target", ")", ")", "{", "return", "mid", ";", "}", "else", "if", "(", "nums", "[", "mid", "]", ">", "=", "target", ")", "{", "high", "=", "mid", "-", "1", ";", "}", "else", "{", "low", "=", "mid", "+", "1", ";", "}", "}", "return", "-", "1", ";", "}", "</s>"]
["<s>", "private", "int", "lastOccurence", "(", "int", "[", "]", "nums", ",", "int", "target", ")", "{", "int", "low", "=", "0", ";", "int", "high", "=", "nums", ".", "length", "-", "1", ";", "while", "(", "low", "<", "=", "high", ")", "{", "int", "mid", "=", "low", "+", "(", "high", "-", "low", ")", "/", "<NUM_LIT:2>", ";", "if", "(", "nums", "[", "mid", "]", "=", "=", "target", "&", "&", "(", "mid", "=", "=", "nums", ".", "length", "-", "1", "|", "|", "nums", "[", "mid", "+", "1", "]", ">", "target", ")", ")", "{", "return", "mid", ";", "}", "else", "if", "(", "nums", "[", "mid", "]", "<", "=", "target", ")", "{", "low", "=", "mid", "+", "1", ";", "}", "else", "{", "high", "=", "mid", "-", "1", ";", "}", "}", "return", "-", "1", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "SearchForRange", "searchForRange", "=", "new", "SearchForRange", "(", ")", ";", "int", "[", "]", "nums", "=", "{", "0", ",", "1", ",", "1", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:11>", "}", ";", "int", "[", "]", "r", "=", "searchForRange", ".", "searchRange", "(", "nums", ",", "<NUM_LIT:11>", ")", ";", "System", ".", "out", ".", "println", "(", "r", "[", "0", "]", "+", "\"", "\"", "+", "r", "[", "1", "]", ")", ";", "r", "=", "searchForRange", ".", "searchRange", "(", "nums", ",", "0", ")", ";", "System", ".", "out", ".", "println", "(", "r", "[", "0", "]", "+", "\"", "\"", "+", "r", "[", "1", "]", ")", ";", "}", "</s>"]
["<s>", "public", "void", "rotate", "(", "int", "[", "]", "[", "]", "matrix", ")", "{", "int", "length", "=", "matrix", ".", "length", "-", "1", ";", "int", "j", "=", "0", ";", "while", "(", "j", "<", "matrix", ".", "length", "/", "<NUM_LIT:2>", ")", "{", "for", "(", "int", "i", "=", "j", ";", "i", "<", "length", "-", "j", ";", "i", "+", "+", ")", "{", "int", "temp", "=", "matrix", "[", "j", "]", "[", "i", "]", ";", "matrix", "[", "j", "]", "[", "i", "]", "=", "matrix", "[", "length", "-", "i", "]", "[", "j", "]", ";", "matrix", "[", "length", "-", "i", "]", "[", "j", "]", "=", "matrix", "[", "length", "-", "j", "]", "[", "length", "-", "i", "]", ";", "matrix", "[", "length", "-", "j", "]", "[", "length", "-", "i", "]", "=", "matrix", "[", "i", "]", "[", "length", "-", "j", "]", ";", "matrix", "[", "i", "]", "[", "length", "-", "j", "]", "=", "temp", ";", "}", "j", "+", "+", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "matrix", "[", "]", "[", "]", "=", "{", "{", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:20>", "}", ",", "{", "<NUM_LIT:5>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:30>", "}", ",", "{", "<NUM_LIT:9>", ",", "<NUM_LIT:10>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT:12>", ",", "<NUM_LIT>", "}", ",", "{", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT:15>", ",", "<NUM_LIT:16>", ",", "<NUM_LIT>", "}", ",", "{", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT:24>", ",", "<NUM_LIT>", "}", "}", ";", "RotateImage", "ti", "=", "new", "RotateImage", "(", ")", ";", "ti", ".", "rotate", "(", "matrix", ")", ";", "ti", ".", "print", "(", "matrix", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "canJump", "(", "int", "[", "]", "nums", ")", "{", "int", "jump", "=", "0", ";", "int", "i", ";", "for", "(", "i", "=", "0", ";", "i", "<", "nums", ".", "length", "&", "&", "i", "<", "=", "jump", ";", "i", "+", "+", ")", "{", "jump", "=", "Math", ".", "max", "(", "jump", ",", "i", "+", "nums", "[", "i", "]", ")", ";", "}", "return", "i", "=", "=", "nums", ".", "length", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "JumpGame", "jumpGame", "=", "new", "JumpGame", "(", ")", ";", "int", "[", "]", "nums", "=", "{", "<NUM_LIT:3>", ",", "1", "}", ";", "System", ".", "out", ".", "print", "(", "jumpGame", ".", "canJump", "(", "nums", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "jump", "(", "int", "[", "]", "nums", ")", "{", "int", "current", "=", "0", ";", "int", "max", "=", "0", ";", "int", "count", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "nums", ".", "length", "-", "1", ";", "i", "+", "+", ")", "{", "max", "=", "Math", ".", "max", "(", "max", ",", "i", "+", "nums", "[", "i", "]", ")", ";", "if", "(", "current", "=", "=", "i", ")", "{", "count", "+", "+", ";", "current", "=", "max", ";", "}", "}", "return", "count", ";", "}", "</s>"]
["<s>", "public", "int", "[", "]", "[", "]", "generateMatrix", "(", "int", "n", ")", "{", "int", "[", "]", "[", "]", "result", "=", "new", "int", "[", "n", "]", "[", "n", "]", ";", "int", "up", "=", "0", ";", "int", "down", "=", "n", "-", "1", ";", "int", "left", "=", "0", ";", "int", "right", "=", "n", "-", "1", ";", "int", "index", "=", "1", ";", "while", "(", "up", "<", "=", "down", "&", "&", "left", "<", "=", "right", ")", "{", "for", "(", "int", "i", "=", "left", ";", "i", "<", "=", "right", ";", "i", "+", "+", ")", "{", "result", "[", "up", "]", "[", "i", "]", "=", "index", "+", "+", ";", "}", "up", "+", "+", ";", "for", "(", "int", "i", "=", "up", ";", "i", "<", "=", "down", ";", "i", "+", "+", ")", "{", "result", "[", "i", "]", "[", "right", "]", "=", "index", "+", "+", ";", "}", "right", "-", "-", ";", "for", "(", "int", "i", "=", "right", ";", "i", ">", "=", "left", ";", "i", "-", "-", ")", "{", "result", "[", "down", "]", "[", "i", "]", "=", "index", "+", "+", ";", "}", "down", "-", "-", ";", "for", "(", "int", "i", "=", "down", ";", "i", ">", "=", "up", ";", "i", "-", "-", ")", "{", "result", "[", "i", "]", "[", "left", "]", "=", "index", "+", "+", ";", "}", "left", "+", "+", ";", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "SpiralGeneration", "sg", "=", "new", "SpiralGeneration", "(", ")", ";", "int", "[", "]", "[", "]", "r", "=", "sg", ".", "generateMatrix", "(", "<NUM_LIT:4>", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "r", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "r", "[", "i", "]", ".", "length", ";", "j", "+", "+", ")", "{", "System", ".", "out", ".", "print", "(", "r", "[", "i", "]", "[", "j", "]", "+", "\"", "\"", ")", ";", "}", "System", ".", "out", ".", "println", "(", ")", ";", "}", "}", "</s>"]
["<s>", "public", "void", "increment", "(", ")", "{", "lock", ".", "lock", "(", ")", ";", "if", "(", "!", "shouldPrint", "&", "&", "isIncreasing", ")", "{", "val", "=", "val", "+", "1", ";", "if", "(", "val", "=", "=", "<NUM_LIT:5>", ")", "{", "isIncreasing", "=", "false", ";", "}", "shouldPrint", "=", "true", ";", "}", "lock", ".", "unlock", "(", ")", ";", "}", "</s>"]
["<s>", "public", "void", "decrement", "(", ")", "{", "lock", ".", "lock", "(", ")", ";", "if", "(", "!", "shouldPrint", "&", "&", "!", "isIncreasing", ")", "{", "val", "=", "val", "-", "1", ";", "if", "(", "val", "=", "=", "0", ")", "{", "isIncreasing", "=", "true", ";", "}", "shouldPrint", "=", "true", ";", "}", "lock", ".", "unlock", "(", ")", ";", "}", "</s>"]
["<s>", "public", "void", "printVar", "(", ")", "{", "if", "(", "shouldPrint", ")", "{", "System", ".", "out", ".", "println", "(", "val", ")", ";", "shouldPrint", "=", "false", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "PrintInSequence", "printInSequence", "=", "new", "PrintInSequence", "(", ")", ";", "Thread", "t1", "=", "new", "Thread", "(", "printInSequence", ":", ":", "runIncrement", ")", ";", "t1", ".", "start", "(", ")", ";", "Thread", "t2", "=", "new", "Thread", "(", "printInSequence", ":", ":", "runIncrement", ")", ";", "t2", ".", "start", "(", ")", ";", "Thread", "t3", "=", "new", "Thread", "(", "printInSequence", ":", ":", "runPrint", ")", ";", "t3", ".", "start", "(", ")", ";", "Thread", "t4", "=", "new", "Thread", "(", "printInSequence", ":", ":", "runDecrement", ")", ";", "t4", ".", "start", "(", ")", ";", "Thread", "t5", "=", "new", "Thread", "(", "printInSequence", ":", ":", "runDecrement", ")", ";", "t5", ".", "start", "(", ")", ";", "}", "</s>"]
["<s>", "private", "void", "runIncrement", "(", ")", "{", "while", "(", "true", ")", "{", "this", ".", "increment", "(", ")", ";", "}", "}", "</s>"]
["<s>", "private", "void", "runPrint", "(", ")", "{", "while", "(", "true", ")", "{", "this", ".", "printVar", "(", ")", ";", "}", "}", "</s>"]
["<s>", "private", "void", "runDecrement", "(", ")", "{", "while", "(", "true", ")", "{", "this", ".", "decrement", "(", ")", ";", "}", "}", "</s>"]
["<s>", "public", "int", "countNodes", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", "0", ";", "}", "int", "lh", "=", "leftHeight", "(", "root", ".", "left", ")", ";", "int", "rh1", "=", "rightHeight", "(", "root", ".", "left", ")", ";", "int", "rh", "=", "rightHeight", "(", "root", ".", "right", ")", ";", "if", "(", "lh", "=", "=", "rh", ")", "{", "return", "(", "1", "<", "<", "lh", "+", "1", ")", "-", "1", ";", "}", "else", "{", "if", "(", "lh", "=", "=", "rh1", ")", "{", "return", "1", "+", "countNodes", "(", "root", ".", "right", ")", "+", "(", "1", "<", "<", "lh", ")", "-", "1", ";", "}", "else", "{", "return", "1", "+", "countNodes", "(", "root", ".", "left", ")", "+", "(", "1", "<", "<", "rh", ")", "-", "1", ";", "}", "}", "}", "</s>"]
["<s>", "int", "leftHeight", "(", "Node", "root", ")", "{", "int", "h", "=", "0", ";", "while", "(", "root", "!", "=", "null", ")", "{", "root", "=", "root", ".", "left", ";", "h", "+", "+", ";", "}", "return", "h", ";", "}", "</s>"]
["<s>", "int", "rightHeight", "(", "Node", "root", ")", "{", "int", "h", "=", "0", ";", "while", "(", "root", "!", "=", "null", ")", "{", "root", "=", "root", ".", "right", ";", "h", "+", "+", ";", "}", "return", "h", ";", "}", "</s>"]
["<s>", "public", "boolean", "isBalanced", "(", "Node", "root", ")", "{", "return", "isBalancedUtil", "(", "root", ")", ">", "=", "0", ";", "}", "</s>"]
["<s>", "private", "int", "isBalancedUtil", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", "0", ";", "}", "int", "left", "=", "isBalancedUtil", "(", "root", ".", "left", ")", ";", "if", "(", "left", "<", "0", ")", "{", "return", "-", "1", ";", "}", "int", "right", "=", "isBalancedUtil", "(", "root", ".", "right", ")", ";", "if", "(", "right", "<", "0", ")", "{", "return", "-", "1", ";", "}", "int", "diff", "=", "Math", ".", "abs", "(", "left", "-", "right", ")", ";", "return", "diff", "<", "=", "1", "?", "(", "Math", ".", "max", "(", "left", ",", "right", ")", "+", "1", ")", ":", "-", "1", ";", "}", "</s>"]
["<s>", "public", "Node", "sortedArrayToBST", "(", "int", "[", "]", "nums", ")", "{", "return", "toBST", "(", "nums", ",", "0", ",", "nums", ".", "length", "-", "1", ")", ";", "}", "</s>"]
["<s>", "private", "Node", "toBST", "(", "int", "[", "]", "nums", ",", "int", "low", ",", "int", "high", ")", "{", "if", "(", "low", ">", "high", ")", "{", "return", "null", ";", "}", "int", "mid", "=", "(", "low", "+", "high", ")", "/", "<NUM_LIT:2>", ";", "Node", "n", "=", "Node", ".", "newNode", "(", "nums", "[", "mid", "]", ")", ";", "n", ".", "left", "=", "toBST", "(", "nums", ",", "low", ",", "mid", "-", "1", ")", ";", "n", ".", "right", "=", "toBST", "(", "nums", ",", "mid", "+", "1", ",", "high", ")", ";", "return", "n", ";", "}", "</s>"]
["<s>", "public", "void", "flatten", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", ";", "}", "Stack", "<", "Node", ">", "stack", "=", "new", "Stack", "<", ">", "(", ")", ";", "stack", ".", "push", "(", "root", ")", ";", "Node", "prev", "=", "null", ";", "while", "(", "!", "stack", ".", "isEmpty", "(", ")", ")", "{", "Node", "node", "=", "stack", ".", "pop", "(", ")", ";", "if", "(", "prev", "!", "=", "null", ")", "{", "prev", ".", "right", "=", "node", ";", "}", "prev", "=", "node", ";", "if", "(", "node", ".", "right", "!", "=", "null", ")", "{", "stack", ".", "push", "(", "node", ".", "right", ")", ";", "}", "if", "(", "node", ".", "left", "!", "=", "null", ")", "{", "stack", ".", "push", "(", "node", ".", "left", ")", ";", "}", "node", ".", "left", "=", "null", ";", "node", ".", "right", "=", "null", ";", "}", "}", "</s>"]
["<s>", "public", "void", "flatten1", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "return", ";", "flatten", "(", "root", ".", "left", ")", ";", "flatten", "(", "root", ".", "right", ")", ";", "Node", "left", "=", "root", ".", "left", ";", "Node", "right", "=", "root", ".", "right", ";", "root", ".", "left", "=", "null", ";", "root", ".", "right", "=", "left", ";", "while", "(", "root", ".", "right", "!", "=", "null", ")", "root", "=", "root", ".", "right", ";", "root", ".", "right", "=", "right", ";", "}", "</s>"]
["<s>", "public", "List", "<", "List", "<", "Integer", ">", ">", "pathSum", "(", "Node", "root", ",", "int", "sum", ")", "{", "List", "<", "List", "<", "Integer", ">", ">", "result", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "List", "<", "Integer", ">", "current", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "pathSumUtil", "(", "root", ",", "sum", ",", "result", ",", "current", ")", ";", "return", "result", ";", "}", "</s>"]
["<s>", "private", "void", "pathSumUtil", "(", "Node", "root", ",", "int", "sum", ",", "List", "<", "List", "<", "Integer", ">", ">", "result", ",", "List", "<", "Integer", ">", "currentPath", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", ";", "}", "if", "(", "root", ".", "left", "=", "=", "null", "&", "&", "root", ".", "right", "=", "=", "null", ")", "{", "if", "(", "root", ".", "data", "=", "=", "sum", ")", "{", "currentPath", ".", "add", "(", "root", ".", "data", ")", ";", "result", ".", "add", "(", "new", "ArrayList", "<", ">", "(", "currentPath", ")", ")", ";", "currentPath", ".", "remove", "(", "currentPath", ".", "size", "(", ")", "-", "1", ")", ";", "}", "return", ";", "}", "currentPath", ".", "add", "(", "root", ".", "data", ")", ";", "pathSumUtil", "(", "root", ".", "left", ",", "sum", "-", "root", ".", "data", ",", "result", ",", "currentPath", ")", ";", "pathSumUtil", "(", "root", ".", "right", ",", "sum", "-", "root", ".", "data", ",", "result", ",", "currentPath", ")", ";", "currentPath", ".", "remove", "(", "currentPath", ".", "size", "(", ")", "-", "1", ")", ";", "}", "</s>"]
["<s>", "public", "int", "countUnivalSubtrees", "(", "Node", "root", ")", "{", "countUnivalSubtreesUtil", "(", "root", ",", "0", ")", ";", "return", "count", ";", "}", "</s>"]
["<s>", "private", "int", "countUnivalSubtreesUtil", "(", "Node", "root", ",", "int", "val", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", "val", ";", "}", "int", "left", "=", "countUnivalSubtreesUtil", "(", "root", ".", "left", ",", "root", ".", "data", ")", ";", "int", "right", "=", "countUnivalSubtreesUtil", "(", "root", ".", "right", ",", "root", ".", "data", ")", ";", "if", "(", "left", "=", "=", "right", "&", "&", "left", "=", "=", "root", ".", "data", ")", "{", "count", "+", "+", ";", "return", "root", ".", "data", ";", "}", "else", "{", "return", "Integer", ".", "MAX_VALUE", ";", "}", "}", "</s>"]
["<s>", "public", "List", "<", "Integer", ">", "closestKValues", "(", "Node", "root", ",", "double", "target", ",", "int", "k", ")", "{", "if", "(", "root", "=", "=", "null", "|", "|", "k", "=", "=", "0", ")", "{", "return", "new", "ArrayList", "<", ">", "(", ")", ";", "}", "Stack", "<", "Node", ">", "predecessor", "=", "new", "Stack", "(", ")", ";", "Stack", "<", "Node", ">", "successor", "=", "new", "Stack", "(", ")", ";", "double", "closestDiff", "=", "Double", ".", "MAX_VALUE", ";", "Node", "closestDiffNode", "=", "null", ";", "while", "(", "root", "!", "=", "null", ")", "{", "predecessor", ".", "push", "(", "root", ")", ";", "successor", ".", "push", "(", "root", ")", ";", "if", "(", "Math", ".", "abs", "(", "target", "-", "root", ".", "data", ")", "<", "closestDiff", ")", "{", "closestDiff", "=", "Math", ".", "abs", "(", "target", "-", "root", ".", "data", ")", ";", "closestDiffNode", "=", "root", ";", "}", "if", "(", "root", ".", "data", "=", "=", "target", ")", "{", "break", ";", "}", "else", "if", "(", "target", ">", "root", ".", "data", ")", "{", "root", "=", "root", ".", "right", ";", "}", "else", "{", "root", "=", "root", ".", "left", ";", "}", "}", "while", "(", "predecessor", ".", "peek", "(", ")", "!", "=", "closestDiffNode", ")", "{", "predecessor", ".", "pop", "(", ")", ";", "successor", ".", "pop", "(", ")", ";", "}", "predecessor", ".", "pop", "(", ")", ";", "successor", ".", "pop", "(", ")", ";", "List", "<", "Integer", ">", "result", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "result", ".", "add", "(", "closestDiffNode", ".", "data", ")", ";", "Node", "prec", "=", "closestDiffNode", ";", "Node", "succ", "=", "closestDiffNode", ";", "k", "-", "-", ";", "prec", "=", "predecessor", "(", "predecessor", ",", "prec", ")", ";", "succ", "=", "successor", "(", "successor", ",", "succ", ")", ";", "while", "(", "k", ">", "0", ")", "{", "if", "(", "succ", "=", "=", "null", "|", "|", "(", "prec", "!", "=", "null", "&", "&", "Math", ".", "abs", "(", "target", "-", "prec", ".", "data", ")", "<", "Math", ".", "abs", "(", "target", "-", "succ", ".", "data", ")", ")", ")", "{", "result", ".", "add", "(", "prec", ".", "data", ")", ";", "prec", "=", "predecessor", "(", "predecessor", ",", "prec", ")", ";", "}", "else", "{", "result", ".", "add", "(", "succ", ".", "data", ")", ";", "succ", "=", "successor", "(", "successor", ",", "succ", ")", ";", "}", "k", "-", "-", ";", "}", "return", "result", ";", "}", "</s>"]
["<s>", "private", "Node", "predecessor", "(", "Stack", "<", "Node", ">", "stack", ",", "Node", "current", ")", "{", "if", "(", "current", "=", "=", "null", ")", "{", "return", "null", ";", "}", "if", "(", "current", ".", "left", "!", "=", "null", ")", "{", "stack", ".", "push", "(", "current", ")", ";", "current", "=", "current", ".", "left", ";", "while", "(", "current", ".", "right", "!", "=", "null", ")", "{", "stack", ".", "push", "(", "current", ")", ";", "current", "=", "current", ".", "right", ";", "}", "return", "current", ";", "}", "else", "{", "while", "(", "!", "stack", ".", "isEmpty", "(", ")", "&", "&", "stack", ".", "peek", "(", ")", ".", "left", "=", "=", "current", ")", "{", "current", "=", "stack", ".", "pop", "(", ")", ";", "}", "if", "(", "stack", ".", "isEmpty", "(", ")", ")", "{", "return", "null", ";", "}", "else", "{", "return", "stack", ".", "pop", "(", ")", ";", "}", "}", "}", "</s>"]
["<s>", "private", "Node", "successor", "(", "Stack", "<", "Node", ">", "stack", ",", "Node", "current", ")", "{", "if", "(", "current", "=", "=", "null", ")", "{", "return", "null", ";", "}", "if", "(", "current", ".", "right", "!", "=", "null", ")", "{", "stack", ".", "push", "(", "current", ")", ";", "current", "=", "current", ".", "right", ";", "while", "(", "current", ".", "left", "!", "=", "null", ")", "{", "stack", ".", "push", "(", "current", ")", ";", "current", "=", "current", ".", "left", ";", "}", "return", "current", ";", "}", "else", "{", "while", "(", "!", "stack", ".", "isEmpty", "(", ")", "&", "&", "stack", ".", "peek", "(", ")", ".", "right", "=", "=", "current", ")", "{", "current", "=", "stack", ".", "pop", "(", ")", ";", "}", "if", "(", "stack", ".", "isEmpty", "(", ")", ")", "{", "return", "null", ";", "}", "else", "{", "return", "stack", ".", "pop", "(", ")", ";", "}", "}", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testDifferentCases", "(", ")", "{", "Node", "root", "=", "null", ";", "BinaryTree", "bt", "=", "new", "BinaryTree", "(", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:10>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:20>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:30>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "0", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:6>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "-", "<NUM_LIT:6>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT:16>", ",", "root", ")", ";", "root", "=", "bt", ".", "addNode", "(", "<NUM_LIT>", ",", "root", ")", ";", "KClosestValueInBinaryTree", "kClosestValueInBinaryTree", "=", "new", "KClosestValueInBinaryTree", "(", ")", ";", "List", "<", "Integer", ">", "result", "=", "kClosestValueInBinaryTree", ".", "closestKValues", "(", "root", ",", "<NUM_LIT>", ",", "<NUM_LIT:2>", ")", ";", "TestUtil", "testUtil", "=", "new", "TestUtil", "(", ")", ";", "testUtil", ".", "compareList", "(", "Arrays", ".", "asList", "(", "<NUM_LIT>", ",", "<NUM_LIT:20>", ")", ",", "result", ")", ";", "result", "=", "kClosestValueInBinaryTree", ".", "closestKValues", "(", "root", ",", "<NUM_LIT>", ",", "<NUM_LIT:4>", ")", ";", "testUtil", ".", "compareList", "(", "Arrays", ".", "asList", "(", "<NUM_LIT>", ",", "<NUM_LIT:20>", ",", "<NUM_LIT:16>", ",", "<NUM_LIT:10>", ")", ",", "result", ")", ";", "}", "</s>"]
["<s>", "public", "List", "<", "List", "<", "Integer", ">", ">", "findLeaves", "(", "Node", "root", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", "Collections", ".", "EMPTY_LIST", ";", "}", "List", "<", "List", "<", "Integer", ">", ">", "result", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "List", "<", "Integer", ">", "leaves", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "while", "(", "stripLeaves", "(", "root", ",", "leaves", ")", "!", "=", "null", ")", "{", "result", ".", "add", "(", "leaves", ")", ";", "leaves", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "}", "result", ".", "add", "(", "leaves", ")", ";", "return", "result", ";", "}", "</s>"]
["<s>", "Node", "stripLeaves", "(", "Node", "root", ",", "List", "<", "Integer", ">", "leaves", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", "null", ";", "}", "if", "(", "root", ".", "left", "=", "=", "null", "&", "&", "root", ".", "right", "=", "=", "null", ")", "{", "leaves", ".", "add", "(", "root", ".", "data", ")", ";", "return", "null", ";", "}", "root", ".", "left", "=", "stripLeaves", "(", "root", ".", "left", ",", "leaves", ")", ";", "root", ".", "right", "=", "stripLeaves", "(", "root", ".", "right", ",", "leaves", ")", ";", "return", "root", ";", "}", "</s>"]
["<s>", "public", "int", "[", "]", "sortTransformedArray", "(", "int", "[", "]", "nums", ",", "int", "a", ",", "int", "b", ",", "int", "c", ")", "{", "int", "start", "=", "0", ";", "int", "end", "=", "nums", ".", "length", "-", "1", ";", "int", "[", "]", "result", "=", "new", "int", "[", "nums", ".", "length", "]", ";", "int", "index", "=", "(", "a", ">", "=", "0", "?", "nums", ".", "length", "-", "1", ":", "0", ")", ";", "while", "(", "start", "<", "=", "end", ")", "{", "int", "x", "=", "apply", "(", "nums", "[", "start", "]", ",", "a", ",", "b", ",", "c", ")", ";", "int", "y", "=", "apply", "(", "nums", "[", "end", "]", ",", "a", ",", "b", ",", "c", ")", ";", "boolean", "condition", "=", "(", "a", ">", "=", "0", "?", "x", ">", "=", "y", ":", "x", "<", "=", "y", ")", ";", "if", "(", "condition", ")", "{", "result", "[", "index", "]", "=", "x", ";", "start", "+", "+", ";", "}", "else", "{", "result", "[", "index", "]", "=", "y", ";", "end", "-", "-", ";", "}", "index", "=", "index", "+", "(", "a", ">", "=", "0", "?", "-", "1", ":", "1", ")", ";", "}", "return", "result", ";", "}", "</s>"]
["<s>", "private", "int", "apply", "(", "int", "x", ",", "int", "a", ",", "int", "b", ",", "int", "c", ")", "{", "return", "a", "*", "x", "*", "x", "+", "b", "*", "x", "+", "c", ";", "}", "</s>"]
["<s>", "public", "Node", "rotateRight", "(", "Node", "head", ",", "int", "k", ")", "{", "if", "(", "head", "=", "=", "null", "|", "|", "k", "=", "=", "0", ")", "{", "return", "head", ";", "}", "Node", "slow", "=", "head", ";", "Node", "fast", "=", "head", ";", "int", "i", "=", "0", ";", "while", "(", "i", "<", "k", "&", "&", "fast", "!", "=", "null", ")", "{", "fast", "=", "fast", ".", "next", ";", "i", "+", "+", ";", "}", "if", "(", "fast", "=", "=", "null", ")", "{", "return", "rotateRight", "(", "head", ",", "k", "%", "i", ")", ";", "}", "while", "(", "fast", ".", "next", "!", "=", "null", ")", "{", "fast", "=", "fast", ".", "next", ";", "slow", "=", "slow", ".", "next", ";", "}", "Node", "next", "=", "slow", ".", "next", ";", "slow", ".", "next", "=", "null", ";", "fast", ".", "next", "=", "head", ";", "return", "next", ";", "}", "</s>"]
["<s>", "public", "NestedInteger", "deserialize", "(", "String", "s", ")", "{", "Stack", "<", "NestedInteger", ">", "stack", "=", "new", "Stack", "(", ")", ";", "NestedInteger", "current", "=", "null", ";", "StringBuffer", "subInteger", "=", "new", "StringBuffer", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "s", ".", "length", "(", ")", ";", "i", "+", "+", ")", "{", "if", "(", "s", ".", "charAt", "(", "i", ")", "=", "=", "<CHAR_LIT:[>", ")", "{", "if", "(", "current", "!", "=", "null", ")", "{", "stack", ".", "push", "(", "current", ")", ";", "}", "current", "=", "new", "NestedInteger", "(", ")", ";", "subInteger", "=", "new", "StringBuffer", "(", ")", ";", "}", "else", "if", "(", "s", ".", "charAt", "(", "i", ")", "=", "=", "<CHAR_LIT:]>", ")", "{", "if", "(", "subInteger", ".", "length", "(", ")", ">", "0", ")", "{", "current", ".", "add", "(", "new", "NestedInteger", "(", "Integer", ".", "parseInt", "(", "subInteger", ".", "toString", "(", ")", ")", ")", ")", ";", "subInteger", "=", "new", "StringBuffer", "(", ")", ";", "}", "if", "(", "!", "stack", ".", "isEmpty", "(", ")", ")", "{", "NestedInteger", "top", "=", "stack", ".", "pop", "(", ")", ";", "top", ".", "add", "(", "current", ")", ";", "current", "=", "top", ";", "}", "}", "else", "if", "(", "s", ".", "charAt", "(", "i", ")", "=", "=", "<CHAR_LIT:U+002C>", ")", "{", "if", "(", "subInteger", ".", "length", "(", ")", ">", "0", ")", "{", "current", ".", "add", "(", "new", "NestedInteger", "(", "Integer", ".", "parseInt", "(", "subInteger", ".", "toString", "(", ")", ")", ")", ")", ";", "}", "subInteger", "=", "new", "StringBuffer", "(", ")", ";", "}", "else", "{", "subInteger", ".", "append", "(", "s", ".", "charAt", "(", "i", ")", ")", ";", "}", "}", "if", "(", "subInteger", ".", "length", "(", ")", ">", "0", ")", "{", "return", "new", "NestedInteger", "(", "Integer", ".", "parseInt", "(", "subInteger", ".", "toString", "(", ")", ")", ")", ";", "}", "return", "current", ";", "}", "</s>"]
["<s>", "public", "String", "serialize", "(", "NestedInteger", "nestedInteger", ")", "{", "StringBuffer", "result", "=", "new", "StringBuffer", "(", ")", ";", "serialize", "(", "nestedInteger", ",", "result", ")", ";", "return", "result", ".", "toString", "(", ")", ";", "}", "</s>"]
["<s>", "private", "void", "serialize", "(", "NestedInteger", "nestedInteger", ",", "StringBuffer", "result", ")", "{", "if", "(", "nestedInteger", ".", "isInteger", "(", ")", ")", "{", "result", ".", "append", "(", "nestedInteger", ".", "getInteger", "(", ")", ")", ";", "return", ";", "}", "boolean", "isFirst", "=", "true", ";", "result", ".", "append", "(", "\"", "<STR_LIT:[>", "\"", ")", ";", "for", "(", "NestedInteger", "ni", ":", "nestedInteger", ".", "getList", "(", ")", ")", "{", "if", "(", "!", "isFirst", ")", "{", "result", ".", "append", "(", "\"", "<STR_LIT:U+002C>", "\"", ")", ";", "}", "isFirst", "=", "false", ";", "if", "(", "ni", ".", "isInteger", "(", ")", ")", "{", "result", ".", "append", "(", "ni", ".", "getInteger", "(", ")", ")", ";", "}", "else", "{", "serialize", "(", "ni", ",", "result", ")", ";", "}", "}", "result", ".", "append", "(", "\"", "<STR_LIT:]>", "\"", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "IntegerListParser", "integerListParser", "=", "new", "IntegerListParser", "(", ")", ";", "NestedInteger", "nestedInteger", "=", "integerListParser", ".", "deserialize", "(", "\"", "<STR_LIT:123>", "\"", ")", ";", "String", "result", "=", "integerListParser", ".", "serialize", "(", "nestedInteger", ")", ";", "System", ".", "out", ".", "println", "(", "result", ")", ";", "nestedInteger", "=", "integerListParser", ".", "deserialize", "(", "\"", "<STR_LIT:[]>", "\"", ")", ";", "result", "=", "integerListParser", ".", "serialize", "(", "nestedInteger", ")", ";", "System", ".", "out", ".", "println", "(", "result", ")", ";", "nestedInteger", "=", "integerListParser", ".", "deserialize", "(", "\"", "<STR_LIT>", "\"", ")", ";", "result", "=", "integerListParser", ".", "serialize", "(", "nestedInteger", ")", ";", "System", ".", "out", ".", "println", "(", "result", ")", ";", "nestedInteger", "=", "integerListParser", ".", "deserialize", "(", "\"", "<STR_LIT>", "\"", ")", ";", "result", "=", "integerListParser", ".", "serialize", "(", "nestedInteger", ")", ";", "System", ".", "out", ".", "println", "(", "result", ")", ";", "nestedInteger", "=", "integerListParser", ".", "deserialize", "(", "\"", "<STR_LIT>", "\"", ")", ";", "result", "=", "integerListParser", ".", "serialize", "(", "nestedInteger", ")", ";", "System", ".", "out", ".", "println", "(", "result", ")", ";", "nestedInteger", "=", "integerListParser", ".", "deserialize", "(", "\"", "<STR_LIT>", "\"", ")", ";", "result", "=", "integerListParser", ".", "serialize", "(", "nestedInteger", ")", ";", "System", ".", "out", ".", "println", "(", "result", ")", ";", "nestedInteger", "=", "integerListParser", ".", "deserialize", "(", "\"", "<STR_LIT>", "\"", ")", ";", "result", "=", "integerListParser", ".", "serialize", "(", "nestedInteger", ")", ";", "System", ".", "out", ".", "println", "(", "result", ")", ";", "nestedInteger", "=", "integerListParser", ".", "deserialize", "(", "\"", "<STR_LIT>", "\"", ")", ";", "result", "=", "integerListParser", ".", "serialize", "(", "nestedInteger", ")", ";", "System", ".", "out", ".", "println", "(", "result", ")", ";", "nestedInteger", "=", "integerListParser", ".", "deserialize", "(", "\"", "<STR_LIT>", "\"", ")", ";", "result", "=", "integerListParser", ".", "serialize", "(", "nestedInteger", ")", ";", "System", ".", "out", ".", "println", "(", "result", ")", ";", "}", "</s>"]
["<s>", "public", "boolean", "isInteger", "(", ")", "{", "return", "val", "!", "=", "null", ";", "}", "</s>"]
["<s>", "public", "Integer", "getInteger", "(", ")", "{", "return", "val", ";", "}", "</s>"]
["<s>", "public", "void", "setInteger", "(", "int", "value", ")", "{", "this", ".", "val", "=", "value", ";", "}", "</s>"]
["<s>", "public", "void", "add", "(", "NestedInteger", "ni", ")", "{", "this", ".", "nestedInteger", ".", "add", "(", "ni", ")", ";", "}", "</s>"]
["<s>", "public", "List", "<", "NestedInteger", ">", "getList", "(", ")", "{", "return", "val", "!", "=", "null", "?", "null", ":", "nestedInteger", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testDifferentCases", "(", ")", "{", "IntegerListParser", "integerListParser", "=", "new", "IntegerListParser", "(", ")", ";", "IntegerListParser", ".", "NestedInteger", "nestedInteger", "=", "integerListParser", ".", "deserialize", "(", "\"", "<STR_LIT:123>", "\"", ")", ";", "String", "result", "=", "integerListParser", ".", "serialize", "(", "nestedInteger", ")", ";", "Assert", ".", "assertEquals", "(", "\"", "<STR_LIT:123>", "\"", ",", "result", ")", ";", "nestedInteger", "=", "integerListParser", ".", "deserialize", "(", "\"", "<STR_LIT:[]>", "\"", ")", ";", "result", "=", "integerListParser", ".", "serialize", "(", "nestedInteger", ")", ";", "Assert", ".", "assertEquals", "(", "\"", "<STR_LIT:[]>", "\"", ",", "result", ")", ";", "nestedInteger", "=", "integerListParser", ".", "deserialize", "(", "\"", "<STR_LIT>", "\"", ")", ";", "result", "=", "integerListParser", ".", "serialize", "(", "nestedInteger", ")", ";", "Assert", ".", "assertEquals", "(", "\"", "<STR_LIT>", "\"", ",", "result", ")", ";", "nestedInteger", "=", "integerListParser", ".", "deserialize", "(", "\"", "<STR_LIT>", "\"", ")", ";", "result", "=", "integerListParser", ".", "serialize", "(", "nestedInteger", ")", ";", "Assert", ".", "assertEquals", "(", "\"", "<STR_LIT>", "\"", ",", "result", ")", ";", "nestedInteger", "=", "integerListParser", ".", "deserialize", "(", "\"", "<STR_LIT>", "\"", ")", ";", "result", "=", "integerListParser", ".", "serialize", "(", "nestedInteger", ")", ";", "Assert", ".", "assertEquals", "(", "\"", "<STR_LIT>", "\"", ",", "result", ")", ";", "nestedInteger", "=", "integerListParser", ".", "deserialize", "(", "\"", "<STR_LIT>", "\"", ")", ";", "result", "=", "integerListParser", ".", "serialize", "(", "nestedInteger", ")", ";", "Assert", ".", "assertEquals", "(", "\"", "<STR_LIT>", "\"", ",", "result", ")", ";", "nestedInteger", "=", "integerListParser", ".", "deserialize", "(", "\"", "<STR_LIT>", "\"", ")", ";", "result", "=", "integerListParser", ".", "serialize", "(", "nestedInteger", ")", ";", "Assert", ".", "assertEquals", "(", "\"", "<STR_LIT>", "\"", ",", "result", ")", ";", "nestedInteger", "=", "integerListParser", ".", "deserialize", "(", "\"", "<STR_LIT>", "\"", ")", ";", "result", "=", "integerListParser", ".", "serialize", "(", "nestedInteger", ")", ";", "Assert", ".", "assertEquals", "(", "\"", "<STR_LIT>", "\"", ",", "result", ")", ";", "nestedInteger", "=", "integerListParser", ".", "deserialize", "(", "\"", "<STR_LIT>", "\"", ")", ";", "result", "=", "integerListParser", ".", "serialize", "(", "nestedInteger", ")", ";", "Assert", ".", "assertEquals", "(", "\"", "<STR_LIT>", "\"", ",", "result", ")", ";", "}", "</s>"]
["<s>", "public", "int", "calculate", "(", "String", "s", ")", "{", "Stack", "<", "Integer", ">", "operand", "=", "new", "Stack", "<", ">", "(", ")", ";", "int", "current", "=", "0", ";", "char", "prevOperator", "=", "<CHAR_LIT>", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "s", ".", "length", "(", ")", ";", "i", "+", "+", ")", "{", "char", "ch", "=", "s", ".", "charAt", "(", "i", ")", ";", "if", "(", "Character", ".", "isDigit", "(", "ch", ")", ")", "{", "current", "=", "current", "*", "<NUM_LIT:10>", "+", "ch", "-", "<CHAR_LIT:0>", ";", "}", "if", "(", "i", "=", "=", "s", ".", "length", "(", ")", "-", "1", "|", "|", "(", "ch", "!", "=", "<CHAR_LIT>", "&", "&", "!", "Character", ".", "isDigit", "(", "ch", ")", ")", ")", "{", "if", "(", "prevOperator", "=", "=", "<CHAR_LIT>", ")", "{", "operand", ".", "push", "(", "current", ")", ";", "}", "else", "if", "(", "prevOperator", "=", "=", "<CHAR_LIT:->", ")", "{", "operand", ".", "push", "(", "-", "current", ")", ";", "}", "else", "if", "(", "prevOperator", "=", "=", "<CHAR_LIT:/>", ")", "{", "operand", ".", "push", "(", "operand", ".", "pop", "(", ")", "/", "current", ")", ";", "}", "else", "{", "operand", ".", "push", "(", "operand", ".", "pop", "(", ")", "*", "current", ")", ";", "}", "prevOperator", "=", "ch", ";", "current", "=", "0", ";", "}", "}", "int", "result", "=", "0", ";", "while", "(", "!", "operand", ".", "isEmpty", "(", ")", ")", "{", "result", "+", "=", "operand", ".", "pop", "(", ")", ";", "}", "return", "result", ";", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testDifferentCases", "(", ")", "{", "BasicCalculator", "basicCalculator", "=", "new", "BasicCalculator", "(", ")", ";", "Assert", ".", "assertEquals", "(", "0", ",", "basicCalculator", ".", "calculate", "(", "\"", "<STR_LIT:0>", "\"", ")", ")", ";", "Assert", ".", "assertEquals", "(", "<NUM_LIT:9>", ",", "basicCalculator", ".", "calculate", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "Assert", ".", "assertEquals", "(", "<NUM_LIT>", ",", "basicCalculator", ".", "calculate", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "Assert", ".", "assertEquals", "(", "<NUM_LIT:15>", ",", "basicCalculator", ".", "calculate", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "Assert", ".", "assertEquals", "(", "<NUM_LIT:6>", ",", "basicCalculator", ".", "calculate", "(", "\"", "<STR_LIT>", "\"", ")", ")", ";", "}", "</s>"]
["<s>", "public", "List", "<", "String", ">", "fullJustify1", "(", "String", "[", "]", "words", ",", "int", "maxWidth", ")", "{", "int", "currentLength", "=", "0", ";", "int", "prevIndex", "=", "0", ";", "List", "<", "String", ">", "result", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "words", ".", "length", ";", "i", "+", "+", ")", "{", "currentLength", "+", "=", "(", "words", "[", "i", "]", ".", "length", "(", ")", "+", "(", "i", "=", "=", "prevIndex", "?", "0", ":", "1", ")", ")", ";", "if", "(", "currentLength", ">", "maxWidth", ")", "{", "currentLength", "-", "=", "words", "[", "i", "]", ".", "length", "(", ")", "+", "1", ";", "StringBuffer", "builder", "=", "new", "StringBuffer", "(", ")", ";", "int", "gaps", "=", "i", "-", "1", "-", "prevIndex", ";", "if", "(", "gaps", ">", "0", ")", "{", "int", "availableSpace", "=", "maxWidth", "-", "currentLength", "+", "gaps", ";", "int", "remaining", "=", "availableSpace", "%", "gaps", ";", "int", "atleast", "=", "availableSpace", "/", "gaps", ";", "for", "(", "int", "j", "=", "prevIndex", ";", "j", "<", "=", "i", "-", "<NUM_LIT:2>", ";", "j", "+", "+", ")", "{", "builder", ".", "append", "(", "words", "[", "j", "]", ")", ";", "padSpace", "(", "builder", ",", "atleast", ")", ";", "if", "(", "j", "-", "prevIndex", "<", "remaining", ")", "{", "padSpace", "(", "builder", ",", "1", ")", ";", "}", "}", "builder", ".", "append", "(", "words", "[", "i", "-", "1", "]", ")", ";", "}", "else", "{", "builder", ".", "append", "(", "words", "[", "i", "-", "1", "]", ")", ";", "padSpace", "(", "builder", ",", "maxWidth", "-", "words", "[", "i", "-", "1", "]", ".", "length", "(", ")", ")", ";", "}", "result", ".", "add", "(", "builder", ".", "toString", "(", ")", ")", ";", "prevIndex", "=", "i", ";", "currentLength", "=", "words", "[", "i", "]", ".", "length", "(", ")", ";", "}", "}", "if", "(", "prevIndex", "<", "words", ".", "length", ")", "{", "StringBuffer", "builder", "=", "new", "StringBuffer", "(", ")", ";", "int", "count", "=", "0", ";", "while", "(", "prevIndex", "<", "words", ".", "length", ")", "{", "builder", ".", "append", "(", "words", "[", "prevIndex", "]", ")", ".", "append", "(", "\"", "\"", ")", ";", "count", "+", "=", "words", "[", "prevIndex", "]", ".", "length", "(", ")", "+", "1", ";", "prevIndex", "+", "+", ";", "}", "count", "-", "-", ";", "builder", ".", "deleteCharAt", "(", "builder", ".", "length", "(", ")", "-", "1", ")", ";", "padSpace", "(", "builder", ",", "maxWidth", "-", "count", ")", ";", "result", ".", "add", "(", "builder", ".", "toString", "(", ")", ")", ";", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "boolean", "hasPathSum", "(", "Node", "root", ",", "int", "sum", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", "false", ";", "}", "if", "(", "root", ".", "left", "=", "=", "null", "&", "&", "root", ".", "right", "=", "=", "null", ")", "{", "return", "root", ".", "data", "=", "=", "sum", ";", "}", "return", "hasPathSum", "(", "root", ".", "left", ",", "sum", "-", "root", ".", "data", ")", "|", "|", "hasPathSum", "(", "root", ".", "right", ",", "sum", "-", "root", ".", "data", ")", ";", "}", "</s>"]
["<s>", "public", "List", "<", "List", "<", "Integer", ">", ">", "palindromePairs", "(", "String", "[", "]", "words", ")", "{", "if", "(", "words", "=", "=", "null", "|", "|", "words", ".", "length", "<", "<NUM_LIT:2>", ")", "{", "return", "Collections", ".", "EMPTY_LIST", ";", "}", "Map", "<", "String", ",", "Integer", ">", "wordMap", "=", "new", "HashMap", "<", ">", "(", ")", ";", "List", "<", "List", "<", "Integer", ">", ">", "result", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "words", ".", "length", ";", "i", "+", "+", ")", "{", "wordMap", ".", "put", "(", "words", "[", "i", "]", ",", "i", ")", ";", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "words", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "words", "[", "i", "]", ".", "length", "(", ")", ";", "j", "+", "+", ")", "{", "String", "str1", "=", "words", "[", "i", "]", ".", "substring", "(", "0", ",", "j", "+", "1", ")", ";", "String", "str2", "=", "words", "[", "i", "]", ".", "substring", "(", "j", "+", "1", ",", "words", "[", "i", "]", ".", "length", "(", ")", ")", ";", "if", "(", "isPalindrome", "(", "str2", ")", ")", "{", "String", "revStr1", "=", "new", "StringBuilder", "(", "str1", ")", ".", "reverse", "(", ")", ".", "toString", "(", ")", ";", "Integer", "index", "=", "wordMap", ".", "get", "(", "revStr1", ")", ";", "if", "(", "index", "!", "=", "null", ")", "{", "createList", "(", "i", ",", "wordMap", ".", "get", "(", "revStr1", ")", ",", "result", ")", ";", "}", "}", "if", "(", "isPalindrome", "(", "str1", ")", ")", "{", "String", "revStr2", "=", "new", "StringBuilder", "(", "str2", ")", ".", "reverse", "(", ")", ".", "toString", "(", ")", ";", "Integer", "index", "=", "wordMap", ".", "get", "(", "revStr2", ")", ";", "if", "(", "index", "!", "=", "null", ")", "{", "createList", "(", "wordMap", ".", "get", "(", "revStr2", ")", ",", "i", ",", "result", ")", ";", "if", "(", "revStr2", ".", "equals", "(", "\"", "\"", ")", ")", "{", "createList", "(", "i", ",", "wordMap", ".", "get", "(", "revStr2", ")", ",", "result", ")", ";", "}", "}", "}", "}", "}", "return", "result", ";", "}", "</s>"]
["<s>", "private", "boolean", "isPalindrome", "(", "String", "word", ")", "{", "int", "start", "=", "0", ";", "int", "end", "=", "word", ".", "length", "(", ")", "-", "1", ";", "while", "(", "start", "<", "end", ")", "{", "if", "(", "word", ".", "charAt", "(", "start", ")", "!", "=", "word", ".", "charAt", "(", "end", ")", ")", "{", "return", "false", ";", "}", "start", "+", "+", ";", "end", "-", "-", ";", "}", "return", "true", ";", "}", "</s>"]
["<s>", "private", "void", "createList", "(", "int", "i1", ",", "int", "i2", ",", "List", "<", "List", "<", "Integer", ">", ">", "result", ")", "{", "if", "(", "i1", "=", "=", "i2", ")", "{", "return", ";", "}", "List", "<", "Integer", ">", "r", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "r", ".", "add", "(", "i1", ")", ";", "r", ".", "add", "(", "i2", ")", ";", "result", ".", "add", "(", "r", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "PalindromePair", "palindromePair", "=", "new", "PalindromePair", "(", ")", ";", "String", "[", "]", "words", "=", "{", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", "}", ";", "List", "<", "List", "<", "Integer", ">", ">", "result", "=", "palindromePair", ".", "palindromePairs", "(", "words", ")", ";", "System", ".", "out", ".", "println", "(", "result", ")", ";", "String", "[", "]", "words1", "=", "{", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", "}", ";", "result", "=", "palindromePair", ".", "palindromePairs", "(", "words1", ")", ";", "System", ".", "out", ".", "println", "(", "result", ")", ";", "String", "[", "]", "words2", "=", "{", "\"", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", "}", ";", "result", "=", "palindromePair", ".", "palindromePairs", "(", "words2", ")", ";", "System", ".", "out", ".", "println", "(", "result", ")", ";", "String", "[", "]", "words3", "=", "{", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "\"", "}", ";", "result", "=", "palindromePair", ".", "palindromePairs", "(", "words3", ")", ";", "System", ".", "out", ".", "println", "(", "result", ")", ";", "String", "[", "]", "words4", "=", "{", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", "}", ";", "result", "=", "palindromePair", ".", "palindromePairs", "(", "words4", ")", ";", "System", ".", "out", ".", "println", "(", "result", ")", ";", "}", "</s>"]
["<s>", "public", "void", "compareListOfList", "(", "List", "<", "List", "<", "T", ">", ">", "expected", ",", "List", "<", "List", "<", "T", ">", ">", "actual", ")", "{", "Assert", ".", "assertEquals", "(", "expected", ".", "size", "(", ")", ",", "actual", ".", "size", "(", ")", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "expected", ".", "size", "(", ")", ";", "i", "+", "+", ")", "{", "List", "<", "T", ">", "a1", "=", "expected", ".", "get", "(", "i", ")", ";", "List", "<", "T", ">", "a2", "=", "expected", ".", "get", "(", "i", ")", ";", "compareList", "(", "a1", ",", "a2", ")", ";", "}", "}", "</s>"]
["<s>", "@", "Test", "public", "void", "testDifferentCases", "(", ")", "{", "PalindromePair", "palindromePair", "=", "new", "PalindromePair", "(", ")", ";", "TestUtil", "testUtil", "=", "new", "TestUtil", "(", ")", ";", "String", "[", "]", "words", "=", "{", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", "}", ";", "List", "<", "List", "<", "Integer", ">", ">", "result", "=", "palindromePair", ".", "palindromePairs", "(", "words", ")", ";", "testUtil", ".", "compareListOfList", "(", "createList", "(", "0", ",", "1", ",", "1", ",", "0", ")", ",", "result", ")", ";", "String", "[", "]", "words1", "=", "{", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", "}", ";", "result", "=", "palindromePair", ".", "palindromePairs", "(", "words1", ")", ";", "testUtil", ".", "compareListOfList", "(", "createList", "(", "0", ",", "1", ",", "1", ",", "0", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:4>", ")", ",", "result", ")", ";", "String", "[", "]", "words2", "=", "{", "\"", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", "}", ";", "result", "=", "palindromePair", ".", "palindromePairs", "(", "words2", ")", ";", "testUtil", ".", "compareListOfList", "(", "createList", "(", "0", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:2>", ",", "0", ")", ",", "result", ")", ";", "String", "[", "]", "words3", "=", "{", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "\"", "}", ";", "result", "=", "palindromePair", ".", "palindromePairs", "(", "words3", ")", ";", "testUtil", ".", "compareListOfList", "(", "createList", "(", "<NUM_LIT:3>", ",", "0", ",", "0", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ")", ",", "result", ")", ";", "String", "[", "]", "words4", "=", "{", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", ",", "\"", "<STR_LIT>", "\"", "}", ";", "result", "=", "palindromePair", ".", "palindromePairs", "(", "words4", ")", ";", "testUtil", ".", "compareListOfList", "(", "createList", "(", "0", ",", "1", ",", "1", ",", "0", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:4>", ")", ",", "result", ")", ";", "}", "</s>"]
["<s>", "private", "List", "<", "List", "<", "Integer", ">", ">", "createList", "(", "int", ".", ".", ".", "index", ")", "{", "List", "<", "List", "<", "Integer", ">", ">", "result", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "index", ".", "length", ";", "i", "+", "=", "<NUM_LIT:2>", ")", "{", "List", "<", "Integer", ">", "r", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "r", ".", "add", "(", "index", "[", "i", "]", ")", ";", "r", ".", "add", "(", "(", "index", "[", "i", "+", "1", "]", ")", ")", ";", "result", ".", "add", "(", "r", ")", ";", "}", "return", "result", ";", "}", "</s>"]
["<s>", "private", "void", "setParent", "(", "Map", "<", "String", ",", "List", "<", "String", ">", ">", "parent", ",", "String", "startWord", ",", "List", "<", "String", ">", "path", ",", "String", "currentWord", ",", "List", "<", "List", "<", "String", ">", ">", "result", ")", "{", "path", ".", "add", "(", "currentWord", ")", ";", "if", "(", "startWord", ".", "equals", "(", "currentWord", ")", ")", "{", "result", ".", "add", "(", "new", "ArrayList", "<", ">", "(", "path", ")", ")", ";", "path", ".", "remove", "(", "path", ".", "size", "(", ")", "-", "1", ")", ";", "return", ";", "}", "for", "(", "String", "p", ":", "parent", ".", "get", "(", "currentWord", ")", ")", "{", "setParent", "(", "parent", ",", "startWord", ",", "path", ",", "p", ",", "result", ")", ";", "}", "path", ".", "remove", "(", "path", ".", "size", "(", ")", "-", "1", ")", ";", "}", "</s>"]
["<s>", "public", "double", "findMedianSortedArrays", "(", "int", "input1", "[", "]", ",", "int", "input2", "[", "]", ")", "{", "if", "(", "input1", ".", "length", ">", "input2", ".", "length", ")", "{", "return", "findMedianSortedArrays", "(", "input2", ",", "input1", ")", ";", "}", "if", "(", "input1", ".", "length", "=", "=", "0", ")", "{", "return", "getMedian", "(", "input2", ")", ";", "}", "int", "m", "=", "input1", ".", "length", ";", "int", "n", "=", "input2", ".", "length", ";", "int", "low", "=", "0", ";", "int", "high", "=", "m", ";", "while", "(", "low", "<", "=", "high", ")", "{", "int", "cut1", "=", "(", "low", "+", "high", ")", "/", "<NUM_LIT:2>", ";", "int", "cut2", "=", "(", "m", "+", "n", "+", "1", ")", "/", "<NUM_LIT:2>", "-", "cut1", ";", "int", "a1", "=", "(", "cut1", "=", "=", "0", ")", "?", "Integer", ".", "MIN_VALUE", ":", "input1", "[", "cut1", "-", "1", "]", ";", "int", "a2", "=", "(", "cut1", "=", "=", "m", ")", "?", "Integer", ".", "MAX_VALUE", ":", "input1", "[", "cut1", "]", ";", "int", "b1", "=", "(", "cut2", "=", "=", "0", ")", "?", "Integer", ".", "MIN_VALUE", ":", "input2", "[", "cut2", "-", "1", "]", ";", "int", "b2", "=", "(", "cut2", "=", "=", "n", ")", "?", "Integer", ".", "MAX_VALUE", ":", "input2", "[", "cut2", "]", ";", "if", "(", "a1", "<", "=", "b2", "&", "&", "b1", "<", "=", "a2", ")", "{", "if", "(", "(", "m", "+", "n", ")", "%", "<NUM_LIT:2>", "=", "=", "0", ")", "{", "return", "(", "(", "double", ")", "Math", ".", "max", "(", "a1", ",", "b1", ")", "+", "Math", ".", "min", "(", "a2", ",", "b2", ")", ")", "/", "<NUM_LIT:2>", ";", "}", "else", "{", "return", "(", "double", ")", "Math", ".", "max", "(", "a1", ",", "b1", ")", ";", "}", "}", "else", "if", "(", "a1", ">", "b2", ")", "{", "high", "=", "cut1", "-", "1", ";", "}", "else", "{", "low", "=", "cut1", "+", "1", ";", "}", "}", "throw", "new", "IllegalArgumentException", "(", ")", ";", "}", "</s>"]
["<s>", "private", "double", "getMedian", "(", "int", "arr", "[", "]", ")", "{", "if", "(", "arr", ".", "length", "%", "<NUM_LIT:2>", "=", "=", "0", ")", "{", "return", "(", "(", "double", ")", "arr", "[", "arr", ".", "length", "/", "<NUM_LIT:2>", "-", "1", "]", "+", "arr", "[", "arr", ".", "length", "/", "<NUM_LIT:2>", "]", ")", "/", "<NUM_LIT:2>", ";", "}", "else", "{", "return", "arr", "[", "arr", ".", "length", "/", "<NUM_LIT:2>", "]", ";", "}", "}", "</s>"]
["<s>", "public", "int", "lengthLongestPath", "(", "String", "input", ")", "{", "if", "(", "input", ".", "length", "(", ")", "=", "=", "0", ")", "{", "return", "0", ";", "}", "StringTokenizer", "tokenizer", "=", "new", "StringTokenizer", "(", "input", ",", "\"", "<STR_LIT>", "<STR_LIT>", "\"", ")", ";", "Queue", "<", "Node", ">", "queue", "=", "new", "LinkedList", "<", ">", "(", ")", ";", "while", "(", "tokenizer", ".", "hasMoreTokens", "(", ")", ")", "{", "queue", ".", "offer", "(", "new", "Node", "(", "tokenizer", ".", "nextToken", "(", ")", ")", ")", ";", "}", "Node", "root", "=", "new", "Node", "(", "\"", "\"", ",", "-", "1", ")", ";", "return", "lengthLongestPath", "(", "queue", ",", "root", ",", "0", ")", ";", "}", "</s>"]
["<s>", "public", "int", "lengthLongestPath", "(", "Queue", "<", "Node", ">", "queue", ",", "Node", "root", ",", "int", "currentLength", ")", "{", "if", "(", "root", ".", "isFile", ")", "{", "return", "currentLength", "+", "root", ".", "level", ";", "}", "if", "(", "queue", ".", "isEmpty", "(", ")", ")", "{", "return", "0", ";", "}", "int", "max", "=", "0", ";", "while", "(", "!", "queue", ".", "isEmpty", "(", ")", ")", "{", "Node", "n", "=", "queue", ".", "peek", "(", ")", ";", "if", "(", "root", ".", "level", "<", "n", ".", "level", ")", "{", "queue", ".", "poll", "(", ")", ";", "max", "=", "Math", ".", "max", "(", "max", ",", "lengthLongestPath", "(", "queue", ",", "n", ",", "n", ".", "file", ".", "length", "(", ")", "+", "currentLength", ")", ")", ";", "}", "else", "{", "break", ";", "}", "}", "return", "max", ";", "}", "</s>"]
["<s>", "public", "List", "<", "String", ">", "findMissingRanges", "(", "int", "[", "]", "nums", ",", "int", "lower", ",", "int", "upper", ")", "{", "if", "(", "nums", ".", "length", "=", "=", "0", ")", "{", "return", "Collections", ".", "singletonList", "(", "makeRange", "(", "lower", ",", "upper", ")", ")", ";", "}", "List", "<", "String", ">", "result", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "if", "(", "lower", "<", "nums", "[", "0", "]", ")", "{", "result", ".", "add", "(", "makeRange", "(", "lower", ",", "nums", "[", "0", "]", "-", "1", ")", ")", ";", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "nums", ".", "length", "-", "1", ";", "i", "+", "+", ")", "{", "if", "(", "nums", "[", "i", "]", "=", "=", "nums", "[", "i", "+", "1", "]", ")", "{", "continue", ";", "}", "if", "(", "(", "nums", "[", "i", "]", "+", "1", ")", "!", "=", "nums", "[", "i", "+", "1", "]", ")", "{", "result", ".", "add", "(", "makeRange", "(", "nums", "[", "i", "]", "+", "1", ",", "nums", "[", "i", "+", "1", "]", "-", "1", ")", ")", ";", "}", "}", "if", "(", "nums", "[", "nums", ".", "length", "-", "1", "]", "<", "upper", ")", "{", "result", ".", "add", "(", "makeRange", "(", "nums", "[", "nums", ".", "length", "-", "1", "]", "+", "1", ",", "upper", ")", ")", ";", "}", "return", "result", ";", "}", "</s>"]
["<s>", "private", "String", "makeRange", "(", "int", "a", ",", "int", "b", ")", "{", "if", "(", "a", "=", "=", "b", ")", "{", "return", "String", ".", "valueOf", "(", "a", ")", ";", "}", "else", "{", "return", "a", "+", "\"", "<STR_LIT>", "\"", "+", "b", ";", "}", "}", "</s>"]
["<s>", "public", "String", "alienOrder1", "(", "String", "words", "[", "]", ")", "{", "Map", "<", "Character", ",", "Integer", ">", "degree", "=", "new", "HashMap", "<", ">", "(", ")", ";", "Map", "<", "Character", ",", "Set", "<", "Character", ">", ">", "graph", "=", "buildGraph", "(", "words", ",", "degree", ",", "new", "HashSet", "<", ">", "(", ")", ")", ";", "Queue", "<", "Character", ">", "zeroDegreeNodes", "=", "new", "LinkedList", "<", ">", "(", ")", ";", "for", "(", "Map", ".", "Entry", "<", "Character", ",", "Integer", ">", "entry", ":", "degree", ".", "entrySet", "(", ")", ")", "{", "if", "(", "entry", ".", "getValue", "(", ")", "=", "=", "0", ")", "{", "zeroDegreeNodes", ".", "offer", "(", "entry", ".", "getKey", "(", ")", ")", ";", "}", "}", "StringBuilder", "result", "=", "new", "StringBuilder", "(", ")", ";", "while", "(", "!", "zeroDegreeNodes", ".", "isEmpty", "(", ")", ")", "{", "char", "vertex", "=", "zeroDegreeNodes", ".", "poll", "(", ")", ";", "result", ".", "append", "(", "vertex", ")", ";", "Set", "<", "Character", ">", "neighbors", "=", "graph", ".", "get", "(", "vertex", ")", ";", "if", "(", "neighbors", "!", "=", "null", ")", "{", "for", "(", "char", "neighbor", ":", "graph", ".", "get", "(", "vertex", ")", ")", "{", "int", "count", "=", "degree", ".", "get", "(", "neighbor", ")", ";", "count", "-", "-", ";", "if", "(", "count", "=", "=", "0", ")", "{", "zeroDegreeNodes", ".", "offer", "(", "neighbor", ")", ";", "}", "else", "{", "degree", ".", "put", "(", "neighbor", ",", "count", ")", ";", "}", "}", "}", "graph", ".", "remove", "(", "vertex", ")", ";", "}", "return", "graph", ".", "size", "(", ")", ">", "0", "?", "\"", "\"", ":", "result", ".", "toString", "(", ")", ";", "}", "</s>"]
["<s>", "public", "int", "lengthLongestPathIterative", "(", "String", "input", ")", "{", "if", "(", "input", ".", "length", "(", ")", "=", "=", "0", ")", "{", "return", "0", ";", "}", "String", "[", "]", "tokens", "=", "input", ".", "split", "(", "\"", "<STR_LIT>", "<STR_LIT>", "\"", ")", ";", "Stack", "<", "String", ">", "stack", "=", "new", "Stack", "<", ">", "(", ")", ";", "Stack", "<", "Integer", ">", "stack1", "=", "new", "Stack", "<", ">", "(", ")", ";", "int", "len", "=", "0", ";", "int", "max", "=", "0", ";", "for", "(", "String", "token", ":", "tokens", ")", "{", "int", "level", "=", "0", ";", "int", "i", ";", "for", "(", "i", "=", "0", ";", "i", "<", "token", ".", "length", "(", ")", ";", "i", "+", "+", ")", "{", "if", "(", "token", ".", "charAt", "(", "i", ")", "=", "=", "<STR_LIT:\\t>", ")", "{", "level", "+", "+", ";", "}", "else", "{", "break", ";", "}", "}", "token", "=", "token", ".", "substring", "(", "i", ")", ";", "while", "(", "!", "stack1", ".", "isEmpty", "(", ")", "&", "&", "level", "<", "=", "stack1", ".", "peek", "(", ")", ")", "{", "stack1", ".", "pop", "(", ")", ";", "String", "data", "=", "stack", ".", "pop", "(", ")", ";", "len", "-", "=", "data", ".", "length", "(", ")", "+", "1", ";", "}", "if", "(", "token", ".", "contains", "(", "\"", "<STR_LIT:.>", "\"", ")", ")", "{", "max", "=", "Math", ".", "max", "(", "max", ",", "len", "+", "token", ".", "length", "(", ")", ")", ";", "}", "else", "{", "stack1", ".", "push", "(", "level", ")", ";", "stack", ".", "push", "(", "token", ")", ";", "len", "+", "=", "token", ".", "length", "(", ")", "+", "1", ";", "}", "}", "return", "max", ";", "}", "</s>"]
["<s>", "public", "int", "numSquaresUsingBFS", "(", "int", "n", ")", "{", "List", "<", "Integer", ">", "perfectSquares", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "int", "i", "=", "1", ";", "Queue", "<", "Integer", ">", "queue", "=", "new", "LinkedList", "<", ">", "(", ")", ";", "Set", "<", "Integer", ">", "visited", "=", "new", "HashSet", "<", ">", "(", ")", ";", "while", "(", "true", ")", "{", "int", "square", "=", "i", "*", "i", ";", "if", "(", "square", "=", "=", "n", ")", "{", "return", "1", ";", "}", "if", "(", "square", ">", "n", ")", "{", "break", ";", "}", "perfectSquares", ".", "add", "(", "square", ")", ";", "queue", ".", "offer", "(", "square", ")", ";", "visited", ".", "add", "(", "square", ")", ";", "i", "+", "+", ";", "}", "int", "distance", "=", "1", ";", "while", "(", "!", "queue", ".", "isEmpty", "(", ")", ")", "{", "int", "size", "=", "queue", ".", "size", "(", ")", ";", "distance", "+", "+", ";", "for", "(", "int", "j", "=", "0", ";", "j", "<", "size", ";", "j", "+", "+", ")", "{", "int", "node", "=", "queue", ".", "poll", "(", ")", ";", "for", "(", "int", "square", ":", "perfectSquares", ")", "{", "int", "sum", "=", "node", "+", "square", ";", "if", "(", "sum", "=", "=", "n", ")", "{", "return", "distance", ";", "}", "else", "if", "(", "!", "visited", ".", "contains", "(", "sum", ")", ")", "{", "visited", ".", "add", "(", "sum", ")", ";", "queue", ".", "add", "(", "sum", ")", ";", "}", "else", "if", "(", "sum", ">", "n", ")", "{", "break", ";", "}", "}", "}", "}", "return", "distance", ";", "}", "</s>"]
["<s>", "public", "int", "lengthOfLongestSubstringKDistinctUsingMap", "(", "String", "s", ",", "int", "k", ")", "{", "if", "(", "k", "=", "=", "0", "|", "|", "s", ".", "length", "(", ")", "=", "=", "0", ")", "{", "return", "0", ";", "}", "Map", "<", "Character", ",", "Integer", ">", "countMap", "=", "new", "HashMap", "<", ">", "(", ")", ";", "int", "max", "=", "0", ";", "int", "start", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "s", ".", "length", "(", ")", ";", "i", "+", "+", ")", "{", "char", "ch", "=", "s", ".", "charAt", "(", "i", ")", ";", "if", "(", "!", "countMap", ".", "containsKey", "(", "ch", ")", "&", "&", "countMap", ".", "size", "(", ")", ">", "=", "k", ")", "{", "while", "(", "start", "<", "i", ")", "{", "countMap", ".", "compute", "(", "s", ".", "charAt", "(", "start", ")", ",", "(", "key", ",", "val", ")", "-", ">", "{", "if", "(", "val", "=", "=", "1", ")", "{", "return", "null", ";", "}", "else", "{", "return", "val", "-", "1", ";", "}", "}", ")", ";", "start", "+", "+", ";", "if", "(", "countMap", ".", "size", "(", ")", "<", "k", ")", "{", "break", ";", "}", "}", "}", "countMap", ".", "compute", "(", "ch", ",", "(", "key", ",", "val", ")", "-", ">", "{", "if", "(", "val", "=", "=", "null", ")", "{", "return", "1", ";", "}", "else", "{", "return", "val", "+", "1", ";", "}", "}", ")", ";", "max", "=", "Math", ".", "max", "(", "max", ",", "i", "-", "start", "+", "1", ")", ";", "}", "return", "max", ";", "}", "</s>"]
["<s>", "public", "void", "gameOfLife", "(", "int", "[", "]", "[", "]", "board", ")", "{", "if", "(", "board", ".", "length", "=", "=", "0", "|", "|", "board", "[", "0", "]", ".", "length", "=", "=", "0", ")", "{", "return", ";", "}", "int", "n", "=", "board", ".", "length", ";", "int", "m", "=", "board", "[", "0", "]", ".", "length", ";", "int", "[", "]", "prevRow", "=", "new", "int", "[", "m", "]", ";", "int", "[", "]", "currentRow", "=", "new", "int", "[", "m", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "n", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "m", ";", "j", "+", "+", ")", "{", "currentRow", "[", "j", "]", "=", "doesLive", "(", "i", ",", "j", ",", "board", ")", "?", "1", ":", "0", ";", "}", "if", "(", "i", "!", "=", "0", ")", "{", "copyRow", "(", "prevRow", ",", "board", "[", "i", "-", "1", "]", ")", ";", "}", "if", "(", "i", "!", "=", "n", "-", "1", ")", "{", "copyRow", "(", "currentRow", ",", "prevRow", ")", ";", "}", "}", "copyRow", "(", "currentRow", ",", "board", "[", "n", "-", "1", "]", ")", ";", "}", "</s>"]
["<s>", "private", "void", "copyRow", "(", "int", "[", "]", "source", ",", "int", "[", "]", "dest", ")", "{", "for", "(", "int", "i", "=", "0", ";", "i", "<", "source", ".", "length", ";", "i", "+", "+", ")", "{", "dest", "[", "i", "]", "=", "source", "[", "i", "]", ";", "}", "}", "</s>"]
["<s>", "private", "boolean", "doesLive", "(", "int", "x", ",", "int", "y", ",", "int", "[", "]", "[", "]", "board", ")", "{", "int", "count", "=", "0", ";", "for", "(", "int", "i", "=", "x", "-", "1", ";", "i", "<", "=", "x", "+", "1", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "y", "-", "1", ";", "j", "<", "=", "y", "+", "1", ";", "j", "+", "+", ")", "{", "if", "(", "x", "=", "=", "i", "&", "&", "y", "=", "=", "j", ")", "{", "continue", ";", "}", "if", "(", "i", "<", "0", "|", "|", "i", ">", "=", "board", ".", "length", ")", "{", "break", ";", "}", "if", "(", "j", "<", "0", "|", "|", "j", ">", "=", "board", "[", "0", "]", ".", "length", ")", "{", "continue", ";", "}", "count", "+", "=", "board", "[", "i", "]", "[", "j", "]", ";", "}", "}", "if", "(", "board", "[", "x", "]", "[", "y", "]", "=", "=", "1", ")", "{", "return", "count", "=", "=", "<NUM_LIT:2>", "|", "|", "count", "=", "=", "<NUM_LIT:3>", ";", "}", "else", "{", "return", "count", "=", "=", "<NUM_LIT:3>", ";", "}", "}", "</s>"]
["<s>", "public", "boolean", "containsNearbyAlmostDuplicate", "(", "int", "[", "]", "nums", ",", "int", "k", ",", "int", "t", ")", "{", "if", "(", "nums", ".", "length", "=", "=", "0", "|", "|", "k", "=", "=", "0", ")", "{", "return", "false", ";", "}", "TreeMap", "<", "Integer", ",", "Integer", ">", "map", "=", "new", "TreeMap", "<", ">", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "nums", ".", "length", ";", "i", "+", "+", ")", "{", "int", "lowerEntry", "=", "nums", "[", "i", "]", "-", "t", "-", "1", ";", "int", "higherEntry", "=", "nums", "[", "i", "]", "+", "t", "+", "1", ";", "Map", ".", "Entry", "<", "Integer", ",", "Integer", ">", "higher", "=", "map", ".", "lowerEntry", "(", "higherEntry", ")", ";", "if", "(", "higher", "!", "=", "null", "&", "&", "higher", ".", "getKey", "(", ")", ">", "=", "nums", "[", "i", "]", ")", "{", "return", "true", ";", "}", "Map", ".", "Entry", "<", "Integer", ",", "Integer", ">", "lower", "=", "map", ".", "higherEntry", "(", "lowerEntry", ")", ";", "if", "(", "lower", "!", "=", "null", "&", "&", "lower", ".", "getKey", "(", ")", "<", "=", "nums", "[", "i", "]", ")", "{", "return", "true", ";", "}", "if", "(", "map", ".", "size", "(", ")", "=", "=", "k", ")", "{", "map", ".", "compute", "(", "nums", "[", "i", "-", "k", "]", ",", "(", "key", ",", "val", ")", "-", ">", "{", "if", "(", "val", "=", "=", "1", ")", "{", "return", "null", ";", "}", "else", "{", "return", "val", "-", "1", ";", "}", "}", ")", ";", "}", "map", ".", "compute", "(", "nums", "[", "i", "]", ",", "(", "key", ",", "val", ")", "-", ">", "{", "if", "(", "val", "=", "=", "null", ")", "{", "return", "1", ";", "}", "else", "{", "return", "val", "+", "1", ";", "}", "}", ")", ";", "}", "return", "false", ";", "}", "</s>"]
["<s>", "public", "double", "[", "]", "calcEquation", "(", "String", "[", "]", "[", "]", "equations", ",", "double", "[", "]", "values", ",", "String", "[", "]", "[", "]", "queries", ")", "{", "if", "(", "equations", ".", "length", "=", "=", "0", ")", "{", "return", "new", "double", "[", "0", "]", ";", "}", "Map", "<", "String", ",", "Integer", ">", "index", "=", "new", "HashMap", "<", ">", "(", ")", ";", "int", "count", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "equations", ".", "length", ";", "i", "+", "+", ")", "{", "String", "first", "=", "equations", "[", "i", "]", "[", "0", "]", ";", "String", "second", "=", "equations", "[", "i", "]", "[", "1", "]", ";", "if", "(", "!", "index", ".", "containsKey", "(", "first", ")", ")", "{", "index", ".", "put", "(", "first", ",", "count", "+", "+", ")", ";", "}", "if", "(", "!", "index", ".", "containsKey", "(", "second", ")", ")", "{", "index", ".", "put", "(", "second", ",", "count", "+", "+", ")", ";", "}", "}", "double", "graph", "[", "]", "[", "]", "=", "new", "double", "[", "count", "]", "[", "count", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "graph", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "graph", "[", "i", "]", ".", "length", ";", "j", "+", "+", ")", "{", "graph", "[", "i", "]", "[", "j", "]", "=", "-", "1", ";", "}", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "equations", ".", "length", ";", "i", "+", "+", ")", "{", "String", "first", "=", "equations", "[", "i", "]", "[", "0", "]", ";", "String", "second", "=", "equations", "[", "i", "]", "[", "1", "]", ";", "int", "i1", "=", "index", ".", "get", "(", "first", ")", ";", "int", "i2", "=", "index", ".", "get", "(", "second", ")", ";", "graph", "[", "i1", "]", "[", "i1", "]", "=", "graph", "[", "i2", "]", "[", "i2", "]", "=", "<NUM_LIT:1.0>", ";", "graph", "[", "i1", "]", "[", "i2", "]", "=", "values", "[", "i", "]", ";", "graph", "[", "i2", "]", "[", "i1", "]", "=", "1", "/", "values", "[", "i", "]", ";", "}", "for", "(", "int", "i", "=", "0", ";", "i", "<", "graph", ".", "length", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "graph", ".", "length", ";", "j", "+", "+", ")", "{", "if", "(", "graph", "[", "i", "]", "[", "j", "]", "!", "=", "-", "1", ")", "{", "continue", ";", "}", "for", "(", "int", "k", "=", "0", ";", "k", "<", "graph", ".", "length", ";", "k", "+", "+", ")", "{", "if", "(", "graph", "[", "i", "]", "[", "k", "]", "=", "=", "-", "1", "|", "|", "graph", "[", "k", "]", "[", "j", "]", "=", "=", "-", "1", ")", "{", "continue", ";", "}", "graph", "[", "i", "]", "[", "j", "]", "=", "graph", "[", "i", "]", "[", "k", "]", "*", "graph", "[", "k", "]", "[", "j", "]", ";", "}", "}", "}", "double", "[", "]", "result", "=", "new", "double", "[", "queries", ".", "length", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "queries", ".", "length", ";", "i", "+", "+", ")", "{", "String", "first", "=", "queries", "[", "i", "]", "[", "0", "]", ";", "String", "second", "=", "queries", "[", "i", "]", "[", "1", "]", ";", "if", "(", "!", "index", ".", "containsKey", "(", "first", ")", "|", "|", "!", "index", ".", "containsKey", "(", "second", ")", ")", "{", "result", "[", "i", "]", "=", "-", "1", ";", "}", "else", "{", "int", "i1", "=", "index", ".", "get", "(", "first", ")", ";", "int", "i2", "=", "index", ".", "get", "(", "second", ")", ";", "result", "[", "i", "]", "=", "graph", "[", "i1", "]", "[", "i2", "]", ";", "}", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "int", "maxSumCircularArray", "(", "int", "[", "]", "nums", ")", "{", "if", "(", "nums", ".", "length", "=", "=", "0", ")", "{", "return", "0", ";", "}", "if", "(", "nums", ".", "length", "=", "=", "1", ")", "{", "return", "nums", "[", "0", "]", ";", "}", "int", "with", "=", "nums", "[", "1", "]", ";", "int", "without", "=", "0", ";", "for", "(", "int", "i", "=", "<NUM_LIT:2>", ";", "i", "<", "nums", ".", "length", ";", "i", "+", "+", ")", "{", "int", "newWith", "=", "without", "+", "nums", "[", "i", "]", ";", "without", "=", "with", ";", "with", "=", "Math", ".", "max", "(", "with", ",", "newWith", ")", ";", "}", "int", "with1", "=", "nums", "[", "nums", ".", "length", "-", "<NUM_LIT:2>", "]", ";", "int", "without1", "=", "0", ";", "for", "(", "int", "i", "=", "nums", ".", "length", "-", "<NUM_LIT:3>", ";", "i", ">", "=", "0", ";", "i", "-", "-", ")", "{", "int", "newWith1", "=", "without1", "+", "nums", "[", "i", "]", ";", "without1", "=", "with1", ";", "with1", "=", "Math", ".", "max", "(", "with1", ",", "newWith1", ")", ";", "}", "return", "Math", ".", "max", "(", "with", ",", "with1", ")", ";", "}", "</s>"]
["<s>", "public", "List", "<", "String", ">", "summaryRanges", "(", "int", "[", "]", "nums", ")", "{", "if", "(", "nums", ".", "length", "=", "=", "0", ")", "{", "return", "Collections", ".", "EMPTY_LIST", ";", "}", "if", "(", "nums", ".", "length", "=", "=", "1", ")", "{", "return", "Collections", ".", "singletonList", "(", "String", ".", "valueOf", "(", "nums", "[", "0", "]", ")", ")", ";", "}", "int", "start", "=", "0", ";", "List", "<", "String", ">", "result", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "nums", ".", "length", "-", "1", ";", "i", "+", "+", ")", "{", "if", "(", "(", "nums", "[", "i", "]", "+", "1", ")", "!", "=", "nums", "[", "i", "+", "1", "]", ")", "{", "result", ".", "add", "(", "makeRange", "(", "nums", "[", "start", "]", ",", "nums", "[", "i", "]", ")", ")", ";", "start", "=", "i", "+", "1", ";", "}", "}", "if", "(", "(", "nums", "[", "nums", ".", "length", "-", "<NUM_LIT:2>", "]", "+", "1", ")", "!", "=", "nums", "[", "nums", ".", "length", "-", "1", "]", ")", "{", "start", "=", "nums", ".", "length", "-", "1", ";", "}", "result", ".", "add", "(", "makeRange", "(", "nums", "[", "start", "]", ",", "nums", "[", "nums", ".", "length", "-", "1", "]", ")", ")", ";", "return", "result", ";", "}", "</s>"]
["<s>", "private", "String", "makeRange", "(", "int", "a", ",", "int", "b", ")", "{", "if", "(", "a", "=", "=", "b", ")", "{", "return", "String", ".", "valueOf", "(", "a", ")", ";", "}", "return", "a", "+", "\"", "<STR_LIT>", "\"", "+", "b", ";", "}", "</s>"]
["<s>", "public", "boolean", "wordBreakBottomUp", "(", "String", "s", ",", "List", "<", "String", ">", "wordList", ")", "{", "boolean", "[", "]", "T", "=", "new", "boolean", "[", "s", ".", "length", "(", ")", "+", "1", "]", ";", "Set", "<", "String", ">", "set", "=", "new", "HashSet", "<", ">", "(", ")", ";", "for", "(", "String", "word", ":", "wordList", ")", "{", "set", ".", "add", "(", "word", ")", ";", "}", "T", "[", "0", "]", "=", "true", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "=", "s", ".", "length", "(", ")", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "0", ";", "j", "<", "i", ";", "j", "+", "+", ")", "{", "if", "(", "T", "[", "j", "]", "&", "&", "set", ".", "contains", "(", "s", ".", "substring", "(", "j", ",", "i", ")", ")", ")", "{", "T", "[", "i", "]", "=", "true", ";", "break", ";", "}", "}", "}", "return", "T", "[", "s", ".", "length", "(", ")", "]", ";", "}", "</s>"]
["<s>", "public", "int", "minCostTopDownPainHouse1", "(", "int", "[", "]", "[", "]", "costs", ")", "{", "if", "(", "costs", ".", "length", "=", "=", "0", ")", "{", "return", "0", ";", "}", "int", "[", "]", "[", "]", "dp", "=", "new", "int", "[", "costs", ".", "length", "]", "[", "<NUM_LIT:3>", "]", ";", "return", "minCostUtil", "(", "costs", ",", "0", ",", "-", "1", ",", "dp", ")", ";", "}", "</s>"]
["<s>", "private", "int", "minCostUtil", "(", "int", "[", "]", "[", "]", "costs", ",", "int", "house", ",", "int", "prevColor", ",", "int", "[", "]", "[", "]", "dp", ")", "{", "if", "(", "house", "=", "=", "costs", ".", "length", ")", "{", "return", "0", ";", "}", "int", "min", "=", "Integer", ".", "MAX_VALUE", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "=", "<NUM_LIT:2>", ";", "i", "+", "+", ")", "{", "if", "(", "i", "=", "=", "prevColor", ")", "{", "continue", ";", "}", "int", "val", ";", "if", "(", "dp", "[", "house", "]", "[", "i", "]", "!", "=", "0", ")", "{", "val", "=", "dp", "[", "house", "]", "[", "i", "]", ";", "}", "else", "{", "val", "=", "costs", "[", "house", "]", "[", "i", "]", "+", "minCostUtil", "(", "costs", ",", "house", "+", "1", ",", "i", ",", "dp", ")", ";", "dp", "[", "house", "]", "[", "i", "]", "=", "val", ";", "}", "min", "=", "Math", ".", "min", "(", "min", ",", "val", ")", ";", "}", "return", "min", ";", "}", "</s>"]
["<s>", "public", "int", "maxProfitLinearSpace", "(", "int", "k", ",", "int", "[", "]", "prices", ")", "{", "if", "(", "k", "=", "=", "0", "|", "|", "prices", ".", "length", "=", "=", "0", ")", "{", "return", "0", ";", "}", "if", "(", "k", ">", "=", "prices", ".", "length", ")", "{", "return", "allTimeProfit", "(", "prices", ")", ";", "}", "int", "[", "]", "T", "=", "new", "int", "[", "prices", ".", "length", "]", ";", "int", "[", "]", "prev", "=", "new", "int", "[", "prices", ".", "length", "]", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "=", "k", ";", "i", "+", "+", ")", "{", "int", "maxDiff", "=", "-", "prices", "[", "0", "]", ";", "for", "(", "int", "j", "=", "1", ";", "j", "<", "prices", ".", "length", ";", "j", "+", "+", ")", "{", "T", "[", "j", "]", "=", "Math", ".", "max", "(", "T", "[", "j", "-", "1", "]", ",", "maxDiff", "+", "prices", "[", "j", "]", ")", ";", "maxDiff", "=", "Math", ".", "max", "(", "maxDiff", ",", "prev", "[", "j", "]", "-", "prices", "[", "j", "]", ")", ";", "}", "for", "(", "int", "j", "=", "1", ";", "j", "<", "prices", ".", "length", ";", "j", "+", "+", ")", "{", "prev", "[", "j", "]", "=", "T", "[", "j", "]", ";", "}", "}", "return", "T", "[", "T", ".", "length", "-", "1", "]", ";", "}", "</s>"]
["<s>", "public", "int", "allTimeProfit", "(", "int", "arr", "[", "]", ")", "{", "int", "profit", "=", "0", ";", "int", "localMin", "=", "arr", "[", "0", "]", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "arr", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "arr", "[", "i", "-", "1", "]", ">", "=", "arr", "[", "i", "]", ")", "{", "localMin", "=", "arr", "[", "i", "]", ";", "}", "else", "{", "profit", "+", "=", "arr", "[", "i", "]", "-", "localMin", ";", "localMin", "=", "arr", "[", "i", "]", ";", "}", "}", "return", "profit", ";", "}", "</s>"]
["<s>", "public", "boolean", "searchWithDuplicates", "(", "int", "[", "]", "arr", ",", "int", "search", ")", "{", "int", "low", "=", "0", ";", "int", "high", "=", "arr", ".", "length", "-", "1", ";", "while", "(", "low", "<", "=", "high", ")", "{", "int", "mid", "=", "(", "low", "+", "high", ")", "/", "<NUM_LIT:2>", ";", "if", "(", "arr", "[", "mid", "]", "=", "=", "search", ")", "{", "return", "true", ";", "}", "if", "(", "arr", "[", "mid", "]", "=", "=", "arr", "[", "low", "]", ")", "{", "low", "+", "+", ";", "}", "else", "if", "(", "arr", "[", "mid", "]", "=", "=", "arr", "[", "high", "]", ")", "{", "high", "-", "-", ";", "}", "else", "if", "(", "arr", "[", "mid", "]", "<", "arr", "[", "high", "]", ")", "{", "if", "(", "arr", "[", "mid", "]", "<", "search", "&", "&", "search", "<", "=", "arr", "[", "high", "]", ")", "{", "low", "=", "mid", "+", "1", ";", "}", "else", "{", "high", "=", "mid", "-", "1", ";", "}", "}", "else", "{", "if", "(", "search", ">", "=", "arr", "[", "low", "]", "&", "&", "search", "<", "arr", "[", "mid", "]", ")", "{", "high", "=", "mid", "-", "1", ";", "}", "else", "{", "low", "=", "mid", "+", "1", ";", "}", "}", "}", "return", "false", ";", "}", "</s>"]
["<s>", "private", "List", "<", "Point", ">", "getNeighbors", "(", "Point", "p", ",", "int", "[", "]", "[", "]", "grid", ",", "boolean", "[", "]", "[", "]", "visited", ",", "int", "n", ",", "int", "m", ")", "{", "List", "<", "Point", ">", "resultList", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "if", "(", "p", ".", "x", ">", "0", "&", "&", "grid", "[", "p", ".", "x", "-", "1", "]", "[", "p", ".", "y", "]", "=", "=", "0", "&", "&", "!", "visited", "[", "p", ".", "x", "-", "1", "]", "[", "p", ".", "y", "]", ")", "resultList", ".", "add", "(", "new", "Point", "(", "p", ".", "x", "-", "1", ",", "p", ".", "y", ",", "p", ".", "dist", "+", "1", ")", ")", ";", "if", "(", "p", ".", "x", "<", "n", "-", "1", "&", "&", "grid", "[", "p", ".", "x", "+", "1", "]", "[", "p", ".", "y", "]", "=", "=", "0", "&", "&", "!", "visited", "[", "p", ".", "x", "+", "1", "]", "[", "p", ".", "y", "]", ")", "resultList", ".", "add", "(", "new", "Point", "(", "p", ".", "x", "+", "1", ",", "p", ".", "y", ",", "p", ".", "dist", "+", "1", ")", ")", ";", "if", "(", "p", ".", "y", ">", "0", "&", "&", "grid", "[", "p", ".", "x", "]", "[", "p", ".", "y", "-", "1", "]", "=", "=", "0", "&", "&", "!", "visited", "[", "p", ".", "x", "]", "[", "p", ".", "y", "-", "1", "]", ")", "resultList", ".", "add", "(", "new", "Point", "(", "p", ".", "x", ",", "p", ".", "y", "-", "1", ",", "p", ".", "dist", "+", "1", ")", ")", ";", "if", "(", "p", ".", "y", "<", "m", "-", "1", "&", "&", "grid", "[", "p", ".", "x", "]", "[", "p", ".", "y", "+", "1", "]", "=", "=", "0", "&", "&", "!", "visited", "[", "p", ".", "x", "]", "[", "p", ".", "y", "+", "1", "]", ")", "resultList", ".", "add", "(", "new", "Point", "(", "p", ".", "x", ",", "p", ".", "y", "+", "1", ",", "p", ".", "dist", "+", "1", ")", ")", ";", "return", "resultList", ";", "}", "</s>"]
["<s>", "void", "scheduleTask", "(", "List", "<", "Task", ">", "tasks", ",", "int", "threads", ")", "{", "ExecutorService", "executor", "=", "Executors", ".", "newFixedThreadPool", "(", "threads", ")", ";", "CompletableFuture", "<", "Void", ">", "future", "=", "CompletableFuture", ".", "completedFuture", "(", "null", ")", ";", "for", "(", "Task", "task", ":", "tasks", ")", "{", "future", "=", "future", ".", "thenAcceptBothAsync", "(", "scheduleTaskUtil", "(", "task", ",", "executor", ")", ",", "(", "a", ",", "b", ")", "-", ">", "{", "}", ",", "executor", ")", ";", "}", "future", ".", "thenRunAsync", "(", "(", ")", "-", ">", "{", "System", ".", "out", ".", "println", "(", "\"", "<STR_LIT>", "\"", ")", ";", "executor", ".", "shutdown", "(", ")", ";", "}", ")", ";", "}", "</s>"]
["<s>", "CompletableFuture", "<", "Void", ">", "scheduleTaskUtil", "(", "Task", "task", ",", "Executor", "executor", ")", "{", "CompletableFuture", "<", "Void", ">", "f", "=", "taskTracker", ".", "get", "(", "task", ".", "name", "(", ")", ")", ";", "if", "(", "f", "!", "=", "null", ")", "{", "return", "f", ";", "}", "if", "(", "task", ".", "dependencies", "(", ")", ".", "isEmpty", "(", ")", ")", "{", "CompletableFuture", "<", "Void", ">", "future", "=", "CompletableFuture", ".", "runAsync", "(", "(", ")", "-", ">", "task", ".", "execute", "(", ")", ",", "executor", ")", ";", "taskTracker", ".", "put", "(", "task", ".", "name", "(", ")", ",", "future", ")", ";", "return", "future", ";", "}", "CompletableFuture", "<", "Void", ">", "future", "=", "null", ";", "for", "(", "Task", "upstreamTask", ":", "task", ".", "dependencies", "(", ")", ")", "{", "if", "(", "future", "=", "=", "null", ")", "{", "future", "=", "scheduleTaskUtil", "(", "upstreamTask", ",", "executor", ")", ";", "}", "else", "{", "future", "=", "future", ".", "thenAcceptBothAsync", "(", "scheduleTaskUtil", "(", "upstreamTask", ",", "executor", ")", ",", "(", "a", ",", "b", ")", "-", ">", "{", "}", ",", "executor", ")", ";", "}", "}", "future", "=", "future", ".", "thenRunAsync", "(", "(", ")", "-", ">", "task", ".", "execute", "(", ")", ",", "executor", ")", ";", "taskTracker", ".", "put", "(", "task", ".", "name", "(", ")", ",", "future", ")", ";", "return", "future", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "DependencyTaskExecutor", "taskExecutor", "=", "new", "DependencyTaskExecutor", "(", ")", ";", "SimpleSleepTask", "a", "=", "new", "SimpleSleepTask", "(", "\"", "<STR_LIT>", "\"", ",", "<NUM_LIT>", ")", ";", "SimpleSleepTask", "b", "=", "new", "SimpleSleepTask", "(", "\"", "<STR_LIT>", "\"", ",", "<NUM_LIT>", ")", ";", "SimpleSleepTask", "c", "=", "new", "SimpleSleepTask", "(", "\"", "<STR_LIT>", "\"", ",", "<NUM_LIT>", ")", ";", "SimpleSleepTask", "d", "=", "new", "SimpleSleepTask", "(", "\"", "<STR_LIT>", "\"", ",", "<NUM_LIT>", ")", ";", "SimpleSleepTask", "x", "=", "new", "SimpleSleepTask", "(", "\"", "<STR_LIT>", "\"", ",", "<NUM_LIT>", ")", ";", "SimpleSleepTask", "y", "=", "new", "SimpleSleepTask", "(", "\"", "<STR_LIT>", "\"", ",", "<NUM_LIT>", ")", ";", "SimpleSleepTask", "z", "=", "new", "SimpleSleepTask", "(", "\"", "<STR_LIT>", "\"", ",", "<NUM_LIT>", ")", ";", "d", ".", "addDependency", "(", "b", ")", ";", "d", ".", "addDependency", "(", "c", ")", ";", "c", ".", "addDependency", "(", "a", ")", ";", "b", ".", "addDependency", "(", "a", ")", ";", "x", ".", "addDependency", "(", "y", ")", ";", "x", ".", "addDependency", "(", "z", ")", ";", "y", ".", "addDependency", "(", "a", ")", ";", "taskExecutor", ".", "scheduleTask", "(", "Lists", ".", "newArrayList", "(", "a", ",", "b", ",", "c", ",", "d", ",", "x", ",", "y", ",", "z", ")", ",", "<NUM_LIT:3>", ")", ";", "}", "</s>"]
["<s>", "void", "addDependency", "(", "Task", "task", ")", "{", "dependencies", ".", "add", "(", "task", ")", ";", "}", "</s>"]
["<s>", "private", "int", "[", "]", "merge", "(", "int", "[", "]", "a1", ",", "int", "[", "]", "a2", ")", "{", "int", "[", "]", "result", "=", "new", "int", "[", "a1", ".", "length", "+", "a2", ".", "length", "]", ";", "int", "i", "=", "0", ";", "int", "j", "=", "0", ";", "int", "k", "=", "0", ";", "while", "(", "i", "<", "a1", ".", "length", "|", "|", "j", "<", "a2", ".", "length", ")", "{", "if", "(", "i", "=", "=", "a1", ".", "length", ")", "{", "result", "[", "k", "+", "+", "]", "=", "a2", "[", "j", "+", "+", "]", ";", "}", "else", "if", "(", "j", "=", "=", "a2", ".", "length", ")", "{", "result", "[", "k", "+", "+", "]", "=", "a1", "[", "i", "+", "+", "]", ";", "}", "else", "if", "(", "a1", "[", "i", "]", ">", "a2", "[", "j", "]", ")", "{", "result", "[", "k", "+", "+", "]", "=", "a1", "[", "i", "+", "+", "]", ";", "}", "else", "if", "(", "a1", "[", "i", "]", "<", "a2", "[", "j", "]", ")", "{", "result", "[", "k", "+", "+", "]", "=", "a2", "[", "j", "+", "+", "]", ";", "}", "else", "{", "if", "(", "isGreater", "(", "a1", ",", "a2", ",", "i", ",", "j", ")", ")", "{", "result", "[", "k", "+", "+", "]", "=", "a1", "[", "i", "+", "+", "]", ";", "}", "else", "{", "result", "[", "k", "+", "+", "]", "=", "a2", "[", "j", "+", "+", "]", ";", "}", "}", "}", "return", "result", ";", "}", "</s>"]
["<s>", "private", "boolean", "isGreater", "(", "int", "[", "]", "a", ",", "int", "[", "]", "b", ",", "int", "i", ",", "int", "j", ")", "{", "while", "(", "i", "<", "a", ".", "length", "&", "&", "j", "<", "b", ".", "length", ")", "{", "if", "(", "a", "[", "i", "]", ">", "b", "[", "j", "]", ")", "{", "return", "true", ";", "}", "else", "if", "(", "a", "[", "i", "]", "<", "b", "[", "j", "]", ")", "{", "return", "false", ";", "}", "i", "+", "+", ";", "j", "+", "+", ";", "}", "return", "j", "=", "=", "b", ".", "length", ";", "}", "</s>"]
["<s>", "private", "int", "[", "]", "findLargest1", "(", "int", "[", "]", "nums", ",", "int", "k", ")", "{", "if", "(", "k", "=", "=", "0", ")", "{", "return", "new", "int", "[", "0", "]", ";", "}", "int", "[", "]", "result", "=", "new", "int", "[", "k", "]", ";", "int", "index", "=", "0", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "nums", ".", "length", ";", "i", "+", "+", ")", "{", "while", "(", "index", ">", "0", "&", "&", "index", "+", "(", "nums", ".", "length", "-", "i", "-", "1", ")", ">", "=", "k", "&", "&", "result", "[", "index", "-", "1", "]", "<", "nums", "[", "i", "]", ")", "{", "index", "-", "-", ";", "}", "if", "(", "index", "<", "k", ")", "{", "result", "[", "index", "+", "+", "]", "=", "nums", "[", "i", "]", ";", "}", "}", "return", "result", ";", "}", "</s>"]
["<s>", "public", "List", "<", "Point", ">", "findConvexHull", "(", "Point", "[", "]", "points", ")", "{", "Point", "start", "=", "points", "[", "0", "]", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "points", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "points", "[", "i", "]", ".", "x", "<", "start", ".", "x", ")", "{", "start", "=", "points", "[", "i", "]", ";", "}", "}", "Point", "current", "=", "start", ";", "Set", "<", "Point", ">", "result", "=", "new", "HashSet", "<", ">", "(", ")", ";", "result", ".", "add", "(", "start", ")", ";", "List", "<", "Point", ">", "collinearPoints", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "while", "(", "true", ")", "{", "Point", "nextTarget", "=", "points", "[", "0", "]", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "points", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "points", "[", "i", "]", "=", "=", "current", ")", "{", "continue", ";", "}", "int", "val", "=", "crossProduct", "(", "current", ",", "nextTarget", ",", "points", "[", "i", "]", ")", ";", "if", "(", "val", ">", "0", ")", "{", "nextTarget", "=", "points", "[", "i", "]", ";", "collinearPoints", "=", "new", "ArrayList", "<", ">", "(", ")", ";", "}", "else", "if", "(", "val", "=", "=", "0", ")", "{", "if", "(", "distance", "(", "current", ",", "nextTarget", ",", "points", "[", "i", "]", ")", "<", "0", ")", "{", "collinearPoints", ".", "add", "(", "nextTarget", ")", ";", "nextTarget", "=", "points", "[", "i", "]", ";", "}", "else", "{", "collinearPoints", ".", "add", "(", "points", "[", "i", "]", ")", ";", "}", "}", "}", "for", "(", "Point", "p", ":", "collinearPoints", ")", "{", "result", ".", "add", "(", "p", ")", ";", "}", "if", "(", "nextTarget", "=", "=", "start", ")", "{", "break", ";", "}", "result", ".", "add", "(", "nextTarget", ")", ";", "current", "=", "nextTarget", ";", "}", "return", "new", "ArrayList", "<", ">", "(", "result", ")", ";", "}", "</s>"]
["<s>", "private", "int", "distance", "(", "Point", "a", ",", "Point", "b", ",", "Point", "c", ")", "{", "int", "y1", "=", "a", ".", "y", "-", "b", ".", "y", ";", "int", "y2", "=", "a", ".", "y", "-", "c", ".", "y", ";", "int", "x1", "=", "a", ".", "x", "-", "b", ".", "x", ";", "int", "x2", "=", "a", ".", "x", "-", "c", ".", "x", ";", "return", "Integer", ".", "compare", "(", "y1", "*", "y1", "+", "x1", "*", "x1", ",", "y2", "*", "y2", "+", "x2", "*", "x2", ")", ";", "}", "</s>"]
["<s>", "private", "int", "crossProduct", "(", "Point", "a", ",", "Point", "b", ",", "Point", "c", ")", "{", "int", "y1", "=", "a", ".", "y", "-", "b", ".", "y", ";", "int", "y2", "=", "a", ".", "y", "-", "c", ".", "y", ";", "int", "x1", "=", "a", ".", "x", "-", "b", ".", "x", ";", "int", "x2", "=", "a", ".", "x", "-", "c", ".", "x", ";", "return", "y2", "*", "x1", "-", "y1", "*", "x2", ";", "}", "</s>"]
["<s>", "public", "List", "<", "Point", ">", "findConvexHull", "(", "Point", "[", "]", "points", ")", "{", "if", "(", "points", ".", "length", "<", "<NUM_LIT:2>", ")", "{", "return", "Arrays", ".", "asList", "(", "points", ")", ";", "}", "Point", "start", "=", "points", "[", "0", "]", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "points", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "start", ".", "y", ">", "points", "[", "i", "]", ".", "y", ")", "{", "start", "=", "points", "[", "i", "]", ";", "}", "else", "if", "(", "start", ".", "y", "=", "=", "points", "[", "i", "]", ".", "y", "&", "&", "start", ".", "x", ">", "points", "[", "i", "]", ".", "x", ")", "{", "start", "=", "points", "[", "i", "]", ";", "}", "}", "sortToHandleCollinear", "(", "points", ",", "start", ")", ";", "Stack", "<", "Point", ">", "stack", "=", "new", "Stack", "<", ">", "(", ")", ";", "stack", ".", "push", "(", "points", "[", "0", "]", ")", ";", "stack", ".", "push", "(", "points", "[", "1", "]", ")", ";", "for", "(", "int", "i", "=", "<NUM_LIT:2>", ";", "i", "<", "points", ".", "length", ";", "i", "+", "+", ")", "{", "Point", "top", "=", "stack", ".", "pop", "(", ")", ";", "while", "(", "crossProduct", "(", "stack", ".", "peek", "(", ")", ",", "top", ",", "points", "[", "i", "]", ")", "<", "0", ")", "{", "top", "=", "stack", ".", "pop", "(", ")", ";", "}", "stack", ".", "push", "(", "top", ")", ";", "stack", ".", "push", "(", "points", "[", "i", "]", ")", ";", "}", "return", "new", "ArrayList", "<", ">", "(", "stack", ")", ";", "}", "</s>"]
["<s>", "private", "void", "sortToHandleCollinear", "(", "Point", "[", "]", "points", ",", "Point", "start", ")", "{", "Arrays", ".", "sort", "(", "points", ",", "(", "p1", ",", "p2", ")", "-", ">", "{", "if", "(", "p1", "=", "=", "start", ")", "{", "return", "-", "1", ";", "}", "if", "(", "p2", "=", "=", "start", ")", "{", "return", "1", ";", "}", "int", "cp", "=", "crossProduct", "(", "start", ",", "p1", ",", "p2", ")", ";", "if", "(", "cp", "=", "=", "0", ")", "{", "return", "distance", "(", "start", ",", "p1", ",", "p2", ")", ";", "}", "else", "{", "return", "-", "cp", ";", "}", "}", ")", ";", "Point", "p", "=", "points", "[", "0", "]", ",", "q", "=", "points", "[", "points", ".", "length", "-", "1", "]", ";", "int", "i", "=", "points", ".", "length", "-", "<NUM_LIT:2>", ";", "while", "(", "i", ">", "=", "0", "&", "&", "crossProduct", "(", "p", ",", "q", ",", "points", "[", "i", "]", ")", "=", "=", "0", ")", "{", "i", "-", "-", ";", "}", "for", "(", "int", "l", "=", "i", "+", "1", ",", "h", "=", "points", ".", "length", "-", "1", ";", "l", "<", "h", ";", "l", "+", "+", ",", "h", "-", "-", ")", "{", "Point", "tmp", "=", "points", "[", "l", "]", ";", "points", "[", "l", "]", "=", "points", "[", "h", "]", ";", "points", "[", "h", "]", "=", "tmp", ";", "}", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "[", "]", "args", ")", "{", "GrahamScanConvexHull", "grahamScanConvexHull", "=", "new", "GrahamScanConvexHull", "(", ")", ";", "int", "[", "]", "[", "]", "input", "=", "new", "int", "[", "]", "[", "]", "{", "{", "1", ",", "1", "}", ",", "{", "<NUM_LIT:2>", ",", "<NUM_LIT:2>", "}", ",", "{", "<NUM_LIT:2>", ",", "0", "}", ",", "{", "<NUM_LIT:2>", ",", "<NUM_LIT:4>", "}", ",", "{", "<NUM_LIT:3>", ",", "<NUM_LIT:3>", "}", ",", "{", "<NUM_LIT:4>", ",", "<NUM_LIT:2>", "}", "}", ";", "Point", "[", "]", "points", "=", "new", "Point", "[", "input", ".", "length", "]", ";", "int", "index", "=", "0", ";", "for", "(", "int", "[", "]", "i", ":", "input", ")", "{", "points", "[", "index", "+", "+", "]", "=", "new", "Point", "(", "i", "[", "0", "]", ",", "i", "[", "1", "]", ")", ";", "}", "System", ".", "out", ".", "println", "(", "grahamScanConvexHull", ".", "findConvexHull", "(", "points", ")", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "[", "]", "args", ")", "{", "int", "[", "]", "x", "=", "{", "1", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:8>", ",", "<NUM_LIT:9>", ",", "<NUM_LIT:15>", "}", ";", "int", "[", "]", "y", "=", "{", "<NUM_LIT:7>", ",", "<NUM_LIT:11>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", ",", "<NUM_LIT>", "}", ";", "MedianOfTwoSortedArrayOfDifferentLength", "mm", "=", "new", "MedianOfTwoSortedArrayOfDifferentLength", "(", ")", ";", "mm", ".", "findMedianSortedArrays", "(", "x", ",", "y", ")", ";", "}", "</s>"]
["<s>", "void", "supplyAsync", "(", "FutureTask", "task", ",", "Executor", "executor", ")", "{", "executor", ".", "execute", "(", "task", ")", ";", "}", "</s>"]
["<s>", "void", "addChain", "(", "FutureTask", "task", ")", "{", "task", ".", "addChain", "(", "this", ")", ";", "}", "</s>"]
["<s>", "public", "String", "optimalDivision", "(", "int", "[", "]", "nums", ")", "{", "Result", "r", "=", "optimalDivison", "(", "nums", ",", "0", ",", "nums", ".", "length", "-", "1", ",", "true", ")", ";", "System", ".", "out", ".", "println", "(", "r", ".", "val", ")", ";", "return", "r", ".", "str", ";", "}", "</s>"]
["<s>", "private", "Result", "optimalDivison", "(", "int", "[", "]", "nums", ",", "int", "start", ",", "int", "end", ",", "boolean", "maximize", ")", "{", "if", "(", "start", "=", "=", "end", ")", "{", "return", "new", "Result", "(", "nums", "[", "start", "]", ",", "String", ".", "valueOf", "(", "nums", "[", "start", "]", ")", ")", ";", "}", "double", "maxResult", "=", "0", ";", "double", "minResult", "=", "Double", ".", "MAX_VALUE", ";", "String", "result", "=", "\"", "\"", ";", "int", "cutI", "=", "start", ";", "String", "part1", "=", "\"", "\"", ";", "String", "part2", "=", "\"", "\"", ";", "for", "(", "int", "i", "=", "start", ";", "i", "<", "end", ";", "i", "+", "+", ")", "{", "Result", "d1", "=", "optimalDivison", "(", "nums", ",", "start", ",", "i", ",", "maximize", ")", ";", "Result", "d2", "=", "optimalDivison", "(", "nums", ",", "i", "+", "1", ",", "end", ",", "!", "maximize", ")", ";", "double", "val", "=", "d1", ".", "val", "/", "d2", ".", "val", ";", "if", "(", "maximize", ")", "{", "if", "(", "maxResult", "<", "val", ")", "{", "maxResult", "=", "val", ";", "part1", "=", "d1", ".", "str", ";", "part2", "=", "d2", ".", "str", ";", "cutI", "=", "i", ";", "}", "}", "else", "{", "if", "(", "minResult", ">", "val", ")", "{", "minResult", "=", "val", ";", "part1", "=", "d1", ".", "str", ";", "part2", "=", "d2", ".", "str", ";", "cutI", "=", "i", ";", "}", "}", "}", "if", "(", "cutI", "<", "end", "-", "1", ")", "{", "result", "=", "part1", "+", "\"", "<STR_LIT>", "\"", "+", "part2", "+", "\"", "<STR_LIT:)>", "\"", ";", "}", "else", "{", "result", "=", "part1", "+", "\"", "<STR_LIT:/>", "\"", "+", "part2", ";", "}", "return", "maximize", "?", "new", "Result", "(", "maxResult", ",", "result", ")", ":", "new", "Result", "(", "minResult", ",", "result", ")", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "args", "[", "]", ")", "{", "int", "[", "]", "nums", "=", "{", "<NUM_LIT:6>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:5>", "}", ";", "OptimalDivision", "od", "=", "new", "OptimalDivision", "(", ")", ";", "System", ".", "out", ".", "println", "(", "od", ".", "optimalDivision", "(", "nums", ")", ")", ";", "}", "</s>"]
["<s>", "public", "int", "pathSum", "(", "Node", "root", ",", "int", "sum", ")", "{", "Map", "<", "Integer", ",", "Integer", ">", "map", "=", "new", "HashMap", "<", ">", "(", ")", ";", "map", ".", "put", "(", "0", ",", "1", ")", ";", "return", "countPathSum", "(", "root", ",", "sum", ",", "map", ",", "0", ")", ";", "}", "</s>"]
["<s>", "private", "int", "countPathSum", "(", "Node", "root", ",", "int", "sum", ",", "Map", "<", "Integer", ",", "Integer", ">", "map", ",", "int", "prefixSum", ")", "{", "if", "(", "root", "=", "=", "null", ")", "{", "return", "0", ";", "}", "prefixSum", "+", "=", "root", ".", "data", ";", "int", "count", "=", "map", ".", "getOrDefault", "(", "prefixSum", "-", "sum", ",", "0", ")", ";", "map", ".", "put", "(", "prefixSum", ",", "map", ".", "getOrDefault", "(", "prefixSum", ",", "0", ")", "+", "1", ")", ";", "count", "+", "=", "countPathSum", "(", "root", ".", "left", ",", "sum", ",", "map", ",", "prefixSum", ")", "+", "countPathSum", "(", "root", ".", "right", ",", "sum", ",", "map", ",", "prefixSum", ")", ";", "map", ".", "put", "(", "prefixSum", ",", "map", ".", "getOrDefault", "(", "prefixSum", ",", "1", ")", "-", "1", ")", ";", "return", "count", ";", "}", "</s>"]
["<s>", "public", "int", "shortestSubarray", "(", "int", "[", "]", "A", ",", "int", "K", ")", "{", "int", "[", "]", "skip", "=", "new", "int", "[", "A", ".", "length", "]", ";", "int", "sum", "=", "0", ";", "int", "start", "=", "A", ".", "length", "-", "1", ";", "skip", "[", "A", ".", "length", "-", "1", "]", "=", "1", ";", "for", "(", "int", "i", "=", "A", ".", "length", "-", "1", ";", "i", ">", "0", ";", "i", "-", "-", ")", "{", "skip", "[", "i", "-", "1", "]", "=", "1", ";", "sum", "+", "=", "A", "[", "i", "]", ";", "if", "(", "sum", "<", "=", "0", ")", "{", "skip", "[", "i", "-", "1", "]", "=", "start", "-", "i", "+", "1", ";", "}", "else", "{", "start", "=", "i", ";", "sum", "=", "0", ";", "}", "}", "start", "=", "0", ";", "int", "end", "=", "0", ";", "sum", "=", "0", ";", "int", "min", "=", "Integer", ".", "MAX_VALUE", ";", "while", "(", "end", "<", "A", ".", "length", ")", "{", "sum", "+", "=", "A", "[", "end", "+", "+", "]", ";", "while", "(", "start", "<", "=", "end", "&", "&", "sum", ">", "=", "K", ")", "{", "min", "=", "Math", ".", "min", "(", "end", "-", "start", ",", "min", ")", ";", "for", "(", "int", "j", "=", "start", ";", "j", "<", "start", "+", "skip", "[", "start", "]", ";", "j", "+", "+", ")", "{", "sum", "-", "=", "A", "[", "j", "]", ";", "}", "start", "=", "start", "+", "skip", "[", "start", "]", ";", "}", "if", "(", "sum", "<", "=", "0", ")", "{", "start", "=", "end", ";", "sum", "=", "0", ";", "}", "}", "return", "min", "=", "=", "Integer", ".", "MAX_VALUE", "?", "-", "1", ":", "min", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "[", "]", "args", ")", "{", "int", "[", "]", "input", "=", "{", "1", ",", "<NUM_LIT:3>", ",", "-", "1", ",", "-", "<NUM_LIT:4>", ",", "-", "<NUM_LIT:2>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:4>", ",", "-", "<NUM_LIT:5>", ",", "-", "1", ",", "<NUM_LIT:8>", "}", ";", "SmallestSubarrayWithAtleastKSum", "ss", "=", "new", "SmallestSubarrayWithAtleastKSum", "(", ")", ";", "ss", ".", "shortestSubarray", "(", "input", ",", "<NUM_LIT:8>", ")", ";", "}", "</s>"]
["<s>", "public", "int", "[", "]", "maxSumOfThreeSubarrays", "(", "int", "[", "]", "nums", ",", "int", "k", ")", "{", "int", "sum", "=", "0", ";", "int", "[", "]", "sumArray", "=", "new", "int", "[", "nums", ".", "length", "-", "k", "+", "1", "]", ";", "for", "(", "int", "i", "=", "0", ";", "i", "<", "nums", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "i", "<", "k", ")", "{", "sum", "+", "=", "nums", "[", "i", "]", ";", "}", "else", "{", "sumArray", "[", "i", "-", "k", "]", "=", "sum", ";", "sum", "+", "=", "nums", "[", "i", "]", ";", "sum", "-", "=", "nums", "[", "i", "-", "k", "]", ";", "}", "}", "sumArray", "[", "sumArray", ".", "length", "-", "1", "]", "=", "sum", ";", "int", "[", "]", "[", "]", "dp", "=", "new", "int", "[", "<NUM_LIT:4>", "]", "[", "sumArray", ".", "length", "+", "1", "]", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "=", "<NUM_LIT:3>", ";", "i", "+", "+", ")", "{", "for", "(", "int", "j", "=", "1", ";", "j", "<", "=", "sumArray", ".", "length", ";", "j", "+", "+", ")", "{", "if", "(", "j", ">", "=", "k", ")", "{", "if", "(", "dp", "[", "i", "]", "[", "j", "-", "1", "]", ">", "=", "sumArray", "[", "j", "-", "1", "]", "+", "dp", "[", "i", "-", "1", "]", "[", "j", "-", "k", "]", ")", "{", "dp", "[", "i", "]", "[", "j", "]", "=", "dp", "[", "i", "]", "[", "j", "-", "1", "]", ";", "}", "else", "{", "dp", "[", "i", "]", "[", "j", "]", "=", "sumArray", "[", "j", "-", "1", "]", "+", "dp", "[", "i", "-", "1", "]", "[", "j", "-", "k", "]", ";", "}", "}", "else", "{", "if", "(", "dp", "[", "i", "]", "[", "j", "-", "1", "]", ">", "=", "sumArray", "[", "j", "-", "1", "]", ")", "{", "dp", "[", "i", "]", "[", "j", "]", "=", "dp", "[", "i", "]", "[", "j", "-", "1", "]", ";", "}", "else", "{", "dp", "[", "i", "]", "[", "j", "]", "=", "sumArray", "[", "j", "-", "1", "]", ";", "}", "}", "}", "}", "int", "[", "]", "output", "=", "new", "int", "[", "<NUM_LIT:3>", "]", ";", "int", "j", "=", "dp", "[", "0", "]", ".", "length", "-", "1", ";", "for", "(", "int", "i", "=", "<NUM_LIT:3>", ";", "i", ">", "0", ";", ")", "{", "if", "(", "dp", "[", "i", "]", "[", "j", "]", "=", "=", "dp", "[", "i", "]", "[", "j", "-", "1", "]", ")", "{", "j", "-", "-", ";", "}", "else", "{", "output", "[", "i", "-", "1", "]", "=", "j", "-", "1", ";", "i", "-", "-", ";", "j", "=", "j", "-", "k", ";", "}", "}", "return", "output", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "[", "]", "args", ")", "{", "MaximumSumThreeNonOverlappingSubarray", "mss", "=", "new", "MaximumSumThreeNonOverlappingSubarray", "(", ")", ";", "int", "[", "]", "input", "=", "{", "<NUM_LIT:3>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:2>", ",", "1", ",", "1", ",", "0", ",", "<NUM_LIT:5>", "}", ";", "int", "[", "]", "input1", "=", "{", "1", ",", "<NUM_LIT:2>", ",", "1", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:6>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:5>", ",", "1", "}", ";", "int", "[", "]", "output", "=", "mss", ".", "maxSumOfThreeSubarrays", "(", "input1", ",", "<NUM_LIT:2>", ")", ";", "for", "(", "int", "i", ":", "output", ")", "{", "System", ".", "out", ".", "println", "(", "i", ")", ";", "}", "}", "</s>"]
["<s>", "public", "int", "longestMountain", "(", "int", "[", "]", "nums", ")", "{", "int", "start", "=", "0", ";", "int", "max", "=", "0", ";", "State", "state", "=", "State", ".", "STARTED", ";", "for", "(", "int", "i", "=", "1", ";", "i", "<", "nums", ".", "length", ";", "i", "+", "+", ")", "{", "if", "(", "nums", "[", "i", "]", "=", "=", "nums", "[", "i", "-", "1", "]", ")", "{", "start", "=", "i", ";", "state", "=", "State", ".", "STARTED", ";", "}", "else", "if", "(", "nums", "[", "i", "]", ">", "nums", "[", "i", "-", "1", "]", ")", "{", "if", "(", "state", "=", "=", "State", ".", "DECREASING", "|", "|", "state", "=", "=", "State", ".", "STARTED", ")", "{", "start", "=", "i", "-", "1", ";", "state", "=", "State", ".", "INCREASING", ";", "}", "}", "else", "{", "if", "(", "state", "=", "=", "State", ".", "INCREASING", "|", "|", "state", "=", "=", "State", ".", "DECREASING", ")", "{", "state", "=", "State", ".", "DECREASING", ";", "max", "=", "Math", ".", "max", "(", "max", ",", "i", "-", "start", "+", "1", ")", ";", "}", "else", "{", "start", "=", "i", ";", "}", "}", "}", "return", "max", ";", "}", "</s>"]
["<s>", "public", "static", "void", "main", "(", "String", "[", "]", "args", ")", "{", "LargestMountain", "lm", "=", "new", "LargestMountain", "(", ")", ";", "int", "[", "]", "nums", "=", "{", "<NUM_LIT:2>", ",", "1", ",", "<NUM_LIT:4>", ",", "<NUM_LIT:7>", ",", "<NUM_LIT:3>", ",", "<NUM_LIT:2>", ",", "<NUM_LIT:5>", "}", ";", "System", ".", "out", ".", "println", "(", "lm", ".", "longestMountain", "(", "nums", ")", ")", ";", "}", "</s>"]
